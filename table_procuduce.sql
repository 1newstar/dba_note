/*
Navicat MySQL Data Transfer

Source Server         : 192.168.0.252
Source Server Version : 50722
Source Host           : 192.168.0.252:3306
Source Database       : niuniuh5_db

Target Server Type    : MYSQL
Target Server Version : 50722
File Encoding         : 65001

Date: 2022-01-27 10:57:42
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for accountinfo
-- ----------------------------
DROP TABLE IF EXISTS `accountinfo`;
CREATE TABLE `accountinfo` (
  `AccountId` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '账号编号',
  `EnterPriseID` varchar(36) NOT NULL COMMENT '代理商编号',
  `TreeCode` varchar(200) NOT NULL COMMENT '代理商树编号',
  `AccountType` int(11) NOT NULL COMMENT '0-管理员 1：默认代理商 2：普通用户',
  `AccountName` varchar(32) NOT NULL COMMENT '账号名称',
  `Password` varchar(32) NOT NULL COMMENT '密码',
  `RealName` varchar(100) DEFAULT NULL COMMENT '姓名',
  `Phone` varchar(11) DEFAULT NULL COMMENT '电话',
  `QQ` varchar(20) DEFAULT NULL COMMENT 'QQ号码',
  `EMail` varchar(64) DEFAULT NULL COMMENT '邮箱',
  `Status` int(11) NOT NULL COMMENT '状态  0-无效  1-有效',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `UpdateTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  `LoginTime` timestamp NULL DEFAULT NULL COMMENT '最后登陆时间',
  `LoginToken` varchar(200) DEFAULT NULL COMMENT '登录令牌',
  `ExtendCode` varchar(36) DEFAULT NULL,
  `Ip` varchar(512) DEFAULT NULL,
  PRIMARY KEY (`AccountId`),
  KEY `idx_EnterPriseID` (`EnterPriseID`),
  KEY `idx_ExtendCode` (`ExtendCode`),
  KEY `idx_AccountName` (`AccountName`(6))
) ENGINE=InnoDB AUTO_INCREMENT=1126 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for accountinrole
-- ----------------------------
DROP TABLE IF EXISTS `accountinrole`;
CREATE TABLE `accountinrole` (
  `Id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '编号',
  `EnterPriseID` varchar(36) NOT NULL COMMENT '代理商编号',
  `TreeCode` varchar(200) NOT NULL COMMENT '代理商树编号',
  `AccountId` int(11) NOT NULL COMMENT '账号编号',
  `RoleId` int(11) NOT NULL COMMENT '角色编号',
  `Status` int(11) NOT NULL COMMENT ' 状态 -1-已删除 0-无效  1-有效',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `UpdateTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for accountorroleinrule
-- ----------------------------
DROP TABLE IF EXISTS `accountorroleinrule`;
CREATE TABLE `accountorroleinrule` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '编号',
  `EnterPriseID` varchar(36) NOT NULL COMMENT '代理商编号',
  `TreeCode` varchar(200) NOT NULL COMMENT '代理商树编号',
  `AccountOrRoleId` int(11) NOT NULL COMMENT '账号角色编号',
  `RuleId` int(11) NOT NULL DEFAULT '0' COMMENT '权限编号',
  `RelationType` int(11) NOT NULL COMMENT '关系类型 1：用户权限关系 2：角色权限关系',
  `Status` int(11) NOT NULL COMMENT ' 状态 -1-已删除 0-无效  1-有效',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `UpdateTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=187 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for admin_ipapilib
-- ----------------------------
DROP TABLE IF EXISTS `admin_ipapilib`;
CREATE TABLE `admin_ipapilib` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键Id，自增',
  `IPAddress` varchar(20) NOT NULL COMMENT 'IP地址',
  `Remark` varchar(200) DEFAULT NULL,
  `UserId` int(11) NOT NULL DEFAULT '0' COMMENT '所属人',
  `nClubId` int(11) NOT NULL DEFAULT '0' COMMENT '运营商ID',
  `CreateUserId` int(11) NOT NULL DEFAULT '0' COMMENT '创建人',
  `Valid` int(11) NOT NULL DEFAULT '1' COMMENT '是否有效 1有效、0无效',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`),
  KEY `idx_UserId_IPAddress` (`UserId`,`IPAddress`),
  KEY `idx_nClubId_IPAddress` (`nClubId`,`IPAddress`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='API-IP白名单库';

-- ----------------------------
-- Table structure for admin_iplib
-- ----------------------------
DROP TABLE IF EXISTS `admin_iplib`;
CREATE TABLE `admin_iplib` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键Id，自增',
  `IPAddress` varchar(20) NOT NULL COMMENT 'IP地址',
  `Remark` varchar(200) DEFAULT NULL,
  `UserId` int(11) NOT NULL DEFAULT '0' COMMENT '所属人',
  `CreateUserId` int(11) NOT NULL DEFAULT '0' COMMENT '创建人',
  `Valid` int(11) NOT NULL DEFAULT '1' COMMENT '是否有效 1有效、0无效',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`),
  KEY `idx_UserId_IPAddress` (`UserId`,`IPAddress`)
) ENGINE=InnoDB AUTO_INCREMENT=545 DEFAULT CHARSET=utf8mb4 COMMENT='IP白名单库';

-- ----------------------------
-- Table structure for admin_log
-- ----------------------------
DROP TABLE IF EXISTS `admin_log`;
CREATE TABLE `admin_log` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键、自增',
  `nClubId` int(11) DEFAULT '0' COMMENT '俱乐部Id',
  `Type` int(11) DEFAULT '0' COMMENT '操作类型',
  `UserId` int(11) DEFAULT '0' COMMENT '操作人Id',
  `TargetId` int(11) DEFAULT '0' COMMENT '被操作人Id(后台用户Id、游戏Id)',
  `Amount` bigint(20) DEFAULT '0' COMMENT '数量',
  `Des` varchar(500) DEFAULT '' COMMENT '数量',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId` (`nClubId`)
) ENGINE=InnoDB AUTO_INCREMENT=6398 DEFAULT CHARSET=utf8mb4 COMMENT='牛牛新版PC后台操作日志表';

-- ----------------------------
-- Table structure for admin_module
-- ----------------------------
DROP TABLE IF EXISTS `admin_module`;
CREATE TABLE `admin_module` (
  `ModuleId` int(11) NOT NULL AUTO_INCREMENT COMMENT '模块Id,主键，自增',
  `ModulePId` int(11) NOT NULL COMMENT '父级模块Id',
  `ModuleName` varchar(20) NOT NULL COMMENT '模块名称',
  `ModuleType` int(11) DEFAULT '1' COMMENT '模块类型,1:菜单模块 2:页面 3:按钮 ',
  `ModulePagePath` varchar(256) DEFAULT '' COMMENT '页面路径',
  `ModuleClassName` varchar(100) DEFAULT NULL COMMENT 'log样式名',
  `Valid` int(11) DEFAULT '1' COMMENT '是否有效(1有效,0无效)',
  `Des` varchar(255) DEFAULT '' COMMENT '模块描述',
  `ModuleSortId` int(11) DEFAULT '1' COMMENT '排序Id',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `ModifyTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  `SysType` int(11) NOT NULL DEFAULT '1' COMMENT '菜单类型 0总后台H5;1总后台App;2H5代理;3App代理;4总后台房卡',
  `ButtonType` int(11) NOT NULL DEFAULT '1' COMMENT '按钮类型 1公共默认;2数据行按钮',
  PRIMARY KEY (`ModuleId`)
) ENGINE=InnoDB AUTO_INCREMENT=904 DEFAULT CHARSET=utf8mb4 COMMENT='模块权限';

-- ----------------------------
-- Table structure for admin_modulebak
-- ----------------------------
DROP TABLE IF EXISTS `admin_modulebak`;
CREATE TABLE `admin_modulebak` (
  `ModuleId` int(11) NOT NULL AUTO_INCREMENT COMMENT '模块Id,主键，自增',
  `ModulePId` int(11) NOT NULL COMMENT '父级模块Id',
  `ModuleName` varchar(20) NOT NULL COMMENT '模块名称',
  `ModuleType` int(11) DEFAULT '1' COMMENT '模块类型,1:菜单模块 2:页面 3:按钮 ',
  `ModulePagePath` varchar(256) DEFAULT '' COMMENT '页面路径',
  `ModuleClassName` varchar(100) DEFAULT NULL COMMENT 'log样式名',
  `Valid` int(11) DEFAULT '1' COMMENT '是否有效(1有效,0无效)',
  `Des` varchar(255) DEFAULT '' COMMENT '模块描述',
  `ModuleSortId` int(11) DEFAULT '1' COMMENT '排序Id',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `ModifyTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  `SysType` int(11) NOT NULL DEFAULT '1' COMMENT '菜单类型 0总后台H5;1总后台App;2H5代理;3App代理;4总后台房卡',
  `ButtonType` int(11) NOT NULL DEFAULT '1' COMMENT '按钮类型 1公共默认;2数据行按钮',
  PRIMARY KEY (`ModuleId`)
) ENGINE=InnoDB AUTO_INCREMENT=874 DEFAULT CHARSET=utf8mb4 COMMENT='模块权限';

-- ----------------------------
-- Table structure for admin_proxy
-- ----------------------------
DROP TABLE IF EXISTS `admin_proxy`;
CREATE TABLE `admin_proxy` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键Id，自增',
  `UserId` int(11) NOT NULL COMMENT '用户Id',
  `ProxyType` int(11) DEFAULT '1' COMMENT '代理账号类型:1代理账号;2子账号',
  `UserPId` int(11) NOT NULL DEFAULT '0' COMMENT '代理账号的父Id',
  `Rate` int(11) NOT NULL DEFAULT '70' COMMENT '返回上级分成率(除以1000)',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nClubId` int(11) DEFAULT '0' COMMENT '俱乐部ID(渠道ID)',
  `IsCreate` int(11) NOT NULL DEFAULT '1' COMMENT '创建下级代理(0:禁止;1:允许)',
  `CreateUserId` int(11) NOT NULL DEFAULT '0' COMMENT '创建人ID',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `DesKey` varchar(64) DEFAULT '' COMMENT '解密字符串',
  `Md5Key` varchar(64) DEFAULT '' COMMENT '加密字符串',
  `nScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '余额',
  `nType` int(11) NOT NULL DEFAULT '1' COMMENT '币种类型:1-人民币;',
  `UserName` varchar(50) DEFAULT '' COMMENT '用户名称',
  `GameProxyType` int(11) DEFAULT '1' COMMENT '用户类型:1(H5用户),2(App用户)',
  `nLevel` int(11) NOT NULL DEFAULT '0' COMMENT '代理等级',
  `isTest` int(11) NOT NULL DEFAULT '0' COMMENT '是否测试运营商 0正常;1测试',
  PRIMARY KEY (`Id`),
  KEY `idx_UserId` (`UserId`),
  KEY `idx_UserPId` (`UserPId`),
  KEY `idx_nClubId_proxytype` (`nClubId`,`ProxyType`)
) ENGINE=InnoDB AUTO_INCREMENT=439 DEFAULT CHARSET=utf8mb4 COMMENT='代理用户表';

-- ----------------------------
-- Table structure for admin_role
-- ----------------------------
DROP TABLE IF EXISTS `admin_role`;
CREATE TABLE `admin_role` (
  `RoleId` int(11) NOT NULL AUTO_INCREMENT COMMENT '角色Id,主键，自增',
  `RoleName` varchar(20) NOT NULL COMMENT '角色名称',
  `Valid` int(11) DEFAULT '1' COMMENT '是否有效(1有效,0无效)',
  `Des` varchar(255) DEFAULT '' COMMENT '角色描述',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `SysType` int(11) DEFAULT '1' COMMENT '角色类型:1-后台角色;2-H5代理角色;3-App代理角色',
  `CreateUserId` int(11) NOT NULL DEFAULT '0' COMMENT '创建人-所属人',
  `UserPId` int(11) NOT NULL DEFAULT '0' COMMENT '子账号:父级代理Id;代理账号:代理Id',
  `TopUserId` int(11) NOT NULL DEFAULT '0' COMMENT '顶级代理Id',
  PRIMARY KEY (`RoleId`)
) ENGINE=InnoDB AUTO_INCREMENT=167 DEFAULT CHARSET=utf8mb4 COMMENT='角色表';

-- ----------------------------
-- Table structure for admin_rolemodule
-- ----------------------------
DROP TABLE IF EXISTS `admin_rolemodule`;
CREATE TABLE `admin_rolemodule` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键Id,主键，自增',
  `RoleId` int(11) NOT NULL COMMENT '角色Id',
  `ModuleId` int(11) NOT NULL COMMENT '模块Id',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=10309 DEFAULT CHARSET=utf8mb4 COMMENT='角色模块关系表';

-- ----------------------------
-- Table structure for admin_user
-- ----------------------------
DROP TABLE IF EXISTS `admin_user`;
CREATE TABLE `admin_user` (
  `UserId` int(11) NOT NULL AUTO_INCREMENT COMMENT '用户Id,主键，自增',
  `UserType` int(11) DEFAULT '2' COMMENT '用户类型:1管理员;2代理用户;3后台用户',
  `UserName` varchar(50) DEFAULT '' COMMENT '用户名称',
  `UserPassord` varchar(50) NOT NULL COMMENT '用户密码',
  `UserNickName` varchar(50) DEFAULT '' COMMENT '用户昵称',
  `UserPhone` varchar(11) DEFAULT '' COMMENT '用户手机',
  `UserEmail` varchar(50) DEFAULT '' COMMENT '用户邮箱',
  `Remark` varchar(200) DEFAULT '' COMMENT '备注',
  `Status` int(11) NOT NULL DEFAULT '1' COMMENT '用户状态 1正常、0注销',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `LastLoginTime` timestamp NULL DEFAULT NULL COMMENT '最后登录时间',
  PRIMARY KEY (`UserId`),
  UNIQUE KEY `idx_UserName` (`UserName`),
  KEY `idx_UserName_UserPwd` (`UserName`,`UserPassord`)
) ENGINE=InnoDB AUTO_INCREMENT=384 DEFAULT CHARSET=utf8mb4 COMMENT='用户表';

-- ----------------------------
-- Table structure for admin_usermodule
-- ----------------------------
DROP TABLE IF EXISTS `admin_usermodule`;
CREATE TABLE `admin_usermodule` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键Id,主键，自增',
  `UserId` int(11) NOT NULL COMMENT '用户Id',
  `ModuleId` int(11) NOT NULL COMMENT '模块Id',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=8657 DEFAULT CHARSET=utf8mb4 COMMENT='用户模块权限关系表';

-- ----------------------------
-- Table structure for admin_userrole
-- ----------------------------
DROP TABLE IF EXISTS `admin_userrole`;
CREATE TABLE `admin_userrole` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键Id,主键，自增',
  `UserId` int(11) NOT NULL COMMENT '用户Id',
  `RoleId` int(11) NOT NULL COMMENT '角色Id',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=209 DEFAULT CHARSET=utf8mb4 COMMENT='用户角色关系表';

-- ----------------------------
-- Table structure for admin_usersub
-- ----------------------------
DROP TABLE IF EXISTS `admin_usersub`;
CREATE TABLE `admin_usersub` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Id,主键，自增',
  `UserId` int(11) NOT NULL COMMENT '用户Id',
  `UserName` varchar(50) NOT NULL DEFAULT '' COMMENT '用户名称',
  `UserPId` int(11) NOT NULL DEFAULT '0' COMMENT '用户上级Id',
  `nLevel` int(11) DEFAULT '0' COMMENT '用户等级',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`),
  UNIQUE KEY `idx_UserId` (`UserId`),
  UNIQUE KEY `idx_UserName` (`UserName`)
) ENGINE=InnoDB AUTO_INCREMENT=69 DEFAULT CHARSET=utf8mb4 COMMENT='后台运营商账号表';

-- ----------------------------
-- Table structure for effectivenumber_daylog
-- ----------------------------
DROP TABLE IF EXISTS `effectivenumber_daylog`;
CREATE TABLE `effectivenumber_daylog` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `Sum` int(11) DEFAULT NULL,
  `MnnSum` int(11) DEFAULT NULL,
  `MylSum` int(11) DEFAULT NULL,
  `MslSum` int(11) DEFAULT NULL,
  `MhxSum` int(11) DEFAULT NULL,
  `MggSum` int(11) DEFAULT NULL,
  `MlsSum` int(11) DEFAULT NULL,
  `MlzSum` int(11) DEFAULT NULL,
  `MglSum` int(11) DEFAULT NULL,
  `PbzSum` int(11) DEFAULT NULL,
  `PsySum` int(11) DEFAULT NULL,
  `CreateTime` timestamp NULL DEFAULT NULL,
  `PsszSum` int(11) DEFAULT '0',
  `MwzSum` int(11) DEFAULT NULL,
  `PddzSum` int(11) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for enterpricemanage
-- ----------------------------
DROP TABLE IF EXISTS `enterpricemanage`;
CREATE TABLE `enterpricemanage` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID，自增',
  `EnterPriceId` varchar(36) NOT NULL COMMENT '代理商ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部Id',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nStatus` int(11) NOT NULL DEFAULT '1' COMMENT '状态(1正常；2禁用;3:取消)默认:1',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `ModifyTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=43 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for enterprise
-- ----------------------------
DROP TABLE IF EXISTS `enterprise`;
CREATE TABLE `enterprise` (
  `EnterPriseID` varchar(36) NOT NULL COMMENT '自动递增的唯一序号，主键',
  `Name` varchar(100) NOT NULL COMMENT '企业名称',
  `TreeCode` varchar(200) NOT NULL COMMENT '树级编码',
  `PID` varchar(36) NOT NULL COMMENT '所属上级ID',
  `Grade` int(11) NOT NULL COMMENT '所属等级',
  `AccountId` int(11) NOT NULL COMMENT '默认用户ID，创建代理商时默认创建的用户',
  `EnterSignature` varchar(512) DEFAULT NULL COMMENT '企业签名',
  `BalanceMoney` decimal(18,2) NOT NULL DEFAULT '0.00' COMMENT '代理商钻石数',
  `ZMSPrice` decimal(18,2) DEFAULT NULL COMMENT '直属代理分成比例',
  `SMSPrice` decimal(18,2) DEFAULT NULL COMMENT '占下级代理会员充值分成',
  `MMSPrice` decimal(18,2) DEFAULT NULL COMMENT '直属用户分成比例',
  `XMSPrice` decimal(18,2) DEFAULT NULL COMMENT '占下级代理充值分成',
  `DMSPrice` decimal(18,2) DEFAULT NULL COMMENT '下级代理分成比例',
  `Balance` decimal(18,2) DEFAULT '0.00' COMMENT '可提现余额（单位分）',
  `Contact` varchar(100) DEFAULT NULL COMMENT '联系人',
  `Telephone` varchar(50) DEFAULT NULL COMMENT '联系方式',
  `Address` varchar(512) DEFAULT NULL COMMENT '地址',
  `WeiXin` varchar(100) DEFAULT NULL COMMENT '微信',
  `Remark` varchar(1000) DEFAULT NULL COMMENT '备注',
  `Status` int(11) NOT NULL DEFAULT '1' COMMENT '标识是否有效（状态：1正常；2禁用；3取消）',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `UpdateTime` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '更新时间',
  `IpAuthentication` varchar(512) DEFAULT NULL COMMENT 'IP鉴权(多个服务器IP以逗号分割)',
  `ExtendCode` varchar(36) DEFAULT NULL COMMENT '推广码',
  `GroupNo` int(11) DEFAULT '0' COMMENT '亲友群ID(EnterPriseType=3推广代理  存储俱乐部ID)',
  `Prompt` int(11) DEFAULT '0' COMMENT '钻石预警',
  `nPlayerId` int(11) DEFAULT NULL COMMENT '玩家Id',
  `openId` varchar(200) DEFAULT NULL COMMENT 'app微信openId',
  `WaitPayMoney` decimal(18,2) DEFAULT '0.00' COMMENT '待提现金额(单位分)',
  `EnterPriseType` int(11) DEFAULT '1' COMMENT '代理商类型 1手机代理;2管理员代理;3推广代理',
  `TwoLevel` int(11) DEFAULT NULL COMMENT '二级分成',
  `ThreeLevel` int(11) DEFAULT NULL COMMENT '三级分成',
  `PageOpenId` varchar(200) DEFAULT NULL COMMENT '网页授权微信openId',
  `GamePlayerId` int(11) DEFAULT '0' COMMENT '游戏玩家Id',
  PRIMARY KEY (`EnterPriseID`),
  KEY `idx_ExtendCode` (`ExtendCode`),
  KEY `UniqueGamePlayerId` (`GamePlayerId`) USING BTREE,
  KEY `idx_Name` (`Name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for enterpriselog
-- ----------------------------
DROP TABLE IF EXISTS `enterpriselog`;
CREATE TABLE `enterpriselog` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键、自增',
  `nClubId` int(11) DEFAULT '0' COMMENT '俱乐部Id',
  `OperateType` int(11) DEFAULT '0' COMMENT '操作类型',
  `OperatePlayerId` int(11) DEFAULT '0' COMMENT '操作人代理游戏Id',
  `TargetPlayerId` int(11) DEFAULT '0' COMMENT '目标人游戏Id',
  `Remark` varchar(500) DEFAULT NULL,
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId` (`nClubId`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='手机后台操作日志表';

-- ----------------------------
-- Table structure for enterprise_copy
-- ----------------------------
DROP TABLE IF EXISTS `enterprise_copy`;
CREATE TABLE `enterprise_copy` (
  `EnterPriseID` varchar(36) NOT NULL COMMENT '自动递增的唯一序号，主键',
  `Name` varchar(100) NOT NULL COMMENT '企业名称',
  `TreeCode` varchar(200) NOT NULL COMMENT '树级编码',
  `PID` varchar(36) NOT NULL COMMENT '所属上级ID',
  `Grade` int(11) NOT NULL COMMENT '所属等级',
  `AccountId` int(11) NOT NULL COMMENT '默认用户ID，创建代理商时默认创建的用户',
  `EnterSignature` varchar(512) DEFAULT NULL COMMENT '企业签名',
  `BalanceMoney` decimal(18,2) NOT NULL DEFAULT '0.00' COMMENT '代理商钻石数',
  `ZMSPrice` decimal(18,2) DEFAULT NULL COMMENT '直属代理分成比例',
  `SMSPrice` decimal(18,2) DEFAULT NULL COMMENT '占下级代理会员充值分成',
  `MMSPrice` decimal(18,2) DEFAULT NULL COMMENT '直属用户分成比例',
  `XMSPrice` decimal(18,2) DEFAULT NULL COMMENT '占下级代理充值分成',
  `DMSPrice` decimal(18,2) DEFAULT NULL COMMENT '下级代理分成比例',
  `Balance` decimal(18,2) DEFAULT '0.00' COMMENT '可提现余额（单位分）',
  `Contact` varchar(100) DEFAULT NULL COMMENT '联系人',
  `Telephone` varchar(50) DEFAULT NULL COMMENT '联系方式',
  `Address` varchar(512) DEFAULT NULL COMMENT '地址',
  `WeiXin` varchar(100) DEFAULT NULL COMMENT '微信',
  `Remark` varchar(1000) DEFAULT NULL COMMENT '备注',
  `Status` int(11) NOT NULL DEFAULT '1' COMMENT '标识是否有效（状态：1正常；2禁用；3取消）',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `UpdateTime` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '更新时间',
  `IpAuthentication` varchar(258) DEFAULT NULL COMMENT 'IP鉴权(多个服务器IP以逗号分割)',
  `ExtendCode` varchar(36) DEFAULT NULL COMMENT '推广码',
  `GroupNo` int(11) DEFAULT '0' COMMENT '亲友群ID(EnterPriseType=3推广代理  存储俱乐部ID)',
  `Prompt` int(11) DEFAULT '0' COMMENT '钻石预警',
  `nPlayerId` int(11) DEFAULT NULL COMMENT '玩家Id',
  `openId` varchar(200) DEFAULT NULL COMMENT 'app微信openId',
  `WaitPayMoney` decimal(18,2) DEFAULT '0.00' COMMENT '待提现金额(单位分)',
  `EnterPriseType` int(11) DEFAULT '1' COMMENT '代理商类型 1手机代理;2管理员代理;3推广代理',
  `TwoLevel` int(11) DEFAULT NULL COMMENT '二级分成',
  `ThreeLevel` int(11) DEFAULT NULL COMMENT '三级分成',
  `PageOpenId` varchar(200) DEFAULT NULL COMMENT '网页授权微信openId',
  `GamePlayerId` int(11) DEFAULT '0' COMMENT '游戏玩家Id',
  PRIMARY KEY (`EnterPriseID`),
  KEY `idx_ExtendCode` (`ExtendCode`),
  KEY `UniqueGamePlayerId` (`GamePlayerId`) USING BTREE,
  KEY `idx_Name` (`Name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for get_table_clubgamelog_id
-- ----------------------------
DROP TABLE IF EXISTS `get_table_clubgamelog_id`;
CREATE TABLE `get_table_clubgamelog_id` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='存储table_clubgamelog表自增ID的表';

-- ----------------------------
-- Table structure for get_table_clubgamescoredetail_id
-- ----------------------------
DROP TABLE IF EXISTS `get_table_clubgamescoredetail_id`;
CREATE TABLE `get_table_clubgamescoredetail_id` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='存储table_clubgamescoredetail表自增ID的表';

-- ----------------------------
-- Table structure for get_table_clublogscore_id
-- ----------------------------
DROP TABLE IF EXISTS `get_table_clublogscore_id`;
CREATE TABLE `get_table_clublogscore_id` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='存储table_clublogscore表自增ID的表';

-- ----------------------------
-- Table structure for get_table_third_score_detail_id
-- ----------------------------
DROP TABLE IF EXISTS `get_table_third_score_detail_id`;
CREATE TABLE `get_table_third_score_detail_id` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='存储get_table_third_score_detail_id表自增ID的表';

-- ----------------------------
-- Table structure for new_table
-- ----------------------------
DROP TABLE IF EXISTS `new_table`;
CREATE TABLE `new_table` (
  `ID` int(11) NOT NULL COMMENT '索引',
  `nClubID` int(11) DEFAULT NULL COMMENT '俱乐部ID',
  `cfgId` varchar(128) DEFAULT NULL COMMENT '房间配置ID',
  `gameType` int(11) DEFAULT NULL COMMENT '游戏类型',
  `cfg` varchar(512) DEFAULT NULL COMMENT '游戏配置',
  `updateTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for operationslog
-- ----------------------------
DROP TABLE IF EXISTS `operationslog`;
CREATE TABLE `operationslog` (
  `OperateID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '操作日志ID',
  `AdminID` int(11) NOT NULL COMMENT '管理员ID',
  `OType` int(11) NOT NULL COMMENT '操作类型（1.增加 2.修改 3.删除）',
  `OMsg` mediumtext COMMENT '操作描述',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '操作时间',
  `AdminName` varchar(32) NOT NULL COMMENT '操作人',
  `PKID` varchar(64) DEFAULT NULL COMMENT '操作记录ID',
  `FormObject` varchar(64) DEFAULT NULL COMMENT '操作对象',
  `AvailFlag` int(11) NOT NULL DEFAULT '1' COMMENT '是否有效(0:否1:是)',
  `OperationsType` int(11) NOT NULL DEFAULT '1' COMMENT '操作日志类型：1=后台日志，2=代理商日志',
  `EnterPriseID` varchar(36) DEFAULT NULL COMMENT '代理商ID',
  `GameType` int(11) DEFAULT '1' COMMENT '代理游戏类型;1 老友麻将；2老友麻将八张',
  PRIMARY KEY (`OperateID`)
) ENGINE=InnoDB AUTO_INCREMENT=40910 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for rechargedetail
-- ----------------------------
DROP TABLE IF EXISTS `rechargedetail`;
CREATE TABLE `rechargedetail` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '编号，自增',
  `Type` int(11) NOT NULL COMMENT '明细类型：1、充值 2、消费 3、系统退还,4、冲减,99、用户充值',
  `BatchID` varchar(36) DEFAULT NULL COMMENT '批次Id',
  `BatchName` varchar(100) DEFAULT NULL COMMENT '批次名称',
  `Price` decimal(18,2) DEFAULT NULL COMMENT '扣款时的单价',
  `MsgCount` int(11) DEFAULT NULL COMMENT '条数',
  `Amount` decimal(18,2) NOT NULL COMMENT '金额',
  `OpAccountId` int(11) DEFAULT NULL COMMENT '操作账号编号，该字段可空，如果是充值则该字段是充值那个账号的编号，如果是消费是发送信息账号的编号',
  `OpAccountName` varchar(32) DEFAULT NULL COMMENT '操作账号名称，该字段可空，如果是充值则该字段是充值那个账号的名称，如果是消费是发送信息账号的名称',
  `OpEnterPriseID` varchar(36) DEFAULT NULL COMMENT '操作代理商Id，该字段可空，如果是充值则该字段是充值那个代理商的Id，如果是消费是发送信息那个代理商的Id',
  `OpEnterPriseTreeCode` varchar(200) DEFAULT NULL COMMENT '操作代理商树编号，该字段可空，如果是充值则该字段是充值那个代理商的树编号，如果是消费是发送信息那个代理商的树编号',
  `EnterPriseID` varchar(36) NOT NULL COMMENT '影响的代理商Id',
  `EnterPriseTreeCode` varchar(200) NOT NULL COMMENT '影响代理商树编号',
  `CurrentBalance` decimal(18,2) NOT NULL COMMENT '当前余额',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `Remark` varchar(400) DEFAULT NULL COMMENT '备注',
  `UserCode` varchar(100) DEFAULT NULL COMMENT '游戏玩家编号',
  `ConsumeMoney` decimal(18,2) DEFAULT NULL COMMENT '充值金额(代理商花费)元',
  `OrderId` varchar(50) DEFAULT NULL COMMENT '订单号',
  `DeduceMoney` decimal(18,2) DEFAULT NULL,
  `GameType` int(11) DEFAULT '1' COMMENT '代理游戏类型;1 老友麻将；2老友麻将八张',
  PRIMARY KEY (`Id`),
  KEY `idx_Type` (`Type`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_EnterPriseID` (`EnterPriseID`),
  KEY `idex_OrderId` (`OrderId`),
  KEY `idx_BatchID` (`BatchID`)
) ENGINE=InnoDB AUTO_INCREMENT=30192 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for roleinfo
-- ----------------------------
DROP TABLE IF EXISTS `roleinfo`;
CREATE TABLE `roleinfo` (
  `RoleId` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '角色编号',
  `EnterPriseID` varchar(36) NOT NULL COMMENT '代理商编号',
  `TreeCode` varchar(200) NOT NULL COMMENT '代理商树编号',
  `RoleName` varchar(100) NOT NULL COMMENT '角色名称',
  `Describe` varchar(2000) DEFAULT NULL COMMENT '描述',
  `Status` int(11) NOT NULL COMMENT ' 状态 -1-已删除 0-无效  1-有效',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `UpdateTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`RoleId`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for ruleinfo
-- ----------------------------
DROP TABLE IF EXISTS `ruleinfo`;
CREATE TABLE `ruleinfo` (
  `RuleId` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '权限编号',
  `Pid` int(11) NOT NULL COMMENT '父级编号',
  `RuleName` varchar(100) NOT NULL COMMENT '权限名称',
  `RuleType` int(11) NOT NULL COMMENT '权限类型 1：模块 2：页面 3：按钮 4：数据集',
  `Describe` varchar(2000) DEFAULT NULL COMMENT '描述',
  `PagePath` varchar(256) DEFAULT NULL COMMENT '页面路径',
  `BtnClientClick` varchar(256) DEFAULT NULL COMMENT '按钮客户端方法',
  `BtnServerClick` varchar(256) DEFAULT NULL COMMENT '按钮服务端方法',
  `BtnIcon` varchar(256) DEFAULT NULL COMMENT '按钮图标',
  `DataScope` int(11) DEFAULT NULL COMMENT '1：所有数据 2：当前代理商数据及所有父级数据，3：当前代理商及子代理商数据 4：当前代理商数据  其他用户自定义的',
  `SequeueNo` int(11) NOT NULL COMMENT '  菜单页面排序序号',
  `Status` int(11) NOT NULL COMMENT ' 状态 -1-已删除 0-无效  1-有效',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `UpdateTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  `HandlePath` varchar(256) DEFAULT NULL COMMENT '处理程序路径',
  PRIMARY KEY (`RuleId`)
) ENGINE=InnoDB AUTO_INCREMENT=212 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for systemlog
-- ----------------------------
DROP TABLE IF EXISTS `systemlog`;
CREATE TABLE `systemlog` (
  `LogID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '系统日志ID',
  `LogLevel` varchar(16) NOT NULL COMMENT '日志级别。Debug:调试信息;Info:运行信息;Error:一般错误信息;Warn:重要错误信息;Fatal:致命错误信息',
  `Msg` varchar(2000) DEFAULT NULL COMMENT '日志描述',
  `LogThread` varchar(64) DEFAULT NULL COMMENT '线程名',
  `Exception` mediumtext COMMENT '错误信息',
  `Logger` varchar(1024) DEFAULT NULL COMMENT '日志对象',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `GameType` int(11) DEFAULT '1' COMMENT '代理游戏类型;1 老友麻将；2老友麻将八张',
  PRIMARY KEY (`LogID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for sys_code
-- ----------------------------
DROP TABLE IF EXISTS `sys_code`;
CREATE TABLE `sys_code` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键，自增',
  `Code` int(11) NOT NULL COMMENT 'code',
  `CodeName` varchar(50) DEFAULT NULL COMMENT 'code名称',
  `Type` int(11) NOT NULL COMMENT '类型',
  `TypeName` varchar(50) DEFAULT NULL COMMENT '类型名称',
  `SortId` int(11) DEFAULT '0' COMMENT '排序字段',
  `valid` int(11) DEFAULT '1' COMMENT '是否有效 1有效 ; 0 无效',
  PRIMARY KEY (`Id`),
  KEY `idx_Type` (`Type`),
  KEY `idx_code_Type` (`Code`,`Type`)
) ENGINE=InnoDB AUTO_INCREMENT=1246 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for sys_codebak
-- ----------------------------
DROP TABLE IF EXISTS `sys_codebak`;
CREATE TABLE `sys_codebak` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键，自增',
  `Code` int(11) NOT NULL COMMENT 'code',
  `CodeName` varchar(50) DEFAULT NULL COMMENT 'code名称',
  `Type` int(11) NOT NULL COMMENT '类型',
  `TypeName` varchar(50) DEFAULT NULL COMMENT '类型名称',
  `SortId` int(11) DEFAULT '0' COMMENT '排序字段',
  `valid` int(11) DEFAULT '1' COMMENT '是否有效 1有效 ; 0 无效',
  PRIMARY KEY (`Id`),
  KEY `idx_Type` (`Type`),
  KEY `idx_code_Type` (`Code`,`Type`)
) ENGINE=InnoDB AUTO_INCREMENT=1171 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for sys_code_copy
-- ----------------------------
DROP TABLE IF EXISTS `sys_code_copy`;
CREATE TABLE `sys_code_copy` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键，自增',
  `Code` int(11) NOT NULL COMMENT 'code',
  `CodeName` varchar(50) DEFAULT NULL COMMENT 'code名称',
  `Type` int(11) NOT NULL COMMENT '类型',
  `TypeName` varchar(50) DEFAULT NULL COMMENT '类型名称',
  `SortId` int(11) DEFAULT '0' COMMENT '排序字段',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=263 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_agent_apply
-- ----------------------------
DROP TABLE IF EXISTS `table_agent_apply`;
CREATE TABLE `table_agent_apply` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nAmount` bigint(20) NOT NULL DEFAULT '0' COMMENT '提现金额',
  `BeforePayBalance` bigint(20) NOT NULL DEFAULT '0' COMMENT '帐变前账户金额  默认0',
  `AfterPayBalance` bigint(20) NOT NULL DEFAULT '0' COMMENT '帐变后账户金额  默认0',
  `ApplyTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '申请时间',
  `ApprovalTime` timestamp NULL DEFAULT NULL COMMENT '审批时间',
  `nStatus` tinyint(4) NOT NULL COMMENT '状态: 0.申请, 1.通过, 2.拒绝',
  `BackInfo` varchar(256) NOT NULL DEFAULT '' COMMENT '后台操作员',
  `Remarks` varchar(256) NOT NULL DEFAULT '' COMMENT '备注',
  `szToken` varchar(128) NOT NULL DEFAULT '' COMMENT '订单号：playid-unixtime-5位随机',
  `nType` tinyint(4) DEFAULT '1' COMMENT '类型 1-代理申请 2-城市合伙人申请',
  `aliAccount` varchar(128) NOT NULL DEFAULT '' COMMENT '支付宝账号',
  `aliName` varchar(128) NOT NULL DEFAULT '' COMMENT '支付宝姓名',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_ApprovalTime` (`ApprovalTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8mb4 COMMENT='提现申请记录表（通过时才产生帐变前后的金额记录）';

-- ----------------------------
-- Table structure for table_agent_commission
-- ----------------------------
DROP TABLE IF EXISTS `table_agent_commission`;
CREATE TABLE `table_agent_commission` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nSubAgentID` int(10) NOT NULL DEFAULT '0' COMMENT '针对nPlayerID的下级代理ID，如果没有则为0; nPlayerID 为1级代理，则此值为2级代理; nPlayerID 为2级代理，则此值为3级代理记录代理线上向下的ID',
  `nSourceID` int(11) NOT NULL COMMENT '来源ID (充值者)',
  `nType` tinyint(4) NOT NULL COMMENT '来源身份类型: 0.直属会员, 1.下级会员（下下级会员）',
  `ratio` int(11) NOT NULL DEFAULT '0' COMMENT '分成额度(10000=100%)  默认0',
  `nAmount` bigint(20) NOT NULL DEFAULT '0' COMMENT '金额',
  `nRecharge` bigint(20) NOT NULL DEFAULT '0' COMMENT '充值金额',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `nAgentID` int(11) NOT NULL DEFAULT '0' COMMENT '充值者的所属代理ID',
  PRIMARY KEY (`ID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_nSourceID` (`nSourceID`)
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8mb4 COMMENT='分成记录表';

-- ----------------------------
-- Table structure for table_agent_info
-- ----------------------------
DROP TABLE IF EXISTS `table_agent_info`;
CREATE TABLE `table_agent_info` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `UpAgentID` int(11) NOT NULL DEFAULT '0' COMMENT '上级代理ID, 默认0',
  `nLevel` tinyint(4) NOT NULL COMMENT '代理等级',
  `nAmount` bigint(20) NOT NULL DEFAULT '0' COMMENT '可提取账户金额(分成写入此字段) 默认0',
  `ratio` int(11) NOT NULL DEFAULT '0' COMMENT '分成额度(10000=100%)  默认0',
  `aliAccount` varchar(128) NOT NULL DEFAULT '' COMMENT '支付宝账号',
  `aliName` varchar(128) NOT NULL DEFAULT '' COMMENT '支付宝姓名',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `UpCPID` int(11) DEFAULT '0' COMMENT '隶属于城市合伙人ID',
  `CreateCPTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '成为城市合伙人线下代理的时间',
  PRIMARY KEY (`ID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_UpAgentID` (`UpAgentID`)
) ENGINE=InnoDB AUTO_INCREMENT=106 DEFAULT CHARSET=utf8mb4 COMMENT='代理人信息表';

-- ----------------------------
-- Table structure for table_agent_tree
-- ----------------------------
DROP TABLE IF EXISTS `table_agent_tree`;
CREATE TABLE `table_agent_tree` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nNextPlayerID` int(11) NOT NULL COMMENT '下级代理ID',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`ID`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8mb4 COMMENT='代理层级关系表';

-- ----------------------------
-- Table structure for table_citypartner_commission
-- ----------------------------
DROP TABLE IF EXISTS `table_citypartner_commission`;
CREATE TABLE `table_citypartner_commission` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引ID',
  `nPlayerID` int(11) DEFAULT NULL COMMENT '城市合伙人ID',
  `nSourceID` int(11) DEFAULT NULL COMMENT '来源ID (充值者)',
  `nCPID` int(11) DEFAULT NULL COMMENT '充值者的所属城市合伙人ID',
  `nType` tinyint(4) DEFAULT NULL COMMENT '充值类型 0-会员充值 1-代理充值',
  `ratio` int(11) DEFAULT NULL COMMENT '分成额度(10000=100%)',
  `nAmount` bigint(20) DEFAULT NULL COMMENT '分成金额',
  `nRecharge` bigint(20) DEFAULT NULL COMMENT '充值金额',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `nAgentID` int(11) NOT NULL DEFAULT '0' COMMENT '充值者的所属代理ID',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nCPID` (`nCPID`)
) ENGINE=InnoDB AUTO_INCREMENT=49 DEFAULT CHARSET=utf8mb4 COMMENT='城市合伙人分成记录表';

-- ----------------------------
-- Table structure for table_citypartner_info
-- ----------------------------
DROP TABLE IF EXISTS `table_citypartner_info`;
CREATE TABLE `table_citypartner_info` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引ID',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `UpCPID` int(11) DEFAULT '0' COMMENT '上级城市合伙人ID',
  `nLevel` tinyint(4) DEFAULT NULL COMMENT '合伙人等级',
  `nAmount` bigint(20) DEFAULT '0' COMMENT '可提取账户金额',
  `ratio_player` int(11) DEFAULT '0' COMMENT '普通会员分成额度(10000=100%)',
  `ratio_agent` int(11) DEFAULT '0' COMMENT '代理分成额度(10000=100%)',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COMMENT='城市合伙人信息表';

-- ----------------------------
-- Table structure for table_citypartner_stat
-- ----------------------------
DROP TABLE IF EXISTS `table_citypartner_stat`;
CREATE TABLE `table_citypartner_stat` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引ID',
  `nPlayerID` int(11) DEFAULT NULL COMMENT '用户ID',
  `tDate` date DEFAULT NULL COMMENT '日期',
  `nAgentTotal` int(11) DEFAULT '0' COMMENT '代理数',
  `nNewAgent` int(11) DEFAULT '0' COMMENT '当日新增代理数',
  `nRecharge` bigint(20) DEFAULT '0' COMMENT '充值金额',
  `nShare` bigint(20) DEFAULT '0' COMMENT '分成金额',
  `nCommission` bigint(20) DEFAULT '0' COMMENT '提现金额',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_tDate` (`nPlayerID`,`tDate`)
) ENGINE=InnoDB AUTO_INCREMENT=150 DEFAULT CHARSET=utf8mb4 COMMENT='针对推广收益的数据表';

-- ----------------------------
-- Table structure for table_citypartner_tree
-- ----------------------------
DROP TABLE IF EXISTS `table_citypartner_tree`;
CREATE TABLE `table_citypartner_tree` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引ID',
  `nPlayerID` int(11) DEFAULT NULL COMMENT '用户ID',
  `DownCPID` int(11) DEFAULT NULL COMMENT '下级城市合伙人ID（含下下级）',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8mb4 COMMENT='城市合伙人线表';

-- ----------------------------
-- Table structure for table_clubevent
-- ----------------------------
DROP TABLE IF EXISTS `table_clubevent`;
CREATE TABLE `table_clubevent` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) DEFAULT '0' COMMENT '俱乐部ID',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '时间',
  `nEventType` int(11) DEFAULT '0' COMMENT '事件类型',
  `szDesc` varchar(256) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nEventType` (`nEventType`)
) ENGINE=InnoDB AUTO_INCREMENT=2798 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部事件记录表';

-- ----------------------------
-- Table structure for table_clubgamelog
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog`;
CREATE TABLE `table_clubgamelog` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200201
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200201`;
CREATE TABLE `table_clubgamelog20200201` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200202
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200202`;
CREATE TABLE `table_clubgamelog20200202` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200203
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200203`;
CREATE TABLE `table_clubgamelog20200203` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200204
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200204`;
CREATE TABLE `table_clubgamelog20200204` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200205
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200205`;
CREATE TABLE `table_clubgamelog20200205` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200206
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200206`;
CREATE TABLE `table_clubgamelog20200206` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200207
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200207`;
CREATE TABLE `table_clubgamelog20200207` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200208
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200208`;
CREATE TABLE `table_clubgamelog20200208` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200209
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200209`;
CREATE TABLE `table_clubgamelog20200209` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200210
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200210`;
CREATE TABLE `table_clubgamelog20200210` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200211
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200211`;
CREATE TABLE `table_clubgamelog20200211` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200212
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200212`;
CREATE TABLE `table_clubgamelog20200212` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200213
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200213`;
CREATE TABLE `table_clubgamelog20200213` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200214
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200214`;
CREATE TABLE `table_clubgamelog20200214` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200215
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200215`;
CREATE TABLE `table_clubgamelog20200215` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200216
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200216`;
CREATE TABLE `table_clubgamelog20200216` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200217
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200217`;
CREATE TABLE `table_clubgamelog20200217` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200218
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200218`;
CREATE TABLE `table_clubgamelog20200218` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200219
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200219`;
CREATE TABLE `table_clubgamelog20200219` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200220
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200220`;
CREATE TABLE `table_clubgamelog20200220` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200301
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200301`;
CREATE TABLE `table_clubgamelog20200301` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200302
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200302`;
CREATE TABLE `table_clubgamelog20200302` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200526
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200526`;
CREATE TABLE `table_clubgamelog20200526` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200527
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200527`;
CREATE TABLE `table_clubgamelog20200527` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200528
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200528`;
CREATE TABLE `table_clubgamelog20200528` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200529
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200529`;
CREATE TABLE `table_clubgamelog20200529` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200530
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200530`;
CREATE TABLE `table_clubgamelog20200530` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200531
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200531`;
CREATE TABLE `table_clubgamelog20200531` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200601
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200601`;
CREATE TABLE `table_clubgamelog20200601` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200602
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200602`;
CREATE TABLE `table_clubgamelog20200602` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200603
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200603`;
CREATE TABLE `table_clubgamelog20200603` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200604
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200604`;
CREATE TABLE `table_clubgamelog20200604` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200605
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200605`;
CREATE TABLE `table_clubgamelog20200605` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200606
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200606`;
CREATE TABLE `table_clubgamelog20200606` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200607
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200607`;
CREATE TABLE `table_clubgamelog20200607` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200608
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200608`;
CREATE TABLE `table_clubgamelog20200608` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200609
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200609`;
CREATE TABLE `table_clubgamelog20200609` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200610
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200610`;
CREATE TABLE `table_clubgamelog20200610` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200611
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200611`;
CREATE TABLE `table_clubgamelog20200611` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200612
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200612`;
CREATE TABLE `table_clubgamelog20200612` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200613
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200613`;
CREATE TABLE `table_clubgamelog20200613` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200614
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200614`;
CREATE TABLE `table_clubgamelog20200614` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200615
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200615`;
CREATE TABLE `table_clubgamelog20200615` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200616
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200616`;
CREATE TABLE `table_clubgamelog20200616` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200617
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200617`;
CREATE TABLE `table_clubgamelog20200617` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200618
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200618`;
CREATE TABLE `table_clubgamelog20200618` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200619
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200619`;
CREATE TABLE `table_clubgamelog20200619` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200620
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200620`;
CREATE TABLE `table_clubgamelog20200620` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200621
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200621`;
CREATE TABLE `table_clubgamelog20200621` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200622
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200622`;
CREATE TABLE `table_clubgamelog20200622` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200623
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200623`;
CREATE TABLE `table_clubgamelog20200623` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200624
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200624`;
CREATE TABLE `table_clubgamelog20200624` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200625
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200625`;
CREATE TABLE `table_clubgamelog20200625` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200626
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200626`;
CREATE TABLE `table_clubgamelog20200626` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200627
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200627`;
CREATE TABLE `table_clubgamelog20200627` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200628
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200628`;
CREATE TABLE `table_clubgamelog20200628` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200629
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200629`;
CREATE TABLE `table_clubgamelog20200629` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200630
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200630`;
CREATE TABLE `table_clubgamelog20200630` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200701
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200701`;
CREATE TABLE `table_clubgamelog20200701` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200702
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200702`;
CREATE TABLE `table_clubgamelog20200702` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200703
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200703`;
CREATE TABLE `table_clubgamelog20200703` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200704
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200704`;
CREATE TABLE `table_clubgamelog20200704` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200705
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200705`;
CREATE TABLE `table_clubgamelog20200705` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200706
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200706`;
CREATE TABLE `table_clubgamelog20200706` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200707
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200707`;
CREATE TABLE `table_clubgamelog20200707` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200708
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200708`;
CREATE TABLE `table_clubgamelog20200708` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200709
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200709`;
CREATE TABLE `table_clubgamelog20200709` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200710
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200710`;
CREATE TABLE `table_clubgamelog20200710` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200711
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200711`;
CREATE TABLE `table_clubgamelog20200711` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200712
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200712`;
CREATE TABLE `table_clubgamelog20200712` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200713
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200713`;
CREATE TABLE `table_clubgamelog20200713` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200714
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200714`;
CREATE TABLE `table_clubgamelog20200714` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200715
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200715`;
CREATE TABLE `table_clubgamelog20200715` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200716
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200716`;
CREATE TABLE `table_clubgamelog20200716` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200717
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200717`;
CREATE TABLE `table_clubgamelog20200717` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200718
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200718`;
CREATE TABLE `table_clubgamelog20200718` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200719
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200719`;
CREATE TABLE `table_clubgamelog20200719` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200720
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200720`;
CREATE TABLE `table_clubgamelog20200720` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200721
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200721`;
CREATE TABLE `table_clubgamelog20200721` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200722
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200722`;
CREATE TABLE `table_clubgamelog20200722` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200723
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200723`;
CREATE TABLE `table_clubgamelog20200723` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200724
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200724`;
CREATE TABLE `table_clubgamelog20200724` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200725
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200725`;
CREATE TABLE `table_clubgamelog20200725` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200726
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200726`;
CREATE TABLE `table_clubgamelog20200726` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200727
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200727`;
CREATE TABLE `table_clubgamelog20200727` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200728
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200728`;
CREATE TABLE `table_clubgamelog20200728` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200729
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200729`;
CREATE TABLE `table_clubgamelog20200729` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200730
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200730`;
CREATE TABLE `table_clubgamelog20200730` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamelog20200731
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamelog20200731`;
CREATE TABLE `table_clubgamelog20200731` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `szToken` varchar(64) NOT NULL COMMENT 'clubid-roomid-time-round',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT NULL COMMENT '结束时间',
  `nGameType` int(10) NOT NULL COMMENT '1-牛牛,2-三公',
  `nServerID` int(10) NOT NULL COMMENT '新手场: 初,中,高等',
  `LogData` text COMMENT '日志步骤json串',
  `CardData` text COMMENT '日志步骤json串',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(26))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部牌局日志表';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200201
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200201`;
CREATE TABLE `table_clubgamescoredetail20200201` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200202
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200202`;
CREATE TABLE `table_clubgamescoredetail20200202` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200203
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200203`;
CREATE TABLE `table_clubgamescoredetail20200203` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200204
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200204`;
CREATE TABLE `table_clubgamescoredetail20200204` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200205
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200205`;
CREATE TABLE `table_clubgamescoredetail20200205` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200206
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200206`;
CREATE TABLE `table_clubgamescoredetail20200206` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200207
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200207`;
CREATE TABLE `table_clubgamescoredetail20200207` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200208
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200208`;
CREATE TABLE `table_clubgamescoredetail20200208` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200209
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200209`;
CREATE TABLE `table_clubgamescoredetail20200209` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200210
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200210`;
CREATE TABLE `table_clubgamescoredetail20200210` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200211
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200211`;
CREATE TABLE `table_clubgamescoredetail20200211` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200212
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200212`;
CREATE TABLE `table_clubgamescoredetail20200212` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200213
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200213`;
CREATE TABLE `table_clubgamescoredetail20200213` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200214
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200214`;
CREATE TABLE `table_clubgamescoredetail20200214` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200215
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200215`;
CREATE TABLE `table_clubgamescoredetail20200215` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200216
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200216`;
CREATE TABLE `table_clubgamescoredetail20200216` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200217
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200217`;
CREATE TABLE `table_clubgamescoredetail20200217` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200218
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200218`;
CREATE TABLE `table_clubgamescoredetail20200218` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200219
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200219`;
CREATE TABLE `table_clubgamescoredetail20200219` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200220
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200220`;
CREATE TABLE `table_clubgamescoredetail20200220` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200301
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200301`;
CREATE TABLE `table_clubgamescoredetail20200301` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20200302
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20200302`;
CREATE TABLE `table_clubgamescoredetail20200302` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210301
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210301`;
CREATE TABLE `table_clubgamescoredetail20210301` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210302
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210302`;
CREATE TABLE `table_clubgamescoredetail20210302` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=167 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210303
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210303`;
CREATE TABLE `table_clubgamescoredetail20210303` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210304
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210304`;
CREATE TABLE `table_clubgamescoredetail20210304` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210305
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210305`;
CREATE TABLE `table_clubgamescoredetail20210305` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210306
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210306`;
CREATE TABLE `table_clubgamescoredetail20210306` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210307
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210307`;
CREATE TABLE `table_clubgamescoredetail20210307` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210308
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210308`;
CREATE TABLE `table_clubgamescoredetail20210308` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210309
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210309`;
CREATE TABLE `table_clubgamescoredetail20210309` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=92 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210310
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210310`;
CREATE TABLE `table_clubgamescoredetail20210310` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210311
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210311`;
CREATE TABLE `table_clubgamescoredetail20210311` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210312
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210312`;
CREATE TABLE `table_clubgamescoredetail20210312` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210313
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210313`;
CREATE TABLE `table_clubgamescoredetail20210313` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210314
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210314`;
CREATE TABLE `table_clubgamescoredetail20210314` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210315
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210315`;
CREATE TABLE `table_clubgamescoredetail20210315` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210316
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210316`;
CREATE TABLE `table_clubgamescoredetail20210316` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210317
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210317`;
CREATE TABLE `table_clubgamescoredetail20210317` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210318
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210318`;
CREATE TABLE `table_clubgamescoredetail20210318` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210319
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210319`;
CREATE TABLE `table_clubgamescoredetail20210319` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210320
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210320`;
CREATE TABLE `table_clubgamescoredetail20210320` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210321
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210321`;
CREATE TABLE `table_clubgamescoredetail20210321` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210322
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210322`;
CREATE TABLE `table_clubgamescoredetail20210322` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210323
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210323`;
CREATE TABLE `table_clubgamescoredetail20210323` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210324
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210324`;
CREATE TABLE `table_clubgamescoredetail20210324` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210325
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210325`;
CREATE TABLE `table_clubgamescoredetail20210325` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210326
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210326`;
CREATE TABLE `table_clubgamescoredetail20210326` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=51 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210327
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210327`;
CREATE TABLE `table_clubgamescoredetail20210327` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210328
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210328`;
CREATE TABLE `table_clubgamescoredetail20210328` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210329
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210329`;
CREATE TABLE `table_clubgamescoredetail20210329` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210330
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210330`;
CREATE TABLE `table_clubgamescoredetail20210330` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210331
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210331`;
CREATE TABLE `table_clubgamescoredetail20210331` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210401
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210401`;
CREATE TABLE `table_clubgamescoredetail20210401` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210402
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210402`;
CREATE TABLE `table_clubgamescoredetail20210402` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210403
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210403`;
CREATE TABLE `table_clubgamescoredetail20210403` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210404
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210404`;
CREATE TABLE `table_clubgamescoredetail20210404` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210405
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210405`;
CREATE TABLE `table_clubgamescoredetail20210405` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210406
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210406`;
CREATE TABLE `table_clubgamescoredetail20210406` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210407
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210407`;
CREATE TABLE `table_clubgamescoredetail20210407` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210408
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210408`;
CREATE TABLE `table_clubgamescoredetail20210408` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210409
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210409`;
CREATE TABLE `table_clubgamescoredetail20210409` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210410
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210410`;
CREATE TABLE `table_clubgamescoredetail20210410` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210411
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210411`;
CREATE TABLE `table_clubgamescoredetail20210411` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210412
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210412`;
CREATE TABLE `table_clubgamescoredetail20210412` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210413
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210413`;
CREATE TABLE `table_clubgamescoredetail20210413` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210414
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210414`;
CREATE TABLE `table_clubgamescoredetail20210414` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210415
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210415`;
CREATE TABLE `table_clubgamescoredetail20210415` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210416
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210416`;
CREATE TABLE `table_clubgamescoredetail20210416` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210417
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210417`;
CREATE TABLE `table_clubgamescoredetail20210417` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210418
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210418`;
CREATE TABLE `table_clubgamescoredetail20210418` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210419
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210419`;
CREATE TABLE `table_clubgamescoredetail20210419` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210420
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210420`;
CREATE TABLE `table_clubgamescoredetail20210420` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210421
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210421`;
CREATE TABLE `table_clubgamescoredetail20210421` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210422
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210422`;
CREATE TABLE `table_clubgamescoredetail20210422` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210423
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210423`;
CREATE TABLE `table_clubgamescoredetail20210423` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=44 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210424
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210424`;
CREATE TABLE `table_clubgamescoredetail20210424` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210425
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210425`;
CREATE TABLE `table_clubgamescoredetail20210425` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210426
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210426`;
CREATE TABLE `table_clubgamescoredetail20210426` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=46 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210427
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210427`;
CREATE TABLE `table_clubgamescoredetail20210427` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210428
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210428`;
CREATE TABLE `table_clubgamescoredetail20210428` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210429
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210429`;
CREATE TABLE `table_clubgamescoredetail20210429` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210430
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210430`;
CREATE TABLE `table_clubgamescoredetail20210430` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210701
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210701`;
CREATE TABLE `table_clubgamescoredetail20210701` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210702
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210702`;
CREATE TABLE `table_clubgamescoredetail20210702` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210703
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210703`;
CREATE TABLE `table_clubgamescoredetail20210703` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210704
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210704`;
CREATE TABLE `table_clubgamescoredetail20210704` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210705
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210705`;
CREATE TABLE `table_clubgamescoredetail20210705` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210706
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210706`;
CREATE TABLE `table_clubgamescoredetail20210706` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210707
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210707`;
CREATE TABLE `table_clubgamescoredetail20210707` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210708
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210708`;
CREATE TABLE `table_clubgamescoredetail20210708` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210709
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210709`;
CREATE TABLE `table_clubgamescoredetail20210709` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210710
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210710`;
CREATE TABLE `table_clubgamescoredetail20210710` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210711
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210711`;
CREATE TABLE `table_clubgamescoredetail20210711` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210712
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210712`;
CREATE TABLE `table_clubgamescoredetail20210712` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210713
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210713`;
CREATE TABLE `table_clubgamescoredetail20210713` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210714
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210714`;
CREATE TABLE `table_clubgamescoredetail20210714` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210715
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210715`;
CREATE TABLE `table_clubgamescoredetail20210715` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210716
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210716`;
CREATE TABLE `table_clubgamescoredetail20210716` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210717
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210717`;
CREATE TABLE `table_clubgamescoredetail20210717` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210718
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210718`;
CREATE TABLE `table_clubgamescoredetail20210718` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210719
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210719`;
CREATE TABLE `table_clubgamescoredetail20210719` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210720
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210720`;
CREATE TABLE `table_clubgamescoredetail20210720` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210721
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210721`;
CREATE TABLE `table_clubgamescoredetail20210721` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210722
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210722`;
CREATE TABLE `table_clubgamescoredetail20210722` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210723
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210723`;
CREATE TABLE `table_clubgamescoredetail20210723` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210724
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210724`;
CREATE TABLE `table_clubgamescoredetail20210724` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210725
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210725`;
CREATE TABLE `table_clubgamescoredetail20210725` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210726
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210726`;
CREATE TABLE `table_clubgamescoredetail20210726` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210727
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210727`;
CREATE TABLE `table_clubgamescoredetail20210727` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210728
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210728`;
CREATE TABLE `table_clubgamescoredetail20210728` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210729
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210729`;
CREATE TABLE `table_clubgamescoredetail20210729` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210730
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210730`;
CREATE TABLE `table_clubgamescoredetail20210730` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210731
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210731`;
CREATE TABLE `table_clubgamescoredetail20210731` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210801
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210801`;
CREATE TABLE `table_clubgamescoredetail20210801` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210802
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210802`;
CREATE TABLE `table_clubgamescoredetail20210802` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1884100000012 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210803
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210803`;
CREATE TABLE `table_clubgamescoredetail20210803` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210804
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210804`;
CREATE TABLE `table_clubgamescoredetail20210804` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210805
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210805`;
CREATE TABLE `table_clubgamescoredetail20210805` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1884400000007 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210806
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210806`;
CREATE TABLE `table_clubgamescoredetail20210806` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1884500000011 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210807
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210807`;
CREATE TABLE `table_clubgamescoredetail20210807` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210808
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210808`;
CREATE TABLE `table_clubgamescoredetail20210808` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210809
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210809`;
CREATE TABLE `table_clubgamescoredetail20210809` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210810
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210810`;
CREATE TABLE `table_clubgamescoredetail20210810` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1884900000012 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210811
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210811`;
CREATE TABLE `table_clubgamescoredetail20210811` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1885000000005 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210812
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210812`;
CREATE TABLE `table_clubgamescoredetail20210812` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1885100000004 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210813
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210813`;
CREATE TABLE `table_clubgamescoredetail20210813` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1885200000001 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210814
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210814`;
CREATE TABLE `table_clubgamescoredetail20210814` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210815
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210815`;
CREATE TABLE `table_clubgamescoredetail20210815` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210816
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210816`;
CREATE TABLE `table_clubgamescoredetail20210816` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210817
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210817`;
CREATE TABLE `table_clubgamescoredetail20210817` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1885600000004 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210818
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210818`;
CREATE TABLE `table_clubgamescoredetail20210818` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1885700000001 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210819
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210819`;
CREATE TABLE `table_clubgamescoredetail20210819` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210820
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210820`;
CREATE TABLE `table_clubgamescoredetail20210820` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210821
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210821`;
CREATE TABLE `table_clubgamescoredetail20210821` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210822
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210822`;
CREATE TABLE `table_clubgamescoredetail20210822` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210823
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210823`;
CREATE TABLE `table_clubgamescoredetail20210823` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210824
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210824`;
CREATE TABLE `table_clubgamescoredetail20210824` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210825
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210825`;
CREATE TABLE `table_clubgamescoredetail20210825` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210826
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210826`;
CREATE TABLE `table_clubgamescoredetail20210826` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210827
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210827`;
CREATE TABLE `table_clubgamescoredetail20210827` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1886600000001 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210828
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210828`;
CREATE TABLE `table_clubgamescoredetail20210828` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210829
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210829`;
CREATE TABLE `table_clubgamescoredetail20210829` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210830
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210830`;
CREATE TABLE `table_clubgamescoredetail20210830` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210831
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210831`;
CREATE TABLE `table_clubgamescoredetail20210831` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210901
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210901`;
CREATE TABLE `table_clubgamescoredetail20210901` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1887100000002 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210902
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210902`;
CREATE TABLE `table_clubgamescoredetail20210902` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210903
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210903`;
CREATE TABLE `table_clubgamescoredetail20210903` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1887300000009 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210904
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210904`;
CREATE TABLE `table_clubgamescoredetail20210904` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210905
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210905`;
CREATE TABLE `table_clubgamescoredetail20210905` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210906
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210906`;
CREATE TABLE `table_clubgamescoredetail20210906` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210907
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210907`;
CREATE TABLE `table_clubgamescoredetail20210907` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210908
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210908`;
CREATE TABLE `table_clubgamescoredetail20210908` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210909
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210909`;
CREATE TABLE `table_clubgamescoredetail20210909` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210910
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210910`;
CREATE TABLE `table_clubgamescoredetail20210910` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1888000000001 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210911
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210911`;
CREATE TABLE `table_clubgamescoredetail20210911` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1888100000006 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210912
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210912`;
CREATE TABLE `table_clubgamescoredetail20210912` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210913
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210913`;
CREATE TABLE `table_clubgamescoredetail20210913` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1888300000001 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210914
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210914`;
CREATE TABLE `table_clubgamescoredetail20210914` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1888400000028 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210915
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210915`;
CREATE TABLE `table_clubgamescoredetail20210915` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1888500000001 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210916
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210916`;
CREATE TABLE `table_clubgamescoredetail20210916` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210917
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210917`;
CREATE TABLE `table_clubgamescoredetail20210917` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210918
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210918`;
CREATE TABLE `table_clubgamescoredetail20210918` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210919
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210919`;
CREATE TABLE `table_clubgamescoredetail20210919` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210920
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210920`;
CREATE TABLE `table_clubgamescoredetail20210920` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210921
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210921`;
CREATE TABLE `table_clubgamescoredetail20210921` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210922
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210922`;
CREATE TABLE `table_clubgamescoredetail20210922` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210923
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210923`;
CREATE TABLE `table_clubgamescoredetail20210923` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1889300000009 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210924
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210924`;
CREATE TABLE `table_clubgamescoredetail20210924` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210925
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210925`;
CREATE TABLE `table_clubgamescoredetail20210925` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210926
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210926`;
CREATE TABLE `table_clubgamescoredetail20210926` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1889600000001 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210927
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210927`;
CREATE TABLE `table_clubgamescoredetail20210927` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210928
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210928`;
CREATE TABLE `table_clubgamescoredetail20210928` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210929
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210929`;
CREATE TABLE `table_clubgamescoredetail20210929` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20210930
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20210930`;
CREATE TABLE `table_clubgamescoredetail20210930` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211001
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211001`;
CREATE TABLE `table_clubgamescoredetail20211001` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211002
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211002`;
CREATE TABLE `table_clubgamescoredetail20211002` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211003
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211003`;
CREATE TABLE `table_clubgamescoredetail20211003` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211004
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211004`;
CREATE TABLE `table_clubgamescoredetail20211004` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211005
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211005`;
CREATE TABLE `table_clubgamescoredetail20211005` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211006
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211006`;
CREATE TABLE `table_clubgamescoredetail20211006` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211007
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211007`;
CREATE TABLE `table_clubgamescoredetail20211007` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211008
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211008`;
CREATE TABLE `table_clubgamescoredetail20211008` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211009
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211009`;
CREATE TABLE `table_clubgamescoredetail20211009` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211010
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211010`;
CREATE TABLE `table_clubgamescoredetail20211010` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211011
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211011`;
CREATE TABLE `table_clubgamescoredetail20211011` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211012
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211012`;
CREATE TABLE `table_clubgamescoredetail20211012` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211013
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211013`;
CREATE TABLE `table_clubgamescoredetail20211013` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211014
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211014`;
CREATE TABLE `table_clubgamescoredetail20211014` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211015
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211015`;
CREATE TABLE `table_clubgamescoredetail20211015` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1891500000001 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211016
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211016`;
CREATE TABLE `table_clubgamescoredetail20211016` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211017
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211017`;
CREATE TABLE `table_clubgamescoredetail20211017` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211018
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211018`;
CREATE TABLE `table_clubgamescoredetail20211018` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211019
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211019`;
CREATE TABLE `table_clubgamescoredetail20211019` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211020
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211020`;
CREATE TABLE `table_clubgamescoredetail20211020` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211021
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211021`;
CREATE TABLE `table_clubgamescoredetail20211021` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211022
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211022`;
CREATE TABLE `table_clubgamescoredetail20211022` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211023
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211023`;
CREATE TABLE `table_clubgamescoredetail20211023` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211024
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211024`;
CREATE TABLE `table_clubgamescoredetail20211024` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211025
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211025`;
CREATE TABLE `table_clubgamescoredetail20211025` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1892500000006 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211026
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211026`;
CREATE TABLE `table_clubgamescoredetail20211026` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211027
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211027`;
CREATE TABLE `table_clubgamescoredetail20211027` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211028
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211028`;
CREATE TABLE `table_clubgamescoredetail20211028` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211029
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211029`;
CREATE TABLE `table_clubgamescoredetail20211029` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211030
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211030`;
CREATE TABLE `table_clubgamescoredetail20211030` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211031
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211031`;
CREATE TABLE `table_clubgamescoredetail20211031` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211101
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211101`;
CREATE TABLE `table_clubgamescoredetail20211101` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211102
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211102`;
CREATE TABLE `table_clubgamescoredetail20211102` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211103
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211103`;
CREATE TABLE `table_clubgamescoredetail20211103` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211104
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211104`;
CREATE TABLE `table_clubgamescoredetail20211104` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211105
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211105`;
CREATE TABLE `table_clubgamescoredetail20211105` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211106
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211106`;
CREATE TABLE `table_clubgamescoredetail20211106` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211107
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211107`;
CREATE TABLE `table_clubgamescoredetail20211107` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211108
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211108`;
CREATE TABLE `table_clubgamescoredetail20211108` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211109
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211109`;
CREATE TABLE `table_clubgamescoredetail20211109` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211110
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211110`;
CREATE TABLE `table_clubgamescoredetail20211110` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211111
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211111`;
CREATE TABLE `table_clubgamescoredetail20211111` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211112
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211112`;
CREATE TABLE `table_clubgamescoredetail20211112` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211113
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211113`;
CREATE TABLE `table_clubgamescoredetail20211113` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211114
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211114`;
CREATE TABLE `table_clubgamescoredetail20211114` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211115
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211115`;
CREATE TABLE `table_clubgamescoredetail20211115` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211116
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211116`;
CREATE TABLE `table_clubgamescoredetail20211116` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211117
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211117`;
CREATE TABLE `table_clubgamescoredetail20211117` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211118
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211118`;
CREATE TABLE `table_clubgamescoredetail20211118` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211119
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211119`;
CREATE TABLE `table_clubgamescoredetail20211119` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211120
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211120`;
CREATE TABLE `table_clubgamescoredetail20211120` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211121
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211121`;
CREATE TABLE `table_clubgamescoredetail20211121` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211122
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211122`;
CREATE TABLE `table_clubgamescoredetail20211122` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211123
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211123`;
CREATE TABLE `table_clubgamescoredetail20211123` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211124
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211124`;
CREATE TABLE `table_clubgamescoredetail20211124` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211125
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211125`;
CREATE TABLE `table_clubgamescoredetail20211125` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211126
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211126`;
CREATE TABLE `table_clubgamescoredetail20211126` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211127
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211127`;
CREATE TABLE `table_clubgamescoredetail20211127` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211128
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211128`;
CREATE TABLE `table_clubgamescoredetail20211128` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211129
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211129`;
CREATE TABLE `table_clubgamescoredetail20211129` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211130
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211130`;
CREATE TABLE `table_clubgamescoredetail20211130` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211208
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211208`;
CREATE TABLE `table_clubgamescoredetail20211208` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211210
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211210`;
CREATE TABLE `table_clubgamescoredetail20211210` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211211
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211211`;
CREATE TABLE `table_clubgamescoredetail20211211` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211212
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211212`;
CREATE TABLE `table_clubgamescoredetail20211212` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20211213
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20211213`;
CREATE TABLE `table_clubgamescoredetail20211213` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220101
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220101`;
CREATE TABLE `table_clubgamescoredetail20220101` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899300000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220102
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220102`;
CREATE TABLE `table_clubgamescoredetail20220102` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899400000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220103
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220103`;
CREATE TABLE `table_clubgamescoredetail20220103` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899500000008 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220104
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220104`;
CREATE TABLE `table_clubgamescoredetail20220104` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899600000006 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220105
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220105`;
CREATE TABLE `table_clubgamescoredetail20220105` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899700000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220106
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220106`;
CREATE TABLE `table_clubgamescoredetail20220106` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899800000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220107
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220107`;
CREATE TABLE `table_clubgamescoredetail20220107` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899900000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220108
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220108`;
CREATE TABLE `table_clubgamescoredetail20220108` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900000000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220109
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220109`;
CREATE TABLE `table_clubgamescoredetail20220109` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900100000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220110
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220110`;
CREATE TABLE `table_clubgamescoredetail20220110` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900200000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220111
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220111`;
CREATE TABLE `table_clubgamescoredetail20220111` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900300000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220112
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220112`;
CREATE TABLE `table_clubgamescoredetail20220112` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900400000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220113
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220113`;
CREATE TABLE `table_clubgamescoredetail20220113` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900500000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220114
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220114`;
CREATE TABLE `table_clubgamescoredetail20220114` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900600000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220115
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220115`;
CREATE TABLE `table_clubgamescoredetail20220115` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900700000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220116
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220116`;
CREATE TABLE `table_clubgamescoredetail20220116` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900800000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220117
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220117`;
CREATE TABLE `table_clubgamescoredetail20220117` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900900000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220118
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220118`;
CREATE TABLE `table_clubgamescoredetail20220118` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901000000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220119
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220119`;
CREATE TABLE `table_clubgamescoredetail20220119` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901100000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220120
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220120`;
CREATE TABLE `table_clubgamescoredetail20220120` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901200000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220121
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220121`;
CREATE TABLE `table_clubgamescoredetail20220121` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901300000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220122
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220122`;
CREATE TABLE `table_clubgamescoredetail20220122` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901400000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220123
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220123`;
CREATE TABLE `table_clubgamescoredetail20220123` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901500000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220124
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220124`;
CREATE TABLE `table_clubgamescoredetail20220124` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901600000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220125
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220125`;
CREATE TABLE `table_clubgamescoredetail20220125` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901700000001 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220126
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220126`;
CREATE TABLE `table_clubgamescoredetail20220126` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901800000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220127
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220127`;
CREATE TABLE `table_clubgamescoredetail20220127` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901900000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220128
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220128`;
CREATE TABLE `table_clubgamescoredetail20220128` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902000000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220129
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220129`;
CREATE TABLE `table_clubgamescoredetail20220129` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902100000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220130
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220130`;
CREATE TABLE `table_clubgamescoredetail20220130` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902200000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220131
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220131`;
CREATE TABLE `table_clubgamescoredetail20220131` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902300000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220201
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220201`;
CREATE TABLE `table_clubgamescoredetail20220201` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902400000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220202
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220202`;
CREATE TABLE `table_clubgamescoredetail20220202` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902500000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220203
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220203`;
CREATE TABLE `table_clubgamescoredetail20220203` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902600000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220204
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220204`;
CREATE TABLE `table_clubgamescoredetail20220204` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902700000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220205
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220205`;
CREATE TABLE `table_clubgamescoredetail20220205` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902800000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220206
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220206`;
CREATE TABLE `table_clubgamescoredetail20220206` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902900000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220207
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220207`;
CREATE TABLE `table_clubgamescoredetail20220207` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903000000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220208
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220208`;
CREATE TABLE `table_clubgamescoredetail20220208` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903100000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220209
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220209`;
CREATE TABLE `table_clubgamescoredetail20220209` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903200000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220210
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220210`;
CREATE TABLE `table_clubgamescoredetail20220210` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903300000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220211
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220211`;
CREATE TABLE `table_clubgamescoredetail20220211` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903400000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220212
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220212`;
CREATE TABLE `table_clubgamescoredetail20220212` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903500000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220213
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220213`;
CREATE TABLE `table_clubgamescoredetail20220213` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903600000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220214
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220214`;
CREATE TABLE `table_clubgamescoredetail20220214` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903700000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220215
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220215`;
CREATE TABLE `table_clubgamescoredetail20220215` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903800000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220216
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220216`;
CREATE TABLE `table_clubgamescoredetail20220216` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903900000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220217
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220217`;
CREATE TABLE `table_clubgamescoredetail20220217` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904000000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220218
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220218`;
CREATE TABLE `table_clubgamescoredetail20220218` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904100000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220219
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220219`;
CREATE TABLE `table_clubgamescoredetail20220219` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904200000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220220
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220220`;
CREATE TABLE `table_clubgamescoredetail20220220` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904300000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220221
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220221`;
CREATE TABLE `table_clubgamescoredetail20220221` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904400000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220222
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220222`;
CREATE TABLE `table_clubgamescoredetail20220222` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904500000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220223
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220223`;
CREATE TABLE `table_clubgamescoredetail20220223` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904600000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220224
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220224`;
CREATE TABLE `table_clubgamescoredetail20220224` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904700000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220225
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220225`;
CREATE TABLE `table_clubgamescoredetail20220225` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904800000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220226
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220226`;
CREATE TABLE `table_clubgamescoredetail20220226` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904900000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220227
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220227`;
CREATE TABLE `table_clubgamescoredetail20220227` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1905000000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgamescoredetail20220228
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgamescoredetail20220228`;
CREATE TABLE `table_clubgamescoredetail20220228` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
  `CardData` text COMMENT '牌局详情',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`(28)),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1905100000000 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';

-- ----------------------------
-- Table structure for table_clubgoods
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgoods`;
CREATE TABLE `table_clubgoods` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `nPlayerID` int(12) NOT NULL COMMENT '玩家ID',
  `nClubID` int(12) NOT NULL COMMENT '俱乐部ID',
  `nGoodsID` int(12) NOT NULL COMMENT '物品ID',
  `num` int(12) NOT NULL COMMENT '物品个数',
  `bUse` tinyint(4) NOT NULL DEFAULT '0' COMMENT '使用标记(针对可使用类型的道具): 0-卸载 1-使用',
  `renewal` tinyint(4) NOT NULL DEFAULT '0' COMMENT '时间型道具续期标志: 0-不续期 1-续期',
  `expireTime` timestamp NULL DEFAULT NULL COMMENT '过期时间(购买时即确定了过期时间)',
  `lastOpTime` timestamp NULL DEFAULT NULL COMMENT '最后操作时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_nClubID` (`nPlayerID`,`nClubID`),
  KEY `idx_nGoodsID` (`nGoodsID`)
) ENGINE=InnoDB AUTO_INCREMENT=232 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_clubgoodsinfor
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgoodsinfor`;
CREATE TABLE `table_clubgoodsinfor` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT COMMENT ' 自增ID',
  `nState` int(12) unsigned NOT NULL,
  `nPlatID` int(11) NOT NULL DEFAULT '1' COMMENT '平台ID：1-H5(App), 2-新房卡',
  `nGoodsID` int(12) NOT NULL COMMENT '物品ID',
  `nGoodsName` varchar(64) NOT NULL DEFAULT '' COMMENT '物品名称',
  `nType` int(11) NOT NULL COMMENT '类型',
  `nOriPrice` int(11) NOT NULL DEFAULT '0' COMMENT '原价(只针对有所谓打折价的商品)',
  `nPrice` int(11) NOT NULL DEFAULT '0' COMMENT '价格',
  `nGoodsTime` int(11) NOT NULL DEFAULT '0' COMMENT '时间类道具的有效时间(分钟单位)',
  `szMark` varchar(128) DEFAULT '' COMMENT '物品描述',
  PRIMARY KEY (`ID`),
  KEY `idx_nGoodsID` (`nGoodsID`)
) ENGINE=InnoDB AUTO_INCREMENT=213 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_clubgoodsoperatlog
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgoodsoperatlog`;
CREATE TABLE `table_clubgoodsoperatlog` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT COMMENT ' 自增ID',
  `orderID` varchar(64) NOT NULL COMMENT '操作单号,非第三方的单号，也要产生',
  `nClubID` int(12) NOT NULL,
  `nPlayerID` int(12) NOT NULL,
  `nGoodsID` int(12) NOT NULL,
  `nPrice` int(11) NOT NULL COMMENT '价格(购买时的价格，为了针对价格变动而记录)',
  `num` int(12) NOT NULL,
  `AfterMbNum` int(12) NOT NULL,
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `nState` int(12) NOT NULL,
  `nOperatType` int(12) NOT NULL,
  `OpratAccount` varchar(64) NOT NULL DEFAULT '' COMMENT '操作人帐号',
  `nGameType` int(12) unsigned NOT NULL COMMENT '发生变化时的游戏类型',
  `nServerID` int(12) unsigned NOT NULL COMMENT '发生变化时的游戏serverID',
  `ReMark` varchar(64) DEFAULT '' COMMENT '备注',
  PRIMARY KEY (`ID`),
  KEY `idx_orderID` (`orderID`),
  KEY `idx_nGoodsID` (`nGoodsID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nPlayerID_nClubID` (`nPlayerID`,`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=1206 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_clubgoodsoperatlogwait
-- ----------------------------
DROP TABLE IF EXISTS `table_clubgoodsoperatlogwait`;
CREATE TABLE `table_clubgoodsoperatlogwait` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT ' 自增Id',
  `nGuid` varchar(64) NOT NULL COMMENT '唯一标识',
  `nClubId` int(11) NOT NULL DEFAULT '0' COMMENT '运营商Id',
  `szThirdAccount` varchar(64) NOT NULL DEFAULT '' COMMENT '会员账号',
  `nGoodsId` int(11) NOT NULL DEFAULT '0' COMMENT '物品Id',
  `num` int(11) NOT NULL DEFAULT '0' COMMENT '数量',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `ModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后修改时间',
  `nState` int(11) NOT NULL DEFAULT '0' COMMENT '0-待领取;1-已领取;2-已删除',
  `OpratAccount` varchar(64) NOT NULL DEFAULT '' COMMENT '操作人帐号',
  `ReMark` varchar(64) DEFAULT '' COMMENT '备注',
  PRIMARY KEY (`Id`),
  KEY `idx_CreateTime_nClubId_nGoodsId` (`CreateTime`,`nClubId`,`nGoodsId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='物品预发放记录表';

-- ----------------------------
-- Table structure for table_clubinfo
-- ----------------------------
DROP TABLE IF EXISTS `table_clubinfo`;
CREATE TABLE `table_clubinfo` (
  `nClubID` int(11) NOT NULL AUTO_INCREMENT COMMENT '俱乐部ID',
  `szClubName` varchar(32) DEFAULT NULL COMMENT '俱乐部名字',
  `nIconID` varchar(256) DEFAULT '0' COMMENT '俱乐部图标',
  `bIsPublic` tinyint(4) DEFAULT '0' COMMENT '是否为公共俱乐部',
  `bIsPrivate` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否为私密俱乐部(0-否,1-是)',
  `bMemberCreate` tinyint(4) NOT NULL DEFAULT '1' COMMENT '会员是否可以自行开房间(0-否,1-是 默认为1)',
  `bAllowTakeOut` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否可以带出积分 (0-否,1-是)',
  `bShuffle` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否可以搓牌（0-否，1-是）',
  `nStatus` tinyint(4) NOT NULL DEFAULT '1' COMMENT '状态(1-正常，2-冻结，3-解散) 默认:1',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `EndTime` timestamp NULL DEFAULT NULL COMMENT '解散时间',
  `CreatePlayerID` int(11) NOT NULL COMMENT '创建者ID',
  `szCity` varchar(32) DEFAULT NULL COMMENT '城市',
  `szDesc` varchar(256) DEFAULT NULL COMMENT '俱乐部介绍',
  `nScore` bigint(20) DEFAULT '0' COMMENT '积分总账户',
  `nTaxRateNormal` int(11) DEFAULT '20' COMMENT '六人场单局对玩家的税率（群管可设置）整数，需除以1000',
  `nTaxRateBig` int(11) DEFAULT '20' COMMENT '百人场单局对玩家的税率（群管可设置）整数，需除以1000',
  `nTaxTRateNormal` int(11) DEFAULT '0' COMMENT '六人场总局玩家的税率（群管可设置）整数，需除以1000',
  `nTaxTRateBig` int(11) DEFAULT '20' COMMENT '百人场总局玩家的税率（群管可设置）整数，需除以1000',
  `nWinnerRoyaltyRate` int(11) DEFAULT '0' COMMENT '俱乐部对赢家分成比例（平台设置）整数，需除以1000',
  `nBigRoomRoyaltyRate` int(11) DEFAULT '0' COMMENT '俱乐部对百人分成比例（平台设置）整数，需除以1000',
  `nEnterDiamondRateint` int(11) DEFAULT '0' COMMENT '入桌费扣钻税率（平台设置）整数，需除以1000',
  `szNoteMsg` varchar(256) DEFAULT '' COMMENT '俱乐部聊天室公告',
  `nChannel` int(11) DEFAULT '0' COMMENT '渠道ID',
  `nDirectlyRate` int(11) DEFAULT '200' COMMENT '直属用户收益比例 整数，需除以1000',
  `nExtensionRate` int(11) DEFAULT '100' COMMENT '推广用户收益比例 整数，需除以1000',
  `nSubExtensionRate` int(11) DEFAULT '100' COMMENT '下级推广用户收益比例 整数，需除以1000',
  `nWarningAmount` int(11) DEFAULT '0' COMMENT '钻石预警值',
  `nRecommendAward` int(11) DEFAULT '50' COMMENT '推荐奖励',
  `nExchangeDiamond` int(11) DEFAULT '100' COMMENT '兑换1钻石所需要的积分数',
  `nOpention` varchar(32) DEFAULT '11111111111111111111111111111111' COMMENT '32位的字串，通过每个位置的0和1来表示某个权限的开启还是关闭',
  PRIMARY KEY (`nClubID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_szClubName` (`szClubName`),
  KEY `idx_CreatePlayerID` (`CreatePlayerID`)
) ENGINE=InnoDB AUTO_INCREMENT=12163 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部表';

-- ----------------------------
-- Table structure for table_clublogdiamond
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogdiamond`;
CREATE TABLE `table_clublogdiamond` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` int(11) NOT NULL COMMENT '改变数量',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` tinyint(4) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-开房消耗，4-道具消耗，5-充值获得',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_nTableID_nGameID_clubid_CreateTime` (`nPlayerID`,`nTableID`,`nGameID`,`clubid`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_clubid_nGameId_CreateTime` (`clubid`,`nGameID`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='钻石变更Log表';

-- ----------------------------
-- Table structure for table_clublogdiamond_history
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogdiamond_history`;
CREATE TABLE `table_clublogdiamond_history` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` int(11) NOT NULL COMMENT '改变数量',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` tinyint(4) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-开房消耗，4-道具消耗，5-充值获得',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  PRIMARY KEY (`ID`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='钻石变更Log历史记录表';

-- ----------------------------
-- Table structure for table_clubloggold
-- ----------------------------
DROP TABLE IF EXISTS `table_clubloggold`;
CREATE TABLE `table_clubloggold` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` int(11) NOT NULL DEFAULT '0' COMMENT '改变数量',
  `nScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '剩余数量',
  `nType` tinyint(4) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-游戏消耗，4-游戏获得，5-钻石兑换，6-注册赠送，7-道具消耗，8-扣税，9-百人场消耗，10-百人场获得，11-百人场扣税, 12-总体收扣税',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL DEFAULT '' COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  PRIMARY KEY (`ID`),
  KEY `clubloggold_idx_nPlayerID` (`nPlayerID`),
  KEY `clubloggold_idx_nType` (`nType`),
  KEY `idex_clubid` (`clubid`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nTableID` (`nTableID`),
  KEY `idx_nGameID` (`nGameID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='金币变更Log表';

-- ----------------------------
-- Table structure for table_clublogplatformscore
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogplatformscore`;
CREATE TABLE `table_clublogplatformscore` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `nAmount` bigint(20) NOT NULL COMMENT '数量',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-玩家捐赠，4-百人场开房费，5-赢家抽成，6-开房抽成，7-百人场赢家抽成，8-部长充值获得',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `sourceid` int(11) DEFAULT '0' COMMENT '分数来源，成员或其它',
  `targetid` int(11) DEFAULT '0' COMMENT '目标ID',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_CreateTime_nType` (`nClubID`,`CreateTime`,`nType`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nClubID_nGameID_nType_CreateTime` (`nClubID`,`nGameID`,`nType`,`CreateTime`),
  KEY `idx_nTableID` (`nTableID`)
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部平台积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogplatformscore_history
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogplatformscore_history`;
CREATE TABLE `table_clublogplatformscore_history` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `nAmount` bigint(20) NOT NULL COMMENT '数量',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-玩家捐赠，4-百人场开房费，5-赢家抽成，6-开房抽成，7-百人场赢家抽成，8-部长充值获得',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `sourceid` int(11) DEFAULT '0' COMMENT '分数来源，成员或其它',
  `targetid` int(11) DEFAULT '0' COMMENT '目标ID',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  PRIMARY KEY (`ID`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部平台积分变更Log历史记录表';

-- ----------------------------
-- Table structure for table_clublogscore20200201
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200201`;
CREATE TABLE `table_clublogscore20200201` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200202
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200202`;
CREATE TABLE `table_clublogscore20200202` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200203
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200203`;
CREATE TABLE `table_clublogscore20200203` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200204
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200204`;
CREATE TABLE `table_clublogscore20200204` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200205
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200205`;
CREATE TABLE `table_clublogscore20200205` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200206
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200206`;
CREATE TABLE `table_clublogscore20200206` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200207
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200207`;
CREATE TABLE `table_clublogscore20200207` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200208
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200208`;
CREATE TABLE `table_clublogscore20200208` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200209
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200209`;
CREATE TABLE `table_clublogscore20200209` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200210
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200210`;
CREATE TABLE `table_clublogscore20200210` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200211
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200211`;
CREATE TABLE `table_clublogscore20200211` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200212
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200212`;
CREATE TABLE `table_clublogscore20200212` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200213
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200213`;
CREATE TABLE `table_clublogscore20200213` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200214
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200214`;
CREATE TABLE `table_clublogscore20200214` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200215
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200215`;
CREATE TABLE `table_clublogscore20200215` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200216
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200216`;
CREATE TABLE `table_clublogscore20200216` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200217
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200217`;
CREATE TABLE `table_clublogscore20200217` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200218
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200218`;
CREATE TABLE `table_clublogscore20200218` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200219
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200219`;
CREATE TABLE `table_clublogscore20200219` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200220
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200220`;
CREATE TABLE `table_clublogscore20200220` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200301
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200301`;
CREATE TABLE `table_clublogscore20200301` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20200302
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20200302`;
CREATE TABLE `table_clublogscore20200302` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210301
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210301`;
CREATE TABLE `table_clublogscore20210301` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210302
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210302`;
CREATE TABLE `table_clublogscore20210302` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=212 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210303
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210303`;
CREATE TABLE `table_clublogscore20210303` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210304
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210304`;
CREATE TABLE `table_clublogscore20210304` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210305
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210305`;
CREATE TABLE `table_clublogscore20210305` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=48 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210306
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210306`;
CREATE TABLE `table_clublogscore20210306` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210307
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210307`;
CREATE TABLE `table_clublogscore20210307` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210308
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210308`;
CREATE TABLE `table_clublogscore20210308` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=63 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210309
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210309`;
CREATE TABLE `table_clublogscore20210309` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=130 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210310
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210310`;
CREATE TABLE `table_clublogscore20210310` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210311
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210311`;
CREATE TABLE `table_clublogscore20210311` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210312
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210312`;
CREATE TABLE `table_clublogscore20210312` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210313
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210313`;
CREATE TABLE `table_clublogscore20210313` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210314
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210314`;
CREATE TABLE `table_clublogscore20210314` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210315
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210315`;
CREATE TABLE `table_clublogscore20210315` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210316
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210316`;
CREATE TABLE `table_clublogscore20210316` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210317
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210317`;
CREATE TABLE `table_clublogscore20210317` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=55 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210318
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210318`;
CREATE TABLE `table_clublogscore20210318` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210319
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210319`;
CREATE TABLE `table_clublogscore20210319` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210320
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210320`;
CREATE TABLE `table_clublogscore20210320` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210321
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210321`;
CREATE TABLE `table_clublogscore20210321` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210322
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210322`;
CREATE TABLE `table_clublogscore20210322` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210323
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210323`;
CREATE TABLE `table_clublogscore20210323` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210324
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210324`;
CREATE TABLE `table_clublogscore20210324` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210325
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210325`;
CREATE TABLE `table_clublogscore20210325` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210326
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210326`;
CREATE TABLE `table_clublogscore20210326` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=73 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210327
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210327`;
CREATE TABLE `table_clublogscore20210327` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210328
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210328`;
CREATE TABLE `table_clublogscore20210328` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210329
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210329`;
CREATE TABLE `table_clublogscore20210329` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210330
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210330`;
CREATE TABLE `table_clublogscore20210330` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210331
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210331`;
CREATE TABLE `table_clublogscore20210331` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210401
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210401`;
CREATE TABLE `table_clublogscore20210401` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=69 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210402
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210402`;
CREATE TABLE `table_clublogscore20210402` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210403
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210403`;
CREATE TABLE `table_clublogscore20210403` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210404
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210404`;
CREATE TABLE `table_clublogscore20210404` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210405
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210405`;
CREATE TABLE `table_clublogscore20210405` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210406
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210406`;
CREATE TABLE `table_clublogscore20210406` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210407
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210407`;
CREATE TABLE `table_clublogscore20210407` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210408
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210408`;
CREATE TABLE `table_clublogscore20210408` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210409
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210409`;
CREATE TABLE `table_clublogscore20210409` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210410
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210410`;
CREATE TABLE `table_clublogscore20210410` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210411
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210411`;
CREATE TABLE `table_clublogscore20210411` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210412
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210412`;
CREATE TABLE `table_clublogscore20210412` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210413
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210413`;
CREATE TABLE `table_clublogscore20210413` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210414
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210414`;
CREATE TABLE `table_clublogscore20210414` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210415
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210415`;
CREATE TABLE `table_clublogscore20210415` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210416
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210416`;
CREATE TABLE `table_clublogscore20210416` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210417
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210417`;
CREATE TABLE `table_clublogscore20210417` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210418
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210418`;
CREATE TABLE `table_clublogscore20210418` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210419
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210419`;
CREATE TABLE `table_clublogscore20210419` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210420
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210420`;
CREATE TABLE `table_clublogscore20210420` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210421
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210421`;
CREATE TABLE `table_clublogscore20210421` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210422
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210422`;
CREATE TABLE `table_clublogscore20210422` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=209 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210423
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210423`;
CREATE TABLE `table_clublogscore20210423` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=165 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210424
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210424`;
CREATE TABLE `table_clublogscore20210424` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210425
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210425`;
CREATE TABLE `table_clublogscore20210425` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=80 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210426
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210426`;
CREATE TABLE `table_clublogscore20210426` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=113 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210427
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210427`;
CREATE TABLE `table_clublogscore20210427` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=56 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210428
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210428`;
CREATE TABLE `table_clublogscore20210428` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210429
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210429`;
CREATE TABLE `table_clublogscore20210429` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210430
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210430`;
CREATE TABLE `table_clublogscore20210430` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210701
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210701`;
CREATE TABLE `table_clublogscore20210701` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=194 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210702
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210702`;
CREATE TABLE `table_clublogscore20210702` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=457 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210703
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210703`;
CREATE TABLE `table_clublogscore20210703` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210704
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210704`;
CREATE TABLE `table_clublogscore20210704` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210705
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210705`;
CREATE TABLE `table_clublogscore20210705` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=86 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210706
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210706`;
CREATE TABLE `table_clublogscore20210706` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=595 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210707
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210707`;
CREATE TABLE `table_clublogscore20210707` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=982 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210708
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210708`;
CREATE TABLE `table_clublogscore20210708` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210709
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210709`;
CREATE TABLE `table_clublogscore20210709` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210710
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210710`;
CREATE TABLE `table_clublogscore20210710` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210711
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210711`;
CREATE TABLE `table_clublogscore20210711` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210712
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210712`;
CREATE TABLE `table_clublogscore20210712` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=117 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210713
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210713`;
CREATE TABLE `table_clublogscore20210713` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210714
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210714`;
CREATE TABLE `table_clublogscore20210714` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=36 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210715
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210715`;
CREATE TABLE `table_clublogscore20210715` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210716
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210716`;
CREATE TABLE `table_clublogscore20210716` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210717
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210717`;
CREATE TABLE `table_clublogscore20210717` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210718
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210718`;
CREATE TABLE `table_clublogscore20210718` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210719
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210719`;
CREATE TABLE `table_clublogscore20210719` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210720
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210720`;
CREATE TABLE `table_clublogscore20210720` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=77 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210721
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210721`;
CREATE TABLE `table_clublogscore20210721` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210722
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210722`;
CREATE TABLE `table_clublogscore20210722` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=498 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210723
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210723`;
CREATE TABLE `table_clublogscore20210723` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=968 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210724
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210724`;
CREATE TABLE `table_clublogscore20210724` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210725
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210725`;
CREATE TABLE `table_clublogscore20210725` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210726
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210726`;
CREATE TABLE `table_clublogscore20210726` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210727
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210727`;
CREATE TABLE `table_clublogscore20210727` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=278 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210728
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210728`;
CREATE TABLE `table_clublogscore20210728` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=815 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210729
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210729`;
CREATE TABLE `table_clublogscore20210729` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1219 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210730
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210730`;
CREATE TABLE `table_clublogscore20210730` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=969 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210731
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210731`;
CREATE TABLE `table_clublogscore20210731` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210801
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210801`;
CREATE TABLE `table_clublogscore20210801` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210802
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210802`;
CREATE TABLE `table_clublogscore20210802` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1884100000640 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210803
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210803`;
CREATE TABLE `table_clublogscore20210803` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1884200000932 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210804
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210804`;
CREATE TABLE `table_clublogscore20210804` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1884300000094 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210805
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210805`;
CREATE TABLE `table_clublogscore20210805` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1884400000046 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210806
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210806`;
CREATE TABLE `table_clublogscore20210806` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1884500000133 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210807
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210807`;
CREATE TABLE `table_clublogscore20210807` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210808
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210808`;
CREATE TABLE `table_clublogscore20210808` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210809
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210809`;
CREATE TABLE `table_clublogscore20210809` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1884800000013 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210810
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210810`;
CREATE TABLE `table_clublogscore20210810` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1884900000061 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210811
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210811`;
CREATE TABLE `table_clublogscore20210811` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1885000000209 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210812
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210812`;
CREATE TABLE `table_clublogscore20210812` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1885100000251 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210813
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210813`;
CREATE TABLE `table_clublogscore20210813` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1885200000001 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210814
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210814`;
CREATE TABLE `table_clublogscore20210814` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210815
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210815`;
CREATE TABLE `table_clublogscore20210815` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210816
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210816`;
CREATE TABLE `table_clublogscore20210816` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210817
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210817`;
CREATE TABLE `table_clublogscore20210817` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1885600000004 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210818
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210818`;
CREATE TABLE `table_clublogscore20210818` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1885700000002 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210819
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210819`;
CREATE TABLE `table_clublogscore20210819` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210820
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210820`;
CREATE TABLE `table_clublogscore20210820` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210821
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210821`;
CREATE TABLE `table_clublogscore20210821` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210822
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210822`;
CREATE TABLE `table_clublogscore20210822` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210823
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210823`;
CREATE TABLE `table_clublogscore20210823` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210824
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210824`;
CREATE TABLE `table_clublogscore20210824` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210825
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210825`;
CREATE TABLE `table_clublogscore20210825` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210826
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210826`;
CREATE TABLE `table_clublogscore20210826` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210827
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210827`;
CREATE TABLE `table_clublogscore20210827` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1886600000001 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210828
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210828`;
CREATE TABLE `table_clublogscore20210828` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210829
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210829`;
CREATE TABLE `table_clublogscore20210829` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210830
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210830`;
CREATE TABLE `table_clublogscore20210830` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210831
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210831`;
CREATE TABLE `table_clublogscore20210831` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210901
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210901`;
CREATE TABLE `table_clublogscore20210901` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1887100000002 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210902
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210902`;
CREATE TABLE `table_clublogscore20210902` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210903
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210903`;
CREATE TABLE `table_clublogscore20210903` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1887300000009 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210904
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210904`;
CREATE TABLE `table_clublogscore20210904` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210905
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210905`;
CREATE TABLE `table_clublogscore20210905` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210906
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210906`;
CREATE TABLE `table_clublogscore20210906` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210907
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210907`;
CREATE TABLE `table_clublogscore20210907` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210908
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210908`;
CREATE TABLE `table_clublogscore20210908` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210909
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210909`;
CREATE TABLE `table_clublogscore20210909` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210910
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210910`;
CREATE TABLE `table_clublogscore20210910` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1888000000001 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210911
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210911`;
CREATE TABLE `table_clublogscore20210911` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1888100000011 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210912
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210912`;
CREATE TABLE `table_clublogscore20210912` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210913
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210913`;
CREATE TABLE `table_clublogscore20210913` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1888300000001 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210914
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210914`;
CREATE TABLE `table_clublogscore20210914` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1888400000091 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210915
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210915`;
CREATE TABLE `table_clublogscore20210915` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1888500000003 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210916
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210916`;
CREATE TABLE `table_clublogscore20210916` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210917
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210917`;
CREATE TABLE `table_clublogscore20210917` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210918
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210918`;
CREATE TABLE `table_clublogscore20210918` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210919
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210919`;
CREATE TABLE `table_clublogscore20210919` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210920
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210920`;
CREATE TABLE `table_clublogscore20210920` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210921
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210921`;
CREATE TABLE `table_clublogscore20210921` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210922
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210922`;
CREATE TABLE `table_clublogscore20210922` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210923
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210923`;
CREATE TABLE `table_clublogscore20210923` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1889300000010 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210924
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210924`;
CREATE TABLE `table_clublogscore20210924` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210925
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210925`;
CREATE TABLE `table_clublogscore20210925` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210926
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210926`;
CREATE TABLE `table_clublogscore20210926` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1889600000003 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210927
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210927`;
CREATE TABLE `table_clublogscore20210927` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210928
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210928`;
CREATE TABLE `table_clublogscore20210928` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210929
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210929`;
CREATE TABLE `table_clublogscore20210929` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20210930
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20210930`;
CREATE TABLE `table_clublogscore20210930` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211001
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211001`;
CREATE TABLE `table_clublogscore20211001` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211002
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211002`;
CREATE TABLE `table_clublogscore20211002` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211003
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211003`;
CREATE TABLE `table_clublogscore20211003` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211004
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211004`;
CREATE TABLE `table_clublogscore20211004` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211005
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211005`;
CREATE TABLE `table_clublogscore20211005` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211006
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211006`;
CREATE TABLE `table_clublogscore20211006` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211007
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211007`;
CREATE TABLE `table_clublogscore20211007` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211008
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211008`;
CREATE TABLE `table_clublogscore20211008` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211009
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211009`;
CREATE TABLE `table_clublogscore20211009` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211010
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211010`;
CREATE TABLE `table_clublogscore20211010` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211011
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211011`;
CREATE TABLE `table_clublogscore20211011` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211012
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211012`;
CREATE TABLE `table_clublogscore20211012` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211013
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211013`;
CREATE TABLE `table_clublogscore20211013` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211014
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211014`;
CREATE TABLE `table_clublogscore20211014` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211015
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211015`;
CREATE TABLE `table_clublogscore20211015` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1891500000001 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211016
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211016`;
CREATE TABLE `table_clublogscore20211016` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211017
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211017`;
CREATE TABLE `table_clublogscore20211017` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211018
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211018`;
CREATE TABLE `table_clublogscore20211018` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211019
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211019`;
CREATE TABLE `table_clublogscore20211019` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211020
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211020`;
CREATE TABLE `table_clublogscore20211020` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211021
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211021`;
CREATE TABLE `table_clublogscore20211021` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211022
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211022`;
CREATE TABLE `table_clublogscore20211022` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211023
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211023`;
CREATE TABLE `table_clublogscore20211023` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211024
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211024`;
CREATE TABLE `table_clublogscore20211024` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211025
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211025`;
CREATE TABLE `table_clublogscore20211025` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1892500000011 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211026
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211026`;
CREATE TABLE `table_clublogscore20211026` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211027
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211027`;
CREATE TABLE `table_clublogscore20211027` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211028
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211028`;
CREATE TABLE `table_clublogscore20211028` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211029
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211029`;
CREATE TABLE `table_clublogscore20211029` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211030
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211030`;
CREATE TABLE `table_clublogscore20211030` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211031
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211031`;
CREATE TABLE `table_clublogscore20211031` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211101
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211101`;
CREATE TABLE `table_clublogscore20211101` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211102
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211102`;
CREATE TABLE `table_clublogscore20211102` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211103
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211103`;
CREATE TABLE `table_clublogscore20211103` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211104
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211104`;
CREATE TABLE `table_clublogscore20211104` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211105
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211105`;
CREATE TABLE `table_clublogscore20211105` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211106
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211106`;
CREATE TABLE `table_clublogscore20211106` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211107
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211107`;
CREATE TABLE `table_clublogscore20211107` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211108
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211108`;
CREATE TABLE `table_clublogscore20211108` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211109
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211109`;
CREATE TABLE `table_clublogscore20211109` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211110
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211110`;
CREATE TABLE `table_clublogscore20211110` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211111
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211111`;
CREATE TABLE `table_clublogscore20211111` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211112
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211112`;
CREATE TABLE `table_clublogscore20211112` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211113
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211113`;
CREATE TABLE `table_clublogscore20211113` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211114
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211114`;
CREATE TABLE `table_clublogscore20211114` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211115
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211115`;
CREATE TABLE `table_clublogscore20211115` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211116
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211116`;
CREATE TABLE `table_clublogscore20211116` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211117
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211117`;
CREATE TABLE `table_clublogscore20211117` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211118
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211118`;
CREATE TABLE `table_clublogscore20211118` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211119
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211119`;
CREATE TABLE `table_clublogscore20211119` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211120
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211120`;
CREATE TABLE `table_clublogscore20211120` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211121
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211121`;
CREATE TABLE `table_clublogscore20211121` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211122
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211122`;
CREATE TABLE `table_clublogscore20211122` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211123
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211123`;
CREATE TABLE `table_clublogscore20211123` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211124
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211124`;
CREATE TABLE `table_clublogscore20211124` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211125
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211125`;
CREATE TABLE `table_clublogscore20211125` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211126
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211126`;
CREATE TABLE `table_clublogscore20211126` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211127
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211127`;
CREATE TABLE `table_clublogscore20211127` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211128
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211128`;
CREATE TABLE `table_clublogscore20211128` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211129
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211129`;
CREATE TABLE `table_clublogscore20211129` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211130
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211130`;
CREATE TABLE `table_clublogscore20211130` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211208
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211208`;
CREATE TABLE `table_clublogscore20211208` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211210
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211210`;
CREATE TABLE `table_clublogscore20211210` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20211213
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20211213`;
CREATE TABLE `table_clublogscore20211213` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220101
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220101`;
CREATE TABLE `table_clublogscore20220101` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899300000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220102
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220102`;
CREATE TABLE `table_clublogscore20220102` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899400000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220103
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220103`;
CREATE TABLE `table_clublogscore20220103` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899500000013 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220104
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220104`;
CREATE TABLE `table_clublogscore20220104` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899600000009 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220105
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220105`;
CREATE TABLE `table_clublogscore20220105` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899700000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220106
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220106`;
CREATE TABLE `table_clublogscore20220106` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899800000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220107
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220107`;
CREATE TABLE `table_clublogscore20220107` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1899900000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220108
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220108`;
CREATE TABLE `table_clublogscore20220108` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900000000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220109
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220109`;
CREATE TABLE `table_clublogscore20220109` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900100000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220110
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220110`;
CREATE TABLE `table_clublogscore20220110` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900200000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220111
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220111`;
CREATE TABLE `table_clublogscore20220111` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900300000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220112
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220112`;
CREATE TABLE `table_clublogscore20220112` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900400000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220113
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220113`;
CREATE TABLE `table_clublogscore20220113` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900500000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220114
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220114`;
CREATE TABLE `table_clublogscore20220114` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900600000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220115
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220115`;
CREATE TABLE `table_clublogscore20220115` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900700000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220116
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220116`;
CREATE TABLE `table_clublogscore20220116` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900800000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220117
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220117`;
CREATE TABLE `table_clublogscore20220117` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1900900000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220118
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220118`;
CREATE TABLE `table_clublogscore20220118` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901000000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220119
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220119`;
CREATE TABLE `table_clublogscore20220119` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901100000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220120
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220120`;
CREATE TABLE `table_clublogscore20220120` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901200000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220121
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220121`;
CREATE TABLE `table_clublogscore20220121` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901300000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220122
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220122`;
CREATE TABLE `table_clublogscore20220122` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901400000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220123
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220123`;
CREATE TABLE `table_clublogscore20220123` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901500000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220124
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220124`;
CREATE TABLE `table_clublogscore20220124` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901600000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220125
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220125`;
CREATE TABLE `table_clublogscore20220125` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901700000001 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220126
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220126`;
CREATE TABLE `table_clublogscore20220126` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901800000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220127
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220127`;
CREATE TABLE `table_clublogscore20220127` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1901900000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220128
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220128`;
CREATE TABLE `table_clublogscore20220128` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902000000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220129
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220129`;
CREATE TABLE `table_clublogscore20220129` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902100000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220130
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220130`;
CREATE TABLE `table_clublogscore20220130` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902200000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220131
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220131`;
CREATE TABLE `table_clublogscore20220131` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902300000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220201
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220201`;
CREATE TABLE `table_clublogscore20220201` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902400000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220202
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220202`;
CREATE TABLE `table_clublogscore20220202` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902500000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220203
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220203`;
CREATE TABLE `table_clublogscore20220203` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902600000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220204
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220204`;
CREATE TABLE `table_clublogscore20220204` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902700000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220205
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220205`;
CREATE TABLE `table_clublogscore20220205` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902800000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220206
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220206`;
CREATE TABLE `table_clublogscore20220206` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1902900000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220207
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220207`;
CREATE TABLE `table_clublogscore20220207` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903000000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220208
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220208`;
CREATE TABLE `table_clublogscore20220208` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903100000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220209
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220209`;
CREATE TABLE `table_clublogscore20220209` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903200000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220210
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220210`;
CREATE TABLE `table_clublogscore20220210` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903300000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220211
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220211`;
CREATE TABLE `table_clublogscore20220211` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903400000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220212
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220212`;
CREATE TABLE `table_clublogscore20220212` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903500000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220213
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220213`;
CREATE TABLE `table_clublogscore20220213` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903600000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220214
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220214`;
CREATE TABLE `table_clublogscore20220214` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903700000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220215
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220215`;
CREATE TABLE `table_clublogscore20220215` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903800000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220216
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220216`;
CREATE TABLE `table_clublogscore20220216` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1903900000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220217
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220217`;
CREATE TABLE `table_clublogscore20220217` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904000000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220218
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220218`;
CREATE TABLE `table_clublogscore20220218` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904100000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220219
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220219`;
CREATE TABLE `table_clublogscore20220219` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904200000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220220
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220220`;
CREATE TABLE `table_clublogscore20220220` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904300000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220221
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220221`;
CREATE TABLE `table_clublogscore20220221` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904400000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220222
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220222`;
CREATE TABLE `table_clublogscore20220222` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904500000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220223
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220223`;
CREATE TABLE `table_clublogscore20220223` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904600000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220224
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220224`;
CREATE TABLE `table_clublogscore20220224` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904700000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220225
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220225`;
CREATE TABLE `table_clublogscore20220225` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904800000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220226
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220226`;
CREATE TABLE `table_clublogscore20220226` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1904900000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220227
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220227`;
CREATE TABLE `table_clublogscore20220227` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1905000000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clublogscore20220228
-- ----------------------------
DROP TABLE IF EXISTS `table_clublogscore20220228`;
CREATE TABLE `table_clublogscore20220228` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
  `szDesc` varchar(256) NOT NULL COMMENT '备注',
  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1905100000000 DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';

-- ----------------------------
-- Table structure for table_clubmember
-- ----------------------------
DROP TABLE IF EXISTS `table_clubmember`;
CREATE TABLE `table_clubmember` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `szNickName` varchar(64) DEFAULT NULL COMMENT '玩家昵称',
  `nLevel` tinyint(4) DEFAULT '3' COMMENT '权限（1-部长，2-管理，3-成员）默认3',
  `nStatus` tinyint(4) NOT NULL DEFAULT '1' COMMENT '状态（1-正常，2-冻结，3-退出，4-踢出，5-俱乐部解散） 默认1',
  `tJoinTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `tEixtTime` timestamp NULL DEFAULT NULL COMMENT '离开俱乐部时间',
  `nScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '积分',
  `nFreeScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '赠分',
  `nExtenRate` int(11) NOT NULL DEFAULT '0' COMMENT '推广员收益比例. 整数，需除以1000',
  `LineCode` varchar(64) DEFAULT NULL COMMENT '玩家站点信息，用于内部区分',
  `nExtenID` int(11) DEFAULT '0' COMMENT '上线用户ID',
  `tExtenBindingTime` timestamp NULL DEFAULT NULL COMMENT '绑定上线时间',
  `nExtenDivision` tinyint(4) DEFAULT '1' COMMENT '推广业绩奖励开关（0-关闭1-开启）',
  `nFreeServiceFee` tinyint(4) DEFAULT '0' COMMENT '免服务费开关（0-关闭1-开启）',
  `nSafeScore` bigint(20) unsigned DEFAULT '0' COMMENT '保险柜',
  `updateScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '增加的分数',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `nExLevel` int(10) NOT NULL DEFAULT '1' COMMENT '代理等级(默认值1)',
  PRIMARY KEY (`ID`),
  KEY `index_tJoinTime` (`tJoinTime`),
  KEY `idx_nLevel` (`nLevel`),
  KEY `idx_nPlayerID_nClubID_nStatus` (`nPlayerID`,`nClubID`,`nStatus`),
  KEY `idx_nClubID_nExtenID` (`nClubID`,`nExtenID`)
) ENGINE=InnoDB AUTO_INCREMENT=67128 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部成员表';

-- ----------------------------
-- Table structure for table_clubmemberappline
-- ----------------------------
DROP TABLE IF EXISTS `table_clubmemberappline`;
CREATE TABLE `table_clubmemberappline` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nNextID` int(11) DEFAULT '0' COMMENT '下线用户ID',
  `tJoinTime` timestamp NOT NULL COMMENT '加入时间',
  PRIMARY KEY (`ID`),
  KEY `index_nPlayerID_tJoinTime` (`nPlayerID`,`tJoinTime`)
) ENGINE=InnoDB AUTO_INCREMENT=11053 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部App代理线成员表';

-- ----------------------------
-- Table structure for table_club_cc
-- ----------------------------
DROP TABLE IF EXISTS `table_club_cc`;
CREATE TABLE `table_club_cc` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nGameId` int(11) NOT NULL COMMENT '游戏ID',
  `nCode` int(11) NOT NULL COMMENT '服务费代码: 90-单局赢家服务费, 91-单局庄家服务费, 92-总局赢家服务费, 93-带入服务费, 94-参与服务费, 100-特殊牌型-无牛, 101-特殊牌型-牛一, 102-特殊牌型-牛二,103-特殊牌型-牛三, 104-特殊牌型-牛四, 105-特殊牌型-牛五, 106-特殊牌型-牛六, 107-特殊牌型-牛七, 108-特殊牌型-牛八, 109-特殊牌型-牛九, 110-特殊牌型-牛牛, 111-特殊牌型-五花牛, 112-特殊牌型-炸弹牛, 113-特殊牌型-五小牛',
  `nTaxRate` int(11) NOT NULL COMMENT '税率-整数，需除以1000',
  `szDesc` varchar(64) NOT NULL COMMENT '备注',
  `nStatus` tinyint(4) DEFAULT '1' COMMENT '状态(0-无效，1-有效)',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_nGameID` (`nGameId`)
) ENGINE=InnoDB AUTO_INCREMENT=4165 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部服务费配置表';

-- ----------------------------
-- Table structure for table_club_cc_low
-- ----------------------------
DROP TABLE IF EXISTS `table_club_cc_low`;
CREATE TABLE `table_club_cc_low` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nGameId` int(11) NOT NULL COMMENT '游戏ID',
  `nCode` int(11) NOT NULL COMMENT '服务费代码(见定义表，单局和总局才用此表)',
  `nTaxRate` int(11) NOT NULL COMMENT '税率-整数，需除以1000',
  `szDesc` varchar(64) NOT NULL COMMENT '备注',
  `nStatus` tinyint(4) DEFAULT '1' COMMENT '状态(0-无效，1-有效)',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_nGameID` (`nGameId`)
) ENGINE=InnoDB AUTO_INCREMENT=1394 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部服务费配置表（1000以下,目前只有单局和总局）';

-- ----------------------------
-- Table structure for table_club_custom_msg
-- ----------------------------
DROP TABLE IF EXISTS `table_club_custom_msg`;
CREATE TABLE `table_club_custom_msg` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `nPlayerID` int(10) NOT NULL COMMENT '玩家ID',
  `nClubID` int(10) NOT NULL COMMENT '提交意见当时所有俱乐部ID',
  `szMsg` varchar(256) NOT NULL DEFAULT '' COMMENT '提交消息',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=283 DEFAULT CHARSET=utf8mb4 COMMENT='用户反馈信息表';

-- ----------------------------
-- Table structure for table_club_exswitch_config
-- ----------------------------
DROP TABLE IF EXISTS `table_club_exswitch_config`;
CREATE TABLE `table_club_exswitch_config` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nType` int(11) NOT NULL COMMENT '功能类型：1-是否可以搓牌, 2-是否自动通过加俱乐部',
  `nStatus` tinyint(4) NOT NULL DEFAULT '0' COMMENT '开关状态(0-无效，1-有效)',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_nType` (`nClubID`,`nType`)
) ENGINE=InnoDB AUTO_INCREMENT=3667 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部扩展开关配置表';

-- ----------------------------
-- Table structure for table_club_exten_config
-- ----------------------------
DROP TABLE IF EXISTS `table_club_exten_config`;
CREATE TABLE `table_club_exten_config` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID （0-基础模板）',
  `nAmountLow` int(11) NOT NULL COMMENT '金额下限',
  `nAmountHigh` int(11) NOT NULL COMMENT '金额上限',
  `nExtenRate` int(11) NOT NULL COMMENT '分成比例. 整数，需除以1000',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=305 DEFAULT CHARSET=utf8mb4 COMMENT='推广收益分成比例配置表';

-- ----------------------------
-- Table structure for table_club_flow_data
-- ----------------------------
DROP TABLE IF EXISTS `table_club_flow_data`;
CREATE TABLE `table_club_flow_data` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(10) unsigned NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(10) unsigned NOT NULL COMMENT '用户ID',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `nStatus` tinyint(4) DEFAULT '1' COMMENT '0-已无效(已达到有效流水,可不用检测) 1-有效（还需检测流水数量）',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_nPlayerID` (`nPlayerID`)
) ENGINE=InnoDB AUTO_INCREMENT=1105 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_club_game_cfg
-- ----------------------------
DROP TABLE IF EXISTS `table_club_game_cfg`;
CREATE TABLE `table_club_game_cfg` (
  `ID` int(10) NOT NULL AUTO_INCREMENT,
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型: 1-牛牛, 2-三公, 3-炸金花, 4-百家乐, 5-干瞪眼, 6-五子棋, 7-捕鱼',
  `nStatus` tinyint(4) DEFAULT '0' COMMENT '状态(0-不可见，1-可见)',
  `nDuDiamondMode` tinyint(4) DEFAULT '2' COMMENT '扣钻模式(0-代入扣钻，1-每局扣, 2-每局固定扣钻)',
  `nextStatus` int(11) DEFAULT '1' COMMENT '下级游戏开关配置',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=41386 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部游戏配置表';

-- ----------------------------
-- Table structure for table_club_game_dudiamond_rate
-- ----------------------------
DROP TABLE IF EXISTS `table_club_game_dudiamond_rate`;
CREATE TABLE `table_club_game_dudiamond_rate` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID （0-表示模板）',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型（见定义表）',
  `nScore` int(11) NOT NULL COMMENT '底分',
  `nDuDiamondMode` tinyint(4) DEFAULT '2' COMMENT '扣钻模式（对应table_club_game_cfg中字段）',
  `nDuDiamondRate` int(11) NOT NULL COMMENT '扣钻比例 整数，需除以1000',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_nGameType_nScore_nDuDiamondMode` (`nClubID`,`nGameType`,`nScore`,`nDuDiamondMode`)
) ENGINE=InnoDB AUTO_INCREMENT=773 DEFAULT CHARSET=utf8mb4 COMMENT='牛牛每局扣钻底分比例配置表';

-- ----------------------------
-- Table structure for table_club_hundred_cc
-- ----------------------------
DROP TABLE IF EXISTS `table_club_hundred_cc`;
CREATE TABLE `table_club_hundred_cc` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) DEFAULT NULL COMMENT '俱乐部ID',
  `nGameID` int(11) DEFAULT NULL COMMENT '游戏ID',
  `nHundredType` tinyint(4) DEFAULT NULL COMMENT '1-初级2-中级3-高级',
  `nCode` int(11) DEFAULT NULL COMMENT '服务费代码',
  `nTaxRate` int(11) DEFAULT NULL COMMENT '税率(整数，需除以1000)',
  `szDesc` varchar(64) DEFAULT NULL COMMENT '备注',
  `nStatus` tinyint(4) DEFAULT NULL COMMENT '状态(0-无效，1-有效)',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_nGameID` (`nGameID`)
) ENGINE=InnoDB AUTO_INCREMENT=297 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_club_hundred_cfg
-- ----------------------------
DROP TABLE IF EXISTS `table_club_hundred_cfg`;
CREATE TABLE `table_club_hundred_cfg` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) DEFAULT NULL COMMENT '俱乐部ID',
  `nGameType` int(11) DEFAULT NULL COMMENT '游戏类型（见定义表）',
  `nHundredType` tinyint(4) DEFAULT NULL COMMENT '1-初级 2-中级 3-高级',
  `nOpen` tinyint(4) DEFAULT '0' COMMENT '场的开关(1-开启 0-关闭,默认0)',
  `nAllowPlayBank` tinyint(4) DEFAULT '0' COMMENT '允许用户上庄(1-开启 0-关闭,默认0)',
  `nEmptySysBank` tinyint(4) DEFAULT '0' COMMENT '无人上庄时系统上庄(1-开启 0-关闭,默认0)',
  `nMaxUnionBankNum` int(10) DEFAULT NULL COMMENT '最大联合上庄人数',
  `nUnBankValSysWin` bigint(20) DEFAULT NULL COMMENT '系统盈利自动下庄值',
  `nUnBankValSysLose` bigint(20) DEFAULT NULL COMMENT '系统亏损自动下庄值',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=69 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_club_hundred_dudiamond_cfg
-- ----------------------------
DROP TABLE IF EXISTS `table_club_hundred_dudiamond_cfg`;
CREATE TABLE `table_club_hundred_dudiamond_cfg` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID，自增',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型（见定义表）',
  `nHundredType` tinyint(4) NOT NULL COMMENT '1-初级2-中级3-高级',
  `nAmount` int(11) NOT NULL DEFAULT '0' COMMENT '扣钻数量',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_club_hundred_free_charge
-- ----------------------------
DROP TABLE IF EXISTS `table_club_hundred_free_charge`;
CREATE TABLE `table_club_hundred_free_charge` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID，自增',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部Id',
  `nGameID` int(11) NOT NULL COMMENT '游戏ID',
  `nHundredType` tinyint(11) NOT NULL COMMENT '1-初级,2-中级,3-高级',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nStatus` tinyint(4) NOT NULL DEFAULT '0' COMMENT '免服务费开关（0-关闭1-开启）',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_nGameID` (`nGameID`),
  KEY `idx_nPlayerID` (`nPlayerID`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部百人场免服务费用户表';

-- ----------------------------
-- Table structure for table_club_info_notauthority
-- ----------------------------
DROP TABLE IF EXISTS `table_club_info_notauthority`;
CREATE TABLE `table_club_info_notauthority` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nLevel` tinyint(4) NOT NULL COMMENT '权限类型',
  `nStatus` tinyint(4) NOT NULL COMMENT '状态(1:正常，2:无效)',
  `CreateTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `tModifyTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`,`nLevel`,`nStatus`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=167 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部不使用权限表';

-- ----------------------------
-- Table structure for table_club_match_game_cfg
-- ----------------------------
DROP TABLE IF EXISTS `table_club_match_game_cfg`;
CREATE TABLE `table_club_match_game_cfg` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `nClubID` int(11) NOT NULL DEFAULT '0' COMMENT '俱乐部ID',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型（斗地主比赛场-80）',
  `nMatchType` int(11) NOT NULL COMMENT '比赛类型: 1-人满开赛',
  `nServerID` int(10) NOT NULL COMMENT '比赛子类型：8001-斗地主免费赛场,8002-斗地主青铜赛场,8003-斗地主白银赛场,8004-斗地主黄金赛场,8005-斗地主钻石赛场',
  `nStatus` tinyint(4) NOT NULL COMMENT '状态:0-开启,1-关闭',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部比赛开关配置表';

-- ----------------------------
-- Table structure for table_club_member_authority
-- ----------------------------
DROP TABLE IF EXISTS `table_club_member_authority`;
CREATE TABLE `table_club_member_authority` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nLevel` tinyint(4) DEFAULT '0' COMMENT '权限类型1- 赠送积分2- 踢人3- 同意加入4- 修改分成5-扣除积分',
  `nStatus` tinyint(4) DEFAULT '1' COMMENT '状态（1-正常，2-无效） 默认:1',
  `tCreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `tModifyTime` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_nLevel` (`nLevel`),
  KEY `idx_nStatus` (`nStatus`)
) ENGINE=InnoDB AUTO_INCREMENT=3821 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部成员权限表';

-- ----------------------------
-- Table structure for table_club_task_clubdata
-- ----------------------------
DROP TABLE IF EXISTS `table_club_task_clubdata`;
CREATE TABLE `table_club_task_clubdata` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `szTaskName` varchar(32) NOT NULL DEFAULT '' COMMENT '任务名称',
  `nTaskID` int(11) NOT NULL COMMENT '任务ID',
  `nStatus` tinyint(4) NOT NULL COMMENT '状态: 0-无效, 1-有效',
  `szDesc` varchar(128) DEFAULT '' COMMENT '描述',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `ModifyTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_nTaskID` (`nClubID`,`nTaskID`)
) ENGINE=InnoDB AUTO_INCREMENT=208 DEFAULT CHARSET=utf8mb4 COMMENT='各俱乐部任务设置情况表';

-- ----------------------------
-- Table structure for table_club_task_complete
-- ----------------------------
DROP TABLE IF EXISTS `table_club_task_complete`;
CREATE TABLE `table_club_task_complete` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `szNickName` varchar(64) NOT NULL DEFAULT '' COMMENT '用户名',
  `nTaskID` int(11) NOT NULL COMMENT '任务ID',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型ID',
  `Amount` bigint(20) DEFAULT '0' COMMENT '游戏积分奖励额',
  `EAmount` bigint(20) DEFAULT '0' COMMENT '资讯积分奖励额',
  `szMask` varchar(64) NOT NULL DEFAULT '' COMMENT '备注',
  `szMask1` varchar(64) NOT NULL DEFAULT '' COMMENT '备注1',
  `szMask2` varchar(32) NOT NULL DEFAULT '' COMMENT '备注2',
  `tFinishTime` timestamp NULL DEFAULT NULL COMMENT '领奖完成时间(新房卡)',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '记录时间(H5领奖时间，新房卡表示完成时间)',
  `nProperty` tinyint(4) NOT NULL DEFAULT '1' COMMENT '类型：（默认1）1-任务, 2-活动',
  `nAwardType` tinyint(4) NOT NULL DEFAULT '0' COMMENT '领奖标志：0 –未领，1-已领',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tCreateTime` (`nClubID`,`tCreateTime`),
  KEY `idx_nPlayerID_nClubID` (`nPlayerID`,`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=7842 DEFAULT CHARSET=utf8mb4 COMMENT='完成任务记录表';

-- ----------------------------
-- Table structure for table_club_task_complete_test
-- ----------------------------
DROP TABLE IF EXISTS `table_club_task_complete_test`;
CREATE TABLE `table_club_task_complete_test` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `szNickName` varchar(64) NOT NULL DEFAULT '' COMMENT '用户名',
  `nTaskID` int(11) NOT NULL COMMENT '任务ID',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型ID',
  `Amount` bigint(20) DEFAULT '0' COMMENT '游戏积分奖励额',
  `EAmount` bigint(20) DEFAULT '0' COMMENT '资讯积分奖励额',
  `szMask` varchar(64) NOT NULL DEFAULT '' COMMENT '备注',
  `szMask1` varchar(64) NOT NULL DEFAULT '' COMMENT '备注1',
  `szMask2` varchar(32) NOT NULL DEFAULT '' COMMENT '备注2',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '记录时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tCreateTime` (`nClubID`,`tCreateTime`),
  KEY `idx_nPlayerID_nClubID` (`nPlayerID`,`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=4776 DEFAULT CHARSET=utf8mb4 COMMENT='完成任务记录表';

-- ----------------------------
-- Table structure for table_club_task_player_data
-- ----------------------------
DROP TABLE IF EXISTS `table_club_task_player_data`;
CREATE TABLE `table_club_task_player_data` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注额',
  `TaskData` text COMMENT '用户任务情况的JSON数据',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_nClubID` (`nPlayerID`,`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=21422 DEFAULT CHARSET=utf8mb4 COMMENT='用户任务情况表';

-- ----------------------------
-- Table structure for table_club_task_recdata
-- ----------------------------
DROP TABLE IF EXISTS `table_club_task_recdata`;
CREATE TABLE `table_club_task_recdata` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTaskID` int(11) NOT NULL COMMENT '任务ID',
  `Amount` bigint(20) DEFAULT '0' COMMENT '金额',
  `currentBet` bigint(20) DEFAULT '0' COMMENT '记录时投注额',
  `targetBet` bigint(20) DEFAULT '0' COMMENT '达到完成投注额',
  `lockFlag` tinyint(4) NOT NULL COMMENT '锁定标记: 0-非锁定, 1-锁定',
  `doneFlag` tinyint(4) NOT NULL COMMENT '已完成标记: 0-未完成, 1-已完成',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_nClubID` (`nPlayerID`,`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=40675 DEFAULT CHARSET=utf8mb4 COMMENT='任务记录表';

-- ----------------------------
-- Table structure for table_companyaudit
-- ----------------------------
DROP TABLE IF EXISTS `table_companyaudit`;
CREATE TABLE `table_companyaudit` (
  `Id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `AccountName` varchar(36) DEFAULT NULL COMMENT '代理商名称',
  `Money` decimal(18,2) DEFAULT NULL COMMENT '提现金额(单位分)',
  `State` int(11) DEFAULT NULL COMMENT '1待支付；2已支付',
  `CreateTime` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `PayDate` timestamp NULL DEFAULT NULL COMMENT '支付时间',
  `EnterPriseId` varchar(36) DEFAULT NULL COMMENT '代理商ID',
  `nPlayerId` int(11) DEFAULT NULL COMMENT '玩家ID',
  `Remark` varchar(400) DEFAULT NULL COMMENT '备注',
  `Out_trade_no` varchar(200) DEFAULT NULL COMMENT '内部订单号',
  `Prepay_no` varchar(200) DEFAULT NULL COMMENT '微信订单号',
  PRIMARY KEY (`Id`),
  KEY `idx_EnterPriseId` (`EnterPriseId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_diamondactionlog
-- ----------------------------
DROP TABLE IF EXISTS `table_diamondactionlog`;
CREATE TABLE `table_diamondactionlog` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `AccountId` int(11) NOT NULL COMMENT '账号ID',
  `szNickName` varchar(64) DEFAULT NULL COMMENT '昵称',
  `Count` int(11) NOT NULL COMMENT '变化数量',
  `szRemark` varchar(300) DEFAULT NULL COMMENT '备注',
  `ActionDate` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  PRIMARY KEY (`ID`),
  KEY `idx_Table_DiamondActionLog` (`AccountId`,`ActionDate`)
) ENGINE=InnoDB AUTO_INCREMENT=15017 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_finance_record
-- ----------------------------
DROP TABLE IF EXISTS `table_finance_record`;
CREATE TABLE `table_finance_record` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `nPlatformID` int(11) NOT NULL COMMENT '平台ID（1-Fengyun 2-Ting）',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `szOrder` varchar(128) NOT NULL DEFAULT '' COMMENT '订单号',
  `amount` bigint(20) NOT NULL DEFAULT '0' COMMENT '余额',
  `nType` int(11) NOT NULL COMMENT '1-提现 2-充值',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `userData` text COMMENT '用户银行信息 json (从我方数据库中获取)',
  `callbackData` text COMMENT '接口返回的json',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_tCreateTime` (`tCreateTime`),
  KEY `idx_nPlatformID_tCreateTime` (`nPlatformID`,`tCreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COMMENT='账务数据表';

-- ----------------------------
-- Table structure for table_game_config
-- ----------------------------
DROP TABLE IF EXISTS `table_game_config`;
CREATE TABLE `table_game_config` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `KindID` int(11) NOT NULL COMMENT '游戏ID',
  `GameName` varchar(50) NOT NULL COMMENT '用户ID',
  `IconUrl` varchar(256) NOT NULL COMMENT '图标URL',
  PRIMARY KEY (`ID`),
  KEY `idx_KindID` (`KindID`)
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8mb4 COMMENT='游戏配置表（针对全局游戏配置）';

-- ----------------------------
-- Table structure for table_homecheck
-- ----------------------------
DROP TABLE IF EXISTS `table_homecheck`;
CREATE TABLE `table_homecheck` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增索引',
  `settype` varchar(32) NOT NULL DEFAULT '' COMMENT '设备类型',
  `browsertype` varchar(32) NOT NULL DEFAULT '' COMMENT '浏览器类型',
  `spreadtype` varchar(32) NOT NULL DEFAULT '' COMMENT '传播媒体类型',
  `createtime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '提交时间',
  `ip` varchar(64) NOT NULL DEFAULT '' COMMENT '当时的IP地址',
  `region` varchar(128) NOT NULL DEFAULT '' COMMENT '地区',
  `downtime` timestamp NULL DEFAULT NULL COMMENT '下载时间',
  `ifdown` int(11) NOT NULL DEFAULT '0' COMMENT '1: 已下载',
  `Pm` int(11) NOT NULL DEFAULT '0' COMMENT '俱乐部ID',
  `pid` int(11) NOT NULL DEFAULT '0' COMMENT '上级ID',
  `twoLevelId` int(11) NOT NULL DEFAULT '0' COMMENT 'App二级会员代理Id',
  PRIMARY KEY (`ID`),
  KEY `idx_settype_downtime` (`settype`,`downtime`),
  KEY `idx_ifdown_downtime` (`ifdown`,`downtime`),
  KEY `idx_createtime` (`createtime`)
) ENGINE=InnoDB AUTO_INCREMENT=816 DEFAULT CHARSET=utf8mb4 COMMENT='下载页检测表';

-- ----------------------------
-- Table structure for table_jackpot_club_info
-- ----------------------------
DROP TABLE IF EXISTS `table_jackpot_club_info`;
CREATE TABLE `table_jackpot_club_info` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部id',
  `jackpotIndex` int(11) NOT NULL DEFAULT '1' COMMENT '奖池序号',
  `jackpotNumber` int(11) NOT NULL DEFAULT '0' COMMENT '当期奖池期号',
  `jackpotNumberLast` int(11) NOT NULL DEFAULT '0' COMMENT '上期奖池期号',
  `jackpot` int(11) NOT NULL DEFAULT '0' COMMENT '当前奖池金额',
  `nValid` int(11) NOT NULL DEFAULT '1' COMMENT '状态:1-开启,0-关闭',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_croatian_ci COMMENT='俱乐部奖池信息';

-- ----------------------------
-- Table structure for table_jackpot_tickets
-- ----------------------------
DROP TABLE IF EXISTS `table_jackpot_tickets`;
CREATE TABLE `table_jackpot_tickets` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部id',
  `nPlayerId` int(11) NOT NULL COMMENT '玩家id',
  `jackpotNumber` int(11) NOT NULL COMMENT '奖池期号',
  `ticketNumber` bigint(20) NOT NULL COMMENT '奖券号码',
  `level` int(11) NOT NULL DEFAULT '0' COMMENT '奖励等级',
  `award` int(11) NOT NULL DEFAULT '0' COMMENT '奖励金额',
  `state` int(11) NOT NULL DEFAULT '0' COMMENT '奖券状态',
  `drawFlag` int(11) NOT NULL DEFAULT '0' COMMENT '领取表示',
  `validTime` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '有效时间',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COMMENT='奖券';

-- ----------------------------
-- Table structure for table_jscore_log
-- ----------------------------
DROP TABLE IF EXISTS `table_jscore_log`;
CREATE TABLE `table_jscore_log` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerId` int(10) NOT NULL DEFAULT '0' COMMENT '用户ID',
  `nSourceID` int(11) NOT NULL DEFAULT '0' COMMENT '来源ID（可能是下线贡献的积分或后台操作人员ID）默认0',
  `nAmount` bigint(20) NOT NULL DEFAULT '0' COMMENT '变动积分',
  `nScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '变动后积分',
  `nType` int(10) NOT NULL COMMENT '类型',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `szMark` varchar(256) NOT NULL DEFAULT '' COMMENT '地址',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerId` (`nPlayerId`),
  KEY `idx_tCreateTime` (`tCreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=69 DEFAULT CHARSET=utf8mb4 COMMENT='拓新模块用户积分变动表';

-- ----------------------------
-- Table structure for table_jscore_shopinfo
-- ----------------------------
DROP TABLE IF EXISTS `table_jscore_shopinfo`;
CREATE TABLE `table_jscore_shopinfo` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nShopID` int(11) NOT NULL DEFAULT '0' COMMENT '商品ID',
  `szName` varchar(64) NOT NULL DEFAULT '' COMMENT '商品名称',
  `nType` tinyint(4) NOT NULL COMMENT '类型 ：1 游戏物品，2-虚拟商品，3-生活用品，4-电子数码',
  `nOrder` int(11) NOT NULL COMMENT '显示顺序（用于客户端商城的显示顺序）',
  `szURL` varchar(128) NOT NULL DEFAULT '' COMMENT '图片地址',
  `nPrice` int(11) NOT NULL COMMENT '价格',
  `nGoodsID` int(11) NOT NULL COMMENT '钻石，道具ID等,如果是实物则为0,2000 代表钻石',
  `nGoodsAmount` int(11) NOT NULL COMMENT '物品的数量',
  `nStock` int(11) NOT NULL COMMENT '库存',
  `szExplain` varchar(256) NOT NULL DEFAULT '' COMMENT '商品描述',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `nStatus` tinyint(4) NOT NULL DEFAULT '1' COMMENT '状态 0-下架 1-上架',
  PRIMARY KEY (`ID`),
  KEY `idx_nShopID` (`nShopID`),
  KEY `idx_tCreateTime` (`tCreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='拓新模块商品信息表';

-- ----------------------------
-- Table structure for table_jscore_shop_exchange
-- ----------------------------
DROP TABLE IF EXISTS `table_jscore_shop_exchange`;
CREATE TABLE `table_jscore_shop_exchange` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL DEFAULT '0' COMMENT '用户ID',
  `nShopID` int(11) NOT NULL DEFAULT '0' COMMENT '商品ID',
  `nType` tinyint(4) NOT NULL COMMENT '类型 ：1 游戏物品，2-虚拟商品，3-生活用品，4-电子数码',
  `nAmount` int(11) NOT NULL COMMENT '数量',
  `nScore` int(11) NOT NULL COMMENT '所需积分（应在兑换时扣除）',
  `nStatus` tinyint(4) NOT NULL COMMENT '状态 ：0-等待处理 1-成功 2-失败',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `tModifyTime` timestamp NULL DEFAULT NULL COMMENT '后台修改时间',
  `szMark` varchar(256) NOT NULL DEFAULT '' COMMENT '备注',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerId` (`nPlayerID`),
  KEY `idx_nShopID` (`nShopID`),
  KEY `idx_tCreateTime` (`tCreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8mb4 COMMENT='拓新模块商品兑换表';

-- ----------------------------
-- Table structure for table_jscore_task_complete
-- ----------------------------
DROP TABLE IF EXISTS `table_jscore_task_complete`;
CREATE TABLE `table_jscore_task_complete` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL DEFAULT '0' COMMENT '用户ID',
  `nTaskID` int(10) NOT NULL DEFAULT '0' COMMENT '任务ID',
  `nAmount` int(10) NOT NULL DEFAULT '0' COMMENT '奖励积分',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `tFinishTime` timestamp NULL DEFAULT NULL COMMENT '领奖时间',
  `nAwardType` tinyint(4) NOT NULL DEFAULT '0' COMMENT '领奖标志 0 –未领 1-已领',
  `szMark` varchar(256) NOT NULL DEFAULT '' COMMENT '备注',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerId` (`nPlayerID`),
  KEY `idx_tCreateTime` (`tCreateTime`),
  KEY `idx_tFinishTime` (`tFinishTime`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COMMENT='拓新模块用户任务完成表';

-- ----------------------------
-- Table structure for table_jscore_task_config
-- ----------------------------
DROP TABLE IF EXISTS `table_jscore_task_config`;
CREATE TABLE `table_jscore_task_config` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nTaskID` int(10) NOT NULL DEFAULT '0' COMMENT '任务ID',
  `szTaskName` varchar(64) NOT NULL DEFAULT '' COMMENT '任务名称',
  `nValue` int(11) NOT NULL DEFAULT '0' COMMENT '任务参数（例如X局，XX积分等）',
  `nScore` int(11) NOT NULL DEFAULT '0' COMMENT '任务奖励的积分数量',
  `nStatus` tinyint(4) NOT NULL COMMENT '状态 ：0-禁用 1-生效',
  `szMark` varchar(256) NOT NULL DEFAULT '' COMMENT '备注',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4 COMMENT='拓新模块任务信息表';

-- ----------------------------
-- Table structure for table_jscore_user
-- ----------------------------
DROP TABLE IF EXISTS `table_jscore_user`;
CREATE TABLE `table_jscore_user` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerId` int(10) NOT NULL DEFAULT '0' COMMENT '用户ID',
  `nExtenID` int(11) NOT NULL DEFAULT '0' COMMENT '上线ID',
  `nExtenLimit` tinyint(4) NOT NULL DEFAULT '0' COMMENT '给上线贡献是否已达到限制：0-未达到 1-已达到',
  `nScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '积分账户',
  `szTaskData` text COMMENT '任务有关数据',
  `szName` varchar(64) NOT NULL DEFAULT '' COMMENT '姓名',
  `phone` varchar(32) NOT NULL DEFAULT '' COMMENT '手机',
  `address` varchar(256) NOT NULL DEFAULT '' COMMENT '地址',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerId` (`nPlayerId`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8mb4 COMMENT='拓新模块用户关系表';

-- ----------------------------
-- Table structure for table_league_club_application
-- ----------------------------
DROP TABLE IF EXISTS `table_league_club_application`;
CREATE TABLE `table_league_club_application` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '申请时间',
  `nStatus` tinyint(4) NOT NULL COMMENT '状态（1-申请，2-通过，3-拒绝）',
  `nOpID` int(11) DEFAULT '0' COMMENT '操作人ID',
  `tOperationTime` timestamp NULL DEFAULT NULL COMMENT '回应时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_CreateTime` (`nClubID`,`CreateTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=498 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部申请表';

-- ----------------------------
-- Table structure for table_league_club_diamond_log
-- ----------------------------
DROP TABLE IF EXISTS `table_league_club_diamond_log`;
CREATE TABLE `table_league_club_diamond_log` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nKindID` int(10) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nDiamond` bigint(20) NOT NULL COMMENT '变动数量',
  `nClubDiamond` bigint(20) NOT NULL COMMENT '变动后俱乐部的钻石',
  `nType` int(11) NOT NULL COMMENT '变化类型: 1-部长往俱乐部充值钻石, 2-部长从俱乐部提取钻石, 3-俱乐部开房消耗, 11-俱乐部房退钻',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `szRemark` varchar(256) NOT NULL DEFAULT '' COMMENT '备注',
  `szToken` varchar(32) NOT NULL DEFAULT '' COMMENT '订单号: 俱乐部号-时间-房间号',
  `nTokenState` int(11) NOT NULL DEFAULT '0' COMMENT '订单状态:0-初始 1-进行中 2-已完成 (默认0)',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=34593 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部钻石变动记录表';

-- ----------------------------
-- Table structure for table_league_club_game_score_detail
-- ----------------------------
DROP TABLE IF EXISTS `table_league_club_game_score_detail`;
CREATE TABLE `table_league_club_game_score_detail` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nKindID` int(11) NOT NULL COMMENT '游戏ID',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏类型（1-麻将，2-纸牌，3-字牌）',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '参与人数',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) NOT NULL COMMENT '椅子ID',
  `szToken` varchar(64) NOT NULL DEFAULT '' COMMENT 'clubid-roomid-time(与明细表对应)',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nResult` int(11) NOT NULL COMMENT '玩家ID',
  `nBankID` int(11) NOT NULL COMMENT '玩家ID',
  `nPlayBackCode` varchar(32) NOT NULL DEFAULT '' COMMENT '回放码',
  PRIMARY KEY (`ID`),
  KEY `idx_szToken` (`szToken`),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nPlayerId` (`nPlayerID`)
) ENGINE=InnoDB AUTO_INCREMENT=108347 DEFAULT CHARSET=utf8mb4 COMMENT='明细战绩表（按游戏类型分麻将，字牌，纸牌，按人数分类）';

-- ----------------------------
-- Table structure for table_league_club_game_score_total
-- ----------------------------
DROP TABLE IF EXISTS `table_league_club_game_score_total`;
CREATE TABLE `table_league_club_game_score_total` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nKindID` int(11) NOT NULL COMMENT '游戏ID',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏类型（1-麻将，2-纸牌，3-字牌）',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '参与人数',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nExtenID` int(11) DEFAULT '0' COMMENT '上线用户ID(当成为合伙人的下线时)',
  `szToken` varchar(64) NOT NULL DEFAULT '' COMMENT 'clubid-roomid-time(与明细表对应)',
  `nRound` int(11) NOT NULL COMMENT '局数 (注意这里是设定打多少局，不是实际打的局数，实际可能提前解散)',
  `tStartTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '开始时间',
  `nTotalResult` int(11) NOT NULL COMMENT '总成绩',
  `nLeCard` int(11) NOT NULL COMMENT '乐卡消耗',
  `BigWinner` tinyint(4) NOT NULL DEFAULT '0' COMMENT '大赢家标志（0-否 1-是)',
  `nUpvote` tinyint(4) NOT NULL DEFAULT '0' COMMENT '点赞（0-否 1-是)',
  `Dismiss` tinyint(4) NOT NULL COMMENT '解散状态: 0-未选择, 1-发起, 2-同意, 3-拒绝, 4-管理员解散',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '写入时间',
  `nFake` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否为空局（1局未完解散）',
  `szInfo` varchar(256) NOT NULL DEFAULT '' COMMENT '房间信息',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerId_tStartTime` (`nPlayerID`,`tStartTime`) USING BTREE,
  KEY `szToken` (`szToken`) USING BTREE,
  KEY `idx_nClubID_tStartTime` (`nClubID`,`tStartTime`),
  KEY `idx_tCreateTime` (`tCreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=85628 DEFAULT CHARSET=utf8mb4 COMMENT='总战绩表（须记录点赞）';

-- ----------------------------
-- Table structure for table_league_club_info
-- ----------------------------
DROP TABLE IF EXISTS `table_league_club_info`;
CREATE TABLE `table_league_club_info` (
  `nClubID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '俱乐部ID',
  `nIcon` int(11) NOT NULL DEFAULT '0' COMMENT '图标',
  `szClubName` varchar(32) NOT NULL DEFAULT '' COMMENT '俱乐部名字',
  `FirstChangeName` tinyint(4) NOT NULL DEFAULT '0' COMMENT '首次改名标志（0-未改过 1-已改过）默认0',
  `nDiamond` bigint(20) NOT NULL DEFAULT '0' COMMENT '俱乐部钻石',
  `nStatus` tinyint(4) NOT NULL COMMENT '状态(1-正常，2-冻结，3-解散)',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `EndTime` timestamp NULL DEFAULT NULL COMMENT '解散时间',
  `CreatePlayerID` int(11) NOT NULL COMMENT '创建者ID',
  `AutoRecharge` tinyint(4) NOT NULL DEFAULT '0' COMMENT '自动充值(0-否 1-是) 默认0',
  `AutoRechargeAmount` int(11) NOT NULL DEFAULT '0' COMMENT '自动充值的数量',
  `szNoteMsg` varchar(256) NOT NULL DEFAULT '' COMMENT '俱乐部公告',
  `szAuth` varchar(32) NOT NULL DEFAULT '00000000000000000000000000000000' COMMENT '俱乐部给予管理员的权限(默认32个0)',
  `szClubAuth` varchar(32) NOT NULL DEFAULT '00000000000000000000000000000000' COMMENT '俱乐部开关标志(默认32个0)',
  `diamondCostType` int(11) NOT NULL DEFAULT '1' COMMENT '俱乐部扣钻类型 1-族长支付 2-钻石均摊',
  PRIMARY KEY (`nClubID`),
  KEY `idx_CreatePlayerID` (`CreatePlayerID`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=666132 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部表';

-- ----------------------------
-- Table structure for table_league_club_member
-- ----------------------------
DROP TABLE IF EXISTS `table_league_club_member`;
CREATE TABLE `table_league_club_member` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `szNickName` varchar(64) NOT NULL DEFAULT '' COMMENT '昵称',
  `szBackName` varchar(64) NOT NULL DEFAULT '' COMMENT '昵称',
  `szWXAccount` varchar(64) NOT NULL DEFAULT '' COMMENT '昵称',
  `nLevel` tinyint(4) NOT NULL COMMENT '权限（1-部长，2-管理，3-成员）',
  `partner` tinyint(4) NOT NULL COMMENT '合伙人标记(1-是 0-否)',
  `nStatus` tinyint(4) NOT NULL COMMENT '状态（1-正常，2-冻结，3-退出，4-踢出）',
  `tJoinTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '加入俱乐部时间',
  `tExitTime` timestamp NULL DEFAULT NULL COMMENT '离开俱乐部时间',
  `nScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '积分',
  `nLeCard` bigint(20) NOT NULL DEFAULT '0' COMMENT '乐卡',
  `nExtenID` int(11) DEFAULT '0' COMMENT '上线用户ID',
  `tFreezeTime` timestamp NULL DEFAULT '0000-00-00 00:00:00' COMMENT '禁赛所到的时间点',
  `nFreezeReason` int(11) NOT NULL COMMENT '禁赛理由',
  `BigWinner` tinyint(4) NOT NULL DEFAULT '0' COMMENT '禁止同桌标记(1-是 0-否)',
  `szBan` text COMMENT 'JSON数据，包含禁止的ID',
  PRIMARY KEY (`ID`),
  KEY `idx_nExtenID` (`nExtenID`),
  KEY `idx_nPlayerID` (`nPlayerID`) USING BTREE,
  KEY `idx_partner` (`partner`),
  KEY `idx_nClubID_nPlayerID` (`nClubID`,`nPlayerID`)
) ENGINE=InnoDB AUTO_INCREMENT=2037 DEFAULT CHARSET=utf8mb4 COMMENT='联盟俱乐部成员表';

-- ----------------------------
-- Table structure for table_league_daydate
-- ----------------------------
DROP TABLE IF EXISTS `table_league_daydate`;
CREATE TABLE `table_league_daydate` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `ymd` date NOT NULL COMMENT '日期',
  PRIMARY KEY (`ID`),
  KEY `idx_ymd` (`ymd`)
) ENGINE=InnoDB AUTO_INCREMENT=3654 DEFAULT CHARSET=utf8mb4 COMMENT='以天为单位的日期表';

-- ----------------------------
-- Table structure for table_league_day_round
-- ----------------------------
DROP TABLE IF EXISTS `table_league_day_round`;
CREATE TABLE `table_league_day_round` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nKindID` int(11) NOT NULL COMMENT '游戏ID',
  `n2PlayCount` int(11) NOT NULL COMMENT '2人场次数',
  `n3PlayCount` int(11) NOT NULL COMMENT '3人场次数',
  `n4PlayCount` int(11) NOT NULL COMMENT '4人场次数',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nExtenID` int(11) NOT NULL COMMENT '大赢家次数',
  `nRound` int(11) NOT NULL COMMENT '局数',
  `nGrade` int(11) NOT NULL COMMENT '0-总场次, 1-10分以上, 2-20分以上, 3-60分以上, 4-80分以上, 5-100分以上, 120分以上',
  `tTime` timestamp NULL DEFAULT '0000-00-00 00:00:00' COMMENT '时间',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='每日局数（按上线划分，分数划分，用于合伙人统计表）';

-- ----------------------------
-- Table structure for table_league_day_round_partner
-- ----------------------------
DROP TABLE IF EXISTS `table_league_day_round_partner`;
CREATE TABLE `table_league_day_round_partner` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nRound` int(11) NOT NULL COMMENT '局数',
  `nGrade` int(11) NOT NULL COMMENT '0-总场次, 1-10分以上, 2-20分以上, 3-60分以上, 4-80分以上, 5-100分以上, 120分以上',
  `tTime` timestamp NULL DEFAULT '0000-00-00 00:00:00' COMMENT '时间',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='合伙人每日局数（自己的游戏局数+属于自己下线所打的局数）';

-- ----------------------------
-- Table structure for table_league_diamond_log
-- ----------------------------
DROP TABLE IF EXISTS `table_league_diamond_log`;
CREATE TABLE `table_league_diamond_log` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nKindID` int(10) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nDiamond` bigint(20) NOT NULL COMMENT '变动数量',
  `nPlayerDiamond` bigint(20) NOT NULL COMMENT '变动后玩家身上的钻石数量',
  `nType` tinyint(4) NOT NULL COMMENT '变化类型: 1-充值增加, 2-开房消耗',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `szInfo` varchar(32) DEFAULT NULL COMMENT '其他信息',
  `szRemark` varchar(256) NOT NULL DEFAULT '' COMMENT '备注',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nPlayerId` (`nPlayerID`)
) ENGINE=InnoDB AUTO_INCREMENT=11499 DEFAULT CHARSET=utf8mb4 COMMENT='钻石变动记录表';

-- ----------------------------
-- Table structure for table_league_lescore_log
-- ----------------------------
DROP TABLE IF EXISTS `table_league_lescore_log`;
CREATE TABLE `table_league_lescore_log` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nRelatedID` int(10) NOT NULL DEFAULT '0' COMMENT '关联用户ID',
  `nKindID` int(10) NOT NULL DEFAULT '0' COMMENT '游戏ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nLeCard` bigint(20) NOT NULL COMMENT '乐卡变动数量',
  `nPlayerLeCard` bigint(20) NOT NULL COMMENT '变动后玩家身上的钻石数量',
  `nType` tinyint(4) NOT NULL COMMENT '变化类型: 1-赠送增加, 2-游戏消耗',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `szRemark` varchar(256) NOT NULL DEFAULT '' COMMENT '备注',
  PRIMARY KEY (`ID`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=493 DEFAULT CHARSET=utf8mb4 COMMENT='乐卡变动记录表';

-- ----------------------------
-- Table structure for table_league_member_log
-- ----------------------------
DROP TABLE IF EXISTS `table_league_member_log`;
CREATE TABLE `table_league_member_log` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `szRemark` varchar(256) NOT NULL DEFAULT '' COMMENT '备注',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=1501 DEFAULT CHARSET=utf8mb4 COMMENT='人员变动日志表（只针对管理员，部长可见）';

-- ----------------------------
-- Table structure for table_league_pay
-- ----------------------------
DROP TABLE IF EXISTS `table_league_pay`;
CREATE TABLE `table_league_pay` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `PayLevel` int(11) NOT NULL COMMENT '商城等级',
  `PayMoney` int(11) NOT NULL COMMENT '玩家付款价格，分为单位',
  `PayDimond` int(11) NOT NULL COMMENT '获得的钻石数量',
  `GiftCount` int(10) NOT NULL DEFAULT '0' COMMENT '赠送的钻石数量',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=79 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_league_rank
-- ----------------------------
DROP TABLE IF EXISTS `table_league_rank`;
CREATE TABLE `table_league_rank` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nScore` int(11) NOT NULL COMMENT '积分(局数*15)',
  `nResult` bigint(20) NOT NULL COMMENT '输赢总分',
  `nBigWinner` int(11) NOT NULL COMMENT '大赢家次数',
  `tTime` date DEFAULT '0000-00-00' COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_tTime` (`tTime`)
) ENGINE=InnoDB AUTO_INCREMENT=2601 DEFAULT CHARSET=utf8mb4 COMMENT='针对排行榜使用的基础数据';

-- ----------------------------
-- Table structure for table_league_room_cfg
-- ----------------------------
DROP TABLE IF EXISTS `table_league_room_cfg`;
CREATE TABLE `table_league_room_cfg` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `cfgId` varchar(128) NOT NULL DEFAULT '' COMMENT '房间配置ID',
  `gameType` int(11) NOT NULL COMMENT '游戏类型',
  `cfg` varchar(2048) NOT NULL DEFAULT '' COMMENT '游戏配置',
  `updateTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部房间配置表';

-- ----------------------------
-- Table structure for table_league_stc_partner
-- ----------------------------
DROP TABLE IF EXISTS `table_league_stc_partner`;
CREATE TABLE `table_league_stc_partner` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nRound` int(11) NOT NULL DEFAULT '0' COMMENT '局数',
  `nGrade` int(11) NOT NULL DEFAULT '0' COMMENT '场次信息 0-总场次 1-10分以上 2-20分以上 3-60分以上 4-80分以上 5-100分以上 6-120分以上',
  `tTime` date NOT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_nPlayerID` (`nClubID`,`nPlayerID`),
  KEY `idx_tTime` (`tTime`)
) ENGINE=InnoDB AUTO_INCREMENT=372374 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_league_stc_partner_sub
-- ----------------------------
DROP TABLE IF EXISTS `table_league_stc_partner_sub`;
CREATE TABLE `table_league_stc_partner_sub` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `n2PlayCount` int(11) NOT NULL DEFAULT '0' COMMENT '2人场次数',
  `n3PlayCount` int(11) NOT NULL DEFAULT '0' COMMENT '3人场次数',
  `n4PlayCount` int(11) NOT NULL DEFAULT '0' COMMENT '4人场次数',
  `n6PlayCount` int(11) NOT NULL DEFAULT '0' COMMENT '6人场次数',
  `nExtenID` int(11) NOT NULL COMMENT '上线ID',
  `nRound` int(11) NOT NULL COMMENT '局数',
  `nGrade` int(11) NOT NULL DEFAULT '0' COMMENT '0-总场次 1-10分以上 2-20分以上 3-60分以上 4-80分以上 5-100分以上 6-120分以上',
  `tTime` date NOT NULL COMMENT '日期',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_nPlayerID` (`nClubID`,`nPlayerID`),
  KEY `idx_tTime` (`tTime`)
) ENGINE=InnoDB AUTO_INCREMENT=448 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_league_web_token
-- ----------------------------
DROP TABLE IF EXISTS `table_league_web_token`;
CREATE TABLE `table_league_web_token` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `szToken` varchar(128) NOT NULL DEFAULT '' COMMENT '登录串(nPlayerID-UNIXTIME-随机数5位)',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间（超过15天则过期）',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`)
) ENGINE=InnoDB AUTO_INCREMENT=110 DEFAULT CHARSET=utf8mb4 COMMENT='记录登录串的表';

-- ----------------------------
-- Table structure for table_mail
-- ----------------------------
DROP TABLE IF EXISTS `table_mail`;
CREATE TABLE `table_mail` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `nPlayerID` int(11) NOT NULL COMMENT '玩家id',
  `title` varchar(32) NOT NULL COMMENT '标题',
  `content` varchar(255) NOT NULL COMMENT '内容',
  `nSenderID` int(11) NOT NULL COMMENT '来源',
  `nStatus` int(11) NOT NULL COMMENT '状态',
  `createTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_createTime` (`createTime`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COMMENT='玩家邮件表';

-- ----------------------------
-- Table structure for table_manager_login_token
-- ----------------------------
DROP TABLE IF EXISTS `table_manager_login_token`;
CREATE TABLE `table_manager_login_token` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL DEFAULT '0' COMMENT '用户ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT '加密串',
  `nStatus` int(11) NOT NULL DEFAULT '0' COMMENT '0-未使用  1-已使用',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `tModifyTime` timestamp NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_nStatus` (`nStatus`)
) ENGINE=InnoDB AUTO_INCREMENT=6395 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_match_cfg
-- ----------------------------
DROP TABLE IF EXISTS `table_match_cfg`;
CREATE TABLE `table_match_cfg` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `nGuid` varchar(64) DEFAULT '' COMMENT '唯一标识',
  `nClubId` int(11) DEFAULT '0' COMMENT '俱乐部Id',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏类型（斗地主比赛场-80）',
  `nServerId` int(11) DEFAULT '0' COMMENT '比赛子类型：8001-斗地主免费赛场,8002-斗地主青铜赛场,8003-斗地主白银赛场,8004-斗地主黄金赛场,8005-斗地主钻石赛场',
  `nMatchName` varchar(32) DEFAULT '' COMMENT '比赛场名称(客户端显示的名字)',
  `nValid` int(11) DEFAULT '1' COMMENT '状态:1-开启,0-关闭',
  `nSortId` int(11) DEFAULT '1' COMMENT '排序Id:数字越大越靠前',
  `nConfigJson` text COMMENT '比赛Json配置字符串',
  `tCreateTime` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `tModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后修改时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nGuid` (`nGuid`),
  KEY `idx_nClubId_nGameType_nServerId` (`nClubId`,`nGameType`,`nServerId`)
) ENGINE=InnoDB AUTO_INCREMENT=17667 DEFAULT CHARSET=utf8mb4 COMMENT='比赛参数配置表';

-- ----------------------------
-- Table structure for table_match_cfg_debug_20201123
-- ----------------------------
DROP TABLE IF EXISTS `table_match_cfg_debug_20201123`;
CREATE TABLE `table_match_cfg_debug_20201123` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `nGuid` varchar(64) DEFAULT '' COMMENT '唯一标识',
  `nClubId` int(11) DEFAULT '0' COMMENT '俱乐部Id',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏类型（斗地主比赛场-80）',
  `nServerId` int(11) DEFAULT '0' COMMENT '比赛子类型：8001-斗地主免费赛场,8002-斗地主青铜赛场,8003-斗地主白银赛场,8004-斗地主黄金赛场,8005-斗地主钻石赛场',
  `nMatchName` varchar(32) DEFAULT '' COMMENT '比赛场名称(客户端显示的名字)',
  `nValid` int(11) DEFAULT '1' COMMENT '状态:1-开启,0-关闭',
  `nSortId` int(11) DEFAULT '1' COMMENT '排序Id:数字越大越靠前',
  `nConfigJson` text COMMENT '比赛Json配置字符串',
  `tCreateTime` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `tModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后修改时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nGuid` (`nGuid`),
  KEY `idx_nClubId_nGameType_nServerId` (`nClubId`,`nGameType`,`nServerId`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4 COMMENT='比赛参数配置表';

-- ----------------------------
-- Table structure for table_match_game_list
-- ----------------------------
DROP TABLE IF EXISTS `table_match_game_list`;
CREATE TABLE `table_match_game_list` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `nClubID` int(11) NOT NULL DEFAULT '0' COMMENT '俱乐部ID',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型（斗地主比赛场-80）',
  `nMatchType` int(11) NOT NULL COMMENT '比赛类型: 1-人满开赛',
  `nServerID` int(10) NOT NULL COMMENT '比赛子类型：8001-斗地主免费赛场,8002-斗地主青铜赛场,8003-斗地主白银赛场,8004-斗地主黄金赛场,8005-斗地主钻石赛场',
  `tStartTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '比赛开始时间',
  `tEndTime` timestamp NULL DEFAULT '0000-00-00 00:00:00' COMMENT '结束时间',
  `szMatchID` varchar(64) NOT NULL DEFAULT '' COMMENT '比赛唯一索引',
  `nTotal` int(11) NOT NULL COMMENT '总人数',
  `nRobot` int(11) NOT NULL COMMENT '机器人人数',
  `nFeeTotal` bigint(20) NOT NULL COMMENT '总报名费(真人)',
  `nFeeGoodsTotal` bigint(20) NOT NULL DEFAULT '0' COMMENT '总物品报名费',
  `nFeeGoodsID` int(11) NOT NULL DEFAULT '0' COMMENT '物品报名费ID',
  `nRewardTotal` bigint(20) NOT NULL COMMENT '总奖励(真人)',
  PRIMARY KEY (`ID`),
  KEY `idx_szMatchID` (`szMatchID`),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=382 DEFAULT CHARSET=utf8mb4 COMMENT='比赛总表';

-- ----------------------------
-- Table structure for table_match_game_result_detail
-- ----------------------------
DROP TABLE IF EXISTS `table_match_game_result_detail`;
CREATE TABLE `table_match_game_result_detail` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `nPlayerId` int(11) NOT NULL COMMENT '玩家ID',
  `nClubID` int(11) NOT NULL DEFAULT '0' COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) NOT NULL COMMENT '椅子ID',
  `szMatchID` varchar(64) NOT NULL DEFAULT '' COMMENT '比赛全局唯一索引',
  `nRound` int(11) NOT NULL COMMENT '局数',
  `nMatchResult` tinyint(4) NOT NULL COMMENT '此局比赛结果:0-淘汰,1-晋级',
  `nRank` int(11) NOT NULL COMMENT '排名',
  PRIMARY KEY (`ID`),
  KEY `idx_szMatchID` (`szMatchID`),
  KEY `idx_nPlayerId` (`nPlayerId`)
) ENGINE=InnoDB AUTO_INCREMENT=1190 DEFAULT CHARSET=utf8mb4 COMMENT='比赛战绩晋级记录表（游戏每局明细对应一条）';

-- ----------------------------
-- Table structure for table_match_game_score
-- ----------------------------
DROP TABLE IF EXISTS `table_match_game_score`;
CREATE TABLE `table_match_game_score` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `nPlayerId` int(11) NOT NULL COMMENT '玩家ID',
  `nClubID` int(11) NOT NULL DEFAULT '0' COMMENT '俱乐部ID',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型（斗地主比赛场-80）',
  `nMatchType` int(11) NOT NULL COMMENT '比赛类型: 1-人满开赛',
  `nServerID` int(10) NOT NULL COMMENT '比赛子类型：8001-斗地主免费赛场,8002-斗地主青铜赛场,8003-斗地主白银赛场,8004-斗地主黄金赛场,8005-斗地主钻石赛场',
  `tStartTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '比赛开始时间',
  `tEndTime` timestamp NULL DEFAULT '0000-00-00 00:00:00' COMMENT '结束时间',
  `nRank` int(11) NOT NULL COMMENT '名次',
  `nReward` int(11) NOT NULL COMMENT '奖励金额',
  `szMatchID` varchar(64) NOT NULL DEFAULT '' COMMENT '比赛全局唯一索引',
  `nFee` int(11) NOT NULL COMMENT '报名费',
  `nFeeGoods` int(11) NOT NULL DEFAULT '0' COMMENT '物品报名费',
  `nFeeGoodsID` int(11) NOT NULL DEFAULT '0' COMMENT '物品报名费ID',
  `matchName` varchar(256) DEFAULT NULL COMMENT '比赛名称',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerId_nGameType` (`nPlayerId`,`nGameType`),
  KEY `idx_szMatchID` (`szMatchID`),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=380 DEFAULT CHARSET=utf8mb4 COMMENT='比赛战绩总表（游戏总记录，注意是在游戏结束时才会产生）';

-- ----------------------------
-- Table structure for table_match_game_score_detail
-- ----------------------------
DROP TABLE IF EXISTS `table_match_game_score_detail`;
CREATE TABLE `table_match_game_score_detail` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `nPlayerId` int(11) NOT NULL COMMENT '玩家ID',
  `nClubID` int(11) NOT NULL DEFAULT '0' COMMENT '俱乐部ID',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型（斗地主比赛场-80）',
  `nMatchType` int(11) NOT NULL COMMENT '比赛类型: 1-人满开赛',
  `nServerID` int(11) NOT NULL COMMENT '比赛子类型：8001-斗地主免费赛场,8002-斗地主青铜赛场,8003-斗地主白银赛场,8004-斗地主黄金赛场,8005-斗地主钻石赛场',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) NOT NULL COMMENT '椅子ID',
  `szMatchID` varchar(64) NOT NULL DEFAULT '' COMMENT '比赛全局唯一索引',
  `nRound` int(11) NOT NULL COMMENT '局数',
  `nMatchRound` int(11) NOT NULL DEFAULT '1' COMMENT '比赛中的累计局数（多桌的累计值）默认1',
  `nBaseScore` int(11) NOT NULL COMMENT '底分',
  `nPlayCount` int(11) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `szCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '(庄家牌或公共牌)',
  `nEnterScore` bigint(20) NOT NULL COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) NOT NULL COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) NOT NULL COMMENT '成绩',
  `nPlayerScore` bigint(20) NOT NULL COMMENT '剩余分数',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
  `nBankID` int(10) NOT NULL COMMENT '庄家ID（用来表示地主是谁）',
  `szExtChar` text COMMENT '扩展字串（Json）用于每个游戏差异化数据（斗地主中记录自己是地主，农民信息）',
  `CardData` text COMMENT '牌局详情：对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。',
  `nMatchStep` tinyint(4) NOT NULL COMMENT '赛事阶段(这里的数值定义和服务器内部定义有关):2-预赛,3-决赛第一轮,4-决赛第二轮,5-总决赛',
  `nEliminate` int(11) NOT NULL COMMENT '淘汰分',
  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
  `matchName` varchar(256) DEFAULT NULL COMMENT '比赛名称',
  PRIMARY KEY (`ID`),
  KEY `idx_szMatchID` (`szMatchID`),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_nPlayerID_tEndTime` (`nPlayerId`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1297 DEFAULT CHARSET=utf8mb4 COMMENT='比赛战绩明细表（游戏每局明细记录）';

-- ----------------------------
-- Table structure for table_match_proxyrate
-- ----------------------------
DROP TABLE IF EXISTS `table_match_proxyrate`;
CREATE TABLE `table_match_proxyrate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `nGuid` varchar(64) DEFAULT '' COMMENT '唯一标识',
  `nClubId` int(11) DEFAULT '0' COMMENT '俱乐部Id',
  `nFeeRate` int(11) DEFAULT '0' COMMENT '金币报名费分成比例百分位 0.05%=5',
  `nFeeRateGoods` int(11) DEFAULT '0' COMMENT '物品报名费分成比例百分位 3.05%=305',
  `nRewardRate` int(11) DEFAULT '0' COMMENT '奖励分成比例百分位 50%=5000',
  `nValid` int(11) DEFAULT '1' COMMENT '状态:1-开启,0-关闭',
  `tCreateTime` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `tModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后修改时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId` (`nClubId`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='运营商分成比例配置表';

-- ----------------------------
-- Table structure for table_numerical_param
-- ----------------------------
DROP TABLE IF EXISTS `table_numerical_param`;
CREATE TABLE `table_numerical_param` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `serverID` int(11) NOT NULL COMMENT '房间标识',
  `clubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `triggerPercent` int(11) NOT NULL COMMENT '触发百分比',
  `backTriggerPercent` int(11) NOT NULL DEFAULT '0' COMMENT '返水触发百分比',
  `pumpRatio` float(6,4) NOT NULL COMMENT '抽水线 lhd阀门控制系数',
  `backRatio` float(6,4) NOT NULL COMMENT '返水线 既抽水比例',
  `specBackTriggerPercent` int(10) NOT NULL DEFAULT '0' COMMENT '特殊返水触发百分比',
  `newPlayExpEnterPrecent` int(10) NOT NULL DEFAULT '0' COMMENT '新玩家体验曲线进入百分比',
  `playCtlPumpTriggerPercent` int(11) NOT NULL DEFAULT '0' COMMENT '点控抽水触发百分比',
  `playCtlBackTriggerPercent` int(11) NOT NULL DEFAULT '0' COMMENT '点控返水触发百分比',
  `playerWinLos` bigint(20) NOT NULL DEFAULT '0' COMMENT '真人玩家输赢',
  `playerValidBet` bigint(20) NOT NULL DEFAULT '0' COMMENT '真人有效投注总',
  `testTimes` bigint(20) NOT NULL DEFAULT '0' COMMENT '测试次数',
  `pumpTimes` bigint(20) NOT NULL DEFAULT '0' COMMENT '抽水次数',
  `backTimes` bigint(20) NOT NULL DEFAULT '0' COMMENT '返水次数',
  `param1` bigint(20) NOT NULL DEFAULT '0' COMMENT '附加参数1 lhd龙总抽水',
  `param2` bigint(20) NOT NULL DEFAULT '0' COMMENT '附加参数2 lhd虎总抽水',
  PRIMARY KEY (`ID`),
  UNIQUE KEY `idx_serverID_clubID` (`serverID`,`clubID`)
) ENGINE=InnoDB AUTO_INCREMENT=4925 DEFAULT CHARSET=utf8mb4 COMMENT='数值控制参数';

-- ----------------------------
-- Table structure for table_numerical_param_2019
-- ----------------------------
DROP TABLE IF EXISTS `table_numerical_param_2019`;
CREATE TABLE `table_numerical_param_2019` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `serverID` int(11) NOT NULL COMMENT '房间标识',
  `triggerPercent` int(11) NOT NULL COMMENT '触发百分比',
  `backTriggerPercent` int(11) NOT NULL DEFAULT '0' COMMENT '返水触发百分比',
  `pumpRatio` float(6,4) NOT NULL COMMENT '抽水线 lhd阀门控制系数',
  `backRatio` float(6,4) NOT NULL COMMENT '返水线 既抽水比例',
  PRIMARY KEY (`ID`),
  KEY `idx_serverID` (`serverID`)
) ENGINE=InnoDB AUTO_INCREMENT=88 DEFAULT CHARSET=utf8mb4 COMMENT='数值控制参数同步表';

-- ----------------------------
-- Table structure for table_payment_info
-- ----------------------------
DROP TABLE IF EXISTS `table_payment_info`;
CREATE TABLE `table_payment_info` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `nPlayerID` int(10) NOT NULL COMMENT '用户ID',
  `nClubID` int(10) DEFAULT NULL COMMENT '俱乐部ID',
  `nType` tinyint(4) NOT NULL COMMENT '1-支付宝,2-银行卡',
  `szData` varchar(512) NOT NULL DEFAULT '' COMMENT '支付信息JSON串',
  `bankno` varchar(128) DEFAULT '' COMMENT '银行卡账号',
  `szName` varchar(32) NOT NULL DEFAULT '' COMMENT '名字',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `bankname` varchar(128) NOT NULL DEFAULT '' COMMENT '银行名称',
  `DisableTime` timestamp NULL DEFAULT NULL COMMENT '禁用时间',
  `nStatus` tinyint(4) NOT NULL DEFAULT '0' COMMENT '标志：0-禁用 1-启用 （默认0',
  `CustomerAccount` varchar(64) NOT NULL DEFAULT '' COMMENT '操作人账号',
  `szMark` varchar(128) NOT NULL DEFAULT '' COMMENT '备注信息',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_szName` (`szName`(10)),
  KEY `idx_bankno` (`bankno`(20))
) ENGINE=InnoDB AUTO_INCREMENT=260 DEFAULT CHARSET=utf8mb4 COMMENT='用户支付账号信息';

-- ----------------------------
-- Table structure for table_pay_log
-- ----------------------------
DROP TABLE IF EXISTS `table_pay_log`;
CREATE TABLE `table_pay_log` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `pay_type` tinyint(4) NOT NULL,
  `action` varchar(20) NOT NULL DEFAULT '',
  `domain_type` tinyint(4) NOT NULL,
  `out_trade_no` varchar(128) NOT NULL DEFAULT '',
  `trade_no` varchar(128) NOT NULL DEFAULT '',
  `trade_status` varchar(60) NOT NULL DEFAULT '' COMMENT '订单状态',
  `trade_return_data` varchar(2000) NOT NULL DEFAULT '' COMMENT '订单返回信息',
  `create_ip` varchar(60) NOT NULL DEFAULT '',
  `create_date` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `szName` varchar(128) NOT NULL DEFAULT '' COMMENT '名字',
  `nPlayerId` int(11) NOT NULL COMMENT '用户ID',
  `state` int(11) NOT NULL COMMENT '状态',
  `total_fee` int(11) NOT NULL COMMENT '充值数',
  `Diamond` int(11) NOT NULL COMMENT '钻石',
  `diamond_count` int(11) NOT NULL COMMENT '本次充钻数',
  `nCommFlag` tinyint(4) NOT NULL DEFAULT '0' COMMENT '分成标记 0-未处理 1-已处理 默认0',
  PRIMARY KEY (`id`),
  KEY `idx_nPlayerId` (`nPlayerId`),
  KEY `idx_out_trade_no` (`out_trade_no`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8mb4 COMMENT='充值记录表';

-- ----------------------------
-- Table structure for table_pay_pre
-- ----------------------------
DROP TABLE IF EXISTS `table_pay_pre`;
CREATE TABLE `table_pay_pre` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `nPlayerId` int(11) DEFAULT NULL,
  `total_fee` int(11) DEFAULT NULL,
  `out_trade_no` varchar(128) DEFAULT NULL,
  `prepay_no` varchar(128) DEFAULT NULL,
  `szTime` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_nPlayerId` (`nPlayerId`),
  KEY `idx_out_trade_no` (`out_trade_no`(28))
) ENGINE=InnoDB AUTO_INCREMENT=88257 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_player_control
-- ----------------------------
DROP TABLE IF EXISTS `table_player_control`;
CREATE TABLE `table_player_control` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerId` int(11) NOT NULL COMMENT '玩家ID',
  `winLosTarget` int(11) NOT NULL DEFAULT '0' COMMENT '玩家输赢目标值',
  `winLos` int(11) NOT NULL DEFAULT '0' COMMENT '玩家输赢当前值',
  `state` int(11) NOT NULL DEFAULT '1' COMMENT '抽返水状态 1.完成 2.抽水 3.返水',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部玩家点控';

-- ----------------------------
-- Table structure for table_play_back_code
-- ----------------------------
DROP TABLE IF EXISTS `table_play_back_code`;
CREATE TABLE `table_play_back_code` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `playBackCode` int(11) DEFAULT '0' COMMENT '当前回放码起始值',
  `resetTime` timestamp NULL DEFAULT NULL COMMENT '重置时间',
  `lastTime` timestamp NULL DEFAULT NULL COMMENT '最近查询时间',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_play_back_code_lockstatus
-- ----------------------------
DROP TABLE IF EXISTS `table_play_back_code_lockstatus`;
CREATE TABLE `table_play_back_code_lockstatus` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `lockstatus` int(11) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='回放码事务锁状态表';

-- ----------------------------
-- Table structure for table_promotercount
-- ----------------------------
DROP TABLE IF EXISTS `table_promotercount`;
CREATE TABLE `table_promotercount` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键、自动标识列',
  `PlayerId` varchar(64) DEFAULT NULL COMMENT '用户游戏ID',
  `EnterPriseID` varchar(72) DEFAULT NULL COMMENT '代理商ID',
  `szNickName` varchar(64) DEFAULT NULL COMMENT '用户微信名称',
  `IsAdd` int(11) DEFAULT NULL COMMENT '是否新增',
  `IsValid` int(11) NOT NULL DEFAULT '1' COMMENT '是否有效(默认为 1 有效)',
  `IsPay` int(11) DEFAULT NULL COMMENT '是否付费',
  `CreateDate` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`),
  KEY `idx_PlayerId` (`PlayerId`),
  KEY `idx_EnterPriseID` (`EnterPriseID`)
) ENGINE=InnoDB AUTO_INCREMENT=34867 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_proxy_url
-- ----------------------------
DROP TABLE IF EXISTS `table_proxy_url`;
CREATE TABLE `table_proxy_url` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID（为推广用的用户）',
  `isVip` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否为VIP(默认为0):0-否,1是',
  `szURL` varchar(256) NOT NULL DEFAULT '' COMMENT 'URL',
  `createTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`)
) ENGINE=InnoDB AUTO_INCREMENT=136 DEFAULT CHARSET=utf8mb4 COMMENT='代理对应推广URL';

-- ----------------------------
-- Table structure for table_pyramid_betting
-- ----------------------------
DROP TABLE IF EXISTS `table_pyramid_betting`;
CREATE TABLE `table_pyramid_betting` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `szNickName` varchar(64) NOT NULL DEFAULT '' COMMENT '昵称',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nExtenID` int(11) NOT NULL COMMENT '上线ID',
  `nAmount` bigint(20) DEFAULT '0' COMMENT '总投注额',
  `tEffectiveDate` date DEFAULT NULL COMMENT '所属时间 X年X月X日',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_nExtenID_nPlayerID` (`nClubID`,`nExtenID`,`nPlayerID`),
  KEY `idx_tEffectiveDate` (`tEffectiveDate`)
) ENGINE=InnoDB AUTO_INCREMENT=4135 DEFAULT CHARSET=utf8mb4 COMMENT='会员分成系统每人每日投注汇总表';

-- ----------------------------
-- Table structure for table_pyramid_bettingday
-- ----------------------------
DROP TABLE IF EXISTS `table_pyramid_bettingday`;
CREATE TABLE `table_pyramid_bettingday` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `szNickName` varchar(64) NOT NULL DEFAULT '' COMMENT '昵称',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nExtenID` int(11) NOT NULL COMMENT '上线ID',
  `nAmount` bigint(20) DEFAULT '0' COMMENT '总投注额',
  `tEffectiveDate` date DEFAULT NULL COMMENT '所属时间 X年X月X日',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_nExtenID_nPlayerID` (`nClubID`,`nExtenID`,`nPlayerID`),
  KEY `idx_tEffectiveDate` (`tEffectiveDate`)
) ENGINE=InnoDB AUTO_INCREMENT=4681 DEFAULT CHARSET=utf8mb4 COMMENT='会员分成系统每人每日投注汇总表';

-- ----------------------------
-- Table structure for table_pyramid_examine
-- ----------------------------
DROP TABLE IF EXISTS `table_pyramid_examine`;
CREATE TABLE `table_pyramid_examine` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `szOrder` varchar(128) NOT NULL DEFAULT '' COMMENT '订单号',
  `szIP` varchar(64) NOT NULL DEFAULT '' COMMENT 'IP',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `szChannel` varchar(32) NOT NULL DEFAULT '' COMMENT '充值渠道',
  `szBank` varchar(64) NOT NULL DEFAULT '' COMMENT '银行卡号',
  `szUserName` varchar(64) NOT NULL DEFAULT '' COMMENT '户名',
  `nScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '用户积分',
  `nAmount` bigint(20) DEFAULT '0' COMMENT '彩金',
  `nSubVal` int(11) NOT NULL DEFAULT '0' COMMENT '需扣手续费的部分',
  `nCommission` int(10) NOT NULL DEFAULT '0' COMMENT '手续费',
  `tCustomerActTime` timestamp NULL DEFAULT NULL COMMENT '操作时间(客服)',
  `CustomerAccount` varchar(64) NOT NULL DEFAULT '' COMMENT '操作人账号(客服)',
  `tFinanceActTime` timestamp NULL DEFAULT NULL COMMENT '最后修改时间(财务)',
  `FinanceAccount` varchar(64) NOT NULL DEFAULT '' COMMENT '最后操作人账号(财务)',
  `nFlag` int(11) DEFAULT NULL COMMENT '状态：1-待客服审核,2-待财务审核,3-财务已提交，待真实转账完成,4-最终成功,5-失败,6-拒绝',
  `szOrderInfo` varchar(256) NOT NULL DEFAULT '' COMMENT '订单详情',
  `szRemark` varchar(128) NOT NULL DEFAULT '' COMMENT '备注',
  `szMark2` varchar(128) NOT NULL DEFAULT '' COMMENT '备注2(用于超时有关记录))',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_nClubID` (`nPlayerID`,`nClubID`),
  KEY `idx_szorder` (`szOrder`),
  KEY `idx_nFlag` (`nFlag`)
) ENGINE=InnoDB AUTO_INCREMENT=511 DEFAULT CHARSET=utf8mb4 COMMENT='会员分成系统审核表';

-- ----------------------------
-- Table structure for table_pyramid_rebate
-- ----------------------------
DROP TABLE IF EXISTS `table_pyramid_rebate`;
CREATE TABLE `table_pyramid_rebate` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nExtenID` int(11) NOT NULL COMMENT '上线ID',
  `tEffectiveDate` date DEFAULT NULL COMMENT '所属时间 X年X月X日',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `DirectlySubAchievement` bigint(20) DEFAULT '0' COMMENT '直属下线业绩',
  `AnotherSubAchievement` bigint(20) DEFAULT '0' COMMENT '其他下线业绩',
  `WeekTotalRebate` bigint(20) DEFAULT '0' COMMENT '全得返利（本周总业绩 * 对应返利额度）',
  `WeekMyRebate` bigint(20) DEFAULT '0' COMMENT '自得返利（全得返利 - 所有直属下线的本周全得返利）',
  `ClaimFlag` int(11) DEFAULT NULL COMMENT '领取标记：0-未计算完成 (本周未结束), 1-计算完成未领取 (下周一改变), 2-已领取',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_nClubID` (`nPlayerID`,`nClubID`),
  KEY `idx_tEffectiveDate` (`tEffectiveDate`)
) ENGINE=InnoDB AUTO_INCREMENT=1248 DEFAULT CHARSET=utf8mb4 COMMENT='会员分成系统用户返利表';

-- ----------------------------
-- Table structure for table_pyramid_rebateday
-- ----------------------------
DROP TABLE IF EXISTS `table_pyramid_rebateday`;
CREATE TABLE `table_pyramid_rebateday` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nExtenID` int(11) NOT NULL COMMENT '上线ID',
  `tEffectiveDate` date DEFAULT NULL COMMENT '所属时间 X年X月X日',
  `tCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `DirectlySubAchievement` bigint(20) DEFAULT '0' COMMENT '直属下线业绩',
  `AnotherSubAchievement` bigint(20) DEFAULT '0' COMMENT '其他下线业绩',
  `WeekTotalRebate` bigint(20) DEFAULT '0' COMMENT '全得返利（本周总业绩 * 对应返利额度）',
  `WeekMyRebate` bigint(20) DEFAULT '0' COMMENT '自得返利（全得返利 - 所有直属下线的本周全得返利）',
  `ClaimFlag` int(11) DEFAULT NULL COMMENT '领取标记：0-未计算完成 (本周未结束), 1-计算完成未领取 (下周一改变), 2-已领取',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID_nClubID` (`nPlayerID`,`nClubID`),
  KEY `idx_tEffectiveDate` (`tEffectiveDate`)
) ENGINE=InnoDB AUTO_INCREMENT=3466 DEFAULT CHARSET=utf8mb4 COMMENT='会员分成系统用户返利表--每日';

-- ----------------------------
-- Table structure for table_recharge_channel_info
-- ----------------------------
DROP TABLE IF EXISTS `table_recharge_channel_info`;
CREATE TABLE `table_recharge_channel_info` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `PlatformType` int(11) NOT NULL COMMENT '平台类型(1- FengYun 2-Ting)',
  `ChannelIndex` int(11) NOT NULL COMMENT '渠道名称(1微信2支付宝3银行卡)',
  `SubSort` int(11) NOT NULL COMMENT '小类型顺序(TAB页中的顺序)',
  `CustomLabel` varchar(64) DEFAULT NULL COMMENT '自定义标签(比如 小额支付,大额支付)',
  `LowAmount` int(11) NOT NULL COMMENT '最低金额',
  `HighAmount` int(11) NOT NULL COMMENT '最高金额',
  `TaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '手续费比例',
  `nStatus` int(11) NOT NULL DEFAULT '1' COMMENT '状态(1启用、0禁用)',
  `CardNo` varchar(32) DEFAULT NULL COMMENT '银行卡标识',
  `DeviceType` int(11) DEFAULT NULL COMMENT '支持设备类型( 1 电脑,2 手机 3(电脑、手机)',
  `RandomType` int(11) DEFAULT NULL COMMENT '启用随机数( 0关闭随机数 1 个位数,2 小数位)',
  `CustomAmount` varchar(256) DEFAULT NULL COMMENT '自定义金额 Json数组',
  `RechargeDesc` varchar(64) DEFAULT NULL COMMENT '充值说明',
  `CreateTime` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `ModifyTime` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nStatus` (`nStatus`)
) ENGINE=InnoDB AUTO_INCREMENT=340 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_recharge_detail
-- ----------------------------
DROP TABLE IF EXISTS `table_recharge_detail`;
CREATE TABLE `table_recharge_detail` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引ID',
  `nPlayerID` int(11) DEFAULT NULL COMMENT '充值者ID',
  `nCPID` int(11) DEFAULT NULL COMMENT '所属城市合伙人',
  `nType` int(11) DEFAULT NULL COMMENT '类型：0-会员 1-代理',
  `nRecharge` bigint(20) DEFAULT NULL COMMENT '充值金额',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `nAgentID` int(11) NOT NULL DEFAULT '0' COMMENT '充值者的所属代理ID',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4 COMMENT='充值人详细表';

-- ----------------------------
-- Table structure for table_report_log
-- ----------------------------
DROP TABLE IF EXISTS `table_report_log`;
CREATE TABLE `table_report_log` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nplayerid` int(11) NOT NULL COMMENT '玩家ID',
  `tag` varchar(64) NOT NULL DEFAULT '' COMMENT '标签',
  `val` int(11) NOT NULL,
  `mark` varchar(512) NOT NULL DEFAULT '' COMMENT '标记',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  KEY `idx_nplayerid` (`nplayerid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='report_log表';

-- ----------------------------
-- Table structure for table_robot_configure
-- ----------------------------
DROP TABLE IF EXISTS `table_robot_configure`;
CREATE TABLE `table_robot_configure` (
  `BatchID` int(11) NOT NULL AUTO_INCREMENT COMMENT '批次标识',
  `ServerID` int(11) NOT NULL COMMENT '房间标识',
  `ServiceMode` int(11) NOT NULL COMMENT '服务模式',
  `RobotCount` int(11) NOT NULL COMMENT '机器人数',
  `EnterTime` int(11) NOT NULL COMMENT '进入时间',
  `LeaveTime` int(11) NOT NULL COMMENT '离开时间',
  `EnterMinInterval` int(11) NOT NULL COMMENT '进入最小间隔',
  `EnterMaxInterval` int(11) NOT NULL COMMENT '进入最大间隔',
  `LeaveMinInterval` int(11) NOT NULL COMMENT '离开最小间隔',
  `LeaveMaxInterval` int(11) NOT NULL COMMENT '离开最大间隔',
  `TakeMinScore` bigint(20) NOT NULL COMMENT '最少携带分数',
  `TakeMaxScore` bigint(20) NOT NULL COMMENT '最大携带分数',
  `SwitchMinInnings` int(11) NOT NULL COMMENT '最少换桌局数',
  `SwitchMaxInnings` int(11) NOT NULL COMMENT '最大换桌局数',
  PRIMARY KEY (`BatchID`)
) ENGINE=InnoDB AUTO_INCREMENT=417 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_robot_lockinfo
-- ----------------------------
DROP TABLE IF EXISTS `table_robot_lockinfo`;
CREATE TABLE `table_robot_lockinfo` (
  `nPlayerId` int(10) NOT NULL COMMENT '账号ID',
  `LogonPass` varchar(32) NOT NULL COMMENT '机器密码',
  `RobotStatus` int(11) NOT NULL COMMENT '机器状态',
  `ServerID` int(11) NOT NULL COMMENT '房间标识',
  `BatchID` int(11) NOT NULL COMMENT '批次标识',
  `LockDateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入日期',
  PRIMARY KEY (`nPlayerId`),
  KEY `idx_ServerID_RobotStatus` (`ServerID`,`RobotStatus`),
  KEY `idx_robotstatus_time` (`RobotStatus`,`LockDateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_robot_lockstatus
-- ----------------------------
DROP TABLE IF EXISTS `table_robot_lockstatus`;
CREATE TABLE `table_robot_lockstatus` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `lockstatus` int(11) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='机器人事务锁状态表';

-- ----------------------------
-- Table structure for table_robot_tempandroids
-- ----------------------------
DROP TABLE IF EXISTS `table_robot_tempandroids`;
CREATE TABLE `table_robot_tempandroids` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `nPlayerId` int(10) NOT NULL COMMENT '账号ID',
  `LogonPass` varchar(32) NOT NULL COMMENT '机器密码',
  `BatchID` int(11) NOT NULL COMMENT '批次标识',
  PRIMARY KEY (`id`),
  KEY `idx_nPlayerId` (`nPlayerId`),
  KEY `idx_BatchID` (`BatchID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='分配机器人表';

-- ----------------------------
-- Table structure for table_statistics_clubhundred
-- ----------------------------
DROP TABLE IF EXISTS `table_statistics_clubhundred`;
CREATE TABLE `table_statistics_clubhundred` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键 自增',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerId` int(11) NOT NULL COMMENT '用户Id',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型 1牛牛',
  `nHundredType` int(11) NOT NULL COMMENT '场次类型 1 初级场  2中级场   3高级场',
  `nAmount` bigint(20) NOT NULL COMMENT '盈利数额',
  `CreateTime` timestamp NULL DEFAULT NULL COMMENT '统计时间(非执行时间）',
  `nType` int(11) NOT NULL DEFAULT '1' COMMENT '1 盈利排行;2下注排行',
  PRIMARY KEY (`Id`),
  KEY `idx_nPlayerId_nClubId` (`nPlayerId`,`nClubId`)
) ENGINE=InnoDB AUTO_INCREMENT=535 DEFAULT CHARSET=utf8mb4 COMMENT='百人场盈利、下注日统表';

-- ----------------------------
-- Table structure for table_statistics_clubhundsum
-- ----------------------------
DROP TABLE IF EXISTS `table_statistics_clubhundsum`;
CREATE TABLE `table_statistics_clubhundsum` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键 自增',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nGameId` int(11) NOT NULL COMMENT '游戏Id 2040',
  `nHundredType` int(11) NOT NULL COMMENT '场次类型 1 初级场  2中级场   3高级场',
  `Number1` int(11) DEFAULT '0' COMMENT '上庄人数',
  `Number2` int(11) DEFAULT '0' COMMENT '开奖次数',
  `Number3` int(11) DEFAULT '0' COMMENT '百人场参与人数',
  `Number4` int(11) DEFAULT '0' COMMENT '联合上庄人数',
  `Number5` bigint(20) DEFAULT '0' COMMENT '闲家投注总额',
  `Number6` bigint(20) DEFAULT '0' COMMENT '闲家赔付总额',
  `Number7` bigint(20) DEFAULT '0' COMMENT '闲家赢取总额',
  `Number8` bigint(20) DEFAULT '0' COMMENT '庄家赔付总额',
  `Number9` bigint(20) DEFAULT '0' COMMENT '庄家赢取总额',
  `Number10` bigint(20) DEFAULT '0' COMMENT '系统上庄闲家投注总额',
  `Number11` bigint(20) DEFAULT '0' COMMENT '系统上庄闲家赔付总额',
  `Number12` bigint(20) DEFAULT '0' COMMENT '系统上庄闲家赢取总额',
  `Number13` bigint(20) DEFAULT '0' COMMENT '系统上庄庄家赔付总额',
  `Number14` bigint(20) DEFAULT '0' COMMENT '系统上庄庄家赢取总额',
  `Number15` bigint(20) DEFAULT '0' COMMENT '百人场服务费总额',
  `Number16` bigint(20) DEFAULT '0' COMMENT '百人场免服务总额',
  `Number17` bigint(20) DEFAULT '0' COMMENT '系统上庄净收入',
  `Number18` bigint(20) DEFAULT '0' COMMENT '俱乐部百人场净收入',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '统计时间(非执行时间）',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId_CreateTime` (`nClubId`,`CreateTime`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=120 DEFAULT CHARSET=utf8mb4 COMMENT='百人场数据日统汇总表';

-- ----------------------------
-- Table structure for table_statistics_clubservice
-- ----------------------------
DROP TABLE IF EXISTS `table_statistics_clubservice`;
CREATE TABLE `table_statistics_clubservice` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键 自增(俱乐部占成统计)',
  `nType` int(11) NOT NULL COMMENT '1 好友场;2百人场',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '单局对玩家的税率（群管可设置）整数，需除以1000',
  `nRoyaltyRate` int(11) NOT NULL DEFAULT '0' COMMENT 'nType=1六人场总局玩家的税率（群管可设置）整数，需除以1000;2百人场总局玩家的税率（群管可设置）整数，需除以1000',
  `CreateTime` timestamp NULL DEFAULT NULL COMMENT '统计时间(非执行时间）',
  `nScore` int(11) NOT NULL COMMENT '积分',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId` (`nClubId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='服务费统计';

-- ----------------------------
-- Table structure for table_statistics_download
-- ----------------------------
DROP TABLE IF EXISTS `table_statistics_download`;
CREATE TABLE `table_statistics_download` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键，自增',
  `SysType` int(11) NOT NULL COMMENT '设备类型:1-IOS;2-Android;3-Win',
  `RoomPlayerId` varchar(20) DEFAULT '' COMMENT '房间Id nTableId_nPlayerId',
  `IPAddress` varchar(20) DEFAULT '' COMMENT 'IP地址',
  `CreateTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=93 DEFAULT CHARSET=utf8mb4 COMMENT='统计下载';

-- ----------------------------
-- Table structure for table_statistics_earnings
-- ----------------------------
DROP TABLE IF EXISTS `table_statistics_earnings`;
CREATE TABLE `table_statistics_earnings` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键，自增',
  `nType` int(11) NOT NULL COMMENT '收益类型(1直属用户收益，2推广收益，3下级推广收益，4业绩目标奖励)',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部Id',
  `nPlayerId` int(11) NOT NULL COMMENT '用户Id(服务费受益人)',
  `nTargetId` int(11) NOT NULL COMMENT '用户Id(服务费贡献人)',
  `nRate` int(11) NOT NULL COMMENT '收益比例',
  `nAmount` decimal(18,3) NOT NULL DEFAULT '0.000',
  `nScore` int(11) NOT NULL COMMENT '服务费',
  `CreateTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId` (`nClubId`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nPlayerId_nTargetId` (`nPlayerId`,`nTargetId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户收益统计表';

-- ----------------------------
-- Table structure for table_statistics_extendesc
-- ----------------------------
DROP TABLE IF EXISTS `table_statistics_extendesc`;
CREATE TABLE `table_statistics_extendesc` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键、自增',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部Id',
  `nPlayerID` int(11) NOT NULL DEFAULT '0' COMMENT '玩家Id',
  `nExtenRate` int(11) NOT NULL DEFAULT '0' COMMENT '推广员收益比例. 整数，需除以1000',
  `szExtenDesc` varchar(100) DEFAULT NULL COMMENT '推广员备注',
  `nScore` int(11) NOT NULL DEFAULT '0' COMMENT '积分',
  `szNickName` varchar(200) DEFAULT NULL COMMENT '昵称',
  `CreateTime` timestamp NULL DEFAULT NULL COMMENT '统计时间(非执行时间）',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='推广备注统计';

-- ----------------------------
-- Table structure for table_task_config
-- ----------------------------
DROP TABLE IF EXISTS `table_task_config`;
CREATE TABLE `table_task_config` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nTaskID` int(11) NOT NULL COMMENT '任务ID',
  `szTaskName` varchar(32) NOT NULL DEFAULT '' COMMENT '任务名称',
  `nValue` int(11) NOT NULL COMMENT '任务参数（例如X局，XX积分等）',
  `nKindID` int(11) NOT NULL COMMENT '与游戏相关的任务会对应一个游戏ID',
  `nCycleType` int(11) NOT NULL COMMENT '周期类型: 1-日,2-周,3-月',
  `nCycleCount` int(11) NOT NULL COMMENT '周期内次数',
  `nTaskType` tinyint(4) NOT NULL COMMENT '任务类型: 1-特殊牌型赢彩金, 2-活动赢彩金',
  `nAwardType` int(11) NOT NULL COMMENT '任务的红包类型: 1-福气红包, 2-多福红包, 3-满福红包, 101-首登红包',
  `tStartTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '任务开始时间',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '任务结束时间',
  `szDesc` varchar(128) NOT NULL DEFAULT '' COMMENT '描述',
  PRIMARY KEY (`ID`),
  KEY `idx_nTaskID` (`nTaskID`)
) ENGINE=InnoDB AUTO_INCREMENT=207 DEFAULT CHARSET=utf8mb4 COMMENT='任务信息全局表';

-- ----------------------------
-- Table structure for table_task_invatition
-- ----------------------------
DROP TABLE IF EXISTS `table_task_invatition`;
CREATE TABLE `table_task_invatition` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nInvaID` int(11) NOT NULL COMMENT '被邀请人ID',
  `szInvaName` varchar(64) NOT NULL DEFAULT '' COMMENT '被邀请人昵称',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '注册时间',
  `nScore` int(11) NOT NULL COMMENT '贡献积分',
  `nTmpRound` int(11) NOT NULL COMMENT '记录中间局数（待定）满8局转1积分',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='新房卡邀请记录表';

-- ----------------------------
-- Table structure for table_temps
-- ----------------------------
DROP TABLE IF EXISTS `table_temps`;
CREATE TABLE `table_temps` (
  `parmClubID` int(11) DEFAULT '0' COMMENT 'parmClubID',
  `nClubID` int(11) NOT NULL COMMENT 'nClubID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_test_20200325
-- ----------------------------
DROP TABLE IF EXISTS `table_test_20200325`;
CREATE TABLE `table_test_20200325` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `lockstatus` int(11) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='测试表';

-- ----------------------------
-- Table structure for table_third_exchange_log
-- ----------------------------
DROP TABLE IF EXISTS `table_third_exchange_log`;
CREATE TABLE `table_third_exchange_log` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nChannel` int(11) NOT NULL COMMENT '渠道ID',
  `nType` tinyint(4) NOT NULL COMMENT '类型:1-兑入, 2-兑出',
  `szOrder` varchar(128) NOT NULL DEFAULT '' COMMENT '订单号',
  `nAmount` bigint(20) NOT NULL DEFAULT '0' COMMENT '数量',
  `nPreScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '用户积分(变换前)',
  `nScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '第三方积分',
  `szPay` varchar(64) NOT NULL DEFAULT '' COMMENT '第三方平台的支付额',
  `szDesc` varchar(32) NOT NULL DEFAULT '' COMMENT '备注',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nPlayerID_CreateTime` (`nPlayerID`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='第三方平台兑换表';

-- ----------------------------
-- Table structure for table_third_order
-- ----------------------------
DROP TABLE IF EXISTS `table_third_order`;
CREATE TABLE `table_third_order` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `nPlayerID` int(10) NOT NULL COMMENT '玩家ID',
  `nClubID` int(10) NOT NULL COMMENT '俱乐部ID',
  `nRechargeCount` int(11) NOT NULL DEFAULT '0' COMMENT '充值次数',
  `szChannel` varchar(32) NOT NULL DEFAULT '' COMMENT '充值渠道',
  `nPreScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '充值前金额',
  `nGiftScore` int(11) NOT NULL DEFAULT '0' COMMENT '赠送金额(活动赠送)',
  `nType` tinyint(4) NOT NULL COMMENT '类型: 1-兑入,2-兑出',
  `szOrder` varchar(128) NOT NULL DEFAULT '' COMMENT '订单号',
  `nStatus` int(10) NOT NULL COMMENT '订单: 0-处理中,1-成功,2-失败',
  `nAmount` bigint(20) NOT NULL COMMENT '数量(变动量)',
  `nSubVal` int(11) NOT NULL DEFAULT '0' COMMENT '提现时需要扣除收续费的额度（用于去任务相关表做对应数据扣除）table_club_task_recdata',
  `szOrderInfo` varchar(256) NOT NULL DEFAULT '' COMMENT '订单详情',
  `szDesc` varchar(128) NOT NULL DEFAULT '' COMMENT '备注',
  `szMark` varchar(128) NOT NULL DEFAULT '' COMMENT '后台用备注',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  `ConfirmTime` timestamp NULL DEFAULT NULL COMMENT '订单确认时间（比如充值到账）',
  PRIMARY KEY (`ID`),
  KEY `idx_nStatus_CreateTime` (`nStatus`,`CreateTime`),
  KEY `idx_szOrder` (`szOrder`(20)),
  KEY `idx_nPlayerID_nType_nClubID` (`nPlayerID`,`nType`,`nClubID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nClubID_CreateTime` (`nClubID`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='第三方平台兑换订单表';

-- ----------------------------
-- Table structure for table_third_score_detail20200201
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200201`;
CREATE TABLE `table_third_score_detail20200201` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200202
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200202`;
CREATE TABLE `table_third_score_detail20200202` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200203
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200203`;
CREATE TABLE `table_third_score_detail20200203` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200204
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200204`;
CREATE TABLE `table_third_score_detail20200204` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200205
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200205`;
CREATE TABLE `table_third_score_detail20200205` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200206
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200206`;
CREATE TABLE `table_third_score_detail20200206` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200207
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200207`;
CREATE TABLE `table_third_score_detail20200207` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200208
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200208`;
CREATE TABLE `table_third_score_detail20200208` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200209
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200209`;
CREATE TABLE `table_third_score_detail20200209` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200210
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200210`;
CREATE TABLE `table_third_score_detail20200210` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200211
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200211`;
CREATE TABLE `table_third_score_detail20200211` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200212
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200212`;
CREATE TABLE `table_third_score_detail20200212` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200213
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200213`;
CREATE TABLE `table_third_score_detail20200213` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200214
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200214`;
CREATE TABLE `table_third_score_detail20200214` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200215
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200215`;
CREATE TABLE `table_third_score_detail20200215` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200216
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200216`;
CREATE TABLE `table_third_score_detail20200216` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200217
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200217`;
CREATE TABLE `table_third_score_detail20200217` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200218
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200218`;
CREATE TABLE `table_third_score_detail20200218` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200219
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200219`;
CREATE TABLE `table_third_score_detail20200219` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200220
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200220`;
CREATE TABLE `table_third_score_detail20200220` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200301
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200301`;
CREATE TABLE `table_third_score_detail20200301` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20200302
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20200302`;
CREATE TABLE `table_third_score_detail20200302` (
  `ID` bigint(20) unsigned NOT NULL COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210301
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210301`;
CREATE TABLE `table_third_score_detail20210301` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210302
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210302`;
CREATE TABLE `table_third_score_detail20210302` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=167 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210303
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210303`;
CREATE TABLE `table_third_score_detail20210303` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210304
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210304`;
CREATE TABLE `table_third_score_detail20210304` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210305
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210305`;
CREATE TABLE `table_third_score_detail20210305` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210306
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210306`;
CREATE TABLE `table_third_score_detail20210306` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210307
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210307`;
CREATE TABLE `table_third_score_detail20210307` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210308
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210308`;
CREATE TABLE `table_third_score_detail20210308` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210309
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210309`;
CREATE TABLE `table_third_score_detail20210309` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=94 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210310
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210310`;
CREATE TABLE `table_third_score_detail20210310` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210311
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210311`;
CREATE TABLE `table_third_score_detail20210311` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210312
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210312`;
CREATE TABLE `table_third_score_detail20210312` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210313
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210313`;
CREATE TABLE `table_third_score_detail20210313` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210314
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210314`;
CREATE TABLE `table_third_score_detail20210314` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210315
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210315`;
CREATE TABLE `table_third_score_detail20210315` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210316
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210316`;
CREATE TABLE `table_third_score_detail20210316` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210317
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210317`;
CREATE TABLE `table_third_score_detail20210317` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210318
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210318`;
CREATE TABLE `table_third_score_detail20210318` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210319
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210319`;
CREATE TABLE `table_third_score_detail20210319` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210320
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210320`;
CREATE TABLE `table_third_score_detail20210320` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210321
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210321`;
CREATE TABLE `table_third_score_detail20210321` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210322
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210322`;
CREATE TABLE `table_third_score_detail20210322` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210323
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210323`;
CREATE TABLE `table_third_score_detail20210323` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210324
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210324`;
CREATE TABLE `table_third_score_detail20210324` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210325
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210325`;
CREATE TABLE `table_third_score_detail20210325` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210326
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210326`;
CREATE TABLE `table_third_score_detail20210326` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=51 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210327
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210327`;
CREATE TABLE `table_third_score_detail20210327` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210328
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210328`;
CREATE TABLE `table_third_score_detail20210328` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210329
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210329`;
CREATE TABLE `table_third_score_detail20210329` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210330
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210330`;
CREATE TABLE `table_third_score_detail20210330` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210331
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210331`;
CREATE TABLE `table_third_score_detail20210331` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210401
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210401`;
CREATE TABLE `table_third_score_detail20210401` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210402
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210402`;
CREATE TABLE `table_third_score_detail20210402` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210403
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210403`;
CREATE TABLE `table_third_score_detail20210403` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210404
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210404`;
CREATE TABLE `table_third_score_detail20210404` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210405
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210405`;
CREATE TABLE `table_third_score_detail20210405` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210406
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210406`;
CREATE TABLE `table_third_score_detail20210406` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210407
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210407`;
CREATE TABLE `table_third_score_detail20210407` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210408
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210408`;
CREATE TABLE `table_third_score_detail20210408` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210409
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210409`;
CREATE TABLE `table_third_score_detail20210409` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210410
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210410`;
CREATE TABLE `table_third_score_detail20210410` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210411
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210411`;
CREATE TABLE `table_third_score_detail20210411` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210412
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210412`;
CREATE TABLE `table_third_score_detail20210412` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210413
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210413`;
CREATE TABLE `table_third_score_detail20210413` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210414
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210414`;
CREATE TABLE `table_third_score_detail20210414` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210415
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210415`;
CREATE TABLE `table_third_score_detail20210415` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210416
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210416`;
CREATE TABLE `table_third_score_detail20210416` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210417
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210417`;
CREATE TABLE `table_third_score_detail20210417` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210418
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210418`;
CREATE TABLE `table_third_score_detail20210418` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210419
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210419`;
CREATE TABLE `table_third_score_detail20210419` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210420
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210420`;
CREATE TABLE `table_third_score_detail20210420` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210421
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210421`;
CREATE TABLE `table_third_score_detail20210421` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210422
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210422`;
CREATE TABLE `table_third_score_detail20210422` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210423
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210423`;
CREATE TABLE `table_third_score_detail20210423` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=44 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210424
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210424`;
CREATE TABLE `table_third_score_detail20210424` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210425
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210425`;
CREATE TABLE `table_third_score_detail20210425` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210426
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210426`;
CREATE TABLE `table_third_score_detail20210426` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=47 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210427
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210427`;
CREATE TABLE `table_third_score_detail20210427` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210428
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210428`;
CREATE TABLE `table_third_score_detail20210428` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210429
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210429`;
CREATE TABLE `table_third_score_detail20210429` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210430
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210430`;
CREATE TABLE `table_third_score_detail20210430` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210701
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210701`;
CREATE TABLE `table_third_score_detail20210701` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210702
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210702`;
CREATE TABLE `table_third_score_detail20210702` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210703
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210703`;
CREATE TABLE `table_third_score_detail20210703` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210704
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210704`;
CREATE TABLE `table_third_score_detail20210704` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210705
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210705`;
CREATE TABLE `table_third_score_detail20210705` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210706
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210706`;
CREATE TABLE `table_third_score_detail20210706` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210707
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210707`;
CREATE TABLE `table_third_score_detail20210707` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210708
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210708`;
CREATE TABLE `table_third_score_detail20210708` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210709
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210709`;
CREATE TABLE `table_third_score_detail20210709` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210710
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210710`;
CREATE TABLE `table_third_score_detail20210710` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210711
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210711`;
CREATE TABLE `table_third_score_detail20210711` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210712
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210712`;
CREATE TABLE `table_third_score_detail20210712` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210713
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210713`;
CREATE TABLE `table_third_score_detail20210713` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210714
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210714`;
CREATE TABLE `table_third_score_detail20210714` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210715
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210715`;
CREATE TABLE `table_third_score_detail20210715` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210716
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210716`;
CREATE TABLE `table_third_score_detail20210716` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210717
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210717`;
CREATE TABLE `table_third_score_detail20210717` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210718
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210718`;
CREATE TABLE `table_third_score_detail20210718` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210719
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210719`;
CREATE TABLE `table_third_score_detail20210719` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210720
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210720`;
CREATE TABLE `table_third_score_detail20210720` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210721
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210721`;
CREATE TABLE `table_third_score_detail20210721` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210722
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210722`;
CREATE TABLE `table_third_score_detail20210722` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210723
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210723`;
CREATE TABLE `table_third_score_detail20210723` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210724
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210724`;
CREATE TABLE `table_third_score_detail20210724` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210725
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210725`;
CREATE TABLE `table_third_score_detail20210725` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210726
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210726`;
CREATE TABLE `table_third_score_detail20210726` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210727
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210727`;
CREATE TABLE `table_third_score_detail20210727` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210728
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210728`;
CREATE TABLE `table_third_score_detail20210728` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210729
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210729`;
CREATE TABLE `table_third_score_detail20210729` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210730
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210730`;
CREATE TABLE `table_third_score_detail20210730` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210731
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210731`;
CREATE TABLE `table_third_score_detail20210731` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210801
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210801`;
CREATE TABLE `table_third_score_detail20210801` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210802
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210802`;
CREATE TABLE `table_third_score_detail20210802` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1884100000012 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210803
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210803`;
CREATE TABLE `table_third_score_detail20210803` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210804
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210804`;
CREATE TABLE `table_third_score_detail20210804` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210805
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210805`;
CREATE TABLE `table_third_score_detail20210805` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1884400000007 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210806
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210806`;
CREATE TABLE `table_third_score_detail20210806` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1884500000011 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210807
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210807`;
CREATE TABLE `table_third_score_detail20210807` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210808
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210808`;
CREATE TABLE `table_third_score_detail20210808` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210809
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210809`;
CREATE TABLE `table_third_score_detail20210809` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210810
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210810`;
CREATE TABLE `table_third_score_detail20210810` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1884900000012 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210811
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210811`;
CREATE TABLE `table_third_score_detail20210811` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1885000000005 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210812
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210812`;
CREATE TABLE `table_third_score_detail20210812` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1885100000004 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210813
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210813`;
CREATE TABLE `table_third_score_detail20210813` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1885200000001 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210814
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210814`;
CREATE TABLE `table_third_score_detail20210814` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210815
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210815`;
CREATE TABLE `table_third_score_detail20210815` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210816
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210816`;
CREATE TABLE `table_third_score_detail20210816` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210817
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210817`;
CREATE TABLE `table_third_score_detail20210817` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1885600000004 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210818
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210818`;
CREATE TABLE `table_third_score_detail20210818` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1885700000001 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210819
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210819`;
CREATE TABLE `table_third_score_detail20210819` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210820
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210820`;
CREATE TABLE `table_third_score_detail20210820` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210821
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210821`;
CREATE TABLE `table_third_score_detail20210821` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210822
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210822`;
CREATE TABLE `table_third_score_detail20210822` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210823
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210823`;
CREATE TABLE `table_third_score_detail20210823` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210824
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210824`;
CREATE TABLE `table_third_score_detail20210824` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210825
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210825`;
CREATE TABLE `table_third_score_detail20210825` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210826
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210826`;
CREATE TABLE `table_third_score_detail20210826` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210827
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210827`;
CREATE TABLE `table_third_score_detail20210827` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1886600000001 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210828
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210828`;
CREATE TABLE `table_third_score_detail20210828` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210829
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210829`;
CREATE TABLE `table_third_score_detail20210829` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210830
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210830`;
CREATE TABLE `table_third_score_detail20210830` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210831
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210831`;
CREATE TABLE `table_third_score_detail20210831` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210901
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210901`;
CREATE TABLE `table_third_score_detail20210901` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1887100000002 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210902
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210902`;
CREATE TABLE `table_third_score_detail20210902` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210903
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210903`;
CREATE TABLE `table_third_score_detail20210903` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1887300000009 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210904
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210904`;
CREATE TABLE `table_third_score_detail20210904` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210905
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210905`;
CREATE TABLE `table_third_score_detail20210905` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210906
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210906`;
CREATE TABLE `table_third_score_detail20210906` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210907
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210907`;
CREATE TABLE `table_third_score_detail20210907` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210908
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210908`;
CREATE TABLE `table_third_score_detail20210908` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210909
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210909`;
CREATE TABLE `table_third_score_detail20210909` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210910
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210910`;
CREATE TABLE `table_third_score_detail20210910` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1888000000001 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210911
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210911`;
CREATE TABLE `table_third_score_detail20210911` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1888100000006 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210912
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210912`;
CREATE TABLE `table_third_score_detail20210912` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210913
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210913`;
CREATE TABLE `table_third_score_detail20210913` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1888300000001 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210914
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210914`;
CREATE TABLE `table_third_score_detail20210914` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1888400000028 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210915
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210915`;
CREATE TABLE `table_third_score_detail20210915` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1888500000001 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210916
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210916`;
CREATE TABLE `table_third_score_detail20210916` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210917
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210917`;
CREATE TABLE `table_third_score_detail20210917` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210918
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210918`;
CREATE TABLE `table_third_score_detail20210918` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210919
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210919`;
CREATE TABLE `table_third_score_detail20210919` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210920
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210920`;
CREATE TABLE `table_third_score_detail20210920` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210921
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210921`;
CREATE TABLE `table_third_score_detail20210921` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210922
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210922`;
CREATE TABLE `table_third_score_detail20210922` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210923
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210923`;
CREATE TABLE `table_third_score_detail20210923` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1889300000009 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210924
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210924`;
CREATE TABLE `table_third_score_detail20210924` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210925
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210925`;
CREATE TABLE `table_third_score_detail20210925` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210926
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210926`;
CREATE TABLE `table_third_score_detail20210926` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1889600000002 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210927
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210927`;
CREATE TABLE `table_third_score_detail20210927` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210928
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210928`;
CREATE TABLE `table_third_score_detail20210928` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210929
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210929`;
CREATE TABLE `table_third_score_detail20210929` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20210930
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20210930`;
CREATE TABLE `table_third_score_detail20210930` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211001
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211001`;
CREATE TABLE `table_third_score_detail20211001` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211002
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211002`;
CREATE TABLE `table_third_score_detail20211002` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211003
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211003`;
CREATE TABLE `table_third_score_detail20211003` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211004
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211004`;
CREATE TABLE `table_third_score_detail20211004` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211005
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211005`;
CREATE TABLE `table_third_score_detail20211005` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211006
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211006`;
CREATE TABLE `table_third_score_detail20211006` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211007
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211007`;
CREATE TABLE `table_third_score_detail20211007` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211008
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211008`;
CREATE TABLE `table_third_score_detail20211008` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211009
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211009`;
CREATE TABLE `table_third_score_detail20211009` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211010
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211010`;
CREATE TABLE `table_third_score_detail20211010` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211011
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211011`;
CREATE TABLE `table_third_score_detail20211011` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211012
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211012`;
CREATE TABLE `table_third_score_detail20211012` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211013
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211013`;
CREATE TABLE `table_third_score_detail20211013` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211014
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211014`;
CREATE TABLE `table_third_score_detail20211014` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211015
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211015`;
CREATE TABLE `table_third_score_detail20211015` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1891500000001 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211016
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211016`;
CREATE TABLE `table_third_score_detail20211016` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211017
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211017`;
CREATE TABLE `table_third_score_detail20211017` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211018
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211018`;
CREATE TABLE `table_third_score_detail20211018` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211019
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211019`;
CREATE TABLE `table_third_score_detail20211019` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211020
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211020`;
CREATE TABLE `table_third_score_detail20211020` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211021
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211021`;
CREATE TABLE `table_third_score_detail20211021` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211022
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211022`;
CREATE TABLE `table_third_score_detail20211022` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211023
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211023`;
CREATE TABLE `table_third_score_detail20211023` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211024
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211024`;
CREATE TABLE `table_third_score_detail20211024` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211025
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211025`;
CREATE TABLE `table_third_score_detail20211025` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1892500000006 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211026
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211026`;
CREATE TABLE `table_third_score_detail20211026` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211027
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211027`;
CREATE TABLE `table_third_score_detail20211027` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211028
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211028`;
CREATE TABLE `table_third_score_detail20211028` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211029
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211029`;
CREATE TABLE `table_third_score_detail20211029` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211030
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211030`;
CREATE TABLE `table_third_score_detail20211030` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211031
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211031`;
CREATE TABLE `table_third_score_detail20211031` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211101
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211101`;
CREATE TABLE `table_third_score_detail20211101` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211102
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211102`;
CREATE TABLE `table_third_score_detail20211102` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211103
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211103`;
CREATE TABLE `table_third_score_detail20211103` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211104
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211104`;
CREATE TABLE `table_third_score_detail20211104` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211105
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211105`;
CREATE TABLE `table_third_score_detail20211105` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211106
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211106`;
CREATE TABLE `table_third_score_detail20211106` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211107
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211107`;
CREATE TABLE `table_third_score_detail20211107` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211108
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211108`;
CREATE TABLE `table_third_score_detail20211108` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211109
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211109`;
CREATE TABLE `table_third_score_detail20211109` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211110
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211110`;
CREATE TABLE `table_third_score_detail20211110` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211111
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211111`;
CREATE TABLE `table_third_score_detail20211111` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211112
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211112`;
CREATE TABLE `table_third_score_detail20211112` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211113
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211113`;
CREATE TABLE `table_third_score_detail20211113` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211114
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211114`;
CREATE TABLE `table_third_score_detail20211114` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211115
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211115`;
CREATE TABLE `table_third_score_detail20211115` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211116
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211116`;
CREATE TABLE `table_third_score_detail20211116` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211117
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211117`;
CREATE TABLE `table_third_score_detail20211117` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211118
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211118`;
CREATE TABLE `table_third_score_detail20211118` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211119
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211119`;
CREATE TABLE `table_third_score_detail20211119` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211120
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211120`;
CREATE TABLE `table_third_score_detail20211120` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211121
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211121`;
CREATE TABLE `table_third_score_detail20211121` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211122
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211122`;
CREATE TABLE `table_third_score_detail20211122` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211123
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211123`;
CREATE TABLE `table_third_score_detail20211123` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211124
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211124`;
CREATE TABLE `table_third_score_detail20211124` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211125
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211125`;
CREATE TABLE `table_third_score_detail20211125` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211126
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211126`;
CREATE TABLE `table_third_score_detail20211126` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211127
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211127`;
CREATE TABLE `table_third_score_detail20211127` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211128
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211128`;
CREATE TABLE `table_third_score_detail20211128` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211129
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211129`;
CREATE TABLE `table_third_score_detail20211129` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211130
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211130`;
CREATE TABLE `table_third_score_detail20211130` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211208
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211208`;
CREATE TABLE `table_third_score_detail20211208` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211210
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211210`;
CREATE TABLE `table_third_score_detail20211210` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20211213
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20211213`;
CREATE TABLE `table_third_score_detail20211213` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220101
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220101`;
CREATE TABLE `table_third_score_detail20220101` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1899300000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220102
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220102`;
CREATE TABLE `table_third_score_detail20220102` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1899400000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220103
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220103`;
CREATE TABLE `table_third_score_detail20220103` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1899500000008 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220104
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220104`;
CREATE TABLE `table_third_score_detail20220104` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1899600000006 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220105
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220105`;
CREATE TABLE `table_third_score_detail20220105` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1899700000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220106
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220106`;
CREATE TABLE `table_third_score_detail20220106` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1899800000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220107
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220107`;
CREATE TABLE `table_third_score_detail20220107` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1899900000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220108
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220108`;
CREATE TABLE `table_third_score_detail20220108` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1900000000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220109
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220109`;
CREATE TABLE `table_third_score_detail20220109` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1900100000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220110
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220110`;
CREATE TABLE `table_third_score_detail20220110` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1900200000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220111
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220111`;
CREATE TABLE `table_third_score_detail20220111` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1900300000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220112
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220112`;
CREATE TABLE `table_third_score_detail20220112` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1900400000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220113
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220113`;
CREATE TABLE `table_third_score_detail20220113` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1900500000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220114
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220114`;
CREATE TABLE `table_third_score_detail20220114` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1900600000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220115
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220115`;
CREATE TABLE `table_third_score_detail20220115` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1900700000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220116
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220116`;
CREATE TABLE `table_third_score_detail20220116` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1900800000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220117
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220117`;
CREATE TABLE `table_third_score_detail20220117` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1900900000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220118
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220118`;
CREATE TABLE `table_third_score_detail20220118` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1901000000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220119
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220119`;
CREATE TABLE `table_third_score_detail20220119` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1901100000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220120
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220120`;
CREATE TABLE `table_third_score_detail20220120` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1901200000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220121
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220121`;
CREATE TABLE `table_third_score_detail20220121` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1901300000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220122
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220122`;
CREATE TABLE `table_third_score_detail20220122` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1901400000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220123
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220123`;
CREATE TABLE `table_third_score_detail20220123` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1901500000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220124
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220124`;
CREATE TABLE `table_third_score_detail20220124` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1901600000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220125
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220125`;
CREATE TABLE `table_third_score_detail20220125` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1901700000001 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220126
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220126`;
CREATE TABLE `table_third_score_detail20220126` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1901800000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220127
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220127`;
CREATE TABLE `table_third_score_detail20220127` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1901900000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220128
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220128`;
CREATE TABLE `table_third_score_detail20220128` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1902000000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220129
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220129`;
CREATE TABLE `table_third_score_detail20220129` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1902100000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220130
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220130`;
CREATE TABLE `table_third_score_detail20220130` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1902200000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220131
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220131`;
CREATE TABLE `table_third_score_detail20220131` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1902300000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220201
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220201`;
CREATE TABLE `table_third_score_detail20220201` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1902400000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220202
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220202`;
CREATE TABLE `table_third_score_detail20220202` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1902500000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220203
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220203`;
CREATE TABLE `table_third_score_detail20220203` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1902600000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220204
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220204`;
CREATE TABLE `table_third_score_detail20220204` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1902700000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220205
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220205`;
CREATE TABLE `table_third_score_detail20220205` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1902800000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220206
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220206`;
CREATE TABLE `table_third_score_detail20220206` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1902900000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220207
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220207`;
CREATE TABLE `table_third_score_detail20220207` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1903000000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220208
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220208`;
CREATE TABLE `table_third_score_detail20220208` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1903100000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220209
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220209`;
CREATE TABLE `table_third_score_detail20220209` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1903200000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220210
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220210`;
CREATE TABLE `table_third_score_detail20220210` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1903300000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220211
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220211`;
CREATE TABLE `table_third_score_detail20220211` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1903400000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220212
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220212`;
CREATE TABLE `table_third_score_detail20220212` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1903500000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220213
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220213`;
CREATE TABLE `table_third_score_detail20220213` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1903600000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220214
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220214`;
CREATE TABLE `table_third_score_detail20220214` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1903700000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220215
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220215`;
CREATE TABLE `table_third_score_detail20220215` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1903800000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220216
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220216`;
CREATE TABLE `table_third_score_detail20220216` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1903900000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220217
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220217`;
CREATE TABLE `table_third_score_detail20220217` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1904000000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220218
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220218`;
CREATE TABLE `table_third_score_detail20220218` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1904100000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220219
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220219`;
CREATE TABLE `table_third_score_detail20220219` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1904200000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220220
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220220`;
CREATE TABLE `table_third_score_detail20220220` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1904300000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220221
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220221`;
CREATE TABLE `table_third_score_detail20220221` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1904400000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220222
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220222`;
CREATE TABLE `table_third_score_detail20220222` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1904500000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220223
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220223`;
CREATE TABLE `table_third_score_detail20220223` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1904600000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220224
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220224`;
CREATE TABLE `table_third_score_detail20220224` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1904700000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220225
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220225`;
CREATE TABLE `table_third_score_detail20220225` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1904800000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220226
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220226`;
CREATE TABLE `table_third_score_detail20220226` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1904900000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220227
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220227`;
CREATE TABLE `table_third_score_detail20220227` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1905000000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_score_detail20220228
-- ----------------------------
DROP TABLE IF EXISTS `table_third_score_detail20220228`;
CREATE TABLE `table_third_score_detail20220228` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
  KEY `idx_szToken` (`szToken`)
) ENGINE=InnoDB AUTO_INCREMENT=1905100000000 DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';

-- ----------------------------
-- Table structure for table_third_token
-- ----------------------------
DROP TABLE IF EXISTS `table_third_token`;
CREATE TABLE `table_third_token` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `szToken` varchar(32) NOT NULL DEFAULT '' COMMENT 'Token',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=28817 DEFAULT CHARSET=utf8mb4 COMMENT='第三方平台Token表';

-- ----------------------------
-- Table structure for table_user
-- ----------------------------
DROP TABLE IF EXISTS `table_user`;
CREATE TABLE `table_user` (
  `nPlayerId` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '玩家用户Id',
  `nCardCount` int(11) NOT NULL DEFAULT '0' COMMENT '钻石数量',
  `nJinBi` bigint(20) NOT NULL DEFAULT '0' COMMENT '金币数量',
  `szCreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `nActive` int(11) NOT NULL DEFAULT '1' COMMENT '是否有效；0-禁止登录,1-正常,2-禁提,4-禁玩,6-禁玩&禁提',
  `nSex` int(11) NOT NULL DEFAULT '2' COMMENT '激活标志',
  `szPass` varchar(64) NOT NULL COMMENT '密码',
  `szOpenId` varchar(128) DEFAULT NULL COMMENT 'openid-微信',
  `szNickName` varchar(64) DEFAULT NULL COMMENT '昵称',
  `szHeadPicUrl` varchar(512) DEFAULT NULL COMMENT '头像地址',
  `szSign` varchar(256) DEFAULT NULL COMMENT '签名',
  `extendCode` int(11) DEFAULT '0' COMMENT '推广码',
  `preLoginTime` timestamp NULL DEFAULT NULL COMMENT '登录时间',
  `preLoginIp` varchar(64) DEFAULT NULL COMMENT '登录IP',
  `onlineSta` int(11) DEFAULT NULL COMMENT '在线状态',
  `reser1` int(11) DEFAULT NULL COMMENT '破产保护金币',
  `reser2` int(11) DEFAULT NULL COMMENT '每日3次赠送金币',
  `reset3` int(11) DEFAULT NULL,
  `reset4` int(11) DEFAULT NULL,
  `acctype` int(11) DEFAULT '0' COMMENT '身份标识',
  `strre1` varchar(128) DEFAULT NULL COMMENT '用来装注册时的IP',
  `strre2` varchar(128) DEFAULT NULL,
  `BindingTime` timestamp NULL DEFAULT NULL,
  `score` int(11) DEFAULT NULL COMMENT '玩家积分',
  `phone` varchar(15) DEFAULT NULL COMMENT '手机号码',
  `phobindtime` datetime DEFAULT NULL COMMENT '手机号绑定时间',
  `phounbindtime` datetime DEFAULT NULL COMMENT '手机号解绑时间',
  `nScoreDay` int(11) NOT NULL DEFAULT '0' COMMENT '每日积分',
  `nScoreTotal` int(11) NOT NULL DEFAULT '0' COMMENT '累计积分',
  `nBonus1` int(11) NOT NULL DEFAULT '0' COMMENT '累计奖励领取标记 0-不可领 1-可领 2-已领',
  `nBonus2` int(11) NOT NULL DEFAULT '0' COMMENT '累计奖励领取标记 0-不可领 1-可领 2-已领',
  `nBonus3` int(11) NOT NULL DEFAULT '0' COMMENT '累计奖励领取标记 0-不可领 1-可领 2-已领',
  `szThirdAccount` varchar(64) DEFAULT NULL COMMENT '第三方账号',
  `szThirdPass` varchar(64) DEFAULT NULL COMMENT '第三方密码',
  `nChannel` int(11) DEFAULT NULL COMMENT '渠道标识',
  `tGoldLoginTime` timestamp NULL DEFAULT NULL COMMENT '登录金币场时间',
  `udid` varchar(256) DEFAULT NULL COMMENT '手机唯一码',
  `packid` int(11) DEFAULT NULL COMMENT '玩家使用包的唯一码',
  `updatediamond` int(11) NOT NULL DEFAULT '0' COMMENT '增加的钻石',
  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
  `nLastClubID` int(11) DEFAULT '0' COMMENT '最后登录的俱乐部ID',
  `wxid` varchar(256) NOT NULL DEFAULT '' COMMENT '微信ID',
  `realName` varchar(32) NOT NULL DEFAULT '' COMMENT '姓名',
  `perID` varchar(128) NOT NULL DEFAULT '' COMMENT '身份证',
  PRIMARY KEY (`nPlayerId`),
  KEY `table_user_idx_phone` (`phone`),
  KEY `idx_preLoginIp` (`preLoginIp`),
  KEY `idx_szThirdAccount` (`szThirdAccount`(10),`nChannel`) USING BTREE,
  KEY `idx_szOpenId` (`szOpenId`(15)),
  KEY `idx_szCreateTime` (`szCreateTime`),
  KEY `idx_extendCode` (`extendCode`)
) ENGINE=InnoDB AUTO_INCREMENT=132441 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_user_gamelock
-- ----------------------------
DROP TABLE IF EXISTS `table_user_gamelock`;
CREATE TABLE `table_user_gamelock` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nTablePreID` int(11) DEFAULT '0' COMMENT '进入的桌子前缀',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`)
) ENGINE=InnoDB AUTO_INCREMENT=41332 DEFAULT CHARSET=utf8mb4 COMMENT='用户游戏锁定表';

-- ----------------------------
-- Table structure for table_user_game_history
-- ----------------------------
DROP TABLE IF EXISTS `table_user_game_history`;
CREATE TABLE `table_user_game_history` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏类型',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`)
) ENGINE=InnoDB AUTO_INCREMENT=491 DEFAULT CHARSET=utf8mb4 COMMENT='用户游戏记录表（用于记录用户玩过的游戏历史）';

-- ----------------------------
-- Table structure for table_user_msg
-- ----------------------------
DROP TABLE IF EXISTS `table_user_msg`;
CREATE TABLE `table_user_msg` (
  `nMsgId` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '消息id',
  `nPlayerId` int(10) NOT NULL COMMENT '玩家用户Id',
  `nMsgType` int(10) NOT NULL COMMENT '消息类型 100:公告 200:邮件消息 300:消息中心',
  `nIsRead` int(10) NOT NULL DEFAULT '0' COMMENT '是否已阅读',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '消息生成时间',
  `sMsgTitle` varchar(128) DEFAULT NULL COMMENT '消息标题',
  `sMsgBody` varchar(1024) DEFAULT NULL COMMENT '消息内容',
  `nIsReward` int(10) DEFAULT '0',
  PRIMARY KEY (`nMsgId`),
  KEY `user_msg_idx_nPlayerId` (`nPlayerId`),
  KEY `user_msg_idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_warn
-- ----------------------------
DROP TABLE IF EXISTS `table_warn`;
CREATE TABLE `table_warn` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID,为0代表是钻石警告',
  `nMySqlCount` bigint(20) NOT NULL COMMENT 'MySQL中的值',
  `nRedisCount` bigint(20) NOT NULL COMMENT 'Redis中存的值',
  `nType` int(11) NOT NULL COMMENT '类型：1代表游戏中扣 2 代表和数据库的同步',
  `nAmount` bigint(20) NOT NULL COMMENT '本次要改变的值',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_nClubID` (`nClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=38468 DEFAULT CHARSET=utf8mb4 COMMENT='钻石和俱乐部积分数据库和redis 不一致告警';

-- ----------------------------
-- Table structure for table_webdata_analysis_dailyonline
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_analysis_dailyonline`;
CREATE TABLE `table_webdata_analysis_dailyonline` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键Id,自增',
  `nClubId` int(11) NOT NULL DEFAULT '0' COMMENT '俱乐部ID',
  `onlineCount` int(11) NOT NULL DEFAULT '0' COMMENT '在线人数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8mb4 COMMENT='用户行为分析_每日在线会员统计';

-- ----------------------------
-- Table structure for table_webdata_analysis_firstgamehelp
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_analysis_firstgamehelp`;
CREATE TABLE `table_webdata_analysis_firstgamehelp` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerId` int(11) NOT NULL COMMENT '会员ID',
  `firstGameTime` timestamp NULL DEFAULT NULL COMMENT '首次游戏日期',
  `lastGameTime` timestamp NULL DEFAULT NULL COMMENT '最后一次游戏日期',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '日期',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_nPlayerId_firstTime_lastTime` (`nClubId`,`nPlayerId`,`firstGameTime`,`lastGameTime`)
) ENGINE=InnoDB AUTO_INCREMENT=108 DEFAULT CHARSET=utf8mb4 COMMENT='用户行为分析_用户首次、末次游戏辅助表';

-- ----------------------------
-- Table structure for table_webdata_analysis_firstgamehelp_test
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_analysis_firstgamehelp_test`;
CREATE TABLE `table_webdata_analysis_firstgamehelp_test` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerId` int(11) NOT NULL COMMENT '会员ID',
  `firstGameTime` timestamp NULL DEFAULT NULL COMMENT '首次游戏日期',
  `lastGameTime` timestamp NULL DEFAULT NULL COMMENT '最后一次游戏日期',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '日期',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_nPlayerId_firstTime_lastTime` (`nClubId`,`nPlayerId`,`firstGameTime`,`lastGameTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户行为分析_用户首次、末次游戏辅助表';

-- ----------------------------
-- Table structure for table_webdata_analysis_firstrechargehelp
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_analysis_firstrechargehelp`;
CREATE TABLE `table_webdata_analysis_firstrechargehelp` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerId` int(11) NOT NULL COMMENT '会员ID',
  `firstRechargeTime` timestamp NULL DEFAULT NULL COMMENT '首次充值日期',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '日期',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_nPlayerId_firstTime` (`nClubId`,`nPlayerId`,`firstRechargeTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户行为分析_用户首次充值辅助表';

-- ----------------------------
-- Table structure for table_webdata_analysis_firstrechargehelp_test
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_analysis_firstrechargehelp_test`;
CREATE TABLE `table_webdata_analysis_firstrechargehelp_test` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerId` int(11) NOT NULL COMMENT '会员ID',
  `firstRechargeTime` timestamp NULL DEFAULT NULL COMMENT '首次充值日期',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '日期',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_nPlayerId_firstTime` (`nClubId`,`nPlayerId`,`firstRechargeTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户行为分析_用户首次充值辅助表';

-- ----------------------------
-- Table structure for table_webdata_analysis_keeplose
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_analysis_keeplose`;
CREATE TABLE `table_webdata_analysis_keeplose` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) NOT NULL COMMENT '是否是测试俱乐部 0 否; 1 是',
  `addnPlayer` int(11) DEFAULT '0' COMMENT '新增会员',
  `validAddnPlayer` int(11) DEFAULT '0' COMMENT '有效新增会员',
  `twoKeep` int(11) DEFAULT '-1' COMMENT '第二天留存数',
  `twoLose` int(11) DEFAULT '-1' COMMENT '第二天流失数',
  `threeKeep` int(11) DEFAULT '-1' COMMENT '第三天留存数',
  `threeLose` int(11) DEFAULT '-1' COMMENT '第三天流失数',
  `fourKeep` int(11) DEFAULT '-1' COMMENT '第四天留存数',
  `fourLose` int(11) DEFAULT '-1' COMMENT '第四天流失数',
  `fivesKeep` int(11) DEFAULT '-1' COMMENT '第五天留存数',
  `fivesLose` int(11) DEFAULT '-1' COMMENT '第五天流失数',
  `sixKeep` int(11) DEFAULT '-1' COMMENT '第六天留存数',
  `sixLose` int(11) DEFAULT '-1' COMMENT '第六天流失数',
  `sevenKeep` int(11) DEFAULT '-1' COMMENT '第七天留存数',
  `sevenLose` int(11) DEFAULT '-1' COMMENT '第七天流失数',
  `fourteenKeep` int(11) DEFAULT '-1' COMMENT '第十四天留存数',
  `fourteenLose` int(11) DEFAULT '-1' COMMENT '第十四天流失数',
  `monthKeep` int(11) DEFAULT '-1' COMMENT '月留存数',
  `monthLose` int(11) DEFAULT '-1' COMMENT '月流失数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=245037 DEFAULT CHARSET=utf8mb4 COMMENT='用户行为分析_新会员留存/流失';

-- ----------------------------
-- Table structure for table_webdata_analysis_keeplose_test
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_analysis_keeplose_test`;
CREATE TABLE `table_webdata_analysis_keeplose_test` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) NOT NULL COMMENT '是否是测试俱乐部 0 否; 1 是',
  `addnPlayer` int(11) DEFAULT '0' COMMENT '新增会员',
  `validAddnPlayer` int(11) DEFAULT '0' COMMENT '有效新增会员',
  `twoKeep` int(11) DEFAULT '-1' COMMENT '第二天留存数',
  `twoLose` int(11) DEFAULT '-1' COMMENT '第二天流失数',
  `threeKeep` int(11) DEFAULT '-1' COMMENT '第三天留存数',
  `threeLose` int(11) DEFAULT '-1' COMMENT '第三天流失数',
  `fourKeep` int(11) DEFAULT '-1' COMMENT '第四天留存数',
  `fourLose` int(11) DEFAULT '-1' COMMENT '第四天流失数',
  `fivesKeep` int(11) DEFAULT '-1' COMMENT '第五天留存数',
  `fivesLose` int(11) DEFAULT '-1' COMMENT '第五天流失数',
  `sixKeep` int(11) DEFAULT '-1' COMMENT '第六天留存数',
  `sixLose` int(11) DEFAULT '-1' COMMENT '第六天流失数',
  `sevenKeep` int(11) DEFAULT '-1' COMMENT '第七天留存数',
  `sevenLose` int(11) DEFAULT '-1' COMMENT '第七天流失数',
  `fourteenKeep` int(11) DEFAULT '-1' COMMENT '第十四天留存数',
  `fourteenLose` int(11) DEFAULT '-1' COMMENT '第十四天流失数',
  `monthKeep` int(11) DEFAULT '-1' COMMENT '月留存数',
  `monthLose` int(11) DEFAULT '-1' COMMENT '月流失数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=158 DEFAULT CHARSET=utf8mb4 COMMENT='用户行为分析_新会员留存/流失';

-- ----------------------------
-- Table structure for table_webdata_analysis_pay
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_analysis_pay`;
CREATE TABLE `table_webdata_analysis_pay` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) NOT NULL COMMENT '是否是测试俱乐部 0 否; 1 是',
  `addnPlayer` int(11) DEFAULT '0' COMMENT '新增会员',
  `validAddnPlayer` int(11) DEFAULT '0' COMMENT '有效新增会员',
  `dayPay` int(11) DEFAULT '-1' COMMENT '当天新增充值会员数',
  `twoPay` int(11) DEFAULT '-1' COMMENT '第二天新增充值会员数',
  `threePay` int(11) DEFAULT '-1' COMMENT '第三天新增充值会员数',
  `fourPay` int(11) DEFAULT '-1' COMMENT '第四天新增充值会员数',
  `fivesPay` int(11) DEFAULT '-1' COMMENT '第五天新增充值会员数',
  `sixPay` int(11) DEFAULT '-1' COMMENT '第六天新增充值会员数',
  `sevenPay` int(11) DEFAULT '-1' COMMENT '第七天新增充值会员数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=60783 DEFAULT CHARSET=utf8mb4 COMMENT='用户行为分析_充值会员转化';

-- ----------------------------
-- Table structure for table_webdata_analysis_pay_test
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_analysis_pay_test`;
CREATE TABLE `table_webdata_analysis_pay_test` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) NOT NULL COMMENT '是否是测试俱乐部 0 否; 1 是',
  `addnPlayer` int(11) DEFAULT '0' COMMENT '新增会员',
  `validAddnPlayer` int(11) DEFAULT '0' COMMENT '有效新增会员',
  `dayPay` int(11) DEFAULT '-1' COMMENT '当天新增充值会员数',
  `twoPay` int(11) DEFAULT '-1' COMMENT '第二天新增充值会员数',
  `threePay` int(11) DEFAULT '-1' COMMENT '第三天新增充值会员数',
  `fourPay` int(11) DEFAULT '-1' COMMENT '第四天新增充值会员数',
  `fivesPay` int(11) DEFAULT '-1' COMMENT '第五天新增充值会员数',
  `sixPay` int(11) DEFAULT '-1' COMMENT '第六天新增充值会员数',
  `sevenPay` int(11) DEFAULT '-1' COMMENT '第七天新增充值会员数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=157 DEFAULT CHARSET=utf8mb4 COMMENT='用户行为分析_充值会员转化';

-- ----------------------------
-- Table structure for table_webdata_analysis_trans
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_analysis_trans`;
CREATE TABLE `table_webdata_analysis_trans` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) NOT NULL COMMENT '是否是测试俱乐部 0 否; 1 是',
  `addnPlayer` int(11) DEFAULT '0' COMMENT '新增会员',
  `validAddnPlayer` int(11) DEFAULT '0' COMMENT '有效新增会员',
  `dayTrans` int(11) DEFAULT '-1' COMMENT '当天玩家转化数',
  `twoTrans` int(11) DEFAULT '-1' COMMENT '第二天玩家转化数',
  `threeTrans` int(11) DEFAULT '-1' COMMENT '第三天玩家转化数',
  `fourTrans` int(11) DEFAULT '-1' COMMENT '第四天玩家转化数',
  `fivesTrans` int(11) DEFAULT '-1' COMMENT '第五天玩家转化数',
  `sixTrans` int(11) DEFAULT '-1' COMMENT '第六天玩家转化数',
  `sevenTrans` int(11) DEFAULT '-1' COMMENT '第七天玩家转化数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=245037 DEFAULT CHARSET=utf8mb4 COMMENT='用户行为分析_游戏玩家转化';

-- ----------------------------
-- Table structure for table_webdata_analysis_trans_test
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_analysis_trans_test`;
CREATE TABLE `table_webdata_analysis_trans_test` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) NOT NULL COMMENT '是否是测试俱乐部 0 否; 1 是',
  `addnPlayer` int(11) DEFAULT '0' COMMENT '新增会员',
  `validAddnPlayer` int(11) DEFAULT '0' COMMENT '有效新增会员',
  `dayTrans` int(11) DEFAULT '-1' COMMENT '当天玩家转化数',
  `twoTrans` int(11) DEFAULT '-1' COMMENT '第二天玩家转化数',
  `threeTrans` int(11) DEFAULT '-1' COMMENT '第三天玩家转化数',
  `fourTrans` int(11) DEFAULT '-1' COMMENT '第四天玩家转化数',
  `fivesTrans` int(11) DEFAULT '-1' COMMENT '第五天玩家转化数',
  `sixTrans` int(11) DEFAULT '-1' COMMENT '第六天玩家转化数',
  `sevenTrans` int(11) DEFAULT '-1' COMMENT '第七天玩家转化数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=158 DEFAULT CHARSET=utf8mb4 COMMENT='用户行为分析_游戏玩家转化';

-- ----------------------------
-- Table structure for table_webdata_appproxdata
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_appproxdata`;
CREATE TABLE `table_webdata_appproxdata` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID(运营商)',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '会员Id(代理)',
  `nExLevel` int(11) DEFAULT '0' COMMENT '会员等级',
  `nExtenId` int(11) DEFAULT '0' COMMENT '上线会员Id',
  `nRechargeAmount` bigint(20) DEFAULT '0' COMMENT '充值金额',
  `nWithdrawalAmount` bigint(20) DEFAULT '0' COMMENT '提现金额',
  `nUpScore` bigint(20) DEFAULT '0' COMMENT '手动上分',
  `nDownScore` bigint(20) DEFAULT '0' COMMENT '手动下分',
  `nTaskAmount` bigint(20) DEFAULT '0' COMMENT '任务得金',
  `nActivityAmount` bigint(20) DEFAULT '0' COMMENT '活动得金',
  `nReturnAmount` bigint(20) DEFAULT '0' COMMENT '返佣',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '游戏抽水',
  `nScore` bigint(20) DEFAULT '0' COMMENT '余额',
  `nRechargeNumber` int(11) DEFAULT '0' COMMENT '充值人数',
  `nRechargeCount` int(11) DEFAULT '0' COMMENT '充值次数',
  `nWithdrawalNumber` int(11) DEFAULT '0' COMMENT '提现人数',
  `nWithdrawalCount` int(11) DEFAULT '0' COMMENT '提现次数',
  `nDirectNumber` int(11) DEFAULT '0' COMMENT '当天新增直属会员',
  `nDirectWater` bigint(20) DEFAULT '0' COMMENT '当天直属流水',
  `nTeamNumber` int(11) DEFAULT '0' COMMENT '当天新增团队人数',
  `nTeamWater` bigint(20) DEFAULT '0' COMMENT '当天团队流水',
  `nTeamReturnAmount` bigint(20) DEFAULT '0' COMMENT '当天团队返佣',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `matchFee` bigint(20) DEFAULT '0' COMMENT '扣报名费',
  `returnMatchFee` bigint(20) DEFAULT '0' COMMENT '退报名费',
  `matchAmount` bigint(20) DEFAULT '0' COMMENT '比赛奖励',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8mb4 COMMENT='App代理-代理数据';

-- ----------------------------
-- Table structure for table_webdata_appproxdataline
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_appproxdataline`;
CREATE TABLE `table_webdata_appproxdataline` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID(运营商)',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '会员Id(代理)',
  `nExLevel` int(11) DEFAULT '0' COMMENT '会员等级',
  `nExtenId` int(11) DEFAULT '0' COMMENT '上线会员Id',
  `nRechargeAmount` bigint(20) DEFAULT '0' COMMENT '充值金额',
  `nWithdrawalAmount` bigint(20) DEFAULT '0' COMMENT '提现金额',
  `nUpScore` bigint(20) DEFAULT '0' COMMENT '手动上分',
  `nDownScore` bigint(20) DEFAULT '0' COMMENT '手动下分',
  `nTaskAmount` bigint(20) DEFAULT '0' COMMENT '任务得金',
  `nActivityAmount` bigint(20) DEFAULT '0' COMMENT '活动得金',
  `nReturnAmount` bigint(20) DEFAULT '0' COMMENT '返佣',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '游戏抽水',
  `nScore` bigint(20) DEFAULT '0' COMMENT '余额',
  `nRechargeNumber` int(11) DEFAULT '0' COMMENT '充值人数',
  `nRechargeCount` int(11) DEFAULT '0' COMMENT '充值次数',
  `nWithdrawalNumber` int(11) DEFAULT '0' COMMENT '提现人数',
  `nWithdrawalCount` int(11) DEFAULT '0' COMMENT '提现次数',
  `nDirectNumber` int(11) DEFAULT '0' COMMENT '当天新增直属会员',
  `nDirectWater` bigint(20) DEFAULT '0' COMMENT '当天直属流水',
  `nTeamNumber` int(11) DEFAULT '0' COMMENT '当天新增团队人数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `matchFee` bigint(20) DEFAULT '0' COMMENT '扣报名费',
  `returnMatchFee` bigint(20) DEFAULT '0' COMMENT '退报名费',
  `matchAmount` bigint(20) DEFAULT '0' COMMENT '比赛奖励',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8mb4 COMMENT='App代理-代理线数据';

-- ----------------------------
-- Table structure for table_webdata_appproxreturnamount
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_appproxreturnamount`;
CREATE TABLE `table_webdata_appproxreturnamount` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID(运营商)',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `validProxy` int(11) DEFAULT '0' COMMENT '有效代理',
  `validProxyAdd` int(11) DEFAULT '0' COMMENT '新增有效代理',
  `activeProxy` int(11) DEFAULT '0' COMMENT '活跃代理',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '当天有效代理流水',
  `nReturnAmount` bigint(20) DEFAULT '0' COMMENT '当天有效代理返佣',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=34331 DEFAULT CHARSET=utf8mb4 COMMENT='App代理-代理返佣';

-- ----------------------------
-- Table structure for table_webdata_everydaytotal
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_everydaytotal`;
CREATE TABLE `table_webdata_everydaytotal` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `proxyType` int(11) DEFAULT '0' COMMENT '运营商类型 1 H5,2 App',
  `nLevel` int(11) DEFAULT '0' COMMENT '运营商等级',
  `addnPlayer` int(11) DEFAULT '0' COMMENT '新增会员',
  `validAddnPlayer` int(11) DEFAULT '0' COMMENT '有效新增会员',
  `loginPlayer` int(11) DEFAULT '0' COMMENT '登录人数',
  `nGameNumber` int(11) DEFAULT '0' COMMENT '游戏人数',
  `nUpScore` bigint(20) DEFAULT '0' COMMENT '手动上分',
  `nDownScore` bigint(20) DEFAULT '0' COMMENT '手动下分',
  `nCashUpScore` bigint(20) DEFAULT '0' COMMENT '现金网上分',
  `nCashDownScore` bigint(20) DEFAULT '0' COMMENT '现金网下分',
  `nRechargeNumber` int(11) DEFAULT '0' COMMENT '充值人数',
  `nRechargeCount` int(11) DEFAULT '0' COMMENT '充值次数',
  `nRechargeAmount` bigint(20) DEFAULT '0' COMMENT '充值金额',
  `nWithdrawalNumber` int(11) DEFAULT '0' COMMENT '提现人数',
  `nWithdrawalCount` int(11) DEFAULT '0' COMMENT '提现次数',
  `nWithdrawalAmount` bigint(20) DEFAULT '0' COMMENT '提现金额',
  `nTaskAmount` bigint(20) DEFAULT '0' COMMENT '任务得金',
  `nActivityAmount` bigint(20) DEFAULT '0' COMMENT '活动得金',
  `nReturnAmount` bigint(20) DEFAULT '0' COMMENT '返佣',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '游戏抽水',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `matchFee` bigint(20) DEFAULT '0' COMMENT '扣报名费',
  `returnMatchFee` bigint(20) DEFAULT '0' COMMENT '退报名费',
  `matchAmount` bigint(20) DEFAULT '0' COMMENT '比赛奖励',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=267194 DEFAULT CHARSET=utf8mb4 COMMENT='每日汇总';

-- ----------------------------
-- Table structure for table_webdata_excelexport
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_excelexport`;
CREATE TABLE `table_webdata_excelexport` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) DEFAULT '0' COMMENT '俱乐部ID',
  `operatUserId` int(11) DEFAULT '0' COMMENT '操作用户Id',
  `operatName` varchar(50) DEFAULT '' COMMENT '操作用户账号',
  `nStatus` int(11) DEFAULT '1' COMMENT '导出状态 1进行中、2已完成',
  `fileName` varchar(50) DEFAULT '' COMMENT '资源名称',
  `fileSize` bigint(20) DEFAULT '0' COMMENT '资源大小/1024=KB/1024=MB',
  `filePath` varchar(200) DEFAULT '' COMMENT '资源路径',
  `totalCount` int(11) DEFAULT '0' COMMENT '总记录数',
  `newGuId` varchar(50) DEFAULT '' COMMENT '标识Id',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '导出开始时间',
  `modifyTime` timestamp NULL DEFAULT NULL COMMENT '导出结束时间',
  PRIMARY KEY (`ID`),
  KEY `idx_newGuId` (`newGuId`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COMMENT='Excel导出记录';

-- ----------------------------
-- Table structure for table_webdata_fee
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_fee`;
CREATE TABLE `table_webdata_fee` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `nClubId` int(11) DEFAULT '0' COMMENT '运营商Id',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏Id',
  `nServerId` int(11) DEFAULT '0' COMMENT '房间Id',
  `matchCount` int(11) DEFAULT '0' COMMENT '举办场次',
  `nPlayerCount` int(11) DEFAULT '0' COMMENT '参与人数',
  `nFeeTotal` bigint(20) DEFAULT '0' COMMENT '总金币报名费',
  `nFeeProxy` bigint(20) DEFAULT '0' COMMENT '金币报名费(运营商)',
  `nFeeCompany` bigint(20) DEFAULT '0' COMMENT '金币报名费(公司)',
  `nFeeRate` int(11) DEFAULT '0' COMMENT '金币分成(运营商)',
  `nFeeGoodsTotal` bigint(20) DEFAULT '0' COMMENT '总物品报名费',
  `nFeeGoodsProxy` bigint(20) DEFAULT '0' COMMENT '物品报名费(运营商)',
  `nFeeGoodsCompany` bigint(20) DEFAULT '0' COMMENT '物品报名费(公司)',
  `nFeeGoodsRate` int(11) DEFAULT '0' COMMENT '物品分成(运营商)',
  `nRewardTotal` bigint(20) DEFAULT '0' COMMENT '总奖励',
  `nRewardProxy` bigint(20) DEFAULT '0' COMMENT '奖励(运营商)',
  `nRewardCompany` bigint(20) DEFAULT '0' COMMENT '奖励(公司)',
  `nRewardRate` int(11) DEFAULT '0' COMMENT '奖励分成(运营商)',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId_nGameType_nServerId` (`nClubId`,`nGameType`,`nServerId`)
) ENGINE=InnoDB AUTO_INCREMENT=71 DEFAULT CHARSET=utf8mb4 COMMENT='比赛--运营商游戏房间报名费';

-- ----------------------------
-- Table structure for table_webdata_feeproxy
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_feeproxy`;
CREATE TABLE `table_webdata_feeproxy` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `nClubId` int(11) DEFAULT '0' COMMENT '运营商Id',
  `nPlayerCount` int(11) DEFAULT '0' COMMENT '参与人数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId_nGameType` (`nClubId`)
) ENGINE=InnoDB AUTO_INCREMENT=28 DEFAULT CHARSET=utf8mb4 COMMENT='比赛--运营商参与人数';

-- ----------------------------
-- Table structure for table_webdata_feeproxygame
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_feeproxygame`;
CREATE TABLE `table_webdata_feeproxygame` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `nClubId` int(11) DEFAULT '0' COMMENT '运营商Id',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏Id',
  `nPlayerCount` int(11) DEFAULT '0' COMMENT '参与人数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId_nGameType` (`nClubId`,`nGameType`)
) ENGINE=InnoDB AUTO_INCREMENT=28 DEFAULT CHARSET=utf8mb4 COMMENT='比赛--运营商游戏参与人数';

-- ----------------------------
-- Table structure for table_webdata_game
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_game`;
CREATE TABLE `table_webdata_game` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏类型',
  `nRoundTabCount` int(11) DEFAULT '0' COMMENT '局数_桌',
  `nRoundNumber` int(11) DEFAULT '0' COMMENT '局数_人',
  `nGameNumber` int(11) DEFAULT '0' COMMENT '游戏人数',
  `nWinTabCount` int(11) DEFAULT '0' COMMENT '赢的桌数',
  `nLoseTabCount` int(11) DEFAULT '0' COMMENT '输的桌数',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '抽水',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=419 DEFAULT CHARSET=utf8mb4 COMMENT='基础数据-游戏汇总表';

-- ----------------------------
-- Table structure for table_webdata_h5proxdata
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_h5proxdata`;
CREATE TABLE `table_webdata_h5proxdata` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `nUpUserId` int(11) DEFAULT '0' COMMENT '上级运营商Id',
  `nUpUserName` varchar(32) DEFAULT '' COMMENT '运营商上级账号',
  `nUpnClubId` int(11) DEFAULT '0' COMMENT '上级俱乐部Id',
  `addnPlayer` int(11) DEFAULT '0' COMMENT '新增会员数',
  `validAddnPlayer` int(11) DEFAULT '0' COMMENT '有效新增会员数',
  `nUpScore` bigint(20) DEFAULT '0' COMMENT '手动上分',
  `nDownScore` bigint(20) DEFAULT '0' COMMENT '手动下分',
  `nTaskAmount` bigint(20) DEFAULT '0' COMMENT '任务得金',
  `nActivityAmount` bigint(20) DEFAULT '0' COMMENT '活动得金',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '游戏抽水',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `matchFee` bigint(20) DEFAULT '0' COMMENT '扣报名费',
  `returnMatchFee` bigint(20) DEFAULT '0' COMMENT '退报名费',
  `matchAmount` bigint(20) DEFAULT '0' COMMENT '比赛奖励',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=266224 DEFAULT CHARSET=utf8mb4 COMMENT='H5代理-代理数据';

-- ----------------------------
-- Table structure for table_webdata_h5proxlinedata
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_h5proxlinedata`;
CREATE TABLE `table_webdata_h5proxlinedata` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `nUpUserId` int(11) DEFAULT '0' COMMENT '上级运营商Id',
  `nUpUserName` varchar(32) DEFAULT '' COMMENT '运营商上级账号',
  `nUpnClubId` int(11) DEFAULT '0' COMMENT '上级俱乐部Id',
  `nNextCount` int(11) DEFAULT '0' COMMENT '下级运营商数',
  `addnPlayer` int(11) DEFAULT '0' COMMENT '新增会员数',
  `validAddnPlayer` int(11) DEFAULT '0' COMMENT '有效新增会员数',
  `nUpScore` bigint(20) DEFAULT '0' COMMENT '手动上分',
  `nDownScore` bigint(20) DEFAULT '0' COMMENT '手动下分',
  `nTaskAmount` bigint(20) DEFAULT '0' COMMENT '任务得金',
  `nActivityAmount` bigint(20) DEFAULT '0' COMMENT '活动得金',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '游戏抽水',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `matchFee` bigint(20) DEFAULT '0' COMMENT '扣报名费',
  `returnMatchFee` bigint(20) DEFAULT '0' COMMENT '退报名费',
  `matchAmount` bigint(20) DEFAULT '0' COMMENT '比赛奖励',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=266736 DEFAULT CHARSET=utf8mb4 COMMENT='H5代理-代理线数据';

-- ----------------------------
-- Table structure for table_webdata_h5proxyline
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_h5proxyline`;
CREATE TABLE `table_webdata_h5proxyline` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) DEFAULT '0' COMMENT '俱乐部ID',
  `nNextID` int(11) DEFAULT '0' COMMENT '下线俱乐部ID',
  `tJoinTime` timestamp NOT NULL COMMENT '加入时间',
  PRIMARY KEY (`ID`),
  KEY `index_nClubID` (`nClubID`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=139 DEFAULT CHARSET=utf8mb4 COMMENT='H5代理-代理线';

-- ----------------------------
-- Table structure for table_webdata_mothrep
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_mothrep`;
CREATE TABLE `table_webdata_mothrep` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `proxyType` int(11) NOT NULL COMMENT '运营商类型 1 H5,2 App',
  `nLevel` int(11) NOT NULL COMMENT '运营商等级',
  `nRechargeAmount` bigint(20) DEFAULT '0' COMMENT '充值总额',
  `nWithdrawalAmount` bigint(20) DEFAULT '0' COMMENT '提现总额',
  `nUpScore` bigint(20) DEFAULT '0' COMMENT '手动上分',
  `nDownScore` bigint(20) DEFAULT '0' COMMENT '手动下分',
  `nCashUpScore` bigint(20) DEFAULT '0' COMMENT '现金网上分',
  `nCashDownScore` bigint(20) DEFAULT '0' COMMENT '现金网下分',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '游戏抽水',
  `nTaskAmount` bigint(20) DEFAULT '0' COMMENT '任务得金',
  `nActivityAmount` bigint(20) DEFAULT '0' COMMENT '活动得金',
  `nReturnAmount` bigint(20) DEFAULT '0' COMMENT '返佣',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `matchFee` bigint(20) DEFAULT '0' COMMENT '扣报名费',
  `returnMatchFee` bigint(20) DEFAULT '0' COMMENT '退报名费',
  `matchAmount` bigint(20) DEFAULT '0' COMMENT '比赛奖励',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=267194 DEFAULT CHARSET=utf8mb4 COMMENT='月度报表';

-- ----------------------------
-- Table structure for table_webdata_operationrep
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_operationrep`;
CREATE TABLE `table_webdata_operationrep` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `proxyType` int(11) DEFAULT '0' COMMENT '运营商类型 1 H5,2 App',
  `nLevel` int(11) DEFAULT '0' COMMENT '运营商等级',
  `addnPlayer` int(11) DEFAULT '0' COMMENT '新增会员',
  `validAddnPlayer` int(11) DEFAULT '0' COMMENT '有效新增会员',
  `loginPlayer` int(11) DEFAULT '0' COMMENT '登录人数',
  `nGameNumber` int(11) DEFAULT '0' COMMENT '游戏人数',
  `nRechargeAmount` bigint(20) DEFAULT '0' COMMENT '充值总额',
  `nWithdrawalAmount` bigint(20) DEFAULT '0' COMMENT '提现总额',
  `nUpScore` bigint(20) DEFAULT '0' COMMENT '手动上分',
  `nDownScore` bigint(20) DEFAULT '0' COMMENT '手动下分',
  `nCashUpScore` bigint(20) DEFAULT '0' COMMENT '现金网上分',
  `nCashDownScore` bigint(20) DEFAULT '0' COMMENT '现金网下分',
  `nRoundTabCount` int(11) DEFAULT '0' COMMENT '局数_桌',
  `nRoundNumber` int(11) DEFAULT '0' COMMENT '局数_人',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '游戏抽水',
  `nTaskAmount` bigint(20) DEFAULT '0' COMMENT '任务得金',
  `nActivityAmount` bigint(20) DEFAULT '0' COMMENT '活动得金',
  `nReturnAmount` bigint(20) DEFAULT '0' COMMENT '返佣',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `matchFee` bigint(20) DEFAULT '0' COMMENT '扣报名费',
  `returnMatchFee` bigint(20) DEFAULT '0' COMMENT '退报名费',
  `matchAmount` bigint(20) DEFAULT '0' COMMENT '比赛奖励',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=266682 DEFAULT CHARSET=utf8mb4 COMMENT='运营报表';

-- ----------------------------
-- Table structure for table_webdata_playerdatasort
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_playerdatasort`;
CREATE TABLE `table_webdata_playerdatasort` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `proxyType` int(11) DEFAULT '0' COMMENT '运营商类型 1 H5,2 App',
  `nLevel` int(11) DEFAULT '0' COMMENT '运营商等级',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '会员Id',
  `nUpScore` bigint(20) DEFAULT '0' COMMENT '手动上分',
  `nDownScore` bigint(20) DEFAULT '0' COMMENT '手动下分',
  `nCashUpScore` bigint(20) DEFAULT '0' COMMENT '现金网上分',
  `nCashDownScore` bigint(20) DEFAULT '0' COMMENT '现金网下分',
  `nRechargeCount` int(11) DEFAULT '0' COMMENT '充值次数',
  `nRechargeAmount` bigint(20) DEFAULT '0' COMMENT '充值金额',
  `nWithdrawalCount` int(11) DEFAULT '0' COMMENT '提现次数',
  `nWithdrawalAmount` bigint(20) DEFAULT '0' COMMENT '提现金额',
  `nTaskAmount` bigint(20) DEFAULT '0' COMMENT '任务得金',
  `nActivityAmount` bigint(20) DEFAULT '0' COMMENT '活动得金',
  `nReturnAmount` bigint(20) DEFAULT '0' COMMENT '返佣',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `matchFee` bigint(20) DEFAULT '0' COMMENT '扣报名费',
  `returnMatchFee` bigint(20) DEFAULT '0' COMMENT '退报名费',
  `matchAmount` bigint(20) DEFAULT '0' COMMENT '比赛奖励',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE,
  KEY `idx_tEndTime` (`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=916 DEFAULT CHARSET=utf8mb4 COMMENT='会员排行--会员数据';

-- ----------------------------
-- Table structure for table_webdata_playergamedatasort
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_playergamedatasort`;
CREATE TABLE `table_webdata_playergamedatasort` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `proxyType` int(11) DEFAULT '0' COMMENT '运营商类型 1 H5,2 App',
  `nLevel` int(11) DEFAULT '0' COMMENT '运营商等级',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '会员Id',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏类型',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '游戏抽水',
  `nRound` int(11) DEFAULT '0' COMMENT '局数',
  `nWinTabCount` int(11) DEFAULT '0' COMMENT '胜局',
  `nLoseTabCount` int(11) DEFAULT '0' COMMENT '输局',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE,
  KEY `idx_tEndTime` (`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=614 DEFAULT CHARSET=utf8mb4 COMMENT='会员排行--游戏数据';

-- ----------------------------
-- Table structure for table_webdata_playergamehome
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_playergamehome`;
CREATE TABLE `table_webdata_playergamehome` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏类型',
  `nServerId` int(11) DEFAULT '0' COMMENT '房间类型',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '会员Id',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '抽水',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=686 DEFAULT CHARSET=utf8mb4 COMMENT='基础数据-会员游戏房间汇总表';

-- ----------------------------
-- Table structure for table_webdata_playerscore
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_playerscore`;
CREATE TABLE `table_webdata_playerscore` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '会员Id',
  `nUpScore` bigint(20) DEFAULT '0' COMMENT '手动上分',
  `nDownScore` bigint(20) DEFAULT '0' COMMENT '手动下分',
  `nGameWinScore` bigint(20) DEFAULT '0' COMMENT '游戏赢分',
  `nGameLoseScore` bigint(20) DEFAULT '0' COMMENT '游戏输分',
  `nCashUpScore` bigint(20) DEFAULT '0' COMMENT '现金网上分',
  `nCashDownScore` bigint(20) DEFAULT '0' COMMENT '现金网下分',
  `nRechargeCount` int(11) DEFAULT '0' COMMENT '充值次数',
  `nRechargeAmount` bigint(20) DEFAULT '0' COMMENT '充值金额',
  `nWithdrawalCount` int(11) DEFAULT '0' COMMENT '提现次数',
  `nWithdrawalAmount` bigint(20) DEFAULT '0' COMMENT '提现金额',
  `nTaskAmount` bigint(20) DEFAULT '0' COMMENT '任务得金',
  `nActivityAmount` bigint(20) DEFAULT '0' COMMENT '活动得金',
  `nReturnAmount` bigint(20) DEFAULT '0' COMMENT '返佣',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `matchFee` bigint(20) DEFAULT '0' COMMENT '扣报名费',
  `returnMatchFee` bigint(20) DEFAULT '0' COMMENT '退报名费',
  `matchAmount` bigint(20) DEFAULT '0' COMMENT '比赛奖励',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=917 DEFAULT CHARSET=utf8mb4 COMMENT='基础数据-会员积分变更汇总表';

-- ----------------------------
-- Table structure for table_webdata_playerstatisgame
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_playerstatisgame`;
CREATE TABLE `table_webdata_playerstatisgame` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) DEFAULT '0' COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `proxyType` int(11) DEFAULT '0' COMMENT '运营商类型 1 H5,2 App',
  `nLevel` int(11) DEFAULT '0' COMMENT '运营商等级',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏类型',
  `nGameNumber` int(11) DEFAULT '0' COMMENT '游戏人数',
  `nRoundTabCount` int(11) DEFAULT '0' COMMENT '总局数_桌',
  `nRoundNumber` int(11) DEFAULT '0' COMMENT '总局数_人',
  `nWinTabCount` int(11) DEFAULT '0' COMMENT '赢的桌数',
  `nLoseTabCount` int(11) DEFAULT '0' COMMENT '输的桌数',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '游戏抽水',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=419 DEFAULT CHARSET=utf8mb4 COMMENT='玩法统计--按游戏区分';

-- ----------------------------
-- Table structure for table_webdata_playerstatisgamehome
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_playerstatisgamehome`;
CREATE TABLE `table_webdata_playerstatisgamehome` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) DEFAULT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `proxyType` int(11) DEFAULT NULL COMMENT '运营商类型 1 H5,2 App',
  `nLevel` int(11) DEFAULT '0' COMMENT '运营商等级',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏类型',
  `nServerId` int(11) DEFAULT '0' COMMENT '房间类型',
  `nGameNumber` int(11) DEFAULT '0' COMMENT '游戏人数',
  `nRoundTabCount` int(11) DEFAULT '0' COMMENT '总局数_桌',
  `nRoundNumber` int(11) DEFAULT '0' COMMENT '总局数_人',
  `nWinTabCount` int(11) DEFAULT '0' COMMENT '赢的桌数',
  `nLoseTabCount` int(11) DEFAULT '0' COMMENT '输的桌数',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) NOT NULL DEFAULT '0' COMMENT '游戏抽水',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=485 DEFAULT CHARSET=utf8mb4 COMMENT='玩法统计--按房间区分';

-- ----------------------------
-- Table structure for table_webdata_proxy
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_proxy`;
CREATE TABLE `table_webdata_proxy` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nRoundTabCount` int(11) DEFAULT '0' COMMENT '局数_桌',
  `nRoundNumber` int(11) DEFAULT '0' COMMENT '局数_人',
  `nGameNumber` int(11) DEFAULT '0' COMMENT '游戏人数',
  `nWinTabCount` int(11) DEFAULT '0' COMMENT '赢的桌数',
  `nLoseTabCount` int(11) DEFAULT '0' COMMENT '输的桌数',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '抽水',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=210 DEFAULT CHARSET=utf8mb4 COMMENT='基础数据-运营商数据汇总表';

-- ----------------------------
-- Table structure for table_webdata_roomcardfirst
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_roomcardfirst`;
CREATE TABLE `table_webdata_roomcardfirst` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `loginNum` int(11) DEFAULT '0' COMMENT '当天登录会员	',
  `gameNum` int(11) DEFAULT '0' COMMENT '当天进行游戏的会员',
  `addUserNum` int(11) NOT NULL DEFAULT '0' COMMENT '当天注册会员',
  `validAddUserNum` int(11) DEFAULT '0' COMMENT '有效新增【截止当天第一次游戏】',
  `openRoomNum` int(11) DEFAULT '0' COMMENT '开房数',
  `roundNum` int(11) DEFAULT '0' COMMENT '局数',
  `recharge` bigint(20) DEFAULT '0' COMMENT '充值金额--线上',
  `rechargeNum` int(11) DEFAULT '0' COMMENT '充值人数--线上',
  `rechargeDiamondNum` int(11) DEFAULT '0' COMMENT '充值钻石--线上',
  `expendDiamondNum` int(11) DEFAULT '0' COMMENT '消耗钻石--线上',
  `deductDiamondNum` int(11) DEFAULT '0' COMMENT '钻石--后台扣除',
  `addDiamondNum` int(11) DEFAULT '0' COMMENT '钻石--后台赠送',
  `addDiamondRecharge` bigint(20) DEFAULT '0' COMMENT '后台赠送--后台花费金额',
  `overDiamondNum` int(11) DEFAULT '0' COMMENT '剩余钻石',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `deductDiamondRecharge` bigint(20) DEFAULT '0' COMMENT '后台扣除--后台花费金额',
  `nAmount` bigint(20) DEFAULT '0' COMMENT '提现金额',
  `waitnAmount` bigint(20) DEFAULT '0' COMMENT '待提现【当前时间内剩余可提现的金额】',
  PRIMARY KEY (`Id`),
  KEY `idx_tEndTime` (`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=699 DEFAULT CHARSET=utf8mb4 COMMENT='Admin房卡首页数据--每天统计';

-- ----------------------------
-- Table structure for table_webdata_roomcardfirstgamehelp
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_roomcardfirstgamehelp`;
CREATE TABLE `table_webdata_roomcardfirstgamehelp` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerId` int(11) NOT NULL COMMENT '会员ID',
  `firstGameTime` timestamp NULL DEFAULT NULL COMMENT '首次游戏日期',
  `lastGameTime` timestamp NULL DEFAULT NULL COMMENT '最后一次游戏日期',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '日期',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubID_nPlayerId_firstTime_lastTime` (`nPlayerId`,`firstGameTime`,`lastGameTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1124 DEFAULT CHARSET=utf8mb4 COMMENT='房卡用户首次、末次游戏辅助表';

-- ----------------------------
-- Table structure for table_webdata_roomcardroundstatiall
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_roomcardroundstatiall`;
CREATE TABLE `table_webdata_roomcardroundstatiall` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏Id',
  `gameNum` int(11) DEFAULT '0' COMMENT '当天进行游戏的会员',
  `openRoomNum` int(11) DEFAULT '0' COMMENT '开房数',
  `roundNum` int(11) DEFAULT '0' COMMENT '局数',
  `expendDiamondNum` int(11) DEFAULT '0' COMMENT '消耗钻石',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `shuffleNum` int(11) NOT NULL DEFAULT '0' COMMENT '洗牌人数',
  `shuffleDiamondNum` int(11) NOT NULL DEFAULT '0' COMMENT '洗牌扣钻数',
  PRIMARY KEY (`Id`),
  KEY `idx_tEndTime` (`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1079 DEFAULT CHARSET=utf8mb4 COMMENT='Admin房卡牌局统计_全部--每天统计';

-- ----------------------------
-- Table structure for table_webdata_roomcardroundstaticlub
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_roomcardroundstaticlub`;
CREATE TABLE `table_webdata_roomcardroundstaticlub` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) DEFAULT '0' COMMENT '俱乐部Id',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏Id',
  `gameNum` int(11) DEFAULT '0' COMMENT '当天进行游戏的会员',
  `openRoomNum` int(11) DEFAULT '0' COMMENT '开房数',
  `roundNum` int(11) DEFAULT '0' COMMENT '局数',
  `expendDiamondNum` int(11) DEFAULT '0' COMMENT '消耗钻石',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `shuffleNum` int(11) NOT NULL DEFAULT '0' COMMENT '洗牌人数',
  `shuffleDiamondNum` int(11) NOT NULL DEFAULT '0' COMMENT '洗牌扣钻数',
  PRIMARY KEY (`Id`),
  KEY `idx_tEndTime` (`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1803 DEFAULT CHARSET=utf8mb4 COMMENT='Admin房卡牌局统计_俱乐部--每天统计';

-- ----------------------------
-- Table structure for table_webdata_roomcardsortclub
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_roomcardsortclub`;
CREATE TABLE `table_webdata_roomcardsortclub` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) DEFAULT '0' COMMENT '俱乐部Id',
  `openRoomNum` int(11) DEFAULT '0' COMMENT '开房数',
  `roundNum` int(11) DEFAULT '0' COMMENT '局数',
  `expendDiamondNum` int(11) DEFAULT '0' COMMENT '消耗钻石',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`Id`),
  KEY `idx_tEndTime` (`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=977 DEFAULT CHARSET=utf8mb4 COMMENT='Admin房卡排行榜_俱乐部--每天统计';

-- ----------------------------
-- Table structure for table_webdata_roomcardsortuser
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_roomcardsortuser`;
CREATE TABLE `table_webdata_roomcardsortuser` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '会员Id',
  `recharge` bigint(20) DEFAULT '0' COMMENT '充值金额',
  `rechargeDiamondNum` int(11) DEFAULT '0' COMMENT '充值钻石',
  `expendDiamondNum` int(11) DEFAULT '0' COMMENT '消耗钻石',
  `giveDiamondNum` int(11) DEFAULT '0' COMMENT '赠送钻石',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `rechargeMoney` bigint(20) DEFAULT '0' COMMENT '后台充钻-花费金额',
  `addDiamondNum` int(11) DEFAULT '0' COMMENT '后台充钻数',
  `deductDiamondNum` int(11) DEFAULT '0' COMMENT '后台扣钻数',
  PRIMARY KEY (`Id`),
  KEY `idx_tEndTime` (`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=880 DEFAULT CHARSET=utf8mb4 COMMENT='Admin房卡排行榜_会员--每天统计';

-- ----------------------------
-- Table structure for table_webdata_winlosegame
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_winlosegame`;
CREATE TABLE `table_webdata_winlosegame` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `proxyType` int(11) DEFAULT '0' COMMENT '运营商类型 1 H5,2 App',
  `nLevel` int(11) DEFAULT '0' COMMENT '运营商等级',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏类型',
  `nGameNumber` int(11) DEFAULT '0' COMMENT '游戏人数',
  `nRoundTabCount` int(11) DEFAULT '0' COMMENT '总局数_桌',
  `nRoundNumber` int(11) DEFAULT '0' COMMENT '总局数_人',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '游戏抽水',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=419 DEFAULT CHARSET=utf8mb4 COMMENT='输赢总览--按游戏区分';

-- ----------------------------
-- Table structure for table_webdata_winlosegamehome
-- ----------------------------
DROP TABLE IF EXISTS `table_webdata_winlosegamehome`;
CREATE TABLE `table_webdata_winlosegamehome` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部ID',
  `nIsTest` int(11) DEFAULT '0' COMMENT '是否是测试俱乐部 0 否; 1 是',
  `nUserName` varchar(32) DEFAULT '' COMMENT '运营商账号',
  `proxyType` int(11) DEFAULT '0' COMMENT '运营商类型 1 H5,2 App',
  `nLevel` int(11) DEFAULT '0' COMMENT '运营商等级',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏类型',
  `nServerId` int(11) DEFAULT '0' COMMENT '房间类型',
  `nGameNumber` int(11) DEFAULT '0' COMMENT '游戏人数',
  `nRoundTabCount` int(11) DEFAULT '0' COMMENT '总局数_桌',
  `nRoundNumber` int(11) DEFAULT '0' COMMENT '总局数_人',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效下注',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `nTax` bigint(20) DEFAULT '0' COMMENT '游戏抽水',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=485 DEFAULT CHARSET=utf8mb4 COMMENT='输赢总览--按房间区分';

-- ----------------------------
-- Table structure for table_webknapsack_goodsstati
-- ----------------------------
DROP TABLE IF EXISTS `table_webknapsack_goodsstati`;
CREATE TABLE `table_webknapsack_goodsstati` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) DEFAULT '0' COMMENT '运营商Id',
  `nGoodsId` int(11) DEFAULT '0' COMMENT '物品Id',
  `nConsumeCount` int(11) DEFAULT '0' COMMENT '消耗',
  `nSendCount` int(11) DEFAULT '0' COMMENT '发放总量(已领取)',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COMMENT='背包-物品统计';

-- ----------------------------
-- Table structure for table_webknapsack_goodsstatiroomcard
-- ----------------------------
DROP TABLE IF EXISTS `table_webknapsack_goodsstatiroomcard`;
CREATE TABLE `table_webknapsack_goodsstatiroomcard` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nGoodsId` int(11) DEFAULT '0' COMMENT '物品Id',
  `buyCount` int(11) DEFAULT '0' COMMENT '购买总量',
  `nConsumeCount` int(11) DEFAULT '0' COMMENT '消耗总量',
  `nSendCount` int(11) DEFAULT '0' COMMENT '发放总量',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `buyNum` int(11) NOT NULL DEFAULT '0' COMMENT '购买人数',
  `nTaskCount` int(11) NOT NULL DEFAULT '0' COMMENT '任务获得',
  PRIMARY KEY (`Id`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=2412 DEFAULT CHARSET=utf8mb4 COMMENT='道具-物品统计_房卡';

-- ----------------------------
-- Table structure for table_webriskcontr_proxy
-- ----------------------------
DROP TABLE IF EXISTS `table_webriskcontr_proxy`;
CREATE TABLE `table_webriskcontr_proxy` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) DEFAULT '0' COMMENT '运营商Id',
  `gameProxyType` int(11) DEFAULT '0' COMMENT '运营商类型:1(H5),2(App)',
  `nOneLevelVal` bigint(20) DEFAULT '0' COMMENT '一级预警参数值',
  `nTwoLevelVal` bigint(20) DEFAULT '0' COMMENT '二级预警参数值',
  `nThreeLevelVal` bigint(20) DEFAULT '0' COMMENT '三级预警参数值',
  `nSameIP` int(11) DEFAULT '1' COMMENT '同IP预警(1开启;0关闭)',
  `nInvalidIP` int(11) DEFAULT '1' COMMENT '无效IP监测(1有效;0无效)',
  `nLock` int(11) DEFAULT '1' COMMENT '是否锁定(1锁定;0关锁)',
  `nValid` int(11) DEFAULT '1' COMMENT '是否开启监测(1开启;0关闭)',
  `tCreateTime` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `tModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后修改时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId` (`nClubId`)
) ENGINE=InnoDB AUTO_INCREMENT=516 DEFAULT CHARSET=utf8mb4 COMMENT='风控-运营商参数配置表';

-- ----------------------------
-- Table structure for table_webriskcontr_proxygame
-- ----------------------------
DROP TABLE IF EXISTS `table_webriskcontr_proxygame`;
CREATE TABLE `table_webriskcontr_proxygame` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) DEFAULT '0' COMMENT '运营商Id',
  `gameProxyType` int(11) DEFAULT '0' COMMENT '运营商类型:1(H5),2(App)',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏Id',
  `nOneLevelVal` bigint(20) DEFAULT '0' COMMENT '一级预警参数值',
  `nTwoLevelVal` bigint(20) DEFAULT '0' COMMENT '二级预警参数值',
  `nThreeLevelVal` bigint(20) DEFAULT '0' COMMENT '三级预警参数值',
  `nLock` int(11) DEFAULT '1' COMMENT '是否锁定(1锁定;0关锁)',
  `nValid` int(11) DEFAULT '1' COMMENT '是否开启监测(1开启;0关闭)',
  `tCreateTime` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `tModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后修改时间',
  `nFusing` int(11) DEFAULT '0' COMMENT '是否熔断 1开启;0 关闭',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId_nGameType` (`nClubId`,`nGameType`)
) ENGINE=InnoDB AUTO_INCREMENT=20619 DEFAULT CHARSET=utf8mb4 COMMENT='风控-运营商游戏参数配置表';

-- ----------------------------
-- Table structure for table_webriskcontr_users
-- ----------------------------
DROP TABLE IF EXISTS `table_webriskcontr_users`;
CREATE TABLE `table_webriskcontr_users` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `gameProxyType` int(11) DEFAULT '0' COMMENT '会员类型:1(H5),2(App)',
  `nOneLevelVal` bigint(20) DEFAULT '0' COMMENT '24小时一级预警参数值',
  `nTwoLevelVal` bigint(20) DEFAULT '0' COMMENT '24小时二级预警参数值',
  `nThreeLevelVal` bigint(20) DEFAULT '0' COMMENT '24小时三级预警参数值',
  `nOneLevelValHist` bigint(20) DEFAULT '0' COMMENT '历史一级预警参数值',
  `nTwoLevelValHist` bigint(20) DEFAULT '0' COMMENT '历史二级预警参数值',
  `nThreeLevelValHist` bigint(20) DEFAULT '0' COMMENT '历史三级预警参数值',
  `nValid` int(11) DEFAULT '1' COMMENT '是否开启监测(1开启;0关闭)',
  `tCreateTime` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `tModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后修改时间',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='风控-会员参数配置表';

-- ----------------------------
-- Table structure for table_webriskcontr_userset
-- ----------------------------
DROP TABLE IF EXISTS `table_webriskcontr_userset`;
CREATE TABLE `table_webriskcontr_userset` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nGuid` varchar(64) NOT NULL COMMENT '唯一标识',
  `nClubId` int(11) DEFAULT '0' COMMENT '运营商Id',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '会员Id',
  `nType` int(11) DEFAULT '1' COMMENT '1-抽水池;2-返水池',
  `nValid` int(11) DEFAULT '1' COMMENT '1-正常抽水、返水;2-抽水、返水已完成',
  `nResult` bigint(20) DEFAULT '0' COMMENT '输赢值(游戏输赢)',
  `nMaxResult` int(11) DEFAULT '0' COMMENT '预设值',
  `opratAccount` varchar(32) DEFAULT '' COMMENT '操作人',
  `tCreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `ModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后修改时间',
  `nRemark` varchar(256) DEFAULT '' COMMENT '备注',
  PRIMARY KEY (`Id`),
  KEY `idx_CreateTime` (`tCreateTime`),
  KEY `idx_nGuid` (`nGuid`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8mb4 COMMENT='点控-会员设置';

-- ----------------------------
-- Table structure for table_webriskcontr_usersreg
-- ----------------------------
DROP TABLE IF EXISTS `table_webriskcontr_usersreg`;
CREATE TABLE `table_webriskcontr_usersreg` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `gameProxyType` int(11) DEFAULT '0' COMMENT '会员类型:1(H5),2(App)',
  `nMoMAdd` int(11) DEFAULT '0' COMMENT '环比增加预警参数',
  `nMoMReduce` int(11) DEFAULT '0' COMMENT '环比减少预警参数',
  `nYoYAdd` int(11) DEFAULT '0' COMMENT '同比增加预警参数',
  `nYoYReduce` int(11) DEFAULT '0' COMMENT '同比减少预警参数',
  `nValid` int(11) DEFAULT '1' COMMENT '是否开启监测(1开启;0关闭)',
  `tCreateTime` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `tModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后修改时间',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COMMENT='风控-注册会员活跃参数配置表';

-- ----------------------------
-- Table structure for table_webriskcontr_warninglog
-- ----------------------------
DROP TABLE IF EXISTS `table_webriskcontr_warninglog`;
CREATE TABLE `table_webriskcontr_warninglog` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) DEFAULT '0' COMMENT '运营商Id',
  `gameProxyType` int(11) DEFAULT '0' COMMENT '运营商类型:1(H5),2(App)',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏Id',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '会员Id',
  `nLogType` int(11) DEFAULT '0' COMMENT '日志类型',
  `nLevel` int(11) DEFAULT '0' COMMENT '预警等级',
  `nParamVal` bigint(20) DEFAULT '0' COMMENT '预警参数值',
  `nWarningVal` bigint(20) DEFAULT '0' COMMENT '异常参数值(超出预警参数值的实际值)',
  `nContentDes` varchar(256) DEFAULT '' COMMENT '预警内容描述',
  `tCreateTime` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `nRemark` varchar(256) DEFAULT '' COMMENT '备注',
  `nFusing` int(11) DEFAULT '0' COMMENT '是否熔断 1开启;0 关闭',
  PRIMARY KEY (`Id`),
  KEY `idx_tCreateTime` (`tCreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=1772 DEFAULT CHARSET=utf8mb4 COMMENT='风控-预警日志表';

-- ----------------------------
-- Table structure for table_webriskcontr_warninglogedit
-- ----------------------------
DROP TABLE IF EXISTS `table_webriskcontr_warninglogedit`;
CREATE TABLE `table_webriskcontr_warninglogedit` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nGuid` varchar(64) NOT NULL COMMENT '唯一标识',
  `OpratAccount` varchar(64) DEFAULT '' COMMENT '操作人',
  `nValid` int(11) DEFAULT '0' COMMENT '1-待处理;2-正常;3-不正常',
  `tCreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `ModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后修改时间',
  `nRemark` varchar(256) DEFAULT '' COMMENT '备注',
  PRIMARY KEY (`Id`),
  KEY `idx_CreateTime` (`tCreateTime`),
  KEY `idx_nGuid` (`nGuid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='风控-预警日志整理【主库编辑中间表】';

-- ----------------------------
-- Table structure for table_webriskcontr_warninglogstati
-- ----------------------------
DROP TABLE IF EXISTS `table_webriskcontr_warninglogstati`;
CREATE TABLE `table_webriskcontr_warninglogstati` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nGuid` varchar(64) NOT NULL COMMENT '唯一标识',
  `nClubId` int(11) DEFAULT '0' COMMENT '运营商Id',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '会员Id',
  `nGameType` int(11) DEFAULT '0' COMMENT '游戏Id',
  `nLogType` int(11) DEFAULT '0' COMMENT '日志类型1 运营商、2 游戏、3 会员、4 注册活跃用户、5 同IP预警、6 无效IP预警',
  `nLevel` int(11) DEFAULT '0' COMMENT '预警等级',
  `IP` varchar(64) DEFAULT '' COMMENT 'IP地址',
  `numVal` int(11) DEFAULT '0' COMMENT '预警次数',
  `tCreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`),
  KEY `idx_CreateTime` (`tCreateTime`),
  KEY `idx_nGuid` (`nGuid`)
) ENGINE=InnoDB AUTO_INCREMENT=193 DEFAULT CHARSET=utf8mb4 COMMENT='风控-预警日志统计分析表';

-- ----------------------------
-- Table structure for table_web_activenew
-- ----------------------------
DROP TABLE IF EXISTS `table_web_activenew`;
CREATE TABLE `table_web_activenew` (
  `Id` int(4) NOT NULL AUTO_INCREMENT,
  `tDate` date DEFAULT NULL COMMENT '统计日期',
  `daylogin` int(10) NOT NULL DEFAULT '0' COMMENT '每天登陆人数',
  `dayactive` int(10) NOT NULL DEFAULT '0' COMMENT '每天活跃人数',
  `daynewuser` int(10) NOT NULL DEFAULT '0' COMMENT '每天新增用户数',
  `daynewclub` int(10) NOT NULL DEFAULT '0' COMMENT '每天新增俱乐部数',
  PRIMARY KEY (`Id`),
  KEY `idx_tDate` (`tDate`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='活跃度及新增汇总';

-- ----------------------------
-- Table structure for table_web_clubmemberproxy
-- ----------------------------
DROP TABLE IF EXISTS `table_web_clubmemberproxy`;
CREATE TABLE `table_web_clubmemberproxy` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubId` int(11) DEFAULT NULL COMMENT '俱乐部ID',
  `nPlayerId` int(11) DEFAULT NULL COMMENT '玩家代理Id',
  `recharge` bigint(20) DEFAULT '0' COMMENT '充值金额',
  `withdrawal` bigint(20) DEFAULT '0' COMMENT '提现(取款)金额',
  `rechargeCount` int(11) DEFAULT '0' COMMENT '充值次数',
  `rechargeNumber` int(11) DEFAULT '0' COMMENT '充值人数',
  `withdrawalCount` int(11) DEFAULT '0' COMMENT '提现次数',
  `withdrawalNumber` int(11) DEFAULT '0' COMMENT '提现人数',
  `water` bigint(20) DEFAULT '0' COMMENT '流水',
  `directlyVipCount` int(11) DEFAULT '0' COMMENT '直属会员',
  `directlyWater` bigint(20) DEFAULT '0' COMMENT '直属流水',
  `addDirectlyVipCount` int(11) DEFAULT '0' COMMENT '新增直属',
  `teamVipCount` int(11) DEFAULT '0' COMMENT '团队会员数',
  `teamWater` bigint(20) DEFAULT '0' COMMENT '团队流水',
  `addTeamCount` int(11) DEFAULT '0' COMMENT '团队新增下线',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `upnAmount` bigint(20) NOT NULL DEFAULT '0' COMMENT '后台上分',
  `downnAmount` bigint(20) NOT NULL DEFAULT '0' COMMENT '后台下分',
  `tasknAmount` bigint(20) NOT NULL DEFAULT '0' COMMENT '任务得金',
  `activitynAmount` bigint(20) NOT NULL DEFAULT '0' COMMENT '活动得金',
  `nResultMoney` bigint(20) NOT NULL DEFAULT '0' COMMENT '游戏输赢',
  `nTax` bigint(20) NOT NULL DEFAULT '0' COMMENT '抽水',
  `matchFee` bigint(20) DEFAULT '0' COMMENT '扣报名费',
  `returnMatchFee` bigint(20) DEFAULT '0' COMMENT '退报名费',
  `matchAmount` bigint(20) DEFAULT '0' COMMENT '比赛奖励',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubId`,`tEndTime`),
  KEY `idx_nClubID_nPlayerId_tEndTime` (`nClubId`,`nPlayerId`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=10976 DEFAULT CHARSET=utf8mb4 COMMENT='App成员代理汇总表';

-- ----------------------------
-- Table structure for table_web_clubreport_02
-- ----------------------------
DROP TABLE IF EXISTS `table_web_clubreport_02`;
CREATE TABLE `table_web_clubreport_02` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL DEFAULT '0' COMMENT '俱乐部ID',
  `nPlayCount` int(11) NOT NULL DEFAULT '0' COMMENT '玩牌人数',
  `nRound` int(11) NOT NULL DEFAULT '0' COMMENT '局数',
  `nBetScore` bigint(20) NOT NULL DEFAULT '0' COMMENT '下注',
  `nValidBet` bigint(20) NOT NULL DEFAULT '0' COMMENT '有效下注',
  `winMoney` bigint(20) NOT NULL DEFAULT '0' COMMENT '游戏派奖',
  `nTax` bigint(20) NOT NULL DEFAULT '0' COMMENT '抽水',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '成绩中积分部分',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `dayAddCount` int(11) DEFAULT '0' COMMENT '俱乐部新增用户数',
  `dayAddCountValid` int(11) DEFAULT '0' COMMENT '俱乐部新增有效用户数',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=304 DEFAULT CHARSET=utf8mb4 COMMENT='运营数据-俱乐部报表';

-- ----------------------------
-- Table structure for table_web_daytotal
-- ----------------------------
DROP TABLE IF EXISTS `table_web_daytotal`;
CREATE TABLE `table_web_daytotal` (
  `Idx` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自动递增的唯一序号，主键',
  `EnterPriseID` varchar(36) NOT NULL,
  `nPlayerId` int(11) DEFAULT NULL,
  `typeTag` int(11) DEFAULT NULL COMMENT '0 wang, 1 dai ',
  `nDaimond` int(11) DEFAULT NULL,
  `szTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '日期',
  PRIMARY KEY (`Idx`),
  KEY `idx_Table_Web_DayTotal` (`nPlayerId`,`szTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_diamonddetail
-- ----------------------------
DROP TABLE IF EXISTS `table_web_diamonddetail`;
CREATE TABLE `table_web_diamonddetail` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `Todate` date DEFAULT NULL,
  `PlayExpend` bigint(20) DEFAULT NULL COMMENT '用户钻石战局消耗',
  `ShareExpend` int(11) DEFAULT NULL COMMENT '分享钻石消耗',
  `RegistExpend` int(11) DEFAULT NULL COMMENT '注册钻石消耗36',
  `BindExpend` int(11) DEFAULT NULL COMMENT '绑定钻石消耗68',
  `nnmj` int(11) DEFAULT NULL COMMENT '南宁麻将1001',
  `ylmj` int(11) DEFAULT NULL COMMENT '玉林麻将1002',
  `slmj` int(11) DEFAULT NULL COMMENT '上林麻将1003',
  `hxmj` int(11) DEFAULT NULL COMMENT '横县麻将1004',
  `ggmj` int(11) DEFAULT NULL COMMENT '贵港麻将1005',
  `lzmj` int(11) DEFAULT NULL COMMENT '柳州麻将1007',
  `glmj` int(11) DEFAULT NULL COMMENT '桂林麻将1008',
  `wzmj` int(11) DEFAULT NULL COMMENT '梧州麻将1011',
  `bzbp` int(11) DEFAULT NULL COMMENT '八张摆牌2001',
  `sybp` int(11) DEFAULT NULL COMMENT '水鱼摆牌2002',
  `sszbp` int(11) DEFAULT NULL COMMENT '十三章摆牌2003',
  `xp` int(11) DEFAULT NULL COMMENT '洗牌',
  `kj4` int(11) DEFAULT NULL COMMENT '统计开4局的',
  `kj8` int(11) DEFAULT NULL COMMENT '统计开8局的',
  `kj16` int(11) DEFAULT NULL COMMENT '统计开16局的',
  `totalzs` int(11) DEFAULT NULL COMMENT '用户钻石总数',
  `todaytotalzs` int(11) DEFAULT NULL COMMENT '今日登陆用户钻石数',
  `todaytotaldl` int(11) DEFAULT NULL COMMENT '今日登陆总数',
  `ddzbp` int(11) DEFAULT NULL COMMENT '斗地主摆牌2005',
  `MatchAwarddema` int(11) DEFAULT '0' COMMENT '比赛钻石消耗',
  `alltotall` int(11) DEFAULT '0' COMMENT '用户钻石战局消耗+洗牌+比赛',
  `phonebindingzs` int(11) DEFAULT '0' COMMENT '绑定手机获得钻石统计',
  `nmatchall` int(11) DEFAULT '0' COMMENT '比赛总数',
  `shydj` int(11) DEFAULT '0' COMMENT '使用道具',
  PRIMARY KEY (`ID`),
  KEY `idx_Todate` (`Todate`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_diamonddetailxp
-- ----------------------------
DROP TABLE IF EXISTS `table_web_diamonddetailxp`;
CREATE TABLE `table_web_diamonddetailxp` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `Todate` date DEFAULT NULL,
  `bzxp` int(11) DEFAULT NULL COMMENT '八张洗牌2001',
  `syxp` int(11) DEFAULT NULL COMMENT '水鱼洗牌2002',
  `sszxp` int(11) DEFAULT NULL COMMENT '十三章洗牌2003',
  `ddzxp` int(11) DEFAULT NULL COMMENT '斗地主洗牌2005',
  `todaytotaldl` int(11) DEFAULT NULL COMMENT '总和',
  `bzxprs` int(11) DEFAULT NULL COMMENT '八张洗牌人数2001',
  `syxprs` int(11) DEFAULT NULL COMMENT '水鱼洗牌人数2002',
  `sszxprs` int(11) DEFAULT NULL COMMENT '十三章洗牌人数2003',
  `ddzxprs` int(11) DEFAULT NULL COMMENT '斗地主洗牌人数2005',
  `todaytotaldlrs` int(11) DEFAULT NULL COMMENT '总和人数',
  PRIMARY KEY (`ID`),
  KEY `idx_Todate` (`Todate`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_gameroundstat
-- ----------------------------
DROP TABLE IF EXISTS `table_web_gameroundstat`;
CREATE TABLE `table_web_gameroundstat` (
  `GameID` int(11) NOT NULL,
  `szTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `TableCount` int(11) NOT NULL,
  `Round` int(11) NOT NULL,
  KEY `idx_GameID` (`GameID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_havelog
-- ----------------------------
DROP TABLE IF EXISTS `table_web_havelog`;
CREATE TABLE `table_web_havelog` (
  `Idx` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID，自增',
  `szTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '日期',
  `nextHave` int(11) NOT NULL COMMENT '次日留存率',
  `threeHave` int(11) NOT NULL COMMENT '三日留存率',
  `sevenHave` int(11) NOT NULL COMMENT '七日留存率',
  `monthHave` int(11) NOT NULL COMMENT '月留存率',
  `dayAddCount` int(11) NOT NULL DEFAULT '0' COMMENT '每日新增用户数',
  `dayAddCountValid` int(11) NOT NULL DEFAULT '0' COMMENT '每日新增用户数(有效)',
  `nextHaveValid` int(11) NOT NULL DEFAULT '-1' COMMENT '次日留存率(有效)',
  `threeHaveValid` int(11) NOT NULL DEFAULT '-1' COMMENT '三日留存率(有效)',
  `sevenHaveValid` int(11) NOT NULL DEFAULT '-1' COMMENT '七日留存率(有效)',
  `monthHaveValid` int(11) NOT NULL DEFAULT '-1' COMMENT '月留存率(有效)',
  PRIMARY KEY (`Idx`)
) ENGINE=InnoDB AUTO_INCREMENT=669 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_hundredbet
-- ----------------------------
DROP TABLE IF EXISTS `table_web_hundredbet`;
CREATE TABLE `table_web_hundredbet` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型;1牛牛,2三公,3炸金花...',
  `nHundredType` int(11) NOT NULL DEFAULT '1' COMMENT '场次类型;1-初级2-中级3-高级',
  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID;2013牛牛',
  `nTableID` int(11) DEFAULT '0' COMMENT '桌子ID',
  `nRound` int(11) DEFAULT '0' COMMENT '局数(第几局)',
  `nPos1_BetScore` bigint(20) DEFAULT '0' COMMENT '1号位下注积分金额(龙)',
  `nPos2_BetScore` bigint(20) DEFAULT '0' COMMENT '2号位下注积分金额(虎)',
  `nPos3_BetScore` bigint(20) DEFAULT '0' COMMENT '3号位下注积分金额(和)',
  `nPos4_BetScore` bigint(20) DEFAULT '0' COMMENT '4号位下注积分金额',
  `nPos5_BetScore` bigint(20) DEFAULT '0' COMMENT '5号位下注积分金额',
  `nTotalbet` bigint(20) DEFAULT '0' COMMENT '闲家总下注金额',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_nGameType` (`nGameType`),
  KEY `idx_nTableID` (`nTableID`),
  KEY `idx_nClubID_nGameType_nTableID_tEndTime` (`nClubID`,`nGameType`,`nTableID`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='运营数据-百人场下注(PC后台)';

-- ----------------------------
-- Table structure for table_web_hundredreport
-- ----------------------------
DROP TABLE IF EXISTS `table_web_hundredreport`;
CREATE TABLE `table_web_hundredreport` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型;1牛牛,2三公,3炸金花...',
  `nGameID` int(11) NOT NULL COMMENT '游戏ID;2013牛牛',
  `nTableID` int(11) DEFAULT '0' COMMENT '桌子ID',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `szThirdAccount` varchar(100) DEFAULT '' COMMENT '会员账号',
  `bRobot` int(11) DEFAULT '0' COMMENT '是否是机器人',
  `nAmount` bigint(20) DEFAULT '0' COMMENT '服务费',
  `nResult` bigint(20) DEFAULT '0' COMMENT '盈利(玩牌输赢)',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '用户下注',
  `nDiamond` int(11) DEFAULT '0' COMMENT '消耗钻石数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '成绩中积分部分',
  PRIMARY KEY (`ID`),
  KEY `idx_nClubID` (`nClubID`),
  KEY `idx_nGameType` (`nGameType`),
  KEY `idx_nTableID` (`nTableID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_nClubID_nGameType_nTableID_nPlayerID_tEndTime` (`nClubID`,`nGameType`,`nTableID`,`nPlayerID`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='运营数据-百人场报表(PC后台)';

-- ----------------------------
-- Table structure for table_web_listzhanji
-- ----------------------------
DROP TABLE IF EXISTS `table_web_listzhanji`;
CREATE TABLE `table_web_listzhanji` (
  `szMatchId` varchar(32) NOT NULL DEFAULT '0',
  `TableId` int(11) NOT NULL,
  `szPlayerId1` int(11) NOT NULL,
  `nScore1` int(11) NOT NULL,
  `szNickname1` varchar(64) NOT NULL,
  `szPlayerId2` int(11) NOT NULL,
  `nScore2` int(11) NOT NULL,
  `szNickname2` varchar(64) NOT NULL,
  `szPlayerId3` int(11) NOT NULL,
  `nScore3` int(11) NOT NULL,
  `szNickname3` varchar(64) NOT NULL,
  `szPlayerId4` int(11) NOT NULL,
  `nScore4` int(11) NOT NULL,
  `szNickname4` varchar(64) NOT NULL,
  `szendtime` datetime DEFAULT NULL,
  KEY `idx_TableId` (`TableId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_loginlog
-- ----------------------------
DROP TABLE IF EXISTS `table_web_loginlog`;
CREATE TABLE `table_web_loginlog` (
  `Idx` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `nPlayerId` int(11) NOT NULL,
  `nClubID` int(11) NOT NULL DEFAULT '0' COMMENT '俱乐部ID',
  `szNickName` varchar(64) DEFAULT NULL,
  `nAction` int(11) NOT NULL DEFAULT '0',
  `szTime` timestamp NULL DEFAULT NULL,
  `loginIp` varchar(64) DEFAULT NULL,
  `strRe1` varchar(128) DEFAULT NULL,
  PRIMARY KEY (`Idx`),
  KEY `web_loginlog_idx_szTime` (`szTime`),
  KEY `idx_nPlayerId_szTime` (`nPlayerId`,`szTime`),
  KEY `idx_loginIp_szTime` (`loginIp`,`szTime`)
) ENGINE=InnoDB AUTO_INCREMENT=18202 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_managedepositreport
-- ----------------------------
DROP TABLE IF EXISTS `table_web_managedepositreport`;
CREATE TABLE `table_web_managedepositreport` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) DEFAULT '0' COMMENT '俱乐部ID',
  `loginNumber` int(11) DEFAULT '0' COMMENT '当天登录游戏的玩家	',
  `gameNumber` int(11) DEFAULT '0' COMMENT '当天登录且进行游戏的玩家',
  `validAdd` int(11) DEFAULT '0' COMMENT '有效新增',
  `firstRechargeNumber` int(11) DEFAULT '0' COMMENT '新增首冲人数(历史)',
  `firstRecharge` bigint(20) DEFAULT '0' COMMENT '新增首冲金额(历史)',
  `twoRechargeNumber` int(11) DEFAULT '0' COMMENT '新增二冲人数(历史)',
  `twoRecharge` bigint(20) DEFAULT '0' COMMENT '新增二冲金额(历史)',
  `manyRechargeNumber` int(11) DEFAULT '0' COMMENT '多次充值人数--每天大于等于2次以上充值人数',
  `manyRecharge` bigint(20) DEFAULT '0' COMMENT '多次充值金额---每天大于等于2次以上充值总金额',
  `rechargeNumber` int(11) DEFAULT '0' COMMENT '充值总人数',
  `rechargeCount` int(11) DEFAULT '0' COMMENT '充值总次数',
  `recharge` bigint(20) DEFAULT '0' COMMENT '充值总金额',
  `firstWithdrawalNumber` int(11) DEFAULT '0' COMMENT '新增提现人数(历史)',
  `firstWithdrawal` bigint(20) DEFAULT '0' COMMENT '新增提现金额(历史)',
  `twoWithdrawalNumber` int(11) DEFAULT '0' COMMENT '新增二提人数(历史)',
  `twoWithdrawal` bigint(20) DEFAULT '0' COMMENT '新增二提金额(历史)',
  `manyWithdrawalNumber` int(11) DEFAULT '0' COMMENT '多次提现人数--每天大于等于2次提现人数',
  `manyWithdrawal` bigint(20) DEFAULT '0' COMMENT '多次提现金额--每天大于等于2次提现总金额',
  `withdrawalNumber` int(11) DEFAULT '0' COMMENT '提现总人数',
  `withdrawalCount` int(11) DEFAULT '0' COMMENT '提现总次数',
  `withdrawal` bigint(20) DEFAULT '0' COMMENT '提现总金额',
  `weixinRechargeNumber` int(11) DEFAULT '0' COMMENT '微信充值人数',
  `weixinRechargeCount` int(11) DEFAULT '0' COMMENT '微信充值次数',
  `weixinRecharge` bigint(20) DEFAULT '0' COMMENT '微信充值金额',
  `zhifubaoRechargeNumber` int(11) DEFAULT '0' COMMENT '支付宝充值人数',
  `zhifubaoRechargeCount` int(11) DEFAULT '0' COMMENT '支付宝充值次数',
  `zhifubaoRecharge` bigint(20) DEFAULT '0' COMMENT '支付宝充值金额',
  `bankRechargeNumber` int(11) DEFAULT '0' COMMENT '银行卡充值人数',
  `bankRechargeCount` int(11) DEFAULT '0' COMMENT '银行卡充值次数',
  `bankRecharge` bigint(20) DEFAULT '0' COMMENT '银行卡充值金额',
  `cloudPayRechargeNumber` int(11) DEFAULT '0' COMMENT '云闪付充值人数',
  `cloudPayRechargeCount` int(11) DEFAULT '0' COMMENT '云闪付充值次数',
  `cloudPayRecharge` bigint(20) DEFAULT '0' COMMENT '云闪付充值金额',
  `onlineBankRechargeNumber` int(11) DEFAULT '0' COMMENT '在线网银充值人数',
  `onlineBankRechargeCount` int(11) DEFAULT '0' COMMENT '在线网银充值次数',
  `onlineBankRecharge` bigint(20) DEFAULT '0' COMMENT '在线网银充值金额',
  `quickPayRechargeNumber` int(11) DEFAULT '0' COMMENT '快捷支付充值人数',
  `quickPayRechargeCount` int(11) DEFAULT '0' COMMENT '快捷支付充值次数',
  `quickPayRecharge` bigint(20) DEFAULT '0' COMMENT '快捷支付充值金额',
  `unionpayCodeRechargeNumber` int(11) DEFAULT '0' COMMENT '银联扫码充值人数',
  `unionpayCodeRechargeCount` int(11) DEFAULT '0' COMMENT '银联扫码充值次数',
  `unionpayCodeRecharge` bigint(20) DEFAULT '0' COMMENT '银联扫码充值金额',
  `jdCodeRechargeNumber` int(11) DEFAULT '0' COMMENT '京东扫码充值人数',
  `jdCodeRechargeCount` int(11) DEFAULT '0' COMMENT '京东扫码充值次数',
  `jdCodeRecharge` bigint(20) DEFAULT '0' COMMENT '京东扫码充值金额',
  `qqCodeRechargeNumber` int(11) DEFAULT '0' COMMENT 'QQ支付充值人数',
  `qqCodeRechargeCount` int(11) DEFAULT '0' COMMENT 'QQ支付充值次数',
  `qqCodeRecharge` bigint(20) DEFAULT '0' COMMENT 'QQ支付充值金额',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `addUser` int(11) NOT NULL DEFAULT '0' COMMENT '当日注册会员',
  PRIMARY KEY (`ID`),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=708 DEFAULT CHARSET=utf8mb4 COMMENT='Admin管理充值、提现分析报表';

-- ----------------------------
-- Table structure for table_web_managefirstpagereport
-- ----------------------------
DROP TABLE IF EXISTS `table_web_managefirstpagereport`;
CREATE TABLE `table_web_managefirstpagereport` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) DEFAULT '0' COMMENT '俱乐部ID',
  `proxyType` int(11) DEFAULT '0' COMMENT '代理类型:1(H5代理),2(App代理)',
  `loginNumber` int(11) DEFAULT '0' COMMENT '当天登录游戏的玩家	',
  `gameNumber` int(11) DEFAULT '0' COMMENT '当天登录且进行游戏的玩家',
  `validAdd` int(11) DEFAULT '0' COMMENT '有效新增',
  `recharge` bigint(20) DEFAULT '0' COMMENT '充值',
  `withdrawal` bigint(20) DEFAULT '0' COMMENT '提现',
  `roundNumber` int(11) DEFAULT '0' COMMENT '局数_人',
  `nValidBet` bigint(20) DEFAULT '0' COMMENT '有效投注',
  `nTax` bigint(20) DEFAULT '0' COMMENT '抽水',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '游戏盈亏',
  `tasknAmount` bigint(20) DEFAULT '0' COMMENT '任务得金',
  `returnRebate` bigint(20) DEFAULT '0' COMMENT '返佣',
  `totalnAmount` bigint(20) DEFAULT '0' COMMENT '用户总余额',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  `activityAmount` bigint(20) NOT NULL DEFAULT '0' COMMENT '活动得金',
  `addUser` int(11) NOT NULL DEFAULT '0' COMMENT '当日注册会员',
  `nUpScore` bigint(20) DEFAULT '0' COMMENT '上分',
  `nDownScore` bigint(20) DEFAULT '0' COMMENT '下分',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '总投注',
  `matchFee` bigint(20) DEFAULT '0' COMMENT '扣报名费',
  `returnMatchFee` bigint(20) DEFAULT '0' COMMENT '退报名费',
  `matchAmount` bigint(20) DEFAULT '0' COMMENT '比赛奖励',
  PRIMARY KEY (`ID`),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=317347 DEFAULT CHARSET=utf8mb4 COMMENT='管理首页数据报表';

-- ----------------------------
-- Table structure for table_web_money
-- ----------------------------
DROP TABLE IF EXISTS `table_web_money`;
CREATE TABLE `table_web_money` (
  `Idx` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `szTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '日期',
  `nPlayerID` int(11) NOT NULL COMMENT '玩家Id',
  `szNickName` varchar(64) NOT NULL COMMENT '昵称',
  `nMoney` int(11) NOT NULL COMMENT '花费金额',
  `nDiamond` int(11) NOT NULL COMMENT '钻石数',
  `EnterPriseID` varchar(36) NOT NULL COMMENT '代理商编号',
  `typeTag` int(11) DEFAULT NULL COMMENT '0 wang, 1 dai',
  `DeduceMoney` decimal(18,2) DEFAULT NULL COMMENT '应扣数，在类型为冲减的时候有效',
  `Type` int(11) DEFAULT NULL COMMENT '明细类型：1、充值 2、消费 3、系统退还,4、冲减,99、用户充值',
  `Remark` varchar(400) DEFAULT NULL COMMENT '备注',
  `GameType` int(11) DEFAULT '1' COMMENT '代理游戏类型;1 老友麻将；2老友麻将八张',
  PRIMARY KEY (`Idx`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_EnterPriseID` (`EnterPriseID`)
) ENGINE=InnoDB AUTO_INCREMENT=787 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_ngoodstemp
-- ----------------------------
DROP TABLE IF EXISTS `table_web_ngoodstemp`;
CREATE TABLE `table_web_ngoodstemp` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '会员Id',
  `nGoodsID` int(11) DEFAULT '0' COMMENT '物品Id',
  `AfterMbNum` int(11) DEFAULT '0' COMMENT '账变后数量',
  `CreateTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`Id`),
  KEY `idx_CreateTime` (`CreateTime`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8mb4 COMMENT='道具-物品数据找回临时表_房卡';

-- ----------------------------
-- Table structure for table_web_redemptionlog
-- ----------------------------
DROP TABLE IF EXISTS `table_web_redemptionlog`;
CREATE TABLE `table_web_redemptionlog` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '字典Id;主键,自增',
  `nClubId` int(11) NOT NULL COMMENT '俱乐部Id',
  `nPlayerId` int(11) NOT NULL COMMENT '用户Id',
  `nAmount` decimal(18,3) NOT NULL DEFAULT '0.000',
  `IsRedemption` int(11) NOT NULL DEFAULT '0' COMMENT '是否兑奖(0未兑奖;1已兑奖)',
  `CreateDate` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '派奖时间',
  `ModifyDate` datetime DEFAULT NULL COMMENT '领奖时间',
  PRIMARY KEY (`Id`),
  KEY `idx_nPlayerId_nClubId` (`nPlayerId`,`nClubId`,`IsRedemption`)
) ENGINE=InnoDB AUTO_INCREMENT=147 DEFAULT CHARSET=utf8mb4 COMMENT='派奖记录表';

-- ----------------------------
-- Table structure for table_web_round
-- ----------------------------
DROP TABLE IF EXISTS `table_web_round`;
CREATE TABLE `table_web_round` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nGameType` int(11) NOT NULL COMMENT '游戏类型;1牛牛,2三公,3炸金花...',
  `nTableID` int(11) DEFAULT '0' COMMENT '桌子ID',
  `nRound` int(11) DEFAULT '0' COMMENT '开局总数',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nGameType` (`nGameType`),
  KEY `idx_nTableID` (`nTableID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`)
) ENGINE=InnoDB AUTO_INCREMENT=641 DEFAULT CHARSET=utf8mb4 COMMENT='运营数据-牌局汇总(PC后台)';

-- ----------------------------
-- Table structure for table_web_tablelog
-- ----------------------------
DROP TABLE IF EXISTS `table_web_tablelog`;
CREATE TABLE `table_web_tablelog` (
  `Idx` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `szTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '开房日期',
  `nPlayerId` int(11) NOT NULL COMMENT '游戏Id',
  `szNickName` varchar(64) NOT NULL COMMENT '微信昵称',
  `startTable` int(11) NOT NULL COMMENT '开房数',
  `startGame` int(11) NOT NULL COMMENT '牌局数',
  `TableMnn` int(11) DEFAULT '0',
  `GameMnn` int(11) DEFAULT '0',
  `TableMyl` int(11) DEFAULT '0',
  `GameMyl` int(11) DEFAULT '0',
  `TableMsl` int(11) DEFAULT '0',
  `GameMsl` int(11) DEFAULT '0',
  `TableMhx` int(11) DEFAULT '0',
  `GameMhx` int(11) DEFAULT '0',
  `TableMgg` int(11) DEFAULT '0',
  `GameMgg` int(11) DEFAULT '0',
  `TableMls` int(11) DEFAULT '0',
  `GameMls` int(11) DEFAULT '0',
  `TableMlz` int(11) DEFAULT '0',
  `GameMlz` int(11) DEFAULT '0',
  `TableMgl` int(11) DEFAULT '0',
  `GameMgl` int(11) DEFAULT '0',
  `TablePbz` int(11) DEFAULT '0',
  `GamePbz` int(11) DEFAULT '0',
  `TablePsy` int(11) DEFAULT '0',
  `GamePsy` int(11) DEFAULT '0',
  `TablePssz` int(11) DEFAULT NULL,
  `GamePssz` int(11) DEFAULT NULL,
  `TableMwz` int(11) DEFAULT NULL COMMENT '梧州麻将开房数',
  `GameMwz` int(11) DEFAULT NULL COMMENT '梧州麻将开局数',
  `TablePddz` int(11) DEFAULT NULL COMMENT '斗地主开房数',
  `GamePddz` int(11) DEFAULT NULL COMMENT '斗地主开局数',
  PRIMARY KEY (`Idx`),
  KEY `web_tablelog_idx_szTime` (`szTime`),
  KEY `idx_nPlayerId` (`nPlayerId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_target
-- ----------------------------
DROP TABLE IF EXISTS `table_web_target`;
CREATE TABLE `table_web_target` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `nClubId` int(11) DEFAULT '0' COMMENT '俱乐部Id',
  `nPlayerId` int(11) DEFAULT '0' COMMENT '玩家Id',
  `nAmount` int(11) DEFAULT '0' COMMENT '服务费',
  `totalnAmount` int(11) DEFAULT '0' COMMENT '总服务费',
  `nExtenID` int(11) DEFAULT '0' COMMENT '上线Id',
  `nExtenDivision` tinyint(4) DEFAULT '1' COMMENT '是否开启奖励开关',
  `selfEarnings` int(11) DEFAULT '0' COMMENT '应得提成',
  `rate` int(11) DEFAULT '0' COMMENT '业绩比例',
  `upServiceFee` int(11) DEFAULT '0' COMMENT '下线分成服务费',
  PRIMARY KEY (`Id`),
  KEY `idx_nClubId` (`nClubId`),
  KEY `idx_nPlayerId` (`nPlayerId`)
) ENGINE=InnoDB AUTO_INCREMENT=25663 DEFAULT CHARSET=utf8mb4 COMMENT='业绩目标汇总表';

-- ----------------------------
-- Table structure for table_web_totaladduser
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totaladduser`;
CREATE TABLE `table_web_totaladduser` (
  `Idx` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `szTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `newUser` int(11) NOT NULL,
  `MaxCount` int(11) NOT NULL DEFAULT '0' COMMENT '最高在线人数',
  `MaxTime` varchar(20) NOT NULL DEFAULT '00:00' COMMENT '最高在线人数时间',
  `MinCount` int(11) NOT NULL DEFAULT '0' COMMENT '最低在线人数',
  `MinTime` varchar(20) NOT NULL DEFAULT '00:00' COMMENT '最低在线人数时间',
  PRIMARY KEY (`Idx`)
) ENGINE=InnoDB AUTO_INCREMENT=1020 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_totalbiggame
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totalbiggame`;
CREATE TABLE `table_web_totalbiggame` (
  `Id` int(4) NOT NULL AUTO_INCREMENT,
  `tDate` date DEFAULT NULL COMMENT '统计日期',
  `ClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `szClubName` varchar(32) DEFAULT NULL COMMENT '俱乐部名字',
  `nTotalUp` int(8) NOT NULL DEFAULT '0' COMMENT '上庄人数',
  `nTotalPlayerCount` int(8) NOT NULL DEFAULT '0' COMMENT '下注人数',
  `nTotalRound` int(8) NOT NULL DEFAULT '0' COMMENT '总局数',
  `nTotalbet` int(8) NOT NULL DEFAULT '0' COMMENT '下注总额',
  `nBankResult` int(8) NOT NULL DEFAULT '0' COMMENT '庄家盈利',
  `nTax` int(8) NOT NULL DEFAULT '0' COMMENT '百人场分红',
  PRIMARY KEY (`Id`),
  KEY `idx_tDate` (`tDate`),
  KEY `idx_ClubID` (`ClubID`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部百人场统计';

-- ----------------------------
-- Table structure for table_web_totaldiamond
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totaldiamond`;
CREATE TABLE `table_web_totaldiamond` (
  `Id` int(4) NOT NULL AUTO_INCREMENT,
  `tDate` date DEFAULT NULL COMMENT '统计日期',
  `nType1` bigint(20) DEFAULT '0' COMMENT '1-系统赠送',
  `nType2` bigint(20) NOT NULL DEFAULT '0' COMMENT '2-系统扣除',
  `nType3` bigint(20) NOT NULL DEFAULT '0' COMMENT '3-开房消耗',
  `nType4` bigint(20) NOT NULL DEFAULT '0' COMMENT '4-道具消耗',
  `nType5` bigint(20) NOT NULL DEFAULT '0' COMMENT '5-充值获得',
  PRIMARY KEY (`Id`),
  KEY `idx_tDate` (`tDate`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='钻石变更汇总';

-- ----------------------------
-- Table structure for table_web_totalgame
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totalgame`;
CREATE TABLE `table_web_totalgame` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `tDate` date DEFAULT NULL COMMENT '统计日期',
  `ClubRoom` int(4) DEFAULT '0' COMMENT '俱乐部开房数',
  `ClubRound` int(4) DEFAULT '0' COMMENT '俱乐部局数',
  `DiamondRoom` int(4) DEFAULT '0' COMMENT '金钻房数',
  `DiamondRound` int(4) DEFAULT '0' COMMENT '金钻局数',
  `GoldRoom` int(4) DEFAULT '0' COMMENT '金币房数',
  `GoldRound` int(4) DEFAULT '0' COMMENT '金币局数',
  PRIMARY KEY (`ID`),
  KEY `idx_tDate` (`tDate`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COMMENT='开房，局数后台统计';

-- ----------------------------
-- Table structure for table_web_totalgamedetail
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totalgamedetail`;
CREATE TABLE `table_web_totalgamedetail` (
  `ID` int(4) NOT NULL AUTO_INCREMENT,
  `tDate` date DEFAULT NULL COMMENT '统计日期',
  `ClubName` varchar(50) DEFAULT '' COMMENT '俱乐部名称',
  `ClubId` int(11) DEFAULT NULL COMMENT '俱乐部id',
  `Room` int(8) DEFAULT '0' COMMENT '房数',
  `Round` int(8) DEFAULT '0' COMMENT '局数',
  PRIMARY KEY (`ID`),
  KEY `idx_tDate` (`tDate`),
  KEY `idx_ClubId` (`ClubId`)
) ENGINE=InnoDB AUTO_INCREMENT=349 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部开房明细统计';

-- ----------------------------
-- Table structure for table_web_totalgold
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totalgold`;
CREATE TABLE `table_web_totalgold` (
  `Id` int(4) NOT NULL AUTO_INCREMENT,
  `tDate` date DEFAULT NULL COMMENT '统计日期',
  `nType1` bigint(20) NOT NULL DEFAULT '0' COMMENT '1-系统赠送',
  `nType2` bigint(20) NOT NULL DEFAULT '0' COMMENT '2-系统扣除',
  `nType3` bigint(20) NOT NULL DEFAULT '0' COMMENT '3-游戏消耗',
  `nType4` bigint(20) NOT NULL DEFAULT '0' COMMENT '4-游戏获得',
  `nType5` bigint(20) NOT NULL DEFAULT '0' COMMENT '5-钻石兑换',
  `nType6` bigint(20) NOT NULL DEFAULT '0' COMMENT '6-注册赠送',
  `nType7` bigint(20) NOT NULL DEFAULT '0' COMMENT '7-道具消耗',
  `nType8` bigint(20) NOT NULL DEFAULT '0' COMMENT '8-扣税',
  `nType9` bigint(20) NOT NULL DEFAULT '0' COMMENT '9-百人场消耗',
  `nType10` bigint(20) NOT NULL DEFAULT '0' COMMENT '10-百人场获得',
  `nType11` bigint(20) NOT NULL DEFAULT '0' COMMENT '11-百人场扣税',
  `nType12` bigint(20) NOT NULL DEFAULT '0' COMMENT '12-总体收扣税',
  PRIMARY KEY (`Id`),
  KEY `idx_tDate` (`tDate`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='金币变更汇总';

-- ----------------------------
-- Table structure for table_web_totalinline_hours
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totalinline_hours`;
CREATE TABLE `table_web_totalinline_hours` (
  `index` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `szTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `online` int(11) NOT NULL,
  PRIMARY KEY (`index`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_totalinline_min
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totalinline_min`;
CREATE TABLE `table_web_totalinline_min` (
  `index` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `szTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `online` int(11) NOT NULL,
  PRIMARY KEY (`index`),
  KEY `idx_szTime` (`szTime`)
) ENGINE=InnoDB AUTO_INCREMENT=752884 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_totalinline_min2
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totalinline_min2`;
CREATE TABLE `table_web_totalinline_min2` (
  `index` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `szTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `online` int(11) NOT NULL,
  PRIMARY KEY (`index`),
  KEY `idx_szTime` (`szTime`),
  KEY `idx_online` (`online`)
) ENGINE=InnoDB AUTO_INCREMENT=498 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_totalprofit
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totalprofit`;
CREATE TABLE `table_web_totalprofit` (
  `Id` int(4) NOT NULL AUTO_INCREMENT,
  `tDate` date DEFAULT NULL COMMENT '统计日期',
  `GameGive` int(8) NOT NULL DEFAULT '0' COMMENT '赢家分红',
  `GameGive100` int(8) NOT NULL DEFAULT '0' COMMENT '百人场分红',
  PRIMARY KEY (`Id`),
  KEY `idx_tDate` (`tDate`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COMMENT='分成统计';

-- ----------------------------
-- Table structure for table_web_totalprofitdetail
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totalprofitdetail`;
CREATE TABLE `table_web_totalprofitdetail` (
  `Id` int(4) NOT NULL AUTO_INCREMENT,
  `tDate` date DEFAULT NULL COMMENT '统计日期',
  `ClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `szClubName` varchar(32) DEFAULT NULL COMMENT '俱乐部名字',
  `nWinnerRoyaltyRate` tinyint(4) DEFAULT '0' COMMENT '俱乐部对赢家分成比例（平台设置）整数，需除以1000',
  `GameGive` int(8) NOT NULL DEFAULT '0' COMMENT '赢家分红',
  `nBigRoomRoyaltyRate` tinyint(4) DEFAULT '0' COMMENT '俱乐部对百人分成比例（平台设置）整数，需除以1000',
  `GameGive100` int(8) NOT NULL DEFAULT '0' COMMENT '百人场分红',
  PRIMARY KEY (`Id`),
  KEY `idx_ClubID` (`ClubID`),
  KEY `idx_tDate` (`tDate`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8mb4 COMMENT='分成详情';

-- ----------------------------
-- Table structure for table_web_totalscore
-- ----------------------------
DROP TABLE IF EXISTS `table_web_totalscore`;
CREATE TABLE `table_web_totalscore` (
  `Id` int(4) NOT NULL AUTO_INCREMENT,
  `tDate` date DEFAULT NULL COMMENT '统计日期',
  `nType1` bigint(20) NOT NULL DEFAULT '0' COMMENT '1-系统赠送',
  `nType2` bigint(20) NOT NULL DEFAULT '0' COMMENT '2-系统扣除',
  `nType3` bigint(20) NOT NULL DEFAULT '0' COMMENT '3-俱乐部赠送',
  `nType4` bigint(20) NOT NULL DEFAULT '0' COMMENT '4-捐赠',
  `nType5` bigint(20) NOT NULL DEFAULT '0' COMMENT '5-游戏获得',
  `nType6` bigint(20) NOT NULL DEFAULT '0' COMMENT '6-游戏消耗',
  `nType7` bigint(20) NOT NULL DEFAULT '0' COMMENT '7-扣税',
  `nType8` bigint(20) NOT NULL DEFAULT '0' COMMENT '8-道具消耗',
  `nType9` bigint(20) NOT NULL DEFAULT '0' COMMENT '9-开房消耗',
  `nType10` bigint(20) NOT NULL DEFAULT '0' COMMENT '10-百人场消耗',
  `nType11` bigint(20) NOT NULL DEFAULT '0' COMMENT '11-百人场获得',
  `nType12` bigint(20) NOT NULL DEFAULT '0' COMMENT '12-百人场扣税',
  `nType13` bigint(20) NOT NULL DEFAULT '0' COMMENT '13-俱乐部扣除',
  PRIMARY KEY (`Id`),
  KEY `idx_tDate` (`tDate`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部积分变更汇总';

-- ----------------------------
-- Table structure for table_web_userdataquery
-- ----------------------------
DROP TABLE IF EXISTS `table_web_userdataquery`;
CREATE TABLE `table_web_userdataquery` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nGameType` int(11) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
  `nTableID` int(11) DEFAULT '0' COMMENT '桌子ID',
  `nBaseScore` bigint(20) DEFAULT '0' COMMENT '底分',
  `nBetScore` bigint(20) DEFAULT '0' COMMENT '下注',
  `nResult` bigint(20) DEFAULT '0' COMMENT '得分(扣税后)',
  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '结束时间',
  `nResultMoney` bigint(20) DEFAULT '0' COMMENT '成绩中积分部分',
  `nTax` bigint(20) DEFAULT '0' COMMENT '扣税额',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_nTableID` (`nTableID`),
  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户管理-用户数据查询(PC后台)';

-- ----------------------------
-- Table structure for table_web_userscorechange
-- ----------------------------
DROP TABLE IF EXISTS `table_web_userscorechange`;
CREATE TABLE `table_web_userscorechange` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
  `nGameID` int(11) NOT NULL DEFAULT '1' COMMENT '2013代表牛牛',
  `nTableID` int(11) DEFAULT '0' COMMENT '桌子ID',
  `nType` int(11) DEFAULT '0' COMMENT '变更类型',
  `nAmount` bigint(20) DEFAULT '0' COMMENT '变更数量',
  `nScore` bigint(20) DEFAULT '0' COMMENT '剩余分数',
  `CreateTime` timestamp NULL DEFAULT NULL COMMENT '结束时间',
  PRIMARY KEY (`ID`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_nTableID` (`nTableID`),
  KEY `idx_nClubID_CreateTime` (`nClubID`,`CreateTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户管理-用户积分变动(PC后台)';

-- ----------------------------
-- Table structure for table_web_zhanji
-- ----------------------------
DROP TABLE IF EXISTS `table_web_zhanji`;
CREATE TABLE `table_web_zhanji` (
  `Id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nGameId` int(11) NOT NULL COMMENT '游戏ID',
  `nTableId` int(11) NOT NULL COMMENT '桌子ID',
  `nCreatePlayerID` int(11) NOT NULL COMMENT '创建人ID',
  `nPayMode` tinyint(4) NOT NULL COMMENT '支付方式(1-人支付,2-均摊)',
  `nBaseScore` int(11) NOT NULL COMMENT '底分(10/20,50/100)',
  `nBankMode` tinyint(4) NOT NULL COMMENT '庄家模式',
  `nBankCondition` int(11) NOT NULL COMMENT '上庄条件',
  `szRule` varchar(256) NOT NULL COMMENT '玩法',
  `tStartTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '开始时间',
  `tEndTime` datetime NOT NULL COMMENT '结束时间',
  `nGameRound` int(11) NOT NULL COMMENT '当前局数',
  `nTotalRound` int(11) NOT NULL COMMENT '房间设置的总局数',
  `nPlayerID1` int(11) NOT NULL COMMENT '玩家1ID',
  `nScore1` int(11) NOT NULL COMMENT '玩家1分数',
  `nPlayerID2` int(11) NOT NULL COMMENT '玩家2ID',
  `nScore2` int(11) NOT NULL COMMENT '玩家2分数',
  `nPlayerID3` int(11) NOT NULL COMMENT '玩家3ID',
  `nScore3` int(11) NOT NULL COMMENT '玩家3分数',
  `nPlayerID4` int(11) NOT NULL COMMENT '玩家4ID',
  `nScore4` int(11) NOT NULL COMMENT '玩家4分数',
  `nPlayerID5` int(11) NOT NULL COMMENT '玩家5ID',
  `nScore5` int(11) NOT NULL COMMENT '玩家5分数',
  `nPlayerID6` int(11) NOT NULL COMMENT '玩家6ID',
  `nScore6` int(11) NOT NULL COMMENT '玩家6分数',
  `nPlayerID7` int(11) NOT NULL COMMENT '玩家7ID',
  `nScore7` int(11) NOT NULL COMMENT '玩家7分数',
  `nPlayerID8` int(11) NOT NULL COMMENT '玩家8ID',
  `nScore8` int(11) NOT NULL COMMENT '玩家8分数',
  `nPlayerID9` int(11) NOT NULL COMMENT '玩家9ID',
  `nScore9` int(11) NOT NULL COMMENT '玩家9分数',
  `nPlayerID10` int(11) NOT NULL COMMENT '玩家10ID',
  `nScore10` int(11) NOT NULL COMMENT '玩家10分数',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1表示牛牛，2表示三公',
  PRIMARY KEY (`Id`),
  KEY `table_web_zhanji_idx_nPlayerID` (`nPlayerID`),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_nGameId` (`nGameId`),
  KEY `idx_nTableId` (`nTableId`),
  KEY `idx_nCreatePlayerID` (`nCreatePlayerID`),
  KEY `idx_nGameType` (`nGameType`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for table_web_zhanji_detail
-- ----------------------------
DROP TABLE IF EXISTS `table_web_zhanji_detail`;
CREATE TABLE `table_web_zhanji_detail` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键Id',
  `TableId` int(11) NOT NULL COMMENT '桌子ID',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `nCreatePlayerID` int(11) NOT NULL COMMENT '创建人ID',
  `nBaseScore` int(11) NOT NULL COMMENT '底分(10/20,50/100)',
  `nBankMode` tinyint(4) NOT NULL COMMENT '庄家模式',
  `nBankCondition` int(11) NOT NULL COMMENT '上庄条件',
  `szRule` varchar(256) NOT NULL COMMENT '玩法',
  `tStartTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '开始时间',
  `tEndTime` timestamp NULL DEFAULT NULL COMMENT '结束时间',
  `nRound` int(11) NOT NULL COMMENT '当前局数',
  `nTotalRound` int(11) NOT NULL COMMENT '房间设置的总局数',
  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家ID',
  `nPlayerID1` int(11) NOT NULL COMMENT '玩家1ID',
  `szCardData1` varchar(256) NOT NULL COMMENT '玩家1牌型详情',
  `szCardType1` varchar(16) NOT NULL COMMENT '玩家1牌型',
  `nScore1` int(11) NOT NULL COMMENT '玩家1分数',
  `nCardData1` varchar(50) NOT NULL DEFAULT '' COMMENT '玩家1的手牌',
  `szNickName1` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家1的昵称',
  `nCardsNum1` int(11) NOT NULL DEFAULT '0' COMMENT '玩家1的点数',
  `nHogMul1` int(11) NOT NULL DEFAULT '0' COMMENT '玩家1的抢庄倍数',
  `nDoubleRule1` int(11) NOT NULL DEFAULT '0' COMMENT '玩家1的翻倍规则',
  `nPlayerID2` int(11) NOT NULL COMMENT '玩家2ID',
  `szCardData2` varchar(256) NOT NULL COMMENT '玩家2牌型详情',
  `szCardType2` varchar(16) NOT NULL COMMENT '玩家2牌型',
  `nScore2` int(11) NOT NULL COMMENT '玩家2分数',
  `nCardData2` varchar(50) NOT NULL DEFAULT '' COMMENT '玩家2的手牌',
  `szNickName2` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家2的昵称',
  `nCardsNum2` int(11) NOT NULL DEFAULT '0' COMMENT '玩家2的点数',
  `nHogMul2` int(11) NOT NULL DEFAULT '0' COMMENT '玩家2的抢庄倍数',
  `nDoubleRule2` int(11) NOT NULL DEFAULT '0' COMMENT '玩家2的翻倍规则',
  `nPlayerID3` int(11) NOT NULL COMMENT '玩家3ID',
  `szCardData3` varchar(256) NOT NULL COMMENT '玩家3牌型详情',
  `szCardType3` varchar(16) NOT NULL COMMENT '玩家3牌型',
  `nScore3` int(11) NOT NULL COMMENT '玩家3分数',
  `nCardData3` varchar(50) NOT NULL DEFAULT '' COMMENT '玩家3的手牌',
  `szNickName3` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家3的昵称',
  `nCardsNum3` int(11) NOT NULL DEFAULT '0' COMMENT '玩家3的点数',
  `nHogMul3` int(11) NOT NULL DEFAULT '0' COMMENT '玩家3的抢庄倍数',
  `nDoubleRule3` int(11) NOT NULL DEFAULT '0' COMMENT '玩家3的翻倍规则',
  `nPlayerID4` int(11) NOT NULL COMMENT '玩家4ID',
  `szCardData4` varchar(256) NOT NULL COMMENT '玩家4牌型详情',
  `szCardType4` varchar(16) NOT NULL COMMENT '玩家4牌型',
  `nScore4` int(11) NOT NULL COMMENT '玩家4分数',
  `nCardData4` varchar(50) NOT NULL DEFAULT '' COMMENT '玩家4的手牌',
  `szNickName4` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家4的昵称',
  `nCardsNum4` int(11) NOT NULL DEFAULT '0' COMMENT '玩家4的点数',
  `nHogMul4` int(11) NOT NULL DEFAULT '0' COMMENT '玩家4的抢庄倍数',
  `nDoubleRule4` int(11) NOT NULL DEFAULT '0' COMMENT '玩家4的翻倍规则',
  `nPlayerID5` int(11) NOT NULL COMMENT '玩家5ID',
  `szCardData5` varchar(256) NOT NULL COMMENT '玩家5牌型详情',
  `szCardType5` varchar(16) NOT NULL COMMENT '玩家5牌型',
  `nScore5` int(11) NOT NULL COMMENT '玩家5分数',
  `nCardData5` varchar(50) NOT NULL DEFAULT '' COMMENT '玩家5的手牌',
  `szNickName5` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家5的昵称',
  `nCardsNum5` int(11) NOT NULL DEFAULT '0' COMMENT '玩家5的点数',
  `nHogMul5` int(11) NOT NULL DEFAULT '0' COMMENT '玩家5的抢庄倍数',
  `nDoubleRule5` int(11) NOT NULL DEFAULT '0' COMMENT '玩家5的翻倍规则',
  `nPlayerID6` int(11) NOT NULL COMMENT '玩家6ID',
  `szCardData6` varchar(256) NOT NULL COMMENT '玩家6牌型详情',
  `szCardType6` varchar(16) NOT NULL COMMENT '玩家6牌型',
  `nScore6` int(11) NOT NULL COMMENT '玩家6分数',
  `nCardData6` varchar(50) NOT NULL DEFAULT '' COMMENT '玩家6的手牌',
  `szNickName6` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家6的昵称',
  `nCardsNum6` int(11) NOT NULL DEFAULT '0' COMMENT '玩家6的点数',
  `nHogMul6` int(11) NOT NULL DEFAULT '0' COMMENT '玩家6的抢庄倍数',
  `nDoubleRule6` int(11) NOT NULL DEFAULT '0' COMMENT '玩家6的翻倍规则',
  `nPlayerID7` int(11) NOT NULL COMMENT '玩家7ID',
  `szCardData7` varchar(256) NOT NULL COMMENT '玩家7牌型详情',
  `szCardType7` varchar(16) NOT NULL COMMENT '玩家7牌型',
  `nScore7` int(11) NOT NULL COMMENT '玩家7分数',
  `nCardData7` varchar(50) NOT NULL DEFAULT '' COMMENT '玩家7的手牌',
  `szNickName7` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家7的昵称',
  `nCardsNum7` int(11) NOT NULL DEFAULT '0' COMMENT '玩家7的点数',
  `nHogMul7` int(11) NOT NULL DEFAULT '0' COMMENT '玩家7的抢庄倍数',
  `nDoubleRule7` int(11) NOT NULL DEFAULT '0' COMMENT '玩家7的翻倍规则',
  `nPlayerID8` int(11) NOT NULL COMMENT '玩家8ID',
  `szCardData8` varchar(256) NOT NULL COMMENT '玩家8牌型详情',
  `szCardType8` varchar(16) NOT NULL COMMENT '玩家8牌型',
  `nScore8` int(11) NOT NULL COMMENT '玩家8分数',
  `nCardData8` varchar(50) NOT NULL DEFAULT '' COMMENT '玩家8的手牌',
  `szNickName8` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家8的昵称',
  `nCardsNum8` int(11) NOT NULL DEFAULT '0' COMMENT '玩家8的点数',
  `nHogMul8` int(11) NOT NULL DEFAULT '0' COMMENT '玩家8的抢庄倍数',
  `nDoubleRule8` int(11) NOT NULL DEFAULT '0' COMMENT '玩家8的翻倍规则',
  `nPlayerID9` int(11) NOT NULL COMMENT '玩家9ID',
  `szCardData9` varchar(256) NOT NULL COMMENT '玩家9牌型详情',
  `szCardType9` varchar(16) NOT NULL COMMENT '玩家9牌型',
  `nScore9` int(11) NOT NULL COMMENT '玩家9分数',
  `nCardData9` varchar(50) NOT NULL DEFAULT '' COMMENT '玩家9的手牌',
  `szNickName9` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家9的昵称',
  `nCardsNum9` int(11) NOT NULL DEFAULT '0' COMMENT '玩家9的点数',
  `nHogMul9` int(11) NOT NULL DEFAULT '0' COMMENT '玩家9的抢庄倍数',
  `nDoubleRule9` int(11) NOT NULL DEFAULT '0' COMMENT '玩家9的翻倍规则',
  `nPlayerID10` int(11) NOT NULL COMMENT '玩家10ID',
  `szCardData10` varchar(256) NOT NULL COMMENT '玩家10牌型详情',
  `szCardType10` varchar(16) NOT NULL COMMENT '玩家10牌型',
  `nScore10` int(11) NOT NULL COMMENT '玩家10分数',
  `nCardData10` varchar(50) NOT NULL DEFAULT '' COMMENT '玩家10的手牌',
  `szNickName10` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家10的昵称',
  `nCardsNum10` int(11) NOT NULL DEFAULT '0' COMMENT '玩家10的点数',
  `nHogMul10` int(11) NOT NULL DEFAULT '0' COMMENT '玩家10的抢庄倍数',
  `nDoubleRule10` int(11) NOT NULL DEFAULT '0' COMMENT '玩家10的翻倍规则',
  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1表示牛牛，2表示三公',
  PRIMARY KEY (`ID`),
  KEY `web_zhanji_detail_nPlayerID` (`nPlayerID`),
  KEY `idx_tEndTime` (`tEndTime`),
  KEY `idx_TableId` (`TableId`),
  KEY `idx_nCreatePlayerID` (`nCreatePlayerID`),
  KEY `idx_nBankID` (`nBankID`),
  KEY `idx_nGameType` (`nGameType`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for t_agent_info
-- ----------------------------
DROP TABLE IF EXISTS `t_agent_info`;
CREATE TABLE `t_agent_info` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
  `nPlayerID` int(11) NOT NULL COMMENT '用户ID',
  `UpAgentID` int(11) NOT NULL DEFAULT '0' COMMENT '上级代理ID, 默认0',
  `nLevel` tinyint(4) NOT NULL COMMENT '代理等级',
  `nAmount` bigint(20) NOT NULL DEFAULT '0' COMMENT '可提取账户金额(分成写入此字段) 默认0',
  `ratio` int(11) NOT NULL DEFAULT '0' COMMENT '分成额度(10000=100%)  默认0',
  `aliAccount` varchar(128) NOT NULL DEFAULT '' COMMENT '支付宝账号',
  `aliName` varchar(128) NOT NULL DEFAULT '' COMMENT '支付宝姓名',
  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `UpCPID` int(11) DEFAULT NULL,
  `CreateCPTime` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `idx_CreateTime` (`CreateTime`),
  KEY `idx_nPlayerID` (`nPlayerID`),
  KEY `idx_UpAgentID` (`UpAgentID`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COMMENT='代理人信息表';

-- ----------------------------
-- Table structure for t_cp_commission
-- ----------------------------
DROP TABLE IF EXISTS `t_cp_commission`;
CREATE TABLE `t_cp_commission` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `nPlayerID` int(11) DEFAULT NULL,
  `nSourceID` int(11) DEFAULT NULL,
  `nCPID` int(11) DEFAULT NULL,
  `nType` int(11) DEFAULT NULL,
  `ratio` int(11) DEFAULT NULL,
  `nAmount` int(11) DEFAULT NULL,
  `nRecharge` int(11) DEFAULT NULL,
  `CreateTime` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for t_cp_info
-- ----------------------------
DROP TABLE IF EXISTS `t_cp_info`;
CREATE TABLE `t_cp_info` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `nPlayerID` int(11) NOT NULL,
  `UpCPID` int(11) NOT NULL,
  `nLevel` int(11) NOT NULL DEFAULT '1',
  `CreateTime` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for t_cp_stat
-- ----------------------------
DROP TABLE IF EXISTS `t_cp_stat`;
CREATE TABLE `t_cp_stat` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `nPlayerID` int(11) DEFAULT NULL,
  `tDate` date DEFAULT NULL,
  `nAgentTotal` int(11) DEFAULT NULL,
  `nNewAgent` int(11) DEFAULT NULL,
  `nRecharge` bigint(20) DEFAULT NULL,
  `nShare` bigint(20) DEFAULT NULL,
  `nCommission` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=114 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Table structure for t_cp_tree
-- ----------------------------
DROP TABLE IF EXISTS `t_cp_tree`;
CREATE TABLE `t_cp_tree` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `nPlayerID` int(11) DEFAULT NULL,
  `DownCPID` int(11) DEFAULT NULL,
  `CreateTime` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Procedure structure for AddRobotUser
-- ----------------------------
DROP PROCEDURE IF EXISTS `AddRobotUser`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `AddRobotUser`(
    in $nClubID INT,
    in $nNumber INT,
    in $szPass  VARCHAR(64),
    in $nScore INT
)
retFail:BEGIN
    
    DECLARE ExtenID INT DEFAULT -1;
    DECLARE userNum INT DEFAULT 0;
    DECLARE memberNum INT DEFAULT 0;
    DECLARE sTime TIMESTAMP;
    DECLARE eTime TIMESTAMP;
    DECLARE nickName INT DEFAULT 1;

    
    DECLARE records int DEFAULT 1;
    DECLARE playerID int DEFAULT  0;
    DECLARE cur_users cursor for select nplayerId from table_user where phone='88888888888' and szCreateTime >= sTime and szCreateTime <= eTime;
    DECLARE CONTINUE HANDLER FOR NOT FOUND set records = 0;

    
	
	
    set sTime = now();
    while userNum < $nNumber DO
        set nickName = floor(100000 + rand()*9999999);
        INSERT INTO table_user (szNickName,nCardCount,nJinBi,szPass,phone,szHeadPicUrl,bRobot) VALUES (nickName,0,0,$szPass,'88888888888','4',1);
        set userNum = userNum + 1;
    END WHILE;
    set eTime = now();

    
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for A_pr_web_totalgame
-- ----------------------------
DROP PROCEDURE IF EXISTS `A_pr_web_totalgame`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `A_pr_web_totalgame`()
BEGIN
declare _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 00:00:00');
declare _EndDate  varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 23:59:59');


DECLARE _dDate VARCHAR(10);

set _dDate=DATE_SUB(CURDATE(),INTERVAL 1 day);

select * FROM
(

select count(*) as ClubRoom, sum(nTotalRound) as ClubRound from table_web_zhanji where tEndTime BETWEEN _StartDate AND _EndDate
UNION ALL
select count(*) as _diamondRoom,sum(T.nRound) as diamondRound 
from Table_ClubGameScore T
LEFT JOIN Table_ClubInfo C on T.nClubID=C.nClubID and C.bIsPublic=1 and C.nStatus=1
where T.tEndTime BETWEEN _StartDate AND _EndDate
group by T.nClubID
UNION ALL
select count(*) as ClubRoom,sum(T.nRound) as ClubRound 
from Table_ClubGameScore T
LEFT JOIN Table_ClubInfo C on T.nClubID=C.nClubID and C.bIsPublic=0 and C.nStatus=1
where T.tEndTime BETWEEN _StartDate AND _EndDate
group by T.nClubID
) b;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for a_test
-- ----------------------------
DROP PROCEDURE IF EXISTS `a_test`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `a_test`(
            in  $idlist     TEXT,
            OUT $returnVal  INT
)
BEGIN
DECLARE _next     TEXT DEFAULT NULL;
DECLARE _nextlen  INT  DEFAULT NULL;
DECLARE _value    TEXT DEFAULT NULL;
DECLARE _s        VARCHAR(32);
-- DECLARE _a   INT;
-- DECLARE _b   INT;
-- DECLARE _c   VARCHAR(16);
-- SET _c = CONCAT("321");
-- SELECT substring(_c,-3,1);
-- IF _a >= 10 then
--   Set _b = _a / 10 %2;
-- end if;
-- set $returnVal = _b;
    #select * from table_league_club_member where nclubid = 666053 and LENGTH(szban) > 1;
-- RT:    
-- LOOP
--   IF LENGTH(TRIM($idlist)) = 0 OR $idlist IS NULL THEN
--     LEAVE RT;
--   END IF;
--   
--   SET _next = SUBSTRING_INDEX($idlist,',',1);
--   
--   SET _nextlen = LENGTH(_next);
--   
--   SET _value = TRIM(_next);
--   
--   -- 解出单个ID
--   SELECT _value;
--   
--   SET $idlist = INSERT($idlist,1,_nextlen + 1,'');
--   
-- END LOOP;
SELECT SUBSTRING("123",1,1) INTO _s;
SELECT _s;
IF _s = '2' THEN
        SELECT "OK";
ELSE
        SELECT "NO";
END IF;
SET $returnVal = 1;    
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for dev_clear_id
-- ----------------------------
DROP PROCEDURE IF EXISTS `dev_clear_id`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `dev_clear_id`(
IN $playid   INT
)
rt:BEGIN

DELETE FROM table_club_task_complete WHERE nplayerid = $playid;
DELETE FROM table_club_task_recdata WHERE nplayerid = $playid;
DELETE FROM table_club_task_player_data WHERE nplayerid = $playid;
DELETE FROM table_clublogscore WHERE nplayerid = $playid;
UPDATE table_user SET phone = NULL,szOpenId = NULL WHERE nplayerid = $playid;
UPDATE table_clubmember SET nscore = 0 WHERE nplayerid = $playid; 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for dev_cp
-- ----------------------------
DROP PROCEDURE IF EXISTS `dev_cp`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `dev_cp`(
IN   $nPlayerID      INT            #代理ID
)
RT:BEGIN
 
/*
计算城市合伙人的补充数据 
*/
 
DECLARE _subday     INT;
DECLARE i           INT;
DECLARE _start_date VARCHAR(32);
DECLARE _last_stat_date VARCHAR(32);
DECLARE _yesterday  VARCHAR(32);
DECLARE _tday       VARCHAR(32);
  
 
#合伙人的创建时间
SELECT date_format(CreateTime, '%Y-%c-%d' )  into _start_date  from `t_cp_info` where  nPlayerID = $nPlayerID;
 
IF _start_date IS NULL THEN
        select "没有数据";
        LEAVE RT;
END IF;
 
#昨天 
SELECT DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY),'%Y-%c-%d' ) INTO _yesterday;
 
#每日统计数据表里最后的时间
SELECT tDate INTO _last_stat_date FROM t_cp_stat WHERE nPlayerID = $nPlayerID ORDER BY tDate DESC LIMIT 1;
 
IF _last_stat_date IS NULL THEN
#如果没有数据，要从昨天的倒着去补充
   
   #如果是今天创建的，则不需要补充
   IF _start_date = DATE_FORMAT(NOW(),'%Y-%c-%d' ) THEN
      LEAVE RT;
   ELSE
      #计算间隔的天数
      SELECT TIMESTAMPDIFF(DAY,_start_date,NOW()) INTO _subday;
      
      IF _subday > 65 THEN
        SET _subday = 65;
      END IF;
      
      #需要向创建日期减1天
      SET _tday = DATE_SUB(_start_date,INTERVAL 1 DAY);
      
   END IF;
ELSE
#需要计算从昨天到开始的日期需要补足多少天
   #如果最后的数据是昨天，则不需要补足
   IF _last_stat_date = _yesterday THEN
      LEAVE RT;
   ELSE
   
           #从昨天开始向最后日期数65天
           SELECT TIMESTAMPDIFF(DAY,_last_stat_date,_yesterday) INTO _subday;
           IF _subday > 65 THEN
             SET _subday = 65;
           END IF;
        
        SET _tday = _last_stat_date;
        
   END IF; 
END IF;
SET i = 0;
WHILE i < _subday DO
 SET i=i+1;
 SET _tday = DATE_ADD(_tday,INTERVAL 1 DAY);
 
 CALL dev_cp_cal($nPlayerID,_tday);
  
--  INSERT INTO `t_cp_stat` (  `nPlayerID`,  `tDate`,  `nAgentTotal`,  `nNewAgent`,  `nRecharge`,  `nShare`,  `nCommission`) 
--  VALUES  (    $nPlayerID,   _tday,    0,    0,    0,    0,    0  ) ;
 
END WHILE;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for dev_cp_cal
-- ----------------------------
DROP PROCEDURE IF EXISTS `dev_cp_cal`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `dev_cp_cal`(
IN   $nPlayerID      INT,            #代理ID
IN   $szDate         VARCHAR(32)     #计算的日期
)
RT:BEGIN
 
/*
计算城市合伙人的某天统计数据 
*/
 
DECLARE _start_date      VARCHAR(32);
DECLARE _end_date        VARCHAR(32);
DECLARE _agent_total     INT;
DECLARE _agent_new       INT;
DECLARE _recharge        BIGINT;
DECLARE _share           BIGINT;
 
SET _start_date = CONCAT($szDate,' 0:0:0');
SET _end_date = CONCAT($szDate,' 23:59:59');
 
#算某日的总代理数
SELECT COUNT(nplayerid) INTO _agent_total FROM `t_agent_info` WHERE UpCPID IN (SELECT downcpid FROM `t_cp_tree` WHERE nplayerid = $nPlayerID UNION ALL SELECT $nPlayerID )
AND CreateCPTime <= _end_date;
 
#算某日的新增代理数
SELECT COUNT(nplayerid) INTO _agent_new FROM `t_agent_info` WHERE UpCPID IN (SELECT downcpid FROM `t_cp_tree` WHERE nplayerid = $nPlayerID UNION ALL SELECT $nPlayerID )
AND CreateCPTime >= _start_date AND CreateCPTime <= _end_date;
#计算某日线下所有的充值额和分成
SELECT IFNULL(SUM(`nRecharge`),0),IFNULL(SUM(`nAmount`),0) INTO _recharge, _share FROM `t_cp_commission` WHERE nCPID IN (SELECT downcpid FROM `t_cp_tree` WHERE nplayerid = $nPlayerID UNION ALL SELECT $nPlayerID)
AND CreateTime >= _start_date AND CreateTime <= _end_date;
 
IF EXISTS( SELECT 1 FROM t_cp_stat WHERE nPlayerID=$nPlayerID AND tDate = $szDate) THEN  
        #如果已经存在
        UPDATE t_cp_stat SET nAgentTotal = _agent_total,nNewAgent = _agent_new ,nRecharge = _recharge, nShare = _share WHERE nPlayerID=$nPlayerID AND tDate = $szDate;
ELSE
        INSERT INTO `t_cp_stat` (  `nPlayerID`,  `tDate`,  `nAgentTotal`,  `nNewAgent`,  `nRecharge`,  `nShare`,  `nCommission`) 
        VALUES  (    $nPlayerID,   $szDate,    _agent_total,    _agent_new,    _recharge,    _share,    0  ) ;  
END IF;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for dev_g
-- ----------------------------
DROP PROCEDURE IF EXISTS `dev_g`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `dev_g`(
IN   $nPlayerID      INT,            #代理ID
IN   $nTime          TINYINT,        #时间类型 1-近1天 2-近3天 3-近7天 4-近15天 5-近1个月
IN   $nPage          INT,            #第几页
OUT  $nTotal         INT             #总数据量
)
RT:BEGIN
/*
获取下线列表
*/
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _start  VARCHAR(32);
DECLARE _day    INT;
  
SET _count = 5;
SET _day   = 1;
  
IF $nPage <= 0 THEN
        SET $nPage = 1;
END IF;
  
SET _page = ($nPage-1)*_count;
SET $nTotal = 0;
 
#检测代理用户是否存在
IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nPlayerID) THEN
    LEAVE RT;
END IF;  
IF $nTime = 1 THEN
 SET _day = 1;
ELSEIF  $nTime = 2 THEN
 SET _day = 3;
ELSEIF  $nTime = 3 THEN
 SET _day = 7;
ELSEIF  $nTime = 4 THEN
 SET _day = 15;
ELSEIF  $nTime = 5 THEN
 SET _day = 30;
END IF;
SET _start = DATE_FORMAT( DATE_SUB(NOW(), INTERVAL _day DAY),"%Y-%m-%d 00:00:00" );
            
#从视角代理查下面成员，得到昵称，类型，ID，直属的充值额，直属返现，下级代理会员数，下级成员充值额，下级成员返利，分成比例
SELECT A.szNickName,A.acctype, t2.nplayerid, t2.cjin,t2.zhifan, COUNT(u1.nplayerid) downcount,IFNULL(B.nRecharge,0) down_recharge,IFNULL(B.nAmount,0) down_com,
       IFNULL(C.ratio,0) ratio,IFNULL(C.UpAgentID,0) UpAgentID
FROM table_user u1 RIGHT JOIN
(
            SELECT nplayerid,IFNULL(temp1.cjin,0) AS cjin, IFNULL(temp1.zhifan,0) AS zhifan FROM
            (
                    SELECT DISTINCT(nplayerid) FROM 
                    (
                    SELECT nplayerid FROM table_user WHERE extendcode = $nPlayerID AND `nActive` = 1 
                    UNION
                    SELECT nplayerid FROM `table_agent_info` WHERE upagentid = $nPlayerID
                    ) tid ORDER BY nplayerid LIMIT _page, _count
            )id1
            LEFT JOIN 
            (
                SELECT com1.nSourceID, IFNULL(SUM(com1.`nRecharge`),0) AS cjin ,IFNULL(SUM(com1.nAmount),0) AS zhifan
                FROM `table_agent_commission` com1 
                WHERE com1.`nPlayerID` = $nPlayerID AND ntype = 0 AND com1.`CreateTime` > _start
                GROUP BY com1.nSourceID
            )temp1 ON id1.`nplayerid` = temp1.nSourceID
)t2 ON u1.extendcode = t2.nplayerid
LEFT JOIN 
(
  SELECT nplayerid,szNickName,acctype FROM table_user WHERE acctype>=1 AND acctype<=11
)A ON t2.nplayerid=A.nplayerid
LEFT JOIN 
(
  SELECT nplayerid,SUM(nRecharge) nRecharge,SUM(nAmount) nAmount FROM  table_agent_commission WHERE Createtime > _start
  GROUP BY nplayerid
)B ON t2.nplayerid=B.nplayerid
Left JOIN
(
#分成比例
#IFNULL( ( SELECT `ratio` FROM `table_agent_info` WHERE `nPlayerID` = t2.nplayerid), 0) ratio
  SELECT nplayerid, `UpAgentID`,`ratio` FROM  table_agent_info
  GROUP BY nplayerid
)C ON t2.nplayerid=C.nplayerid
 GROUP BY t2.nplayerid;
 
 
#总数量
SELECT COUNT(nPlayerId) INTO $nTotal FROM
(
    SELECT DISTINCT(nplayerid) FROM 
    (
            SELECT nplayerid FROM table_user WHERE extendcode = $nPlayerID AND `nActive` = 1 
            UNION
            SELECT nplayerid FROM `table_agent_info` WHERE upagentid = $nPlayerID
    ) tid1
 )tid2;
 
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for dev_make_cash_order
-- ----------------------------
DROP PROCEDURE IF EXISTS `dev_make_cash_order`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `dev_make_cash_order`(
		IN  $orderid   VARCHAR(128),
		IN  $opType    INT,           
		OUT $nscore    BIGINT,
		OUT $nAddScore BIGINT,
		OUT $returnVal INT,
		OUT $strOutMsg VARCHAR(256)
)
rt:BEGIN

DECLARE _incoin      BIGINT;
DECLARE _intype      INT;
DECLARE _clubcoin    BIGINT;
DECLARE _preuscore   BIGINT;
DECLARE _uscore      BIGINT  DEFAULT 0;
DECLARE _tmpDesc     VARCHAR(64);
DECLARE _tmpActType  INT;
DECLARE _tmpLogType  INT;
DECLARE _flag_ok     INT;
DECLARE _flag_fail   INT;
DECLARE _flag_commited INT;
DECLARE _flag_val    INT;
DECLARE _flag_delay  INT;
DECLARE _flag_delay_ok  INT;
DECLARE _nStatus     INT;
DECLARE _examineFlag     INT;
DECLARE _exFlag_delay    INT;
DECLARE _exFlag_delay_ok INT;
DECLARE _playerId    INT;
DECLARE _nChannel    INT;
DECLARE _nSub        INT;
DECLARE _commission  INT;
DECLARE errno        INT DEFAULT 0;
DECLARE _oldDesc     VARCHAR(128);
DECLARE _mark2       VARCHAR(128);

DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET errno = 1;
SET _flag_ok       = 1;
SET _flag_fail     = 2;
SET _flag_commited = 3;
SET _flag_val      = 0;
SET $nAddScore     = 0;

SET _flag_delay    = 5;   
SET _flag_delay_ok = 6;   

SET _exFlag_delay = 8;    
SET _exFlag_delay_ok = 9; 
IF NOT EXISTS (SELECT 1 FROM table_third_order WHERE szorder = $orderid) THEN
    SET $nscore    = 0;
    SET $returnVal = 26;
    SET $strOutMsg = CONCAT("orderid not exists.");
    LEAVE rt;
END IF;

START TRANSACTION;
        
SELECT nAmount,nType, nplayerId, nClubID, nStatus,szDesc INTO _incoin, _intype, _playerId, _nChannel,_nStatus,_oldDesc FROM table_third_order WHERE szorder = $orderid FOR UPDATE;
SELECT nFlag INTO _examineFlag FROM table_pyramid_examine WHERE szorder = $orderid FOR UPDATE;
IF _nStatus = _flag_ok THEN 
    COMMIT;
    SET $nscore    = 0;
    SET $returnVal = 26;
    SET $strOutMsg = CONCAT("order already done. status=",_nStatus);
    LEAVE rt;
END IF;
IF _nStatus = _flag_fail THEN 
    IF _intype = 4 THEN 
        IF $opType = 2 THEN 
            IF _examineFlag = 5 THEN 
                SET _oldDesc = CONCAT(_oldDesc,"_超时到达_",DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"));
                UPDATE table_third_order SET szDesc = _oldDesc WHERE szorder = $orderid;
                SET _mark2 = CONCAT("超时到达_",DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"));
                UPDATE table_pyramid_examine SET szMark2 = _mark2 WHERE szorder = $orderid;
                COMMIT;
                SET $nscore = 0;
                SET $returnVal = 3;
                SET $strOutMsg = "overtime arrive";
                LEAVE rt;            
            ELSE
                
                COMMIT;
                SET $nscore    = 0;
                SET $returnVal = 26;
                SET $strOutMsg = CONCAT("order is error. _examineFlag=",_examineFlag);        
                LEAVE rt;           
            END IF;
        ELSE
            
            COMMIT;
            SET $nscore    = 0;
            SET $returnVal = 26;
            SET $strOutMsg = CONCAT("order is error. opType=",$opType);        
            LEAVE rt;
        END IF;
    ELSE
        
        COMMIT;
        SET $nscore    = 0;
        SET $returnVal = 26;
        SET $strOutMsg = CONCAT("order is fail. status=",_nStatus);
        LEAVE rt;    
    END IF;
    
END IF;
SET $nAddScore = _incoin;
        

IF _incoin <= 0 THEN
        UPDATE table_third_order SET nStatus = _flag_fail WHERE szorder = $orderid;
        COMMIT;
        SET $nscore = 0;
        SET $returnVal = 31;   
        SET $strOutMsg = "score must than 0";
        LEAVE rt;
END IF;
IF _intype = 3 THEN   
    IF $opType = 2 THEN  
            
            IF _nStatus = _flag_delay THEN
            
                SET _oldDesc = CONCAT(_oldDesc,"_超时到达");
                UPDATE table_third_order SET `ConfirmTime` = NOW(),nStatus = _flag_delay_ok,szDesc = _oldDesc WHERE szorder = $orderid;
                COMMIT;
                SET $nscore = 0;
                SET $returnVal = 3;
                SET $strOutMsg = "overtime arrive";
                LEAVE rt;
            ELSEIF _nStatus = 4 THEN 
                SET _oldDesc = CONCAT(_oldDesc,"_超时到达_",DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"));
                UPDATE table_third_order SET szDesc = _oldDesc WHERE szorder = $orderid;
                COMMIT;
                SET $nscore = 0;
                SET $returnVal = 3;
                SET $strOutMsg = "overtime arrive";
                LEAVE rt;
                
            ELSEIF _nStatus = 0 THEN 
            
                
                UPDATE table_clubinfo SET nScore = @clubscore := nScore - _incoin WHERE nClubID = _nChannel;
                SET _clubcoin   = @clubscore;
                SET _tmpLogType = 1;
                SET _tmpActType = 23;
                SET _tmpDesc    = '充值上分';
                SET _flag_val   = _flag_ok;       
                
                CALL pr_UpdateUserClubScore3(0,_playerId,_nChannel,_incoin,0,_tmpActType,$orderid,_tmpDesc,@outscore);
                CALL pr_club_changeLogClubPlatformScore(_nChannel,0,0,-_incoin,_clubcoin,_tmpActType,0,_tmpDesc,$orderid,_playerId,0);
                UPDATE table_third_order SET `ConfirmTime` = NOW(),nStatus = _flag_val WHERE szorder = $orderid;
                               
            END IF;
    END IF;
    
ELSEIF _intype = 4 THEN 
    IF $opType = 1 THEN 
            
            
            UPDATE table_clubinfo SET nScore = @clubscore := nScore + _incoin WHERE nClubID = _nChannel;
            SET _clubcoin = @clubscore;
            SET _tmpLogType = 2;
            SET _tmpActType = 22;
            SET _tmpDesc    = '兑换下分';
            SET _flag_val   = _flag_commited;  
            
            
            CALL pr_club_changeLogClubPlatformScore(_nChannel,0,0,_incoin,_clubcoin,_tmpActType,0,_tmpDesc,$orderid,_playerId,0);
            
            UPDATE table_third_order SET nStatus = _flag_val WHERE szorder = $orderid;
            
    ELSEIF $opType = 2 THEN 
                        
            IF _nStatus = _flag_delay AND _examineFlag = _exFlag_delay THEN 
            
                SET _oldDesc = CONCAT(_oldDesc,"_超时到达");
                UPDATE table_third_order SET `ConfirmTime` = NOW(),nStatus = _flag_delay_ok,szDesc = _oldDesc WHERE szorder = $orderid;
                SET _mark2 = CONCAT("超时到达_",DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"));
                UPDATE table_pyramid_examine SET nFlag = _exFlag_delay_ok,szMark2 = _mark2 WHERE szorder = $orderid;
                
                SELECT nScore INTO _uscore FROM table_clubmember WHERE nPlayerID = _playerId AND nClubID=_nChannel;
                
                CALL pr_club_changeLogClubScore3(0,_playerId,_nChannel,-_commission,_uscore,28,$orderid,'客户提现');
                
                COMMIT;
                SET $nscore = 0;
                SET $returnVal = 3;
                SET $strOutMsg = "overtime arrive";
                LEAVE rt;
                
            ELSEIF _nStatus = 3 AND _examineFlag = 7 THEN   
                
                UPDATE table_third_order SET nStatus = _flag_ok,`ConfirmTime` = NOW() WHERE szorder = $orderid;
                
                UPDATE table_pyramid_examine SET nFlag = 4 WHERE szorder = $orderid;
                
                
                SELECT nSubVal,nAmount INTO _nSub,_commission FROM table_third_order WHERE szorder = $orderid;
                SELECT nScore INTO _uscore FROM table_clubmember WHERE nPlayerID = _playerId AND nClubID=_nChannel;
                            
                IF _nSub > 0 THEN
                    CALL pr_club_task_deduction(_playerId,_nChannel,_nSub);
                END IF;
                
                
                CALL pr_club_changeLogClubScore3(0,_playerId,_nChannel,-_commission,_uscore,28,$orderid,'客户提现');
                
                COMMIT; 
                
                SET $nscore    = 0;
                SET $returnVal = 0;
                SET $strOutMsg = "ok";
                LEAVE rt;
            END IF;
            
    END IF;
    
END IF;

SELECT nScore INTO $nscore FROM table_clubmember WHERE `nClubID` = _nChannel AND `nPlayerID` = _playerId;


IF errno=0 THEN
    COMMIT; 
    SET $returnVal = 0;
    SET $strOutMsg = "ok";
ELSE
    ROLLBACK; 
    SET $nscore    = 0;
    SET $returnVal = 27;
    SET $strOutMsg = "db error rollback";
END IF;
        
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for get_sum_nAmount
-- ----------------------------
DROP PROCEDURE IF EXISTS `get_sum_nAmount`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `get_sum_nAmount`(
IN  $nPlayerId  INT,
IN  $intervals        INT
)
RT:BEGIN
/*
获取H5牌局记录
2019-10-22 修改返回的时间字段名字
2019-11-29 由于数据表的修改，可以不使用机器人字段了
2020-1-3   修改返回数据为50,增加有效投注字段
2020-06-03  从当前日期开始动态拼接SQL语句
*/ 	
	
	DECLARE _get_interval INT DEFAULT $intervals;
	DECLARE _concat_sqlStr TEXT DEFAULT '';
	select curdate() into @currentTime;
	
	/*
	SELECT szToken,nChairID,nRound,nBaseScore,nValidBet,nResultMoney,UNIX_TIMESTAMP(tEndTime) AS tTime 
	FROM Table_ClubGameScoreDetail force index(idx_nPlayerID_nGameType_tEndTime) WHERE nPlayerID = $nPlayerId AND nGameType=$gameType ORDER BY tEndTime DESC LIMIT 50; 
	*/
	
	while(_get_interval > 0) do
	
		SET @dateTable=date_format(@currentTime,'%Y%m%d');
		
		set @strSql=CONCAT(
		"(SELECT sum(nAmount) as nAmounts  FROM table_clublogscore", @dateTable, " WHERE nPlayerID = ", $nPlayerId, " and (nType >= 5 and nType<=6)) ");
		 
		if _get_interval > 1 then 
			set @strSql=CONCAT(@strSql, ' union all ');
		end if;
		
		set _concat_sqlStr = concat(_concat_sqlStr, @strSql);
		SET _get_interval = _get_interval - 1;
		SET @currentTime=DATE_SUB(@currentTime,INTERVAL 1 DAY) ;
		
	END WHILE;
	
	set @sqlStr = CONCAT("SELECT sum(nAmounts) as nAmounts from (  ", _concat_sqlStr, " ) temp");
	
	select @sqlStr;
	PREPARE stmt_name FROM @sqlStr;
	EXECUTE stmt_name;
	DEALLOCATE PREPARE stmt_name;
			
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for my_test
-- ----------------------------
DROP PROCEDURE IF EXISTS `my_test`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `my_test`(
			in  $nNameID   VARCHAR(64)
)
RT:BEGIN
/*
场次统计，第一个根据游戏类型查7天总局数(注意应该是桌数)
*/
select $nNameID;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Prc_AddCompanyAuditRecord
-- ----------------------------
DROP PROCEDURE IF EXISTS `Prc_AddCompanyAuditRecord`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Prc_AddCompanyAuditRecord`(
		in $EnterPriseID varchar(36),	
    in $Money	decimal(18,2),				
    in $nPlayerId int,				
    out $Result int,			
    out $OrderId varchar(200),		
		out $returnVal int
)
begin
			
		declare _PId int;			
		declare _WaitPayMoney decimal(18,2);		
		declare _NEWID varchar(200);
		declare _startNum varchar(100) default (replace(replace(replace(NOW(),'-',''),' ',''),':',''));
		declare _randNum varchar(100) default (FLOOR(RAND() * 100000000000));
		declare _Status int default 1;	
		declare _AccountName varchar(36);	

		select nPlayerId,WaitPayMoney into _PId,_WaitPayMoney from EnterPrise where EnterPriseID=$EnterPriseID;
		if $nPlayerId<>_PId then
				set $Result=0;	
				set $OrderId='';
				set $returnVal=0;
		elseif $Money>_WaitPayMoney then 
				set $Result=0;	
				set $OrderId='';
				set $returnVal=0;
		else 
					set _NEWID=CONCAT(_startNum,_randNum);	
					select AccountName into _AccountName from AccountInfo where EnterPriseID=$EnterPriseID;

					insert into Table_CompanyAudit (AccountName,Money,State,CreateTime,EnterPriseId,nPlayerId,Out_trade_no)
					values(_AccountName,$Money,_Status,NOW(),$EnterPriseID,$nPlayerId,_NEWID);

				 set $Result=1;
				 set $OrderId=_NEWID;
				set $returnVal=1;
		end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Prc_EnterRecharge
-- ----------------------------
DROP PROCEDURE IF EXISTS `Prc_EnterRecharge`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Prc_EnterRecharge`(
		in $EnterPriseId varchar(36) ,
    in $RechargeValue decimal(18,2) ,
    in $OpAccountId INT ,
    in $OpEnterPriseId varchar(36) ,
    in $BatchId varchar(36),
    in $ConsumeMoney decimal(18,2),
    in $Remark varchar(400),
		out $returnVal int
)
returnVal:begin
				declare _OpAccountName varchar(32);
        declare _OpEnterPriseTreeCode varchar(200);
        declare _EnterPriseTreeCode varchar(200);
        declare _CurrentBalance,_CurrentBalanceOP decimal(18,2);
				
				declare errno int default 0;
				
				declare continue handler for sqlexception set errno = 1;
				
				start transaction;
				
				SELECT  AccountName into _OpAccountName FROM AccountInfo WHERE  AccountId = $OpAccountId;
				SELECT  BalanceMoney,TreeCode into _CurrentBalance,_EnterPriseTreeCode FROM EnterPrise WHERE EnterPriseID = $EnterPriseId;
				SELECT  TreeCode,BalanceMoney into _OpEnterPriseTreeCode,_CurrentBalanceOP FROM EnterPrise WHERE EnterPriseID = $OpEnterPriseId;
				
				 IF(LENGTH(_OpEnterPriseTreeCode)<>10) THEN
						 if(_CurrentBalanceOP<$RechargeValue) then
							set $returnVal=0;
							leave returnVal;
						 end if;
         end if;
				
				INSERT  INTO RechargeDetail
                (Type,BatchID,Amount,OpAccountId,OpAccountName,OpEnterPriseID,OpEnterPriseTreeCode,
                 EnterPriseID,EnterPriseTreeCode,CurrentBalance,CreateTime,Remark,ConsumeMoney)
        VALUES  ( 1 ,
                  $BatchId , 
                  $RechargeValue , 
                  $OpAccountId , 
                  _OpAccountName , 
                  $OpEnterPriseId , 
                  _OpEnterPriseTreeCode , 
                  $EnterPriseId , 
                  _EnterPriseTreeCode , 
                  (_CurrentBalance + $RechargeValue), 
                  NOW() , 
									CONCAT('给代理商充值:',$RechargeValue,',自定义备注：',$Remark),
                  $ConsumeMoney
                );
				
				UPDATE EnterPrise SET BalanceMoney = BalanceMoney + $RechargeValue,UpdateTime = NOW() WHERE EnterPriseID = $EnterPriseId;
				
				UPDATE EnterPrise SET BalanceMoney = BalanceMoney - $RechargeValue,UpdateTime =  NOW() WHERE   EnterPriseID = $OpEnterPriseId;

				
        IF(LENGTH(_OpEnterPriseTreeCode)=10) THEN
						INSERT INTO Table_Web_Money(szTime,nPlayerID,szNickName,nMoney,nDiamond,EnterPriseID,typeTag,Type,Remark)
						VALUES  (NOW(), 
											0 , 
											'' , 
											$ConsumeMoney , 
											$RechargeValue , 
											$EnterPriseId , 
											1  
											,1,
											CONCAT('给代理商充值:',$RechargeValue,',自定义备注：',$Remark)
										);
				END IF;
				
				if errno=0 then
						COMMIT;
						INSERT  INTO OperationsLog
                (AdminID,OType,OMsg,CreateTime,AdminName,PKID,FormObject,AvailFlag,OperationsType,EnterPriseID)
						VALUES  ($OpAccountId , 
											1 , 
											CONCAT('给代理商：:',$EnterPriseId,',充值：',$RechargeValue,',自定义备注：',$Remark),
											NOW() , 
											_OpAccountName , 
											$EnterPriseId , 
											'EnterPrise' , 
											1 , 
											1 , 
											$OpEnterPriseId  
										);
						set $returnVal=1;
				ELSE
						ROLLBACK;
					INSERT  INTO SystemLog(LogLevel,Msg,LogThread,Exception,Logger,CreateTime)
					VALUES('FATAL' , 
									CONCAT('Prc_EnterRecharge 充值异常，错误码：',errno,'；请求参数：@EnterPriseId=',$EnterPriseId,
														',@RechargeValue=',$RechargeValue,',@OpAccountId=',$OpAccountId,',@OpEnterPriseId',$OpEnterPriseId),
									'Prc_EnterRecharge' , 
									default , 
									'CEnterPrise' , 
									NOW()  
									);
						set $returnVal=-1;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Prc_EnterRechargeUser
-- ----------------------------
DROP PROCEDURE IF EXISTS `Prc_EnterRechargeUser`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Prc_EnterRechargeUser`(

			in $UserCode VARCHAR(36),

			in $RechargeValue decimal(18,2),

			in $OpAccountId INT,

			in $OpEnterPriseId VARCHAR(36),

			in $BatchId VARCHAR(36),

			in $ConsumeMoney float,

			in $ChargeType int, 

			in $OrderId int,

			in $Gold int ,

			in $Remark VARCHAR(400),

			out $returnVal int

)
returnVal:begin

				declare _NickName,_OpAccountName VARCHAR(64);

        declare _OpEnterPriseTreeCode,_EnterPriseTreeCode VARCHAR(200);

        declare _CurrentBalance,_CurrentBalanceOP decimal(18,2);



				

				

				declare errno int default 0;

				

				declare continue handler for sqlexception set errno = 1;

				

				start transaction;

				

				SELECT  AccountName into _OpAccountName FROM AccountInfo WHERE  AccountId = $OpAccountId;

				SELECT  BalanceMoney,TreeCode into _CurrentBalance,_EnterPriseTreeCode FROM EnterPrise WHERE EnterPriseID = $OpEnterPriseId;

				SELECT  TreeCode,BalanceMoney into _OpEnterPriseTreeCode,_CurrentBalanceOP FROM EnterPrise WHERE EnterPriseID = $OpEnterPriseId;

				

				 IF(LENGTH(_OpEnterPriseTreeCode)<>10) THEN

						 if(_CurrentBalanceOP<$RechargeValue) then

							set $returnVal=0;

							leave returnVal;

						 end if;

         end if;

				

				SELECT nCardCount,szNickName into $Gold,_NickName FROM Table_User WHERE nPlayerId=$UserCode;

				SET _NickName=IFNULL(_NickName,'');

					





				INSERT  INTO RechargeDetail

                (Type,Amount,OpAccountId,OpAccountName,OpEnterPriseID,OpEnterPriseTreeCode,EnterPriseID,EnterPriseTreeCode,

                  CurrentBalance,CreateTime,Remark,UserCode,BatchID,ConsumeMoney

                )

        VALUES  ( 1 ,

                  $RechargeValue , 

                  $OpAccountId , 

                  _OpAccountName , 

                  $OpEnterPriseId , 

                  _OpEnterPriseTreeCode , 

                  '' , 

                  '' , 

                  IFNULL($Gold,0)+$RechargeValue , 

                  NOW() , 

									CONCAT('玩家加钻石数:',$RechargeValue,',自定义备注：',$Remark),

                  $UserCode,

                  $BatchId,

                  $ConsumeMoney

                );

				

				INSERT  INTO RechargeDetail

                (Type,Amount,OpAccountId,OpAccountName,OpEnterPriseID,OpEnterPriseTreeCode,EnterPriseID,EnterPriseTreeCode,

                  CurrentBalance,CreateTime,Remark,UserCode,BatchID,ConsumeMoney

                )

        VALUES  ( 2,

                  0, 

                  $OpAccountId , 

                  _OpAccountName , 

                  $OpEnterPriseId , 

                  _OpEnterPriseTreeCode , 

                  $OpEnterPriseId , 

                  _OpEnterPriseTreeCode , 

                  _CurrentBalance-$RechargeValue, 

                  NOW() , 

									CONCAT('代理商减钻石数:',$RechargeValue,',自定义备注：',$Remark),

                  $UserCode,

                  $BatchId,

                  $ConsumeMoney

                );



				

				UPDATE EnterPrise SET BalanceMoney = BalanceMoney - $RechargeValue,UpdateTime = NOW() WHERE EnterPriseID = $OpEnterPriseId;

				

				UPDATE Table_User SET nCardCount = nCardCount + $RechargeValue WHERE  nPlayerId = $UserCode;



				

        IF(LENGTH(_OpEnterPriseTreeCode)=10) THEN

						INSERT INTO Table_Web_Money(szTime,nPlayerID,szNickName,nMoney,nDiamond,EnterPriseID,typeTag,Type,Remark)

						VALUES  (NOW(), 

											$UserCode , 

											_NickName , 

											$ConsumeMoney , 

											$RechargeValue , 

											'' , 

											0  

											,1,

											CONCAT('玩家加钻石数:',$RechargeValue,',自定义备注',$Remark)

										);

				END IF;

				

				if errno=0 then

						COMMIT;

						INSERT  INTO OperationsLog

                (AdminID,OType,OMsg,CreateTime,AdminName,PKID,FormObject,AvailFlag,OperationsType,EnterPriseID)

						VALUES  ($OpAccountId , 

											1 , 

											CONCAT('用户:',_OpAccountName,',给玩家:',$UserCode,',充值:',$RechargeValue),

											NOW() , 

											_OpAccountName , 

											$UserCode , 

											'EnterPrise' , 

											1 , 

											1 , 

											$OpEnterPriseId  

										);

						set $returnVal=1;

				ELSE

						ROLLBACK;

					INSERT  INTO SystemLog(LogLevel,Msg,LogThread,Exception,Logger,CreateTime)

					VALUES('FATAL' , 

									CONCAT('Prc_EnterRecharge 充值异常，错误码：',errno,'；请求参数：@UserCode=',$UserCode,

														',@RechargeValue=',$RechargeValue,',@OpAccountId=',$OpAccountId,',@OpEnterPriseId',$OpEnterPriseId),

									'Prc_EnterRecharge' , 

									default , 

									'EnterPrise' , 

									NOW()  

									);

						set $returnVal=-1;

				end if;

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Prc_EnterRechargeUserEight
-- ----------------------------
DROP PROCEDURE IF EXISTS `Prc_EnterRechargeUserEight`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Prc_EnterRechargeUserEight`(
		in $UserCode VARCHAR(36),
    in $RechargeValue decimal(18,2),
    in $OpAccountId INT,
    in $OpEnterPriseId VARCHAR(36),
    in $BatchId VARCHAR(36),
    in $ConsumeMoney float,
    in $ChargeType int, 
    in $OrderId int,
    in $Gold int ,
    in $Remark varchar(400),
    in $NickName varchar(64),
    out $returnVal int
)
returnVal:begin
						DECLARE _OpAccountName VARCHAR(32);
						DECLARE _OpEnterPriseTreeCode,_EnterPriseTreeCode VARCHAR(200);
						DECLARE _CurrentBalance ,_CurrentBalanceOP decimal(18,2);
						DECLARE _GameType int;

						
				declare errno int default 0;
				
				declare continue handler for sqlexception set errno = 1;
				
				start transaction;
				
				SELECT  AccountName into _OpAccountName FROM AccountInfo WHERE  AccountId = $OpAccountId;
				SELECT  BalanceMoney,TreeCode into _CurrentBalance,_EnterPriseTreeCode FROM EnterPrise WHERE EnterPriseID = $OpEnterPriseId;
				SELECT  TreeCode,BalanceMoney into _OpEnterPriseTreeCode,_CurrentBalanceOP FROM EnterPrise WHERE EnterPriseID = $OpEnterPriseId;
				set _GameType=2;

				 IF(LENGTH(_OpEnterPriseTreeCode)<>10) THEN
						 if(_CurrentBalanceOP<$RechargeValue) then
							set $returnVal=0;
							leave returnVal;
						 end if;
         end if;
				 
        
        

				INSERT  INTO RechargeDetail
                (Type,Amount,OpAccountId,OpAccountName,OpEnterPriseID,OpEnterPriseTreeCode,
                 EnterPriseID,EnterPriseTreeCode,CurrentBalance,CreateTime,Remark,UserCode,BatchID,ConsumeMoney,GameType)
        VALUES  ( 1 ,
                  $RechargeValue , 
                  $OpAccountId , 
                  _OpAccountName , 
                  $OpEnterPriseId , 
                  _OpEnterPriseTreeCode , 
                  '' , 
                  '' , 
                  (IFNULL($Gold,0)+$RechargeValue), 
                  NOW() , 
									CONCAT('玩家加钻石数:',$RechargeValue,',自定义备注:',$Remark),
									$UserCode,
                  $BatchId,
                  $ConsumeMoney,
									_GameType
                );

				INSERT  INTO RechargeDetail
                (Type,Amount,OpAccountId,OpAccountName,OpEnterPriseID,OpEnterPriseTreeCode,
                 EnterPriseID,EnterPriseTreeCode,CurrentBalance,CreateTime,Remark,UserCode,BatchID,ConsumeMoney,GameType)
        VALUES  (2,
                  0, 
                  $OpAccountId , 
                  _OpAccountName , 
                  $OpEnterPriseId , 
                  _OpEnterPriseTreeCode , 
                  $OpEnterPriseId , 
                  _OpEnterPriseTreeCode, 
                  (_CurrentBalance-$RechargeValue), 
                  NOW() , 
									CONCAT('代理商减钻石数:',$RechargeValue,',自定义备注:',$Remark),
									$UserCode,
                  $BatchId,
                  $ConsumeMoney,
									_GameType
                );

				UPDATE EnterPrise SET BalanceMoney = BalanceMoney - $RechargeValue,UpdateTime =  NOW() WHERE   EnterPriseID = $OpEnterPriseId;

        IF(LENGTH(_OpEnterPriseTreeCode)=10) THEN
						INSERT INTO Table_Web_Money(szTime,nPlayerID,szNickName,nMoney,nDiamond,EnterPriseID,typeTag,Type,Remark,GameType)
						VALUES  (NOW(), 
											$UserCode, 
											$NickName , 
											$ConsumeMoney , 
											$RechargeValue , 
											'', 
											0  
											,1,
											CONCAT('玩家加钻石数:',$RechargeValue,',自定义备注',$Remark),
											_GameType
										);
				END IF;
				
				if errno=0 then
						COMMIT;
						INSERT  INTO OperationsLog
                (AdminID,OType,OMsg,CreateTime,AdminName,PKID,FormObject,AvailFlag,OperationsType,EnterPriseID,GameType)
						VALUES  ($OpAccountId , 
											1 , 
											CONCAT('用户:',_OpAccountName,',给玩家:',$UserCode,',充值:',$RechargeValue),
											NOW() , 
											_OpAccountName , 
											$UserCode , 
											'EnterPrise' , 
											1 , 
											1 , 
											$OpEnterPriseId,  
											_GameType
										);
						set $returnVal=1;
				ELSE
						ROLLBACK;
					INSERT  INTO SystemLog(LogLevel,Msg,LogThread,Exception,Logger,CreateTime,GameType)
					VALUES('FATAL' , 
									CONCAT('Prc_EnterRecharge 充值异常，错误码：',errno,'；请求参数：@UserCode=',$UserCode,
														',@RechargeValue=',$RechargeValue,',@OpAccountId=',$OpAccountId,',@OpEnterPriseId',$OpEnterPriseId),
									'Prc_EnterRecharge' , 
									default , 
									'EnterPrise' , 
									NOW(),  
									_GameType
									);
					set $returnVal=-1;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Prc_UpdateCompanyAuditRecord
-- ----------------------------
DROP PROCEDURE IF EXISTS `Prc_UpdateCompanyAuditRecord`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Prc_UpdateCompanyAuditRecord`(
		in $EnterPriseID varchar(36),	
    in $Money	decimal(18,2),				
    in $Remark varchar(400),		
    in $OrderId varchar(200),		
    in $Prepay_no varchar(200),	
    out $Result int,			
		out $returnVal int
)
begin
				declare _Status int default 2;		
						
				declare errno int default 0;
				
				declare continue handler for sqlexception set errno = 1;

				if LENGTH($Prepay_no)<10 then		
					set _Status=1;
				end if;
				
				start transaction;
						update Table_CompanyAudit set Remark=$Remark,Prepay_no=$Prepay_no,PayDate=NOW(),State=_Status  where Out_trade_no=$OrderId;
						
						if _Status=2 then	
								update EnterPrise set WaitPayMoney=WaitPayMoney-$Money,UpdateTime=NOW() where EnterPriseID=$EnterPriseID;
						end if;
				
				if errno=0 then
						COMMIT;
						set $Result= 1;
						set $returnVal=1;
				ELSE
						ROLLBACK;
					set $Result= 0;
					set $returnVal=0;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_AddEnterPrise
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_AddEnterPrise`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_AddEnterPrise`(
		
	in $PID varchar(72),			
	in $ExtendCode varchar(72),	
	in $AccountName varchar(64),	
	in $Name varchar(100),			
	in $Password 	varchar(72),	
	in $Contact	varchar(100),	
	in $Phone		varchar(100),	
	in $Address	varchar(512),	
	in $WeixinName varchar(100),	
	in $ZMSPrice decimal(18,2),			
	in $SMSPrice decimal(18,2),			
	in $MMSPrice decimal(18,2),			
	in $XMSPrice decimal(18,2),			
	in $DMSPrice decimal(18,2),			
	in $Remark varchar(1000),		
	in $EnterPriseType int,		
	out $AccountId int		
)
begin
				
				declare	_Grade int;					
				declare _AccountType,_Status int default 1;			
				declare _TwoLevel,_ThreeLevel int default 0;	
				
				declare _EnterPriseID varchar(72);
				declare _maxCount int default 0;
        declare _PTreeCode varchar(400);		
				
				declare errno int default 0;
				
				declare continue handler for sqlexception set errno = 1;
				
				
				if $DMSPrice=40 then
					select TwoLevel,ThreeLevel into _TwoLevel,_ThreeLevel from EnterPrise where EnterPriseID='0000000001';
				end if;
				
				
				start transaction;
						select MAX(EnterPriseID) into _EnterPriseID from AccountInfo;
						select Grade into _Grade from EnterPrise where EnterPriseID=$PID;
						set _EnterPriseID=CONVERT(_EnterPriseID,signed)+1;
						
				
					INSERT INTO AccountInfo
								 (EnterPriseID,TreeCode,AccountType,AccountName,`Password`
								 ,RealName,Phone,`Status`,CreateTime,ExtendCode)
						 VALUES
								 (_EnterPriseID,'--',_AccountType,$AccountName,$Password
								 ,$AccountName,$Phone,_Status,NOW(),$ExtendCode);
					set $AccountId=@@identity;
							
					
					INSERT INTO EnterPrise
								 (EnterPriseID,`Name`,TreeCode,PID,Grade,AccountId
								 ,ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice
								 ,Contact,Telephone,Address,WeiXin,Remark,`Status`,
								 CreateTime,UpdateTime,ExtendCode,GroupNo,EnterPriseType,TwoLevel,ThreeLevel)
					 VALUES
								 (_EnterPriseID,$Name,'--',$PID,_Grade,$AccountId
								 ,$ZMSPrice,$SMSPrice,$MMSPrice,$XMSPrice,$DMSPrice
								 ,$Contact,$Phone,$Address,$WeixinName,$Remark,_Status
								 ,NOW(),NOW(),$ExtendCode,$ExtendCode,$EnterPriseType,_TwoLevel,_ThreeLevel);

				

					select COUNT(1) into _maxCount from accountinfo;
					
					if LENGTH(_maxCount)=1 then
							if _maxCount=0 then
									set _PTreeCode='0000000001';
							else
									set _PTreeCode=CONCAT('000000000',CAST(_maxCount AS CHAR));
							end if;
					elseif LENGTH(_maxCount)=2 then
							set _PTreeCode=CONCAT('00000000',CAST(_maxCount AS CHAR));
					elseif LENGTH(_maxCount)=3 then
							set _PTreeCode=CONCAT('0000000',CAST(_maxCount AS CHAR));
					elseif LENGTH(_maxCount)=4 then
							set _PTreeCode=CONCAT('000000',CAST(_maxCount AS CHAR));
					elseif LENGTH(_maxCount)=5 then
							set _PTreeCode=CONCAT('00000',CAST(_maxCount AS CHAR));
					elseif LENGTH(_maxCount)=6 then
							set _PTreeCode=CONCAT('0000',CAST(_maxCount AS CHAR));
					elseif LENGTH(_maxCount)=7 then
							set _PTreeCode=CONCAT('000',CAST(_maxCount AS CHAR));
					elseif LENGTH(_maxCount)=8 then
							set _PTreeCode=CONCAT('00',CAST(_maxCount AS CHAR));
					elseif LENGTH(_maxCount)=9 then
							set _PTreeCode=CONCAT('0',CAST(_maxCount AS CHAR));
					end if;
					
					set _PTreeCode=CONCAT('0000000001',CAST(_PTreeCode AS CHAR));
					update AccountInfo set TreeCode=_PTreeCode where AccountId=$AccountId;
					update EnterPrise set TreeCode=_PTreeCode where AccountId=$AccountId;

				
				if errno=0 then
						COMMIT;
						set $AccountId=$AccountId;
				ELSE
						ROLLBACK;
						set $AccountId=0;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_AddExtenEnterPrise
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_AddExtenEnterPrise`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_AddExtenEnterPrise`(
		
	in $nClubId int,
	in $AccountName varchar(64),		
	in $Password 	varchar(72),
	in $Remark 	varchar(200),
	out $returnVal int,
	out $resultMsg varchar(50)

)
returnVal:begin 
				declare	_Grade,_PID,_PnPlayerId,_totalCount int default 0;					
				declare _AccountType,_Status int default 1;			
				
				declare _EnterPriseID,_NewEnterPriseID varchar(72);
				declare _maxCount int default 0;
        declare _PTreeCode varchar(400);		
				
				declare errno int default 0;
				
				declare continue handler for sqlexception set errno = 1;
				if $Remark is null or $Remark='' then 
						set $returnVal=-1;
						set $resultMsg='1:推广备注不能为空';
						leave returnVal;
				end if;
				if exists(select AccountId from accountinfo  where AccountName=$AccountName) then 
						set $returnVal=-1;
						set $resultMsg='1:该账号已经存在';
						leave returnVal;				
				end if;
				if not exists(select nClubId from table_clubinfo  where nStatus=1 and nClubId=$nClubId and bIsPublic<>1) then 
						set $returnVal=-1;
						set $resultMsg='1:俱乐部不存在;2:非正常俱乐部;3:不能为公共俱乐部';
						leave returnVal;						
				end if;
				
				if exists(select EnterPriseID from enterprise  where GroupNo=$nClubId and Remark=$Remark) then 
						set $returnVal=-1;
						set $resultMsg='1:同一俱乐部的推广备注已存在';
						leave returnVal;				
				end if;
				
				select CreatePlayerID into _PnPlayerId from table_clubinfo  where nStatus=1 and nClubId=$nClubId and bIsPublic<>1;
				if exists(select EnterPriseID from EnterPrise where GamePlayerId=_PnPlayerId) then 
								select MAX(EnterPriseID) into _EnterPriseID from AccountInfo;
								select Grade,EnterPriseID into _Grade,_PID from EnterPrise where GamePlayerId=_PnPlayerId;
								set _EnterPriseID=CONVERT(_EnterPriseID,signed)+1;
								
							start transaction;
							INSERT INTO AccountInfo
										 (EnterPriseID,TreeCode,AccountType,AccountName,`Password`
										 ,RealName,`Status`,CreateTime,ExtendCode)
								 VALUES
										 (_EnterPriseID,'--',_AccountType,$AccountName,$Password
										 ,$AccountName,_Status,NOW(),0);
							set $returnVal=@@identity;
									
							
							INSERT INTO EnterPrise
										 (EnterPriseID,`Name`,TreeCode,PID,Grade,AccountId,`Status`,
										 CreateTime,UpdateTime,ExtendCode,GroupNo,EnterPriseType,GamePlayerId,Remark)
							 VALUES
										 (_EnterPriseID,$AccountName,'--',_PID,_Grade,$returnVal,_Status
										 ,NOW(),NOW(),0,$nClubId,3,0,$Remark);
							select COUNT(1) into _maxCount from accountinfo;
							
							if LENGTH(_maxCount)=1 then
									if _maxCount=0 then
											set _PTreeCode='0000000001';
									else
											set _PTreeCode=CONCAT('000000000',CAST(_maxCount AS CHAR));
									end if;
							elseif LENGTH(_maxCount)=2 then
									set _PTreeCode=CONCAT('00000000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=3 then
									set _PTreeCode=CONCAT('0000000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=4 then
									set _PTreeCode=CONCAT('000000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=5 then
									set _PTreeCode=CONCAT('00000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=6 then
									set _PTreeCode=CONCAT('0000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=7 then
									set _PTreeCode=CONCAT('000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=8 then
									set _PTreeCode=CONCAT('00',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=9 then
									set _PTreeCode=CONCAT('0',CAST(_maxCount AS CHAR));
							end if;
							
							set _PTreeCode=CONCAT('0000000001',CAST(_PTreeCode AS CHAR));
							update AccountInfo set TreeCode=_PTreeCode where AccountId=$returnVal;
							update EnterPrise set TreeCode=_PTreeCode where AccountId=$returnVal;
								
								call Pro_Web_AddEnterPriseLog($nClubId,31,_PnPlayerId,0,CONCAT('(部长ID:',_PnPlayerId,')新增推广代理:代理账号,',$AccountName,';推广备注,',$Remark));
						if errno=0 then
								set $resultMsg='成功';
								COMMIT;
						ELSE
								set $returnVal=-99;
								set $resultMsg='1:执行存储过程异常';
								ROLLBACK;
						end if;
			else 
					set $returnVal=-1;
					set $resultMsg='尚未绑定玩家用户ID';
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_AddManageEnterPrise
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_AddManageEnterPrise`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_AddManageEnterPrise`(
			
	in $nClubID int,
	in $nPlayerId int,
	in $AccountName varchar(64),		
	in $Password 	varchar(72),
	out $returnVal int,
	out $resultMsg varchar(50)

)
returnVal:begin 
				declare	_Grade,_PID,_PnPlayerId,_totalCount int default 0;					
				declare _AccountType,_Status int default 1;			
				
				declare _EnterPriseID,_NewEnterPriseID varchar(72);
				declare _maxCount int default 0;
        declare _PTreeCode varchar(400);		
				
				declare errno int default 0;
				
				declare continue handler for sqlexception set errno = 1;
				if exists(select EnterPriseID from enterprise  where GamePlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='1:该玩家Id已经绑定过代理账号';
						leave returnVal;				
				end if;
				if exists(select AccountId from accountinfo  where AccountName=$AccountName) then 
						set $returnVal=-1;
						set $resultMsg='1:该账号已经存在';
						leave returnVal;				
				end if;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubID and bIsPublic<>1) then 
						set $returnVal=-1;
						set $resultMsg='1:俱乐部不存在;2:非正常俱乐部;3:不能为公共俱乐部';
						leave returnVal;						
				end if;
				
				select CreatePlayerID into _PnPlayerId from table_clubinfo  where nStatus=1 and nClubID=$nClubID and bIsPublic<>1;
				if exists(select EnterPriseID from EnterPrise where GamePlayerId=_PnPlayerId) then 
								select MAX(EnterPriseID) into _EnterPriseID from AccountInfo;
								select Grade,EnterPriseID into _Grade,_PID from EnterPrise where GamePlayerId=_PnPlayerId;
								set _EnterPriseID=CONVERT(_EnterPriseID,signed)+1;
								
							start transaction;
							INSERT INTO AccountInfo
										 (EnterPriseID,TreeCode,AccountType,AccountName,`Password`
										 ,RealName,`Status`,CreateTime,ExtendCode)
								 VALUES
										 (_EnterPriseID,'--',_AccountType,$AccountName,$Password
										 ,$AccountName,_Status,NOW(),0);
							set $returnVal=@@identity;
									
							
							INSERT INTO EnterPrise
										 (EnterPriseID,`Name`,TreeCode,PID,Grade,AccountId,`Status`,
										 CreateTime,UpdateTime,ExtendCode,GroupNo,EnterPriseType,GamePlayerId)
							 VALUES
										 (_EnterPriseID,$AccountName,'--',_PID,_Grade,$returnVal,_Status
										 ,NOW(),NOW(),0,0,2,$nPlayerId);
							select COUNT(1) into _maxCount from accountinfo;
							
							if LENGTH(_maxCount)=1 then
									if _maxCount=0 then
											set _PTreeCode='0000000001';
									else
											set _PTreeCode=CONCAT('000000000',CAST(_maxCount AS CHAR));
									end if;
							elseif LENGTH(_maxCount)=2 then
									set _PTreeCode=CONCAT('00000000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=3 then
									set _PTreeCode=CONCAT('0000000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=4 then
									set _PTreeCode=CONCAT('000000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=5 then
									set _PTreeCode=CONCAT('00000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=6 then
									set _PTreeCode=CONCAT('0000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=7 then
									set _PTreeCode=CONCAT('000',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=8 then
									set _PTreeCode=CONCAT('00',CAST(_maxCount AS CHAR));
							elseif LENGTH(_maxCount)=9 then
									set _PTreeCode=CONCAT('0',CAST(_maxCount AS CHAR));
							end if;
							
							set _PTreeCode=CONCAT('0000000001',CAST(_PTreeCode AS CHAR));
							update AccountInfo set TreeCode=_PTreeCode where AccountId=$returnVal;
							update EnterPrise set TreeCode=_PTreeCode where AccountId=$returnVal;

								
								select EnterPriseID into _NewEnterPriseID from enterprise where AccountId=$returnVal;
								if not exists(select EnterPriceId from EnterPriceManage where EnterPriceId=_NewEnterPriseID and nClubID=$nClubID and nPlayerID=$nPlayerId) then 
										insert into EnterPriceManage(EnterPriceId,nClubID,nPlayerID) values(_NewEnterPriseID,$nClubID,$nPlayerId);
								else 
										update EnterPriceManage set nStatus=1,ModifyTime=NOW() where EnterPriceId=_NewEnterPriseID and nClubID=$nClubID and nPlayerID=$nPlayerId;
								end if;
								
								insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) values($nPlayerId,502,'管理员设置',CONCAT('玩家ID：',$nPlayerId,' 被俱乐部ID：',$nClubID,'设置为管理员'));
						
						call Pro_Web_AddEnterPriseLog($nClubID,6,_PnPlayerId,$nPlayerId,CONCAT('俱乐部创建者创建(ID:',$nPlayerId,')管理员账号:',$AccountName));
						if errno=0 then
								set $resultMsg='成功';
								COMMIT;
						ELSE
								set $returnVal=-99;
								set $resultMsg='1:执行存储过程异常';
								ROLLBACK;
						end if;
			else 
					set $returnVal=-1;
					set $resultMsg='尚未绑定玩家用户ID';
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_AddManageEnterPriseSet
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_AddManageEnterPriseSet`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_AddManageEnterPriseSet`(
		
	in $nClubID int,
	in $nPlayerId int,
	in $openAuthIds varchar(100),
	out $returnVal int,
	out $resultMsg varchar(50),
	out $msgId int

)
returnVal:begin 
				declare _EnterPriseID varchar(72);
				declare _totalCount int default 0;
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				set $msgId=0;
				if $openAuthIds is null or $openAuthIds='' then 
						set $returnVal=-1;
						set $resultMsg='1:设置管理员必须设置默认权限';
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubID) then 
						set $returnVal=-1;
						set $resultMsg='1:俱乐部不存在;2:非正常俱乐部;3:不能为公共俱乐部';
						leave returnVal;
				else 
						select count(1) into _totalCount from table_clubmember where nStatus=1 and nClubID=$nClubID and nLevel=2;
						if(_totalCount>=5) then 
								set $returnVal=-1;
								set $resultMsg='俱乐部管理员最多只能设置5个';
								leave returnVal;
						end if;
				end if;
						start transaction;
								
								select CreatePlayerID into @CreatePlayerID from table_clubinfo where nClubID=$nClubID;
								if not exists(select nClubID from table_club_member_authority where nClubID=$nClubID and nPlayerID=$nPlayerId) then 
										
										insert into table_club_member_authority(nClubID,nPlayerID,nLevel,nStatus) 
										select $nClubID,$nPlayerId,type,2 from sys_code where `Code`=1001005 and SortId>0;
										
										call Pro_Web_AddEnterPriseLog($nClubID,1,@CreatePlayerID,$nPlayerId,CONCAT('俱乐部创建者设置管理员(ID:',$nPlayerId,')'));
								else 
										
										delete from table_club_member_authority where nClubID=$nClubID and nPlayerID=$nPlayerId;
										insert into table_club_member_authority(nClubID,nPlayerID,nLevel,nStatus) 
										select $nClubID,$nPlayerId,type,2 from sys_code where `Code`=1001005 and SortId>0;
										
										call Pro_Web_AddEnterPriseLog($nClubID,3,@CreatePlayerID,$nPlayerId,CONCAT('俱乐部创建者修改管理员(ID:',$nPlayerId,')俱乐部权限 '));
								end if;
								
								
								
								set @strSqlCount=CONCAT('update table_club_member_authority set nStatus=1,tModifyTime=NOW() where nClubID=',$nClubID,' and nPlayerID=',$nPlayerId,' and nLevel in(',$openAuthIds,')');
								prepare sqlStr from @strSqlCount;
								execute sqlStr;
								
								update table_clubmember set nLevel=2 where nClubID=$nClubID and nPlayerID=$nPlayerId and nStatus=1;
								
								
								if exists(select EnterPriseID from enterprise where GamePlayerId=$nPlayerId) then 
										select EnterPriseID into _EnterPriseID from enterprise where GamePlayerId=$nPlayerId; 
										if not exists(select EnterPriceId from EnterPriceManage where EnterPriceId=_EnterPriseID and nClubID=$nClubID and nPlayerID=$nPlayerId) then 
												insert into EnterPriceManage(EnterPriceId,nClubID,nPlayerID) values(_EnterPriseID,$nClubID,$nPlayerId);
										else 
												update EnterPriceManage set nStatus=1,ModifyTime=NOW() where EnterPriceId=_EnterPriseID and nClubID=$nClubID and nPlayerID=$nPlayerId;
										end if;
								end if;								
								
								select szClubName into @szClubName from table_clubinfo where nClubID=$nClubID;
								insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) 
								values($nPlayerId,502,'管理员设置',CONCAT('您已被创始人(',@CreatePlayerID,')设置为俱乐部',@szClubName,'的管理员'));
								set $msgId=@@identity;
						if errno=0 then
										set $returnVal=1;
										set $resultMsg='成功';
								COMMIT;
						ELSE
								set $returnVal=-99;
								set $resultMsg='1:执行存储过程异常';
								ROLLBACK;
						end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_ConfigAccountInRoleAndRule
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_ConfigAccountInRoleAndRule`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_ConfigAccountInRoleAndRule`(
		in $AccountId INT ,
    in $EnterPriseID VARCHAR(36),
    in $TreeCode VARCHAR(200),
    in $addRoleIds VARCHAR(2000),
    in $addRuleIds VARCHAR(2000),
    in $delRoleIds VARCHAR(2000),
    in $delRuleIds VARCHAR(2000)
)
BEGIN  
				
				declare errno int default 0;
				
				declare continue handler for sqlexception set errno = 1;
				
				start transaction;
				
						
						call SplitToTable($addRoleIds,',');
            INSERT  INTO AccountInRole( EnterPriseID,TreeCode,AccountId ,RoleId,`Status` ,CreateTime ,UpdateTime )
						SELECT  $EnterPriseID,$TreeCode,$AccountId,`value`,1 ,NOW(),NOW() FROM  tmp_strs;
				
						
						call SplitToTable($addRuleIds,',');
            INSERT  AccountOrRoleInRule(EnterPriseID,TreeCode,AccountOrRoleId,RuleId ,RelationType,`Status`,CreateTime,UpdateTime)
            SELECT  $EnterPriseID ,$TreeCode ,$AccountId ,`value`,1 ,1 ,NOW() ,NOW() FROM  tmp_strs;

						
						
						call SplitToTable($delRoleIds,',');
            DELETE FROM  AccountInRole WHERE AccountId = $AccountId AND RoleId IN ( SELECT  `VALUE` FROM tmp_strs);

						  
						call SplitToTable($delRuleIds,',');
            DELETE FROM AccountOrRoleInRule WHERE AccountOrRoleId = $AccountId AND RelationType = 1 
						AND RuleId IN ( SELECT  VALUE FROM  tmp_strs);


						IF EXISTS(SELECT  1 FROM    AccountInfo WHERE   AccountId = $AccountId AND AccountType = 1 ) THEN
								call SplitToTable($delRuleIds,',');
								DELETE  FROM  AccountOrRoleInRule WHERE TreeCode LIKE CONCAT($TreeCode,'%') AND TreeCode <> $TreeCode 
                AND RuleId IN ( SELECT  `VALUE` FROM tmp_strs);
						END IF;

						
						
				
				if errno=0 then
						
            
						COMMIT;
				ELSE
						
            
            
						ROLLBACK;
				end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_ConfigAccountInRoleAndRule2
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_ConfigAccountInRoleAndRule2`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_ConfigAccountInRoleAndRule2`(
		in $AccountId INT ,
    in $EnterPriseID VARCHAR(36),
    in $TreeCode VARCHAR(200),
    in $addRoleIds VARCHAR(2000),
    in $addRuleIds VARCHAR(2000),
    in $delRoleIds VARCHAR(2000),
    in $delRuleIds VARCHAR(2000)
   
)
BEGIN  

						call SplitToTable($addRoleIds,',');
            INSERT  INTO AccountInRole( EnterPriseID,TreeCode,AccountId ,RoleId,`Status` ,CreateTime ,UpdateTime )
						SELECT  $EnterPriseID,$TreeCode,$AccountId,`value`,1 ,NOW(),NOW() FROM  tmp_strs;
				
						
						call SplitToTable($addRuleIds,',');
            INSERT  AccountOrRoleInRule(EnterPriseID,TreeCode,AccountOrRoleId,RuleId ,RelationType,`Status`,CreateTime,UpdateTime)
            SELECT  $EnterPriseID ,$TreeCode ,$AccountId ,`value`,1 ,1 ,NOW() ,NOW() FROM  tmp_strs;

						
						call SplitToTable($delRoleIds,',');
            DELETE FROM  AccountInRole WHERE AccountId = $AccountId AND RoleId IN ( SELECT  `VALUE` FROM tmp_strs);

						  
						call SplitToTable($delRuleIds,',');
            DELETE FROM AccountOrRoleInRule WHERE AccountOrRoleId = $AccountId AND RelationType = 1 
						AND RuleId IN ( SELECT  VALUE FROM  tmp_strs);


						IF EXISTS(SELECT  1 FROM    AccountInfo WHERE   AccountId = $AccountId AND AccountType = 1 ) THEN
								call SplitToTable($delRuleIds,',');
								DELETE  FROM  AccountOrRoleInRule WHERE TreeCode LIKE CONCAT($TreeCode,'%') AND TreeCode <> $TreeCode 
                AND RuleId IN ( SELECT  `VALUE` FROM tmp_strs);
						END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_ConfigRoleInRule
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_ConfigRoleInRule`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_ConfigRoleInRule`(
			in $roleId INT,
			in $EnterPriseID VARCHAR(36),
			in $TreeCode VARCHAR(200),
			in $addRuleIds VARCHAR(2000),
			in $delRuleIds VARCHAR(2000)
)
BEGIN  
				
				declare errno int default 0;
				
				declare continue handler for sqlexception set errno = 1;
				
				start transaction;
			
							call SplitToTable($addRuleIds,',');
             INSERT  AccountOrRoleInRule( EnterPriseID ,TreeCode ,AccountOrRoleId ,RuleId ,RelationType ,`Status` ,CreateTime ,UpdateTime)
																	SELECT  $EnterPriseID ,$TreeCode ,$RoleId ,`value`,2 ,1 ,NOW() ,NOW()FROM tmp_strs;
							call SplitToTable($delRuleIds,',');
						 DELETE  FROM  AccountOrRoleInRule WHERE  AccountOrRoleId = $RoleId AND RelationType = 2 
																											AND RuleId IN ( SELECT  `value` FROM  tmp_strs);						
						
				
				if errno=0 then
						
            
						COMMIT;
				ELSE
						
            
            
						ROLLBACK;
				end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_CWriteOff
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_CWriteOff`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_CWriteOff`(
		in $TreeCode VARCHAR(2000) ,
    in $BatchID CHAR(36) ,
    in $Value decimal(18,2) , 
    in $Type INT , 
    in $OpAccountId INT ,
    in $OpAccountName VARCHAR(36) ,
    in $OpEnterPriseID VARCHAR(36) ,
    in $OpEnterPriseTreeCode VARCHAR(200),
    in $Remark VARCHAR(800),
    in $Deduce decimal(18,2) 
)
BEGIN  
				
				declare errno int default 0;
				
				declare continue handler for sqlexception set errno = 1;
				
				start transaction;			
					
					IF $Type = 1 THEN
							UPDATE  EnterPrise SET BalanceMoney = BalanceMoney - $Value,UpdateTime = NOW() WHERE  TreeCode = $TreeCode;
							INSERT  INTO RechargeDetail(Type,BatchID,BatchName,Price,MsgCount,Amount,OpAccountId,OpAccountName,OpEnterPriseID,OpEnterPriseTreeCode,
																						EnterPriseID,EnterPriseTreeCode,CurrentBalance,CreateTime,Remark,DeduceMoney)
							SELECT  4,$BatchID,'',null,	0,0,$OpAccountId,$OpAccountName,$OpEnterPriseID,$OpEnterPriseTreeCode,
											EnterPriseID,TreeCode,BalanceMoney,NOW(),$Remark,$Deduce
							FROM EnterPrise WHERE TreeCode = $TreeCode;


							INSERT  INTO Table_Web_Money(szTime,nPlayerID,szNickName,nMoney,nDiamond,EnterPriseID,typeTag,DeduceMoney,Type,Remark)
							SELECT  NOW(),0,'',0,0,EnterPriseID,1,$Deduce,4,$Remark
							FROM EnterPrise WHERE TreeCode = $TreeCode;
					END IF;

				
				if errno=0 then					
						COMMIT;
						INSERT  INTO OperationsLog(AdminID,OType,OMsg,CreateTime,AdminName,PKID,FormObject,AvailFlag,OperationsType,EnterPriseID)
						VALUES  ($OpAccountId , 
                  1 , 
									CONCAT('用户',$OpAccountName,'给代理商：',$TreeCode,',扣钻石：',$Value),
                  NOW() , 
                  $OpAccountName , 
                  $TreeCode , 
                  'EnterPrise' , 
                  1 , 
                  1 , 
                  $OpEnterPriseId  
                );
				ELSE					
						ROLLBACK;
						SELECT  '扣钻石异常' as 'StateMsg';
						INSERT  INTO SystemLog(LogLevel,Msg,LogThread,Exception,Logger,CreateTime)
            VALUES  ( 'FATAL' ,
                      '[dbo].[Pro_WriteOff]存储过程异常。',
                      '[dbo].[Pro_WriteOff]存储过程异常。',
                     errno,
                      'Pro_WriteOff',
                      NOW()
                    );
				end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_CWriteOffUser
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_CWriteOffUser`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_CWriteOffUser`(
		in $UserCode VARCHAR(36),
    in $BatchID CHAR(36) ,
    in $Value decimal(18,2) , 
    in $Type INT , 
    in $OpAccountId INT ,
    in $OpAccountName VARCHAR(36) ,
    in $OpEnterPriseID VARCHAR(36) ,
    in $OpEnterPriseTreeCode VARCHAR(200),
    in $Remark VARCHAR(800),
    in $Deduce decimal(18,2) 
)
BEGIN 
				DECLARE _NickName VARCHAR(64);
        DECLARE _Gold INT;
				
				declare errno int default 0;
				
				declare continue handler for sqlexception set errno = 1;

				SELECT  nCardCount,szNickName into _Gold, _NickName FROM Table_User WHERE nPlayerId = $UserCode;
        SET _NickName = IFNULL(_NickName, '');
				
				start transaction;
					IF $Type = 1 THEN
							UPDATE  Table_User SET nCardCount = nCardCount - convert($Value,unsigned) WHERE nPlayerId = $UserCode;
							INSERT  INTO RechargeDetail(Type,BatchID,BatchName,Price,MsgCount,Amount,OpAccountId,OpAccountName,OpEnterPriseID,OpEnterPriseTreeCode,
																						EnterPriseID,EnterPriseTreeCode,CurrentBalance,CreateTime,Remark,DeduceMoney,UserCode)
							VALUES(4,$BatchID,'',null,	0,0,$OpAccountId,$OpAccountName,$OpEnterPriseID,$OpEnterPriseTreeCode,
											'','',_Gold,NOW(),$Remark,$Deduce,$UserCode);

							INSERT  INTO Table_Web_Money(szTime,nPlayerID,szNickName,nMoney,nDiamond,EnterPriseID,typeTag,DeduceMoney,Type,Remark)
							VALUES(NOW(),$UserCode,_NickName,0,0,'',0,$Deduce,4,$Remark);
					END IF;

				
				if errno=0 then					
						COMMIT;
						INSERT  INTO OperationsLog(AdminID,OType,OMsg,CreateTime,AdminName,PKID,FormObject,AvailFlag,OperationsType,EnterPriseID)
						VALUES  ($OpAccountId , 
											1, 
											CONCAT('用户',$OpAccountName,'给玩家:',$UserCode,',扣钻石：',$Value),
											NOW() , 
											$OpAccountName , 
											$UserCode , 
											'Table_User' , 
											1 , 
											1 , 
											$OpEnterPriseId  
                );
				ELSE					
						ROLLBACK;
						SELECT  '扣钻石异常' as 'StateMsg';
						INSERT  INTO SystemLog(LogLevel,Msg,LogThread,Exception,Logger,CreateTime)
            VALUES  ( 'FATAL' ,
                      '[Pro_CWriteOffUser]存储过程异常。',
                      '[Pro_CWriteOffUser]存储过程异常。',
                     errno,
                      'Pro_CWriteOffUser',
                      NOW()
                    );
				end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_DividedMoney
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_DividedMoney`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_DividedMoney`(
	IN $playerId INT,
	IN  $totalFree INT,
	OUT $result INT
)
BEGIN
			

			DECLARE _extendCode,_ZMSPrice,_SMSPrice,_MMSPrice,_XMSPrice,_DMSPrice,_ZMSPriceOne,_SMSPriceOne,
							_MMSPriceOne,_XMSPriceOne,_DMSPriceOne,_Grade,_EnterPriseType,_EnterPriseTypeDQ,_TwoLevel,_ch,_ThreeLevel INT DEFAULT 0;
			DECLARE _Name,_NameXJ,_PID,_EnterPriseID,_EnterPriseIDDJ VARCHAR(100);
			
			
			DECLARE _errno INT DEFAULT 0;
			
			DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _errno = 1;
			
			SELECT extendCode INTO _extendCode FROM Table_User WHERE  nPlayerId=$playerId;
			IF(_extendCode IS NOT NULL) AND _extendCode>0 THEN
				
				select PID,ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice,EnterPriseID,EnterPriseType INTO _PID,_ZMSPrice,_SMSPrice,_MMSPrice,_XMSPrice,_DMSPrice,_EnterPriseID,_EnterPriseType
			  from EnterPrise where  ExtendCode=_extendCode;
				select AccountName INTO _Name from AccountInfo where  EnterPriseID=_EnterPriseID;
				select Grade INTO _Grade from EnterPrise where  EnterPriseID=_PID;
				
				START TRANSACTION;
					IF _Grade<>1 THEN 
						
						WHILE _Grade<>1 DO
							IF _ch=0 THEN								    
									set _EnterPriseIDDJ=_EnterPriseID;
									
									INSERT INTO Table_AgentWithdrawalRecord
									   (Application
									   ,Superior
									   ,Money
									   ,State
									   ,Type
									   ,Grade
									   ,CreateTime)
									VALUES
									   (_Name
									   ,'0'
									   ,(($totalFree*_MMSPrice)/100)
									   ,0
									   ,1
									   ,1
									   ,NOW());
									   
									select Grade,PID,EnterPriseID into _Grade,_PID,_EnterPriseID from EnterPrise where EnterPriseID=_PID;
									select AccountName into _Name from AccountInfo where  EnterPriseID=_EnterPriseID;
						end if;
							if _ch=1 THEN
								if _EnterPriseType<>2 then 
										select AccountName into _NameXJ from AccountInfo where  EnterPriseID=_EnterPriseIDDJ;
										select ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice into _ZMSPrice,_SMSPrice,_MMSPrice,_XMSPrice,_DMSPrice 
										from EnterPrise where EnterPriseID=_EnterPriseIDDJ;
										select EnterPriseID,ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice into _EnterPriseIDDJ,_ZMSPriceOne,_SMSPriceOne,_MMSPriceOne,_XMSPriceOne,_DMSPriceOne
										from EnterPrise where EnterPriseID=_EnterPriseID;
													
													
												INSERT INTO Table_AgentWithdrawalRecord
													 (Application
													 ,Superior
													 ,Money
													 ,State
													 ,Type
													 ,Grade
													 ,CreateTime)
												VALUES
													 (_Name
													 ,_NameXJ
													 ,(($totalFree*(_DMSPriceOne-_MMSPrice))/100)
													 ,0
													 ,1
													 ,1
													 ,NOW());
														 
													select Grade,PID,EnterPriseID into _Grade,_PID,_EnterPriseID from EnterPrise where EnterPriseID=_PID;
													select AccountName into _Name from AccountInfo where  EnterPriseID=_EnterPriseID;
								else
										select AccountName into _NameXJ from AccountInfo where  EnterPriseID=_EnterPriseIDDJ;

		   							select ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice into _ZMSPrice,_SMSPrice,_MMSPrice,_XMSPrice,_DMSPrice 
										from EnterPrise where EnterPriseID=_EnterPriseIDDJ;

										select EnterPriseID,EnterPriseType,TwoLevel,ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice 
										into _EnterPriseIDDJ,_EnterPriseTypeDQ,_TwoLevel,_ZMSPriceOne,_SMSPriceOne,_MMSPriceOne,_XMSPriceOne,_DMSPriceOne 
										from EnterPrise where EnterPriseID=_EnterPriseID;
										
										if _EnterPriseTypeDQ<>2 THEN
												
														INSERT INTO Table_AgentWithdrawalRecord
														   (Application
														   ,Superior
														   ,Money
														   ,State
														   ,Type
														   ,Grade
														   ,CreateTime)
														VALUES
														   (_Name
														   ,_NameXJ
														   ,(($totalFree*(_DMSPriceOne-_MMSPrice))/100)
														   ,0
														   ,1
														   ,1
														   ,NOW());
														   
														INSERT INTO Table_AgentWithdrawalRecord
														   (Application
														   ,Superior
														   ,Money
														   ,State
														   ,Type
														   ,Grade
														   ,CreateTime)
														VALUES
														   (_Name
														   ,_NameXJ
														   ,(($totalFree*_TwoLevel)/100)
														   ,0
														   ,2
														   ,2
														   ,NOW());
										else
														INSERT INTO Table_AgentWithdrawalRecord
													   (Application
													   ,Superior
													   ,Money
													   ,State
													   ,Type
													   ,Grade
													   ,CreateTime)
													VALUES
													   (_Name
													   ,_NameXJ
													   ,(($totalFree*_TwoLevel)/100)
													   ,0
													   ,2
													   ,2
													   ,NOW());
										end if;
										select Grade,PID,EnterPriseID into _Grade,_PID,_EnterPriseID from EnterPrise where EnterPriseID=_PID;
										select AccountName into _Name from AccountInfo where  EnterPriseID=_EnterPriseID;
												
								end if;
							end if;
							if _ch<>1 and _ch<>0 then
								if _ch<>2 then
										select AccountName into _NameXJ from AccountInfo where  EnterPriseID=_EnterPriseIDDJ;
											select ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice into _ZMSPrice,_SMSPrice,_MMSPrice,_XMSPrice,_DMSPrice from EnterPrise where EnterPriseID=_EnterPriseIDDJ;
											select EnterPriseID,ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice 
											into _EnterPriseIDDJ,_ZMSPriceOne,_SMSPriceOne,_MMSPriceOne,_XMSPriceOne,_DMSPriceOne 
											from EnterPrise where EnterPriseID=_EnterPriseID;
										
											INSERT INTO Table_AgentWithdrawalRecord
											   (Application
											   ,Superior
											   ,Money
											   ,State
											   ,Type
											   ,Grade
											   ,CreateTime)
											VALUES
											   (_Name
											   ,_NameXJ
											   ,(($totalFree*(_DMSPriceOne-_DMSPrice))/100)
											   ,0
											   ,1
											   ,1
											   ,NOW());
												select Grade,PID,EnterPriseID into _Grade,_PID,_EnterPriseID  from EnterPrise where EnterPriseID=_PID;
												select AccountName into _Name from AccountInfo where  EnterPriseID=_EnterPriseID;
								else
										if _EnterPriseType<>2 THEN
											
													select AccountName INTO _NameXJ from AccountInfo where  EnterPriseID=_EnterPriseIDDJ;
													select ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice INTO _ZMSPrice,_SMSPrice,_MMSPrice,_XMSPrice,_DMSPrice from EnterPrise where EnterPriseID=_EnterPriseIDDJ;
													select EnterPriseID,ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice 
													INTO _EnterPriseIDDJ,_ZMSPriceOne,_SMSPriceOne,_MMSPriceOne,_XMSPriceOne,_DMSPriceOne
													from EnterPrise where EnterPriseID=_EnterPriseID;
												
													INSERT INTO Table_AgentWithdrawalRecord
													   (Application
													   ,Superior
													   ,Money
													   ,State
													   ,Type
													   ,Grade
													   ,CreateTime)
													VALUES
													   (_Name
													   ,_NameXJ
													   ,(($totalFree*(_DMSPriceOne-_DMSPrice))/100)
													   ,0
													   ,1
													   ,1
													   ,NOW());
														select Grade,PID,EnterPriseID into _Grade,_PID,_EnterPriseID from EnterPrise where EnterPriseID=_PID;
														select AccountName  into _Name from AccountInfo where  EnterPriseID=_EnterPriseID;
												 
										ELSE
													select AccountName into _NameXJ from AccountInfo where  EnterPriseID=_EnterPriseIDDJ;
													select ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice into _ZMSPrice,_SMSPrice,_MMSPrice,_XMSPrice,_DMSPrice from EnterPrise where EnterPriseID=_EnterPriseIDDJ;
													select EnterPriseID,EnterPriseType,ThreeLevel,ZMSPrice,SMSPrice,MMSPrice,XMSPrice,DMSPrice 
														into _EnterPriseIDDJ,_EnterPriseTypeDQ,_ThreeLevel,_ZMSPriceOne,_SMSPriceOne,_MMSPriceOne,_XMSPriceOne,_DMSPriceOne
													from EnterPrise where EnterPriseID=_EnterPriseID;
												    
													if _EnterPriseTypeDQ<>2 then
															INSERT INTO Table_AgentWithdrawalRecord
														   (Application
														   ,Superior
														   ,Money
														   ,State
														   ,Type
														   ,Grade
														   ,CreateTime)
														VALUES
														   (_Name
														   ,_NameXJ
														   ,(($totalFree*(_DMSPriceOne-_DMSPrice))/100)
														   ,0
														   ,1
														   ,1
														   ,NOW());
				 											INSERT INTO Table_AgentWithdrawalRecord
														   (Application
														   ,Superior
														   ,Money
														   ,State
														   ,Type
														   ,Grade
														   ,CreateTime)
														VALUES
														   (_Name
														   ,_NameXJ
														   ,(($totalFree*_ThreeLevel)/100)
														   ,0
														   ,2
														   ,3
														   ,NOW());
													else
															INSERT INTO Table_AgentWithdrawalRecord
														   (Application
														   ,Superior
														   ,Money
														   ,State
														   ,Type
														   ,Grade
														   ,CreateTime)
															VALUES
															   (_Name
															   ,_NameXJ
															   ,(($totalFree*_ThreeLevel)/100)
															   ,0
															   ,2
															   ,3
															   ,NOW());
													end if;
													
													select Grade,PID,EnterPriseID into _Grade,_PID,_EnterPriseID from EnterPrise where EnterPriseID=_PID;
													select AccountName into _Name from AccountInfo where  EnterPriseID=_EnterPriseID;
										END IF;
								end if;
							end if;
							set _ch=_ch+1;
						END WHILE;
						
						
					ELSE
							INSERT INTO Table_AgentWithdrawalRecord
						   (Application
						   ,Superior
						   ,Money
						   ,State
						   ,CreateTime)
						VALUES
						   (_Name
						   ,'0'
						   ,(($totalFree*_ZMSPrice)/100)
						   ,0
						   ,NOW());
					END IF;
				if _errno=0 THEN
						SET $result = 1;
						COMMIT;
				ELSE
						SET $result = 0;
						ROLLBACK;
				end if;
				
			ELSE
				set $result = 0;
			END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_RuleConfig
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_RuleConfig`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_RuleConfig`(
		in $RuleType INT,
    in $Pid INT,
    in $RuleName VARCHAR(256),
    in $PagePath VARCHAR(256),
    in $HandlePath VARCHAR(256),
    in $Describe TEXT,
    in $BtnClientClick VARCHAR(256),
    in $BtnServerClick VARCHAR(256),
    in $BtnIcon VARCHAR(256)
)
returnVal:BEGIN 

				DECLARE _RuleId INT  default 0;
				DECLARE _SequeueNo INT default 0;
				
				
				DECLARE _RoleId INT DEFAULT 0;
        DECLARE _EnterPriseID VARCHAR(36);
        DECLARE _TreeCode VARCHAR(200);
				
				declare done int default false;
				
				declare errno int default 0;
				
				declare cur cursor for SELECT RoleId,EnterPriseID,TreeCode FROM RoleInfo WHERE `Status` = 1;
				
				declare continue handler for not found set done = true;				
				
				declare continue handler for sqlexception set errno = 1;

				 
					IF $RuleType <> 1 AND NOT EXISTS (SELECT 1 FROM RuleInfo WHERE  RuleId = $Pid AND `Status` = 1 ) THEN
							
							
							
							LEAVE returnVal;
					END IF;
				
				start transaction;
				SELECT  MAX(SequeueNo) + 1 into _SequeueNo FROM  RuleInfo WHERE   Pid = $Pid AND `Status` = 1;
				IF _SequeueNo IS NULL THEN 
						 SET _SequeueNo = 0;
				END IF;

				INSERT  INTO RuleInfo(Pid,RuleName,RuleType,`Describe`,PagePath,HandlePath,BtnClientClick,BtnServerClick,
															BtnIcon,DataScope,SequeueNo,`Status`,CreateTime,UpdateTime)
				VALUES  ( $Pid , 
									$RuleName , 
									$ruleType , 
									$Describe , 
									$PagePath , 
									$HandlePath , 
									$BtnClientClick , 
									$BtnServerClick , 
									$BtnIcon , 
									0 , 
									_SequeueNo , 
									1 , 
									'2020-01-01 00:00:00' , 
									'2020-01-01 00:00:00'  
								);
				set  _RuleId = @@identity;
				
				
				
				open cur;  
				
				read_loop:loop  
				
				fetch cur into _RoleId,_EnterPriseID,_TreeCode;  
				
				if done then  
						leave read_loop;    
				end if;

							INSERT  INTO AccountOrRoleInRule(EnterPriseID,TreeCode,AccountOrRoleId,RuleId,RelationType,`Status`,CreateTime,UpdateTime)
                    VALUES  (_EnterPriseID , 
                             _TreeCode , 
                             _RoleId , 
                             _RuleId , 
                             2 , 
                             1 , 
                             '2020-01-01 00:00:00' , 
                             '2020-01-01 00:00:00'  
                            );

				
				end loop;
				
				close cur;
				
				
				if errno=0 then					
						COMMIT;
						
				ELSE					
						ROLLBACK;					
				end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_SplitPages
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_SplitPages`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_SplitPages`(
		in $tbName VARCHAR(8000),				
    in $strFields VARCHAR(8000),		
    in $pageSize INT,								
    in $PageIndex INT ,							
    in $strWhere VARCHAR(8000) ,		
    in $strOrder VARCHAR(100) ,			
    in $OrderType int,
    out $iRowsCount BIGINT					
)
BEGIN 
DECLARE  _PageIndex int DEFAULT 0;
			if $strFields is null then
					set $strFields='*';
			end if;
			if $pageSize<0 then
					set $pageSize=15;
			end if;
			if $PageIndex<0 then
					set _PageIndex=0;
			else 
					set _PageIndex=$PageIndex-1;
			end if;
			if $OrderType<0 then
					set $OrderType=0;
			end if;
			

			set @strSql=CONCAT('select ',$strFields,' from ',$tbName);
			set @strSqlCount=CONCAT('select count(1) into ','@totalCount',' from ',$tbName);

			if (($strWhere is not null) and (LENGTH($strWhere)>0)) then 
					set @strSql=CONCAT(@strSql,'  where ',$strWhere);
					set @strSqlCount=CONCAT(@strSqlCount,'  where ',$strWhere);
			end if;

			
			prepare totalCount from @strSqlCount;
			execute totalCount;
			SET $iRowsCount = @totalCount;
			
			if LENGTH($strOrder)>0 then
						if $OrderType=0 then
								set @strSql=CONCAT(@strSql,'  order by  ',$strOrder,' asc ');
						else
								set @strSql=CONCAT(@strSql,'  order by  ',$strOrder,' desc ');
						end if;
			 end if;
					
			set @strSql=CONCAT(@strSql,'  limit  ',($pageSize*_PageIndex),',',$pageSize);
			prepare strsql from @strSql;
			execute strsql;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_SplitPagesGroupBy
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_SplitPagesGroupBy`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_SplitPagesGroupBy`(
		in $tbName VARCHAR(8000),				
    in $strFields VARCHAR(8000),		
    in $pageSize INT,								
    in $PageIndex INT ,							
    in $strWhere VARCHAR(8000) ,		
    in $strOrder VARCHAR(8000) ,			
    in $OrderType int,
		in $GroupBy VARCHAR(8000) ,
    out $iRowsCount BIGINT					
)
BEGIN 
DECLARE _PageIndex INT DEFAULT 0;

			if $strFields is null then
					set $strFields='*';
			end if;
			if $pageSize<0 then
					set $pageSize=15;
			end if;
			if $PageIndex<0 then
					set _PageIndex=0;
			else 
							set _PageIndex=$PageIndex-1;
			end if;
			if $OrderType<0 then
					set $OrderType=0;
			end if;
			

			set @strSql=CONCAT('select ',$strFields,' from ',$tbName);
			set @strSqlCount=CONCAT('select count(1) into ','@totalCount',' from ',$tbName);

			if (($strWhere is not null) and (LENGTH($strWhere)>0)) then 
					set @strSql=CONCAT(@strSql,'  where ',$strWhere);
					set @strSqlCount=CONCAT(@strSqlCount,'  where ',$strWhere);
			end if;
			if LENGTH(RTRIM(LTRIM($GroupBy)))>0 then
					set @strSql=CONCAT(@strSql,'  group by  ',$GroupBy);
				  set @strSqlCount=CONCAT('select count(1) into ','@totalCount',' from ',' (select count(1) from ', $tbName,' GROUP by  ',$GroupBy,' ) t');
			end if;
			
			prepare totalCount from @strSqlCount;
			execute totalCount;
			SET $iRowsCount = @totalCount;

			
			if LENGTH($strOrder)>0 then
						if $OrderType=0 then
								set @strSql=CONCAT(@strSql,'  order by  ',$strOrder,' asc ');
						else
								set @strSql=CONCAT(@strSql,'  order by  ',$strOrder,' desc ');
						end if;
			 end if;
					
			set @strSql=CONCAT(@strSql,'  limit  ',($pageSize*_PageIndex),',',$pageSize);
			prepare strsql from @strSql;
			execute strsql;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_StatisticsUserZhanJi
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_StatisticsUserZhanJi`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_StatisticsUserZhanJi`(

)
begin
declare _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 00:00:00');
declare _EndDate  varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 23:59:59');

insert into table_web_userzhangjiscore(nPlayerId,NickName,GameType,Score,gametime)
SELECT nPlayerID,szNickName,nGameId,IFNULL(sum(sco),0) Score,szStartTime
from (
SELECT nPlayerID,szNickName,nGameId,date_format(szStartTime,'%Y-%m-%d') szStartTime,
 CASE when nPlayerID  = szPlayerId1
 then nscore1/nDiFen
when nPlayerID  = szPlayerId2
 then nscore2/nDiFen
when nPlayerID  = szPlayerId3
 then nscore3/nDiFen
when nPlayerID  = szPlayerId4
 then nscore4/nDiFen
end as sco
 FROM table_web_userzhangji 
WHERE  szStartTime BETWEEN _StartDate AND _EndDate   
and szPlayerId4 <>0 
    AND szPlayerId3<>0 
) a
group by nPlayerID,szNickName,nGameId,date_format(szStartTime,'%Y-%m-%d') ;

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebAdminLog
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebAdminLog`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebAdminLog`(
	
	in $nClubId int,
	in $Type int,
	in $UserId int,
	in $TargetId int,
	in $Amount bigint,
	in $Des varchar(500)
)
begin
		insert into admin_log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime) values($nClubId,$Type,$UserId,$TargetId,$Amount,$Des,NOW());
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebAdmin_EditnChannel
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebAdmin_EditnChannel`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebAdmin_EditnChannel`(
	
in $nClubID 	int,
in $nChannel		int,
in $userId	int,
in $logDes		varchar(200),
out $returnVal int,
out $resultMsg varchar(50)
)
returnNode:begin
		if $nChannel<=0 then
				set $returnVal=-1;
				set $resultMsg='无效渠道ID';
				leave returnNode;	
	  end if;
		if not exists(select nClubID from Table_ClubInfo where nClubID=$nClubID) then
				set $returnVal=-1;
				set $resultMsg='俱乐部不存在';
				leave returnNode;
		else 
				select CreatePlayerID into @CreateClubID from Table_ClubInfo where nClubID=$nClubID;
	  end if;
		if @CreateClubID=$nChannel then 
				set $returnVal=-1;
				set $resultMsg='渠道ID不能绑定俱乐部创始人ID';
				leave returnNode;
		end if;
		if not exists(select nPlayerId from table_user where nPlayerId=$nChannel) then
				set $returnVal=-1;
				set $resultMsg='无效渠道ID';
				leave returnNode;	
	  end if;
		if exists(select nClubID from Table_ClubInfo where nChannel=$nChannel and nClubID<>$nClubID) then
				set $returnVal=-1;
				set $resultMsg='渠道ID已存在';
				leave returnNode;	
	  end if;
		
		update Table_ClubInfo set nChannel=$nChannel,CreateTime=NOW() where nClubID=$nClubID;
		
		call Pro_WebAdminLog($nClubID,7,$userId,0,0,$logDes);
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebAdmin_EnableClub
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebAdmin_EnableClub`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebAdmin_EnableClub`(
	
in $nClubID 	int,
in $nStatus		int,
in $userId	int,
in $logDes		varchar(200),
out $returnVal int,
out $resultMsg varchar(50)
)
returnNode:begin
		if not exists(select nClubID from Table_ClubInfo where nClubID=$nClubID) then
				set $returnVal=-1;
				set $resultMsg='俱乐部不存在';
				leave returnNode;	
	  end if;
	 if $nStatus=1 then 
				set @logType=6;
	 elseif $nStatus=2 then 
						set @logType=5;
	 else 
				set $returnVal=-1;
				set $resultMsg='参数不合法';
				leave returnNode;
	 end if;
		
		update Table_ClubInfo set nStatus=$nStatus,CreateTime=NOW() where nClubID=$nClubID;
		
		call Pro_WebAdminLog($nClubID,@logType,$userId,0,0,$logDes);
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebAdmin_Score
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebAdmin_Score`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebAdmin_Score`(
	
in $nClubID 	int,
in $nAmount  	bigint,
in $nType			tinyint,
in $szDesc		varchar(256),
in $userId	int,
in $logDes		varchar(200),
out $returnVal int,
out $resultMsg varchar(50)
)
returnNode:begin
		declare errno int default 0;
		declare continue handler for sqlexception set errno = 1;
		if $nAmount<=0 then 				
				set $returnVal=-1;
				set $resultMsg='俱乐部积分不能小于0';
				leave returnNode;
		end if;
		if exists(select nClubID from Table_ClubInfo where nClubID=$nClubID) then 
				select nScore into @nScore  from Table_ClubInfo where nClubID=$nClubID;
				if $nType=1 then 
						set @totalnScore=(@nScore+$nAmount);
						set @logType=3;
				elseif $nType=2 then 
						if @nScore<$nAmount then 
								set $returnVal=-1;
								set $resultMsg='俱乐部积分不足';
								leave returnNode;
						else 
								set @totalnScore=(@nScore-$nAmount);
								set @logType=4;
						end if;
				else 
						set $returnVal=-1;
						set $resultMsg='参数不合法';
						leave returnNode;
				end if;
				start transaction;
				
				select UserName into @admin_userName from admin_user where UserId=$userId;
				set @remark=CONCAT(@admin_userName,'|',$szDesc);
				insert into Table_ClubLogPlatformScore(nClubID,nAmount,nScore,nType,szDesc,sourceid,CreateTime)
				values($nClubID,$nAmount,@totalnScore,$nType,@remark,0,NOW());
				
				update Table_ClubInfo set nScore=@totalnScore,CreateTime=NOW() where nClubID=$nClubID;
				
				call Pro_WebAdminLog($nClubID,@logType,$userId,0,$nAmount,$logDes);
				if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
				else
						set $returnVal=-99;
						set $resultMsg='失败';
						rollback;
				end if;
		else 
				set $returnVal=-1;
				set $resultMsg='俱乐部不存在';
				leave returnNode;
		end if;
		
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_Analysis_DataStati
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_Analysis_DataStati`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_Analysis_DataStati`(
	in $curdate varchar(19) 
)
begin 
			declare $startTime varchar(20) default DATE_SUB(DATE_FORMAT($curdate,'%Y-%m-%d'),INTERVAL 1 DAY) ;
			#开始时间、结束时间
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');

			#创建临时表————运营商临时表
			drop temporary table if exists temp_table_proxy;  
			create temporary table temp_table_proxy(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				GameProxyType int DEFAULT 1
			);
			#插入临时表
			insert into temp_table_proxy(nClubId,GameProxyType)
			select nClubId,GameProxyType from admin_proxy where ProxyType=1;

			#初始化表数据
			if exists (select nClubId from table_webdata_analysis_keeplose where tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
						delete from table_webdata_analysis_keeplose where tEndTime>=_currdateStart and tEndTime<=_currdateEnd; 
			end if;
			if exists (select nClubId from table_webdata_analysis_trans where tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
						delete from table_webdata_analysis_trans where tEndTime>=_currdateStart and tEndTime<=_currdateEnd; 
			end if;
			if exists (select nClubId from table_webdata_analysis_pay where tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
						delete from table_webdata_analysis_pay where tEndTime>=_currdateStart and tEndTime<=_currdateEnd; 
			end if;

			#初始化表数据
			insert into table_webdata_analysis_keeplose(nClubId,nIsTest,tEndTime) 
			select nClubId,isTest,_currdateStart from admin_proxy where ProxyType=1;

			insert into table_webdata_analysis_trans(nClubId,nIsTest,tEndTime)
			select nClubId,isTest,_currdateStart from admin_proxy where ProxyType=1;

			insert into table_webdata_analysis_pay(nClubId,nIsTest,tEndTime) 
			select nClubId,isTest,_currdateStart from admin_proxy where ProxyType=1 and GameProxyType=2;


			select count(1) into @totalCount from temp_table_proxy;
			if @totalCount>0 then 
					#第二天 留存流失 时间
					set @twoDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 1 DAY) ;
					set @twoStartTime=CONCAT(@twoDate,' 00:00:00');
					set @twoEndTime=CONCAT(@twoDate,' 23:59:59');
					#第三天 留存流失 时间
					set @threeDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 2 DAY) ;
					set @threeStartTime=CONCAT(@threeDate,' 00:00:00');
					set @threeEndTime=CONCAT(@threeDate,' 23:59:59');
					#第四天 留存流失 时间
					set @fourDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 3 DAY) ;
					set @fourStartTime=CONCAT(@fourDate,' 00:00:00');
					set @fourEndTime=CONCAT(@fourDate,' 23:59:59');
					#第五天 留存流失 时间
					set @fivesDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 4 DAY) ;
					set @fivesStartTime=CONCAT(@fivesDate,' 00:00:00');
					set @fivesEndTime=CONCAT(@fivesDate,' 23:59:59');
					#第六天 留存流失 时间
					set @sixDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 5 DAY) ;
					set @sixStartTime=CONCAT(@sixDate,' 00:00:00');
					set @sixEndTime=CONCAT(@sixDate,' 23:59:59');
					#第七天 留存流失 时间
					set @sevenDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 6 DAY) ;
					set @sevenStartTime=CONCAT(@sevenDate,' 00:00:00');
					set @sevenEndTime=CONCAT(@sevenDate,' 23:59:59');
					#第十四天 留存流失 时间
					set @fourteenDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 13 DAY) ;
					set @fourteenStartTime=CONCAT(@fourteenDate,' 00:00:00');
					set @fourteenEndTime=CONCAT(@fourteenDate,' 23:59:59');

					#第一个月(按30天计算) 留存流失
					set @monthDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 29 DAY) ;
					set @monthStartTime=CONCAT(@monthDate,' 00:00:00');
					set @monthEndTime=CONCAT(@monthDate,' 23:59:59');

					#当天 游戏玩家转化 时间
					set @dayDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 0 DAY) ;
					set @dayStartTimeTrans=CONCAT(@dayDateTrans,' 00:00:00');
					set @dayEndTimeTrans=CONCAT(@dayDateTrans,' 23:59:59');
					#第二天 游戏玩家转化 时间
					set @twoDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 1 DAY) ;
					set @twoStartTimeTrans=CONCAT(@twoDateTrans,' 00:00:00');
					set @twoEndTimeTrans=CONCAT(@twoDateTrans,' 23:59:59');
					#第三天 游戏玩家转化 时间
					set @threeDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 2 DAY) ;
					set @threeStartTimeTrans=CONCAT(@threeDateTrans,' 00:00:00');
					set @threeEndTimeTrans=CONCAT(@threeDateTrans,' 23:59:59');	
					#第四天 游戏玩家转化 时间
					set @fourDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 3 DAY) ;
					set @fourStartTimeTrans=CONCAT(@fourDateTrans,' 00:00:00');
					set @fourEndTimeTrans=CONCAT(@fourDateTrans,' 23:59:59');
					#第五天 游戏玩家转化 时间
					set @fivesDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 4 DAY) ;
					set @fivesStartTimeTrans=CONCAT(@fivesDateTrans,' 00:00:00');
					set @fivesEndTimeTrans=CONCAT(@fivesDateTrans,' 23:59:59');
					#第六天 游戏玩家转化 时间
					set @sixDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 5 DAY) ;
					set @sixStartTimeTrans=CONCAT(@sixDateTrans,' 00:00:00');
					set @sixEndTimeTrans=CONCAT(@sixDateTrans,' 23:59:59');
					#第七天 游戏玩家转化 时间
					set @sevenDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 6 DAY) ;
					set @sevenStartTimeTrans=CONCAT(@sevenDateTrans,' 00:00:00');
					set @sevenEndTimeTrans=CONCAT(@sevenDateTrans,' 23:59:59');	

					set @currId=1;
					while (@currId<=@totalCount) do
								select nClubId,GameProxyType into @nClubId,@GameProxyType from temp_table_proxy where Id=@currId;
								/*
										table_webdata_analysis_keeplose	新会员留存/流失表
										table_webdata_analysis_trans		游戏玩家转化表
										table_webdata_analysis_pay			新增充值会员转化表
								*/								
								#新增会员:当日新注册的会员数
								set @addnPlayer=0,@validAddnPlayer=0;
								select count(nPlayerID) into @addnPlayer from table_clubmember 
								where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 and tJoinTime>=_currdateStart and tJoinTime<=_currdateEnd;

								#有效新增:该玩家首次玩牌的那天，视为当天的有效新增（玩牌包含比赛和金币场）
								select count(nPlayerId) into @validAddnPlayer from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd;
								#更新
								update table_webdata_analysis_keeplose set addnPlayer=@addnPlayer,validAddnPlayer=@validAddnPlayer where nClubId=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
								update table_webdata_analysis_trans set addnPlayer=@addnPlayer,validAddnPlayer=@validAddnPlayer where nClubId=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
								update table_webdata_analysis_pay set addnPlayer=@addnPlayer,validAddnPlayer=@validAddnPlayer where nClubId=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;

#-------------------------------------------------新会员留存/流失表 begin---------------------------------------------------------------------------------------------------------------------
								#第二天留存 新会员留存/流失表 例如:_currdateStart=2020-08-27就是2020-08-26的第二日留存
								
								#当日首次总玩牌人数
								select validAddnPlayer into @twoKeepTotal from table_webdata_analysis_keeplose 
								where nClubId=@nClubId and tEndTime>=@twoStartTime and tEndTime<=@twoEndTime;
								#留存数
								select count(nPlayerId) into @twoKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@twoStartTime and firstGameTime<=@twoEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @twoLose=0;
								if @twoKeepTotal>@twoKeep then 
										set @twoLose=@twoKeepTotal-@twoKeep;
								end if;
								#更新
								update table_webdata_analysis_keeplose set twoKeep=@twoKeep,twoLose=@twoLose 
								where nClubId=@nClubId and tEndTime>=@twoStartTime and tEndTime<=@twoEndTime;

								#第三天留存 新会员留存/流失表								
								#当日首次总玩牌人数
								select validAddnPlayer into @threeKeepTotal from table_webdata_analysis_keeplose 
								where nClubId=@nClubId and tEndTime>=@threeStartTime and tEndTime<=@threeEndTime;
								#留存数
								select count(nPlayerId) into @threeKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@threeStartTime and firstGameTime<=@threeEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @threeLose=0;
								if @threeKeepTotal>@threeKeep then 
										set @threeLose=@threeKeepTotal-@threeKeep;
								end if;
								#更新
								update table_webdata_analysis_keeplose set threeKeep=@threeKeep,threeLose=@threeLose 
								where nClubId=@nClubId and tEndTime>=@threeStartTime and tEndTime<=@threeEndTime;

								#第四天留存 新会员留存/流失表
								#当日首次总玩牌人数
								select validAddnPlayer into @fourKeepTotal from table_webdata_analysis_keeplose 
								where nClubId=@nClubId and tEndTime>=@fourStartTime and tEndTime<=@fourEndTime;
								#留存数
								select count(nPlayerId) into @fourKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@fourStartTime and firstGameTime<=@fourEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @fourLose=0;
								if @fourKeepTotal>@fourKeep then 
										set @fourLose=@fourKeepTotal-@fourKeep;
								end if;
								#更新
								update table_webdata_analysis_keeplose set fourKeep=@fourKeep,fourLose=@fourLose 
								where nClubId=@nClubId and tEndTime>=@fourStartTime and tEndTime<=@fourEndTime;

								#第五天留存 新会员留存/流失表
								#当日首次总玩牌人数
								select validAddnPlayer into @fivesKeepTotal from table_webdata_analysis_keeplose 
								where nClubId=@nClubId and tEndTime>=@fivesStartTime and tEndTime<=@fivesEndTime;
								#留存数
								select count(nPlayerId) into @fivesKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@fivesStartTime and firstGameTime<=@fivesEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @fivesLose=0;
								if @fivesKeepTotal>@fivesKeep then 
										set @fivesLose=@fivesKeepTotal-@fivesKeep;
								end if;
								#更新
								update table_webdata_analysis_keeplose set fivesKeep=@fivesKeep,fivesLose=@fivesLose 
								where nClubId=@nClubId and tEndTime>=@fivesStartTime and tEndTime<=@fivesEndTime;

								#第六天留存 新会员留存/流失表
								#当日首次总玩牌人数
								select validAddnPlayer into @sixKeepTotal from table_webdata_analysis_keeplose 
								where nClubId=@nClubId and tEndTime>=@sixStartTime and tEndTime<=@sixEndTime;
								#留存数
								select count(nPlayerId) into @sixKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@sixStartTime and firstGameTime<=@sixEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @sixLose=0;
								if @sixKeepTotal>@sixKeep then 
										set @sixLose=@sixKeepTotal-@sixKeep;
								end if;
								#更新
								update table_webdata_analysis_keeplose set sixKeep=@sixKeep,sixLose=@sixLose 
								where nClubId=@nClubId and tEndTime>=@sixStartTime and tEndTime<=@sixEndTime;

								#第七天留存 新会员留存/流失表
								#当日首次总玩牌人数
								select validAddnPlayer into @sevenKeepTotal from table_webdata_analysis_keeplose 
								where nClubId=@nClubId and tEndTime>=@sevenStartTime and tEndTime<=@sevenEndTime;
								#留存数
								select count(nPlayerId) into @sevenKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@sevenStartTime and firstGameTime<=@sevenEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @sevenLose=0;
								if @sevenKeepTotal>@sevenKeep then 
										set @sevenLose=@sevenKeepTotal-@sevenKeep;
								end if;
								#更新
								update table_webdata_analysis_keeplose set sevenKeep=@sevenKeep,sevenLose=@sevenLose 
								where nClubId=@nClubId and tEndTime>=@sevenStartTime and tEndTime<=@sevenEndTime;

								#第14天留存 新会员留存/流失表
								#当日首次总玩牌人数
								select validAddnPlayer into @fourteenKeepTotal from table_webdata_analysis_keeplose 
								where nClubId=@nClubId and tEndTime>=@fourteenStartTime and tEndTime<=@fourteenEndTime;
								#留存数
								select count(nPlayerId) into @fourteenKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@fourteenStartTime and firstGameTime<=@fourteenEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @fourteenLose=0;
								if @fourteenKeepTotal>@fourteenKeep then 
										set @fourteenLose=@fourteenKeepTotal-@fourteenKeep;
								end if;
								#更新
								update table_webdata_analysis_keeplose set fourteenKeep=@fourteenKeep,fourteenLose=@fourteenLose 
								where nClubId=@nClubId and tEndTime>=@fourteenStartTime and tEndTime<=@fourteenEndTime;

								#第一个月留存 新会员留存/流失表
								#当日首次总玩牌人数
								select validAddnPlayer into @monthKeepTotal from table_webdata_analysis_keeplose 
								where nClubId=@nClubId and tEndTime>=@monthStartTime and tEndTime<=@monthEndTime;
								#留存数
								select count(nPlayerId) into @monthKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@monthStartTime and firstGameTime<=@monthEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @monthLose=0;
								if @monthKeepTotal>@monthKeep then 
										set @monthLose=@monthKeepTotal-@monthKeep;
								end if;
								#更新
								update table_webdata_analysis_keeplose set monthKeep=@monthKeep,monthLose=@monthLose 
								where nClubId=@nClubId and tEndTime>=@monthStartTime and tEndTime<=@monthEndTime;

#-------------------------------------------------新会员留存/流失表 end-----------------------------------------------------------------------------------------------------------------------


#-------------------------------------------------游戏玩家转化 begin--------------------------------------------------------------------------------------------------------------------------
								#当天转化 游戏玩家转化:玩家注册后，从没有打牌到打牌的人数 例：一名玩家在当日注册，当日立即打牌，即算作在当日的转化玩家（这名玩家第二日继续打牌则不再需要记录到第二人转化人数中）
								select count(nPlayerID) into @dayTrans from table_clubmember 
								where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
											and tJoinTime>=@dayStartTimeTrans and tJoinTime<=@dayEndTimeTrans 
											and nPlayerID in(	select nPlayerID from table_webdata_analysis_firstgamehelp 
																				where nClubID=@nClubId and firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd 
																							and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd
																			 );
								#更新
								update table_webdata_analysis_trans set dayTrans=@dayTrans where nClubID=@nClubId and tEndTime>=@dayStartTimeTrans and tEndTime<=@dayEndTimeTrans;


								#第二天转化
								select count(nPlayerID) into @twoTrans from table_clubmember 
								where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
											and tJoinTime>=@twoStartTimeTrans and tJoinTime<=@twoEndTimeTrans 
											and nPlayerID in(	select nPlayerID from table_webdata_analysis_firstgamehelp 
																				where nClubID=@nClubId and firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd 
																							and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd
																			 );
								#更新
								update table_webdata_analysis_trans set twoTrans=@twoTrans where nClubID=@nClubId and tEndTime>=@twoStartTimeTrans and tEndTime<=@twoEndTimeTrans;

								#第三天转化
								select count(nPlayerID) into @threeTrans from table_clubmember 
								where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
											and tJoinTime>=@threeStartTimeTrans and tJoinTime<=@threeEndTimeTrans 
											and nPlayerID in(	select nPlayerID from table_webdata_analysis_firstgamehelp 
																				where nClubID=@nClubId and firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd 
																							and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd
																			 );
								#更新
								update table_webdata_analysis_trans set threeTrans=@threeTrans where nClubID=@nClubId and tEndTime>=@threeStartTimeTrans and tEndTime<=@threeEndTimeTrans;

								#第四天转化
								select count(nPlayerID) into @fourTrans from table_clubmember 
								where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
											and tJoinTime>=@fourStartTimeTrans and tJoinTime<=@fourEndTimeTrans 
											and nPlayerID in(	select nPlayerID from table_webdata_analysis_firstgamehelp 
																				where nClubID=@nClubId and firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd 
																							and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd
																			 );
								#更新
								update table_webdata_analysis_trans set fourTrans=@fourTrans where nClubID=@nClubId and tEndTime>=@fourStartTimeTrans and tEndTime<=@fourEndTimeTrans;

								#第五天转化
								select count(nPlayerID) into @fivesTrans from table_clubmember 
								where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
											and tJoinTime>=@fivesStartTimeTrans and tJoinTime<=@fivesEndTimeTrans 
											and nPlayerID in(	select nPlayerID from table_webdata_analysis_firstgamehelp 
																				where nClubID=@nClubId and firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd 
																							and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd
																			 );
								#更新
								update table_webdata_analysis_trans set fivesTrans=@fivesTrans where nClubID=@nClubId and tEndTime>=@fivesStartTimeTrans and tEndTime<=@fivesEndTimeTrans;

								#第六天转化
								select count(nPlayerID) into @sixTrans from table_clubmember 
								where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
											and tJoinTime>=@sixStartTimeTrans and tJoinTime<=@sixEndTimeTrans 
											and nPlayerID in(	select nPlayerID from table_webdata_analysis_firstgamehelp 
																				where nClubID=@nClubId and firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd 
																							and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd
																			 );
								#更新
								update table_webdata_analysis_trans set sixTrans=@sixTrans where nClubID=@nClubId and tEndTime>=@sixStartTimeTrans and tEndTime<=@sixEndTimeTrans;

								#第七天转化
								select count(nPlayerID) into @sevenTrans from table_clubmember 
								where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
											and tJoinTime>=@sevenStartTimeTrans and tJoinTime<=@sevenEndTimeTrans 
											and nPlayerID in(	select nPlayerID from table_webdata_analysis_firstgamehelp 
																				where nClubID=@nClubId and firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd 
																							and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd
																			 );
								#更新
								update table_webdata_analysis_trans set sevenTrans=@sevenTrans where nClubID=@nClubId and tEndTime>=@sevenStartTimeTrans and tEndTime<=@sevenEndTimeTrans;
#-------------------------------------------------游戏玩家转化 end----------------------------------------------------------------------------------------------------------------------------

#-------------------------------------------------新增付费会员转化 begin----------------------------------------------------------------------------------------------------------------------
								if @GameProxyType=2 then 
											#当天转化 付费充值转化:从没有付费充值，到第一次付费充值的会员 例：注册当天立即付费充值，即算作当天的新增付费充值会员（该在第2天继续付费充值则不计算在第2天的新增付费充值会员）
											select count(nPlayerID) into @dayPay from table_clubmember 
											where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
														and tJoinTime>=@dayStartTimeTrans and tJoinTime<=@dayEndTimeTrans 
														and nPlayerID in(	select nPlayerId from table_webdata_analysis_firstrechargehelp 
																							where nClubID=@nClubId and firstRechargeTime>=_currdateStart and firstRechargeTime<=_currdateEnd 
																						 );
											#更新
											update table_webdata_analysis_pay set dayPay=@dayPay where nClubID=@nClubId and tEndTime>=@dayStartTimeTrans and tEndTime<=@dayEndTimeTrans;


											#第二天转化
											select count(nPlayerID) into @twoPay from table_clubmember 
											where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
														and tJoinTime>=@twoStartTimeTrans and tJoinTime<=@twoEndTimeTrans 
														and nPlayerID in(	select nPlayerId from table_webdata_analysis_firstrechargehelp 
																							where nClubID=@nClubId and firstRechargeTime>=_currdateStart and firstRechargeTime<=_currdateEnd 
																						 );
											#更新
											update table_webdata_analysis_pay set twoPay=@twoPay where nClubID=@nClubId and tEndTime>=@twoStartTimeTrans and tEndTime<=@twoEndTimeTrans;

											#第三天转化
											select count(nPlayerID) into @threePay from table_clubmember 
											where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
														and tJoinTime>=@threeStartTimeTrans and tJoinTime<=@threeEndTimeTrans 
														and nPlayerID in(	select nPlayerId from table_webdata_analysis_firstrechargehelp 
																							where nClubID=@nClubId and firstRechargeTime>=_currdateStart and firstRechargeTime<=_currdateEnd 
																						 );
											#更新
											update table_webdata_analysis_pay set threePay=@threePay where nClubID=@nClubId and tEndTime>=@threeStartTimeTrans and tEndTime<=@threeEndTimeTrans;

											#第四天转化
											select count(nPlayerID) into @fourPay from table_clubmember 
											where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
														and tJoinTime>=@fourStartTimeTrans and tJoinTime<=@fourEndTimeTrans 
														and nPlayerID in(	select nPlayerId from table_webdata_analysis_firstrechargehelp 
																							where nClubID=@nClubId and firstRechargeTime>=_currdateStart and firstRechargeTime<=_currdateEnd 
																						 );
											#更新
											update table_webdata_analysis_pay set fourPay=@fourPay where nClubID=@nClubId and tEndTime>=@fourStartTimeTrans and tEndTime<=@fourEndTimeTrans;

											#第五天转化
											select count(nPlayerID) into @fivesPay from table_clubmember 
											where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
														and tJoinTime>=@fivesStartTimeTrans and tJoinTime<=@fivesEndTimeTrans 
														and nPlayerID in(	select nPlayerId from table_webdata_analysis_firstrechargehelp 
																							where nClubID=@nClubId and firstRechargeTime>=_currdateStart and firstRechargeTime<=_currdateEnd 
																						 );
											#更新
											update table_webdata_analysis_pay set fivesPay=@fivesPay where nClubID=@nClubId and tEndTime>=@fivesStartTimeTrans and tEndTime<=@fivesEndTimeTrans;

											#第六天转化
											select count(nPlayerID) into @sixPay from table_clubmember 
											where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
														and tJoinTime>=@sixStartTimeTrans and tJoinTime<=@sixEndTimeTrans 
														and nPlayerID in(	select nPlayerId from table_webdata_analysis_firstrechargehelp 
																							where nClubID=@nClubId and firstRechargeTime>=_currdateStart and firstRechargeTime<=_currdateEnd 
																						 );
											#更新
											update table_webdata_analysis_pay set sixPay=@sixPay where nClubID=@nClubId and tEndTime>=@sixStartTimeTrans and tEndTime<=@sixEndTimeTrans;

											#第七天转化
											select count(nPlayerID) into @sevenPay from table_clubmember 
											where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 
														and tJoinTime>=@sevenStartTimeTrans and tJoinTime<=@sevenEndTimeTrans 
														and nPlayerID in(	select nPlayerId from table_webdata_analysis_firstrechargehelp 
																							where nClubID=@nClubId and firstRechargeTime>=_currdateStart and firstRechargeTime<=_currdateEnd 
																						 );
											#更新
											update table_webdata_analysis_pay set sevenPay=@sevenPay where nClubID=@nClubId and tEndTime>=@sevenStartTimeTrans and tEndTime<=@sevenEndTimeTrans;
								end if;
#-------------------------------------------------新增付费会员转化 end------------------------------------------------------------------------------------------------------------------------
								set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_Analysis_FirstRecord
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_Analysis_FirstRecord`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_Analysis_FirstRecord`(
	in $curdate varchar(19) 
)
begin 
			declare $startTime varchar(20) default DATE_SUB(DATE_FORMAT($curdate,'%Y-%m-%d'),INTERVAL 1 DAY) ;
			#开始时间、结束时间
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');

			#创建临时表——首次、末次游戏记录更新
			drop temporary table if exists temp_table_webdata_analysis_firstlastgame;  
			create temporary table temp_table_webdata_analysis_firstlastgame(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				nPlayerId int DEFAULT 0
			);
			#插入临时表  游戏赢分 nGameWinScore(1000) - 游戏输分 nGameLoseScore(-1000);比赛游戏记录;
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @sqlStr1=CONCAT("insert into temp_table_webdata_analysis_firstlastgame(nClubId,nPlayerId)
													 select nClubId,nPlayerId 
													 from(
																 select nClubId,nPlayerId from ",@table_clubgamescoredetail," 
																 union 
																 select nClubId,nPlayerId from table_match_game_score_detail  where tEndTime>='",_currdateStart,"' and tEndTime<='",_currdateEnd,"' 
															 )temp1 GROUP BY nClubId,nPlayerId 
													");
			PREPARE stmt_name1 FROM @sqlStr1; 
			EXECUTE stmt_name1;
			DEALLOCATE PREPARE stmt_name1;

			select count(1) into @totalCount from temp_table_webdata_analysis_firstlastgame;
			if @totalCount>0 then 
					set @currId=1;
					while (@currId<=@totalCount) do
								select nClubId,nPlayerId into @nClubId,@nPlayerId from temp_table_webdata_analysis_firstlastgame where Id=@currId;
								if exists(select nClubId from table_webdata_analysis_firstgamehelp where nClubId=@nClubId and nPlayerId=@nPlayerId) then 
											update table_webdata_analysis_firstgamehelp set lastGameTime=_currdateStart where nClubId=@nClubId and nPlayerId=@nPlayerId;
								else 
											insert into table_webdata_analysis_firstgamehelp(nClubId,nPlayerId,firstGameTime,lastGameTime,tEndTime)
											values(@nClubId,@nPlayerId,_currdateStart,_currdateStart,_currdateStart);
								end if;
								set @currId=@currId+1;
					end while;
			end if;

			#创建临时表————首次充值记录
			drop temporary table if exists temp_table_webdata_analysis_firstrecharge;  
			create temporary table temp_table_webdata_analysis_firstrecharge(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				nPlayerId int DEFAULT 0
			);
			#插入临时表
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			set @sqlStr2=CONCAT("insert into temp_table_webdata_analysis_firstrecharge(nClubId,nPlayerId)
													 select ClubId,nPlayerId from ",@table_clublogscore,"  where nType=23  
													");
			PREPARE stmt_name2 FROM @sqlStr2; 
			EXECUTE stmt_name2;
			DEALLOCATE PREPARE stmt_name2;

			select count(1) into @totalCount_Recharge from temp_table_webdata_analysis_firstrecharge;
			if @totalCount_Recharge>0 then 
					set @currId_recharge=1;
					while (@currId_recharge<=@totalCount_Recharge) do
								select nClubId,nPlayerId into @nClubId,@nPlayerId from temp_table_webdata_analysis_firstrecharge where Id=@currId_recharge;
								if not exists(select nClubId from table_webdata_analysis_firstrechargehelp where nClubId=@nClubId and nPlayerId=@nPlayerId) then 
											insert into table_webdata_analysis_firstrechargehelp(nClubId,nPlayerId,firstRechargeTime,tEndTime)
											values(@nClubId,@nPlayerId,_currdateStart,_currdateStart);
								end if;
								set @currId_recharge=@currId_recharge+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_Analysis_FirstRecord20200915
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_Analysis_FirstRecord20200915`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_Analysis_FirstRecord20200915`(
	in $curdate varchar(19) 
)
begin 
			declare $startTime varchar(20) default DATE_SUB(DATE_FORMAT($curdate,'%Y-%m-%d'),INTERVAL 1 DAY) ;
			#开始时间、结束时间
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');

			#创建临时表——首次、末次游戏记录更新
			drop temporary table if exists temp_table_webdata_analysis_firstlastgame;  
			create temporary table temp_table_webdata_analysis_firstlastgame(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				nPlayerId int DEFAULT 0
			);
			#插入临时表  游戏赢分 nGameWinScore(1000) - 游戏输分 nGameLoseScore(-1000);比赛游戏记录;
			insert into temp_table_webdata_analysis_firstlastgame(nClubId,nPlayerId)
			select nClubId,nPlayerId 
			from(
						select nClubId,nPlayerId from table_webdata_playerscore where tEndTime>=_currdateStart and tEndTime<=_currdateEnd and(nGameWinScore>0 or nGameLoseScore<0)
						union 
						select nClubId,nPlayerId from table_match_game_score_detail  where tEndTime>=_currdateStart and tEndTime<=_currdateEnd
					)temp1 GROUP BY nClubId,nPlayerId;

			select count(1) into @totalCount from temp_table_webdata_analysis_firstlastgame;
			if @totalCount>0 then 
					set @currId=1;
					while (@currId<=@totalCount) do
								select nClubId,nPlayerId into @nClubId,@nPlayerId from temp_table_webdata_analysis_firstlastgame where Id=@currId;
								if exists(select nClubId from table_webdata_analysis_firstgamehelp where nClubId=@nClubId and nPlayerId=@nPlayerId) then 
											update table_webdata_analysis_firstgamehelp set lastGameTime=_currdateStart where nClubId=@nClubId and nPlayerId=@nPlayerId;
								else 
											insert into table_webdata_analysis_firstgamehelp(nClubId,nPlayerId,firstGameTime,lastGameTime,tEndTime)
											values(@nClubId,@nPlayerId,_currdateStart,_currdateStart,_currdateStart);
								end if;
								set @currId=@currId+1;
					end while;
			end if;

			#创建临时表————首次充值记录
			drop temporary table if exists temp_table_webdata_analysis_firstrecharge;  
			create temporary table temp_table_webdata_analysis_firstrecharge(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				nPlayerId int DEFAULT 0
			);
			#插入临时表
			insert into temp_table_webdata_analysis_firstrecharge(nClubId,nPlayerId)
		  select nClubId,nPlayerId from table_webdata_playerscore where tEndTime>=_currdateStart and tEndTime<=_currdateEnd and nRechargeCount>0  and nRechargeAmount>0;

			select count(1) into @totalCount_Recharge from temp_table_webdata_analysis_firstrecharge;
			if @totalCount_Recharge>0 then 
					set @currId_recharge=1;
					while (@currId_recharge<=@totalCount_Recharge) do
								select nClubId,nPlayerId into @nClubId,@nPlayerId from temp_table_webdata_analysis_firstrecharge where Id=@currId_recharge;
								if not exists(select nClubId from table_webdata_analysis_firstrechargehelp where nClubId=@nClubId and nPlayerId=@nPlayerId) then 
											insert into table_webdata_analysis_firstrechargehelp(nClubId,nPlayerId,firstRechargeTime,tEndTime)
											values(@nClubId,@nPlayerId,_currdateStart,_currdateStart);
								end if;
								set @currId_recharge=@currId_recharge+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_Analysis_FirstRecord_test
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_Analysis_FirstRecord_test`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_WebData_Analysis_FirstRecord_test`(
	in $curdate varchar(19) 
)
begin 
			declare $startTime varchar(20) default DATE_SUB(DATE_FORMAT($curdate,'%Y-%m-%d'),INTERVAL 1 DAY) ;
			#开始时间、结束时间
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');

			#创建临时表————运营商临时表
			drop temporary table if exists temp_table_proxy;  
			create temporary table temp_table_proxy(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				nIsTest int DEFAULT 0,
				GameProxyType int DEFAULT 1
			);
			#插入临时表
			insert into temp_table_proxy(nClubId,nIsTest,GameProxyType)
			select nClubId,isTest,GameProxyType from admin_proxy where ProxyType=1;

			select count(1) into @proxyCount from temp_table_proxy;
			if @proxyCount>0 then 
					#第二天 留存流失 时间
					set @twoDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 1 DAY) ;
					set @twoStartTime=CONCAT(@twoDate,' 00:00:00');
					set @twoEndTime=CONCAT(@twoDate,' 23:59:59');
					#第三天 留存流失 时间
					set @threeDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 2 DAY) ;
					set @threeStartTime=CONCAT(@threeDate,' 00:00:00');
					set @threeEndTime=CONCAT(@threeDate,' 23:59:59');
					#第四天 留存流失 时间
					set @fourDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 3 DAY) ;
					set @fourStartTime=CONCAT(@fourDate,' 00:00:00');
					set @fourEndTime=CONCAT(@fourDate,' 23:59:59');
					#第五天 留存流失 时间
					set @fivesDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 4 DAY) ;
					set @fivesStartTime=CONCAT(@fivesDate,' 00:00:00');
					set @fivesEndTime=CONCAT(@fivesDate,' 23:59:59');
					#第六天 留存流失 时间
					set @sixDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 5 DAY) ;
					set @sixStartTime=CONCAT(@sixDate,' 00:00:00');
					set @sixEndTime=CONCAT(@sixDate,' 23:59:59');
					#第七天 留存流失 时间
					set @sevenDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 6 DAY) ;
					set @sevenStartTime=CONCAT(@sevenDate,' 00:00:00');
					set @sevenEndTime=CONCAT(@sevenDate,' 23:59:59');
					#第十四天 留存流失 时间
					set @fourteenDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 13 DAY) ;
					set @fourteenStartTime=CONCAT(@fourteenDate,' 00:00:00');
					set @fourteenEndTime=CONCAT(@fourteenDate,' 23:59:59');
					#第一个月 留存流失 时间
					set @monthDate=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 1 month) ;
					set @monthStartTime=CONCAT(@monthDate,' 00:00:00');
					set @monthEndTime=CONCAT(@monthDate,' 23:59:59');

					#当天 游戏玩家转化 时间
					set @dayDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 0 DAY) ;
					set @dayStartTimeTrans=CONCAT(@dayDateTrans,' 00:00:00');
					set @dayEndTimeTrans=CONCAT(@dayDateTrans,' 23:59:59');
					#第二天 游戏玩家转化 时间
					set @twoDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 1 DAY) ;
					set @twoStartTimeTrans=CONCAT(@twoDateTrans,' 00:00:00');
					set @twoEndTimeTrans=CONCAT(@twoDateTrans,' 23:59:59');
					#第三天 游戏玩家转化 时间
					set @threeDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 2 DAY) ;
					set @threeStartTimeTrans=CONCAT(@threeDateTrans,' 00:00:00');
					set @threeEndTimeTrans=CONCAT(@threeDateTrans,' 23:59:59');	
					#第四天 游戏玩家转化 时间
					set @fourDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 3 DAY) ;
					set @fourStartTimeTrans=CONCAT(@fourDateTrans,' 00:00:00');
					set @fourEndTimeTrans=CONCAT(@fourDateTrans,' 23:59:59');
					#第五天 游戏玩家转化 时间
					set @fivesDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 4 DAY) ;
					set @fivesStartTimeTrans=CONCAT(@fivesDateTrans,' 00:00:00');
					set @fivesEndTimeTrans=CONCAT(@fivesDateTrans,' 23:59:59');
					#第六天 游戏玩家转化 时间
					set @sixDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 5 DAY) ;
					set @sixStartTimeTrans=CONCAT(@sixDateTrans,' 00:00:00');
					set @sixEndTimeTrans=CONCAT(@sixDateTrans,' 23:59:59');
					#第七天 游戏玩家转化 时间
					set @sevenDateTrans=DATE_SUB(DATE_FORMAT(_currdateStart,'%Y-%m-%d'),INTERVAL 6 DAY) ;
					set @sevenStartTimeTrans=CONCAT(@sevenDateTrans,' 00:00:00');
					set @sevenEndTimeTrans=CONCAT(@sevenDateTrans,' 23:59:59');	

					set @currId_proxy=1;
					while (@currId_proxy<=@proxyCount) do
								select nClubId,nIsTest,GameProxyType into @nClubId,@nIsTest,@GameProxyType from temp_table_proxy where Id=@currId_proxy;
								/*
										table_webdata_analysis_keeplose	新会员留存/流失表
										table_webdata_analysis_trans		游戏玩家转化表
										table_webdata_analysis_pay			新增充值会员转化表
										@addnPlayer				新增会员:当日新注册的会员数
										@validAddnPlayer	有效新增:该玩家首次玩牌的那天，视为当天的有效新增（玩牌包含比赛和金币场）
								*/
								
								if exists (select nClubId from table_webdata_analysis_keeplose where nClubId=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
											delete from table_webdata_analysis_keeplose where nClubId=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd; 
								end if;
								if exists (select nClubId from table_webdata_analysis_trans where nClubId=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
											delete from table_webdata_analysis_trans where nClubId=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd; 
								end if;
								if exists (select nClubId from table_webdata_analysis_pay where nClubId=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
											delete from table_webdata_analysis_pay where nClubId=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd; 
								end if;

								set @addnPlayer=0,@validAddnPlayer=0;
								select count(nPlayerID) into @addnPlayer from table_clubmember 
								where nClubID=@nClubId and nLevel>1 and nStatus=1 and bRobot=0 and tJoinTime>=_currdateStart and tJoinTime<=_currdateEnd;
								
								select count(nPlayerId) into @validAddnPlayer from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#初始化表数据
								insert into table_webdata_analysis_keeplose(addnPlayer,validAddnPlayer,nClubId,nIsTest,tEndTime) values(@addnPlayer,@validAddnPlayer,@nClubId,@nIsTest,_currdateStart);
								insert into table_webdata_analysis_trans(addnPlayer,validAddnPlayer,nClubId,nIsTest,tEndTime) values(@addnPlayer,@validAddnPlayer,@nClubId,@nIsTest,_currdateStart);
								insert into table_webdata_analysis_pay(addnPlayer,validAddnPlayer,nClubId,nIsTest,tEndTime) values(@addnPlayer,@validAddnPlayer,@nClubId,@nIsTest,_currdateStart);

#-------------------------------------------------新会员留存/流失表 begin---------------------------------------------------------------------------------------------------------------------
								#第二天留存 新会员留存/流失表 例如:_currdateStart=2020-08-27就是2020-08-26的第二日留存
								
								#当日首次总玩牌人数
								select count(nPlayerId) into @twoKeepTotal from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@twoStartTime and firstGameTime<=@twoEndTime;
								#留存数
								select count(nPlayerId) into @twoKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@twoStartTime and firstGameTime<=@twoEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @twoLose=@twoKeepTotal-@twoKeep;
								#更新
								update table_webdata_analysis_keeplose set twoKeep=@twoKeep,twoLose=@twoLose 
								where nClubId=@nClubId and tEndTime>=@twoStartTime and tEndTime<=@twoEndTime;

								#第三天留存 新会员留存/流失表								
								#当日首次总玩牌人数
								select count(nPlayerId) into @threeKeepTotal from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@threeStartTime and firstGameTime<=@threeEndTime;
								#留存数
								select count(nPlayerId) into @threeKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@threeStartTime and firstGameTime<=@threeEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @threeLose=@threeKeepTotal-@threeKeep;
								#更新
								update table_webdata_analysis_keeplose set threeKeep=@threeKeep,threeLose=@threeLose 
								where nClubId=@nClubId and tEndTime>=@threeStartTime and tEndTime<=@threeEndTime;

								#第四天留存 新会员留存/流失表
								#当日首次总玩牌人数
								select count(nPlayerId) into @fourKeepTotal from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@fourStartTime and firstGameTime<=@fourEndTime;
								#留存数
								select count(nPlayerId) into @fourKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@fourStartTime and firstGameTime<=@fourEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @fourLose=@fourKeepTotal-@fourKeep;
								#更新
								update table_webdata_analysis_keeplose set fourKeep=@fourKeep,fourLose=@fourLose 
								where nClubId=@nClubId and tEndTime>=@fourStartTime and tEndTime<=@fourEndTime;

								#第五天留存 新会员留存/流失表
								#当日首次总玩牌人数
								select count(nPlayerId) into @fivesKeepTotal from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@fivesStartTime and firstGameTime<=@fivesEndTime;
								#留存数
								select count(nPlayerId) into @fivesKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@fivesStartTime and firstGameTime<=@fivesEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @fivesLose=@fivesKeepTotal-@fivesKeep;
								#更新
								update table_webdata_analysis_keeplose set fivesKeep=@fivesKeep,fivesLose=@fivesLose 
								where nClubId=@nClubId and tEndTime>=@fivesStartTime and tEndTime<=@fivesEndTime;

								#第六天留存 新会员留存/流失表
								#当日首次总玩牌人数
								select count(nPlayerId) into @sixKeepTotal from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and tEndTime>=@sixStartTime and tEndTime<=@sixEndTime;
								#留存数
								select count(nPlayerId) into @sixKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@sixStartTime and firstGameTime<=@sixEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @sixLose=@sixKeepTotal-@sixKeep;
								#更新
								update table_webdata_analysis_keeplose set sixKeep=@sixKeep,sixLose=@sixLose 
								where nClubId=@nClubId and tEndTime>=@sixStartTime and tEndTime<=@sixEndTime;

								#第七天留存 新会员留存/流失表
								#当日首次总玩牌人数
								select count(nPlayerId) into @sevenKeepTotal from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@sevenStartTime and firstGameTime<=@sevenEndTime;
								#留存数
								select count(nPlayerId) into @sevenKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@sevenStartTime and firstGameTime<=@sevenEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @sevenLose=@sevenKeepTotal-@sevenKeep;
								#更新
								update table_webdata_analysis_keeplose set sevenKeep=@sevenKeep,sevenLose=@sevenLose 
								where nClubId=@nClubId and tEndTime>=@sevenStartTime and tEndTime<=@sevenEndTime;

								#第14天留存 新会员留存/流失表
								#当日首次总玩牌人数
								select count(nPlayerId) into @fourteenKeepTotal from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@fourteenStartTime and firstGameTime<=@fourteenEndTime;
								#留存数
								select count(nPlayerId) into @fourteenKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@fourteenStartTime and firstGameTime<=@fourteenEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @fourteenLose=@fourteenKeepTotal-@fourteenKeep;
								#更新
								update table_webdata_analysis_keeplose set fourteenKeep=@fourteenKeep,fourteenLose=@fourteenLose 
								where nClubId=@nClubId and tEndTime>=@fourteenStartTime and tEndTime<=@fourteenEndTime;

								#第一个月留存 新会员留存/流失表
								#当日首次总玩牌人数
								select count(nPlayerId) into @monthKeepTotal from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@monthStartTime and firstGameTime<=@monthEndTime;
								#留存数
								select count(nPlayerId) into @monthKeep from table_webdata_analysis_firstgamehelp 
								where nClubId=@nClubId and firstGameTime>=@monthStartTime and firstGameTime<=@monthEndTime and lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd;
								#流失数
								set @monthLose=@monthKeepTotal-@monthKeep;
								#更新
								update table_webdata_analysis_keeplose set monthKeep=@monthKeep,monthLose=@monthLose 
								where nClubId=@nClubId and tEndTime>=@monthStartTime and tEndTime<=@monthEndTime;

#-------------------------------------------------新会员留存/流失表 end-----------------------------------------------------------------------------------------------------------------------


								set @currId_proxy=@currId_proxy+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_AppProxData
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_AppProxData`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_AppProxData`(

	in $startTime varchar(19)
)
begin 
			
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');

			declare _nClubId,_nPlayerId,_nRechargeCount,_nWithdrawalCount,_nIsTest int default 0;
			declare _nRechargeAmount,_nWithdrawalAmount,_nUpScore,
							_nDownScore,_nTaskAmount,_nActivityAmount,_nReturnAmount,_matchFee,_returnMatchFee,_matchAmount bigint default 0;
			
			declare done int default false;
	
			
			declare cur cursor for select score.nClubId,score.nIsTest,score.nPlayerId,score.nRechargeAmount,score.nWithdrawalAmount,
																		score.nUpScore,score.nDownScore,score.nTaskAmount,score.nActivityAmount,score.nReturnAmount,
																		score.matchFee,score.returnMatchFee,score.matchAmount,
																		score.nRechargeCount,score.nWithdrawalCount 
														 from Table_WebData_PlayerScore score 
														 where score.tEndTime between _currdateStart and _currdateEnd
																		and exists(select proxy.nClubId from admin_proxy proxy 
																							 where proxy.ProxyType=1 and GameProxyType=2 and score.nClubId=proxy.nClubId);
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId,_nIsTest,_nPlayerId,_nRechargeAmount,_nWithdrawalAmount,_nUpScore,_nDownScore,
										_nTaskAmount,_nActivityAmount,_nReturnAmount,_matchFee,_returnMatchFee,_matchAmount,_nRechargeCount,_nWithdrawalCount;
			
			if done then					
					leave read_loop;    
			end if;
						
						select UserName into @nUserName from admin_proxy where ProxyType=1 and nClubId=_nClubId;

						
						select nExLevel,nExtenID,nScore into @nExLevel,@nExtenID,@nScore from table_clubmember where nClubID=_nClubId and nPlayerID=_nPlayerId limit 0,1;

						
						set @nRechargeNumber=0;
						if _nRechargeCount>0 then 
							set @nRechargeNumber=1;
						end if;

						
						set @nWithdrawalNumber=0;
						if _nWithdrawalCount>0 then 
							set @nWithdrawalNumber=1;
						end if;

						
						select IFNULL(SUM(nBetScore),0),IFNULL(SUM(nValidBet),0),IFNULL(SUM(nResultMoney),0),IFNULL(SUM(nTax),0) into @nBetScore,@nValidBet,@nResultMoney,@nTax
						from  Table_WebData_PlayerGameHome 
						where nClubId=_nClubId and tEndTime between _currdateStart and _currdateEnd and nPlayerId=_nPlayerId;

						
						select count(nPlayerID) into @nDirectNumber from table_clubmember 
						where nClubID=_nClubId and nExtenID=_nPlayerId and tJoinTime between _currdateStart and _currdateEnd;

						
						select IFNULL(SUM(game.nValidBet),0) into @nDirectWater from  Table_WebData_PlayerGameHome game
						where game.nClubId=_nClubId and game.tEndTime between _currdateStart and _currdateEnd 
									and exists(select nPlayerId from table_clubmember where nClubID=_nClubId and nExtenID=_nPlayerId and game.nPlayerId=nPlayerId);

						
						select count(nPlayerID) into @nTeamNumber from table_clubmemberappline 
						where nPlayerID=_nPlayerId and tJoinTime between _currdateStart and _currdateEnd and nClubID=_nClubId;

						
						select IFNULL(SUM(game.nValidBet),0) into @nTeamWater from  Table_WebData_PlayerGameHome game
						where game.nClubId=_nClubId and game.tEndTime between _currdateStart and _currdateEnd 
									and exists(select nPlayerId from table_clubmemberappline where nPlayerId=_nPlayerId and game.nPlayerId=nNextID and nClubID=_nClubId);

						
						select IFNULL(SUM(game.nReturnAmount),0) into @nTeamReturnAmount from  Table_WebData_PlayerScore game
						where game.nClubId=_nClubId and game.tEndTime between _currdateStart and _currdateEnd 
									and exists(select nPlayerId from table_clubmemberappline where nPlayerId=_nPlayerId and game.nPlayerId=nNextID and nClubID=_nClubId);



						insert into Table_WebData_AppProxData
						(nClubId,nIsTest,nUserName,nPlayerId,nExLevel,nExtenId,nRechargeAmount,
						nWithdrawalAmount,nUpScore,nDownScore,nTaskAmount,nActivityAmount,
						nReturnAmount,nBetScore,nValidBet,nResultMoney,nTax,nScore,nRechargeNumber,
						nRechargeCount,nWithdrawalNumber,nWithdrawalCount,matchFee,returnMatchFee,matchAmount,
						nDirectNumber,nDirectWater,
						nTeamNumber,nTeamWater,nTeamReturnAmount,tEndTime
						)
						values
						(_nClubId,_nIsTest,@nUserName,_nPlayerId,@nExLevel,@nExtenID,_nRechargeAmount,
						 _nWithdrawalAmount,_nUpScore,_nDownScore,_nTaskAmount,_nActivityAmount,
						 _nReturnAmount,@nBetScore,@nValidBet,@nResultMoney,@nTax,@nScore,@nRechargeNumber,
						 _nRechargeCount,@nWithdrawalNumber,_nWithdrawalCount,_matchFee,_returnMatchFee,_matchAmount,
						 @nDirectNumber,@nDirectWater,
						 @nTeamNumber,@nTeamWater,@nTeamReturnAmount,_currdateStart
						);
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_AppProxDataLine
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_AppProxDataLine`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_AppProxDataLine`(

	in $startTime varchar(19)
)
begin 
			
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');

			declare _nClubId,_nIsTest,_nExtenId,_tempnExtenId int default 0;	
			declare _nUserName varchar(64) default '';
			
			declare done int default false;
			declare cur cursor for select nClubId,nIsTest,nUserName,nExtenId from Table_WebData_AppProxDataLine where tEndTime between _currdateStart and _currdateEnd;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId,_nIsTest,_nUserName,_nExtenId;
			
			if done then					
					leave read_loop;    
			end if;
								
								set _tempnExtenId=_nExtenId;
								
								set @isflag=1,@numeCount=1;
								while @isflag=1 and _tempnExtenId>0 do 
										select nExtenID,nExLevel into @nExtenID,@nExLevel from table_clubmember where nClubId=_nClubId and nPlayerId=_tempnExtenId limit 0,1;
										if exists(select nClubID from Table_WebData_AppProxDataLine where nClubId=_nClubId and nPlayerId=_tempnExtenId and tEndTime between _currdateStart and _currdateEnd) then 													
													set _tempnExtenId=@nExtenID;
										else 
													if @nExtenID>0 then 
																insert into Table_WebData_AppProxDataLine(nClubId,nIsTest,nUserName,nPlayerId,nExLevel,nExtenId,tEndTime)
																values(_nClubId,_nIsTest,_nUserName,_tempnExtenId,@nExLevel,@nExtenID,_currdateStart);
																set _tempnExtenId=@nExtenID;
													else 
															set @isflag=0;
															set _tempnExtenId=0;
													end if;
										end if;										
										if @numeCount>=1000 then 
												set @isflag=0;
												set _tempnExtenId=0;
										end if;
										set @numeCount=@numeCount+1;
								end while;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_AppProxDataLineSum
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_AppProxDataLineSum`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_AppProxDataLineSum`(

	in $startTime varchar(19)
)
begin 
			
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');

			declare _nClubId,_nPlayerId int default 0;
			
			declare done int default false;
			declare cur cursor for select nClubId,nPlayerId from Table_WebData_AppProxDataLine where tEndTime between _currdateStart and _currdateEnd;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId,_nPlayerId;
			
			if done then					
					leave read_loop;    
			end if;
								
								select  IFNULL(nRechargeAmount,0),IFNULL(nWithdrawalAmount,0),IFNULL(nUpScore,0),IFNULL(nDownScore,0),IFNULL(nTaskAmount,0),
												IFNULL(nActivityAmount,0),IFNULL(nResultMoney,0),IFNULL(nTax,0),IFNULL(nScore,0),IFNULL(nReturnAmount,0),IFNULL(nRechargeNumber,0),
												IFNULL(nRechargeCount,0),IFNULL(nWithdrawalNumber,0),IFNULL(nWithdrawalCount,0),IFNULL(nBetScore,0),
												IFNULL(nDirectNumber,0),IFNULL(nDirectWater,0),IFNULL(matchFee,0),IFNULL(returnMatchFee,0),IFNULL(matchAmount,0)
								into 		@nRechargeAmount,@nWithdrawalAmount,@nUpScore,@nDownScore,@nTaskAmount,
												@nActivityAmount,@nResultMoney,@nTax,@nScore,@nReturnAmount,@nRechargeNumber,
												@nRechargeCount,@nWithdrawalNumber,@nWithdrawalCount,@nBetScore,
												@nDirectNumber,@nDirectWater,@matchFee,@returnMatchFee,@matchAmount
								from table_webdata_appproxdata where tEndTime between _currdateStart and _currdateEnd and nClubID=_nClubId and nPlayerId=_nPlayerId;
								
								select count(nPlayerID) into @nTeamNumber from table_clubmemberappline 
								where nPlayerID=_nPlayerId and tJoinTime between _currdateStart and _currdateEnd and nClubID=_nClubId;
								
								
								select  IFNULL(SUM(nRechargeAmount),0),IFNULL(SUM(nWithdrawalAmount),0),IFNULL(SUM(nUpScore),0),IFNULL(SUM(nDownScore),0),
												IFNULL(SUM(nTaskAmount),0),IFNULL(SUM(nActivityAmount),0),IFNULL(SUM(nResultMoney),0),IFNULL(SUM(nTax),0),
												IFNULL(SUM(nScore),0),IFNULL(SUM(nReturnAmount),0),IFNULL(SUM(nRechargeNumber),0),IFNULL(SUM(nRechargeCount),0),
												IFNULL(SUM(nWithdrawalNumber),0),IFNULL(SUM(nWithdrawalCount),0),IFNULL(SUM(nBetScore),0),IFNULL(SUM(nValidBet),0), 
												IFNULL(SUM(matchFee),0),IFNULL(SUM(returnMatchFee),0),IFNULL(SUM(matchAmount),0)
								into 		@nRechargeAmount_line,@nWithdrawalAmount_line,@nUpScore_line,@nDownScore_line,@nTaskAmount_line,
												@nActivityAmount_line,@nResultMoney_line,@nTax_line,@nScore_line,@nReturnAmount_line,@nRechargeNumber_line,
												@nRechargeCount_line,@nWithdrawalNumber_line,@nWithdrawalCount_line,@nBetScore_line,@nValidBet_line, 
												@matchFee_line,@returnMatchFee_line,@matchAmount_line
								from  table_webdata_appproxdata game
								where game.nClubId=_nClubId and game.tEndTime between _currdateStart and _currdateEnd 
									and exists(select nPlayerId from table_clubmemberappline where nPlayerId=_nPlayerId and game.nPlayerId=nNextID and nClubID=_nClubId);
								
								
								update Table_WebData_AppProxDataLine 
								set nRechargeAmount=@nRechargeAmount+@nRechargeAmount_line,
										nWithdrawalAmount=@nWithdrawalAmount+@nWithdrawalAmount_line,
										nUpScore=@nUpScore+@nUpScore_line,
										nDownScore=@nDownScore+@nDownScore_line,
										nTaskAmount=@nTaskAmount+@nTaskAmount_line,
										nActivityAmount=@nActivityAmount+@nActivityAmount_line,
										nReturnAmount=@nReturnAmount+@nReturnAmount_line,
										nBetScore=@nBetScore+@nBetScore_line,
										nValidBet=@nValidBet_line,
										nResultMoney=@nResultMoney+@nResultMoney_line,
										nTax=@nTax+@nTax_line,
										nScore=@nScore+@nScore_line,
										nRechargeNumber=@nRechargeNumber+@nRechargeNumber_line,
										nRechargeCount=@nRechargeCount+@nRechargeCount_line,
										nWithdrawalNumber=@nWithdrawalNumber+@nWithdrawalNumber_line,
										nWithdrawalCount=@nWithdrawalCount+@nWithdrawalCount_line,
										nDirectNumber=@nDirectNumber,	
										nDirectWater=@nDirectWater,		
										nTeamNumber=@nTeamNumber,
										matchFee=@matchFee+@matchFee_line,
										returnMatchFee=@returnMatchFee+@returnMatchFee_line,
										matchAmount=@matchAmount+@matchAmount_line
							where tEndTime between _currdateStart and _currdateEnd and nClubID=_nClubId and nPlayerId=_nPlayerId;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_AppTotalReturnAmount
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_AppTotalReturnAmount`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_WebData_AppTotalReturnAmount`(
/*
		创建时间:2020-03-26 
		修改时间:2020-05-15 
		功能描述:App代理 返佣总览
	*/
	in $startTime varchar(19)
)
begin 
			#当前时间年月日
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');

			declare _nClubId,_nIsTest,_nPlayerId int default 0;
			#创建结束标志变量  
			declare done int default false;
			#获取数据
			declare cur cursor for select nClubId,isTest,nPlayerId from admin_proxy where proxyType=1 and gameProxyType=2;
			#指定游标循环结束时的返回值  
			declare continue handler for not found set done = true;
			#打开游标  
			open cur;  
			#开始循环游标里的数据  
			read_loop:loop  
			#根据游标当前指向的一条数据  
			fetch cur into _nClubId,_nIsTest,_nPlayerId;
			#判断游标的循环是否结束  
			if done then					
					leave read_loop;    #跳出游标循环
			end if;
						#创建临时表
						drop temporary table if exists temp_table;  
						create temporary table temp_table(  
							Id int unsigned  not null  auto_increment primary key,
							nPlayerId int DEFAULT 0 
						);
						#有效代理插入临时表
						insert into temp_table(nPlayerId)
						select nExtenID from table_clubmember 					
						where nClubID=_nClubId and nExtenID>0 and bRobot=0 and nExtenID<>_nPlayerId and nLevel>1 and nStatus=1 and tJoinTime<=_currdateEnd 
						group by  nExtenID;

						#有效代理_发展过1名或以上的直属会员，即为有效代理
						select count(1) into @nValidPlayerCount from temp_table;

						#有效代理--当前日期之前的代理数
						select count(1) into @startCount from 
						(
							select count(nExtenID) counts,nExtenID from table_clubmember 					
							where nClubID=_nClubID and nExtenID>0 and bRobot=0 and nExtenID<>_nPlayerId and nLevel>1 and nStatus=1 and tJoinTime<_currdateStart
							group by  nExtenID
						)temp;

						#新增有效代理--当日新增的有效代理，即当日由原来没有直属会员的代理，发展了1名或以上数量直属会员的代理
						set @nValidPlayerCountAdd=@nValidPlayerCount-@startCount;


						#活跃代理
						select count(1) into @activePlayerCount from 
						(
							select count(nExtenID) counts,nExtenID from table_clubmember 					
							where nClubID=_nClubID and nExtenID>0 and bRobot=0 and nExtenID<>_nPlayerId and nLevel>1 and nStatus=1 and tJoinTime between  _currdateStart and _currdateEnd 
							group by  nExtenID
						)temp;

						#当日所有有效代理的流水总和
						select IFNULL(SUM(nValidBet),0) into @totalnValidBet from table_webdata_appproxdata sorts 
						where nClubId=_nClubID and nExLevel>2 and tEndTime between  _currdateStart and _currdateEnd;

						#当日返给所有有效代理的返佣总和
						select IFNULL(SUM(nReturnAmount),0) into @totalnReturnAmount from table_webdata_appproxdata sorts 
						where nClubId=_nClubID and tEndTime between  _currdateStart and _currdateEnd;

						insert into Table_WebData_AppProxReturnAmount(nClubId,nIsTest,validProxy,validProxyAdd,activeProxy,nValidBet,nReturnAmount,tEndTime)
						values(_nClubId,_nIsTest,@nValidPlayerCount,@nValidPlayerCountAdd,@activePlayerCount,@totalnValidBet,@totalnReturnAmount,_currdateStart);
															

			#结束游标循环
			end loop;
			#关闭游标 
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_CommonData
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_CommonData`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_CommonData`(
		
)
begin 
			
			declare $startTime varchar(20) default  DATE_SUB(CURDATE(),INTERVAL 1 DAY) ;
			
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');

			#统计比赛报名费
			call Pro_WebData_Fee(_currdateStart,_currdateEnd);

			#用户行为分析：会员首次、末次游戏时间，首次充值时间数据同步----------从库执行  第一步
			call Pro_WebData_Analysis_FirstRecord(CURDATE());	
			#用户行为分析：新会员留存、游戏玩家转化、新增付费充值转化-数据同步---从库执行  第一步执行完成再执行第二步
			call Pro_WebData_Analysis_DataStati(CURDATE());		

			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);

			set @sqlStr=CONCAT("insert into Table_WebData_PlayerGameHome
						(nClubId,nGameType,nServerId,nPlayerId,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,detail.nGameType,detail.nServerId,detail.nPlayerId,SUM(detail.nBetScore) nBetScore,
						SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID,nGameType,nServerId,nPlayerId");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			
			update Table_WebData_PlayerGameHome report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nIsTest=temp.nIsTest;
			
			

			
			set @sqlStr1=CONCAT("insert into Table_WebData_Game
						(nClubId,nGameType,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,detail.nGameType,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber, count(DISTINCT(nPlayerID)) nGameNumber,
						SUM(detail.nBetScore) nBetScore,SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID,nGameType");
			PREPARE stmt_name1 FROM @sqlStr1; 
			EXECUTE stmt_name1;
			DEALLOCATE PREPARE stmt_name1;	
			
			update Table_WebData_Game report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nIsTest=temp.nIsTest;

			
			set @sqlStr2=CONCAT("update Table_WebData_Game report join 
			(
					select nClubID,nGameType,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
					GROUP BY nClubID,nGameType
			)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
						set report.nWinTabCount=temp.nWinTabCount");
			PREPARE stmt_name2 FROM @sqlStr2; 
			EXECUTE stmt_name2;
			DEALLOCATE PREPARE stmt_name2;	


			
			set @sqlStr3=CONCAT("update Table_WebData_Game report join 
			(
					select nClubID,nGameType,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
					GROUP BY nClubID,nGameType
			)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
						set report.nLoseTabCount=temp.nLoseTabCount");
			PREPARE stmt_name3 FROM @sqlStr3; 
			EXECUTE stmt_name3;
			DEALLOCATE PREPARE stmt_name3;	


			
			set @sqlStr4=CONCAT("insert into Table_WebData_Proxy
						(nClubId,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber, count(DISTINCT(nPlayerID)) nGameNumber,
						SUM(detail.nBetScore) nBetScore,SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID");
			PREPARE stmt_name4 FROM @sqlStr4; 
			EXECUTE stmt_name4;
			DEALLOCATE PREPARE stmt_name4;	

			
			update Table_WebData_Proxy report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nIsTest=temp.nIsTest;
			
			set @sqlStr5=CONCAT("update Table_WebData_Proxy report join 
			(
					select nClubID,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
					GROUP BY nClubID
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nWinTabCount=temp.nWinTabCount");
			PREPARE stmt_name5 FROM @sqlStr5; 
			EXECUTE stmt_name5;
			DEALLOCATE PREPARE stmt_name5;


			
			set @sqlStr6=CONCAT("update Table_WebData_Proxy report join 
			(
					select nClubID,count(szToken) nLoseTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
					GROUP BY nClubID
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nLoseTabCount=temp.nLoseTabCount");
			PREPARE stmt_name6 FROM @sqlStr6; 
			EXECUTE stmt_name6;
			DEALLOCATE PREPARE stmt_name6;
		


		
		set @sqlStr7=CONCAT("insert into Table_WebData_PlayerScore(
								nClubId,nPlayerId,nUpScore,nDownScore,nGameWinScore,
								nGameLoseScore,nCashUpScore,nCashDownScore,
								nRechargeAmount,nWithdrawalAmount,nTaskAmount,
								nReturnAmount,nActivityAmount,matchFee,returnMatchFee,matchAmount,tEndTime)
		select nClubId,nPlayerID,
					sum(case when nType=1  then nAmount else 0  end) 'nUpScore',
					sum(case when nType=2  then nAmount else 0  end) 'nDownScore',
					sum(case when nType=5  then nAmount else 0  end) 'nGameWinScore',
					sum(case when nType=6  then nAmount else 0  end) 'nGameLoseScore',
					sum(case when nType=20 then nAmount else 0  end) 'nCashUpScore',
					sum(case when nType=21 then nAmount else 0  end) 'nCashDownScore',
					sum(case when nType=23 then nAmount else 0  end) 'nRechargeAmount',
					sum(case when nType=28 then nAmount else 0  end) 'nWithdrawalAmount',
					sum(case when nType=24 then nAmount else 0  end) 'nTaskAmount',
					sum(case when nType=26 then nAmount else 0  end) 'nReturnAmount',
					sum(case when nType=29 then nAmount else 0  end) 'nActivityAmount',
					sum(case when nType=30 then nAmount else 0  end) 'matchFee',
					sum(case when nType=31 then nAmount else 0  end) 'returnMatchFee',
					sum(case when nType=32 then nAmount else 0  end) 'matchAmount',
					'",_currdateStart,"' tEndTime 
		from (
						select clubid nClubId,nPlayerID,nAmount,nType
						from (
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=1		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=2		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=5		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=6		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=20	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=21	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=23	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=28	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=24	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=26	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=29
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=30
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=31
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=32	
						)temp 
		)temp1 GROUP BY nClubId,nPlayerID");
		PREPARE stmt_name7 FROM @sqlStr7; 
		EXECUTE stmt_name7;
		DEALLOCATE PREPARE stmt_name7;
		
		update Table_WebData_PlayerScore report join 
		(
				select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
				set report.nIsTest=temp.nIsTest;
		
		set @sqlStr8=CONCAT("update Table_WebData_PlayerScore report join 
		(
				select clubid nClubId,nPlayerID,count(1) nRechargeCount,'",_currdateStart,"' tEndTime
				from  ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=23
				GROUP BY clubid,nPlayerID
		)temp on report.nClubId=temp.nClubId and report.nPlayerID=temp.nPlayerID  and report.tEndTime=temp.tEndTime
					set report.nRechargeCount=temp.nRechargeCount");
		PREPARE stmt_name8 FROM @sqlStr8; 
		EXECUTE stmt_name8;
		DEALLOCATE PREPARE stmt_name8;

		
		set @sqlStr9=CONCAT("update Table_WebData_PlayerScore report join 
		(
				select clubid nClubId,nPlayerID,count(1) nWithdrawalCount,'",_currdateStart,"' tEndTime
				from  ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=28
				GROUP BY clubid,nPlayerID
		)temp on report.nClubId=temp.nClubId and report.nPlayerID=temp.nPlayerID  and report.tEndTime=temp.tEndTime
					set report.nWithdrawalCount=temp.nWithdrawalCount");
		PREPARE stmt_name9 FROM @sqlStr9; 
		EXECUTE stmt_name9;
		DEALLOCATE PREPARE stmt_name9;
		

		
		insert into Table_WebData_OperationRep(nClubId,nIsTest,nUserName,proxyType,nLevel,tEndTime)
		select nClubId,isTest,UserName,GameProxyType,nLevel,_currdateStart tEndTime from admin_proxy where ProxyType=1;

		
		update Table_WebData_OperationRep report join 
		(
				select  nClubId,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
				from  Table_WebData_Proxy where tEndTime BETWEEN _currdateStart AND _currdateEnd
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRoundTabCount=temp.nRoundTabCount,report.nRoundNumber=temp.nRoundNumber,
							report.nGameNumber=temp.nGameNumber,report.nBetScore=temp.nBetScore,
							report.nValidBet=temp.nValidBet,report.nResultMoney=temp.nResultMoney,
							report.nTax=temp.nTax;

		
		update Table_WebData_OperationRep report join 
		(
				select  nClubId,SUM(nRechargeAmount) nRechargeAmount,SUM(nWithdrawalAmount) nWithdrawalAmount,
								SUM(nUpScore) nUpScore,SUM(nDownScore) nDownScore,SUM(nTaskAmount) nTaskAmount,
								SUM(nActivityAmount) nActivityAmount,SUM(nReturnAmount) nReturnAmount,
								SUM(matchFee) matchFee,SUM(returnMatchFee) returnMatchFee,SUM(matchAmount) matchAmount,
								_currdateStart tEndTime
				from  Table_WebData_PlayerScore where tEndTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeAmount=temp.nRechargeAmount,report.nWithdrawalAmount=temp.nWithdrawalAmount,
							report.nUpScore=temp.nUpScore,report.nDownScore=temp.nDownScore,
							report.nTaskAmount=temp.nTaskAmount,report.nActivityAmount=temp.nActivityAmount,
							report.nReturnAmount=temp.nReturnAmount,
							report.matchFee=temp.matchFee,report.returnMatchFee=temp.returnMatchFee,
							report.matchAmount=temp.matchAmount;

		
		update Table_WebData_OperationRep report join 
		(
				select nClubId,count(nPlayerID) addnPlayer,_currdateStart tEndTime from table_clubmember 
				where tJoinTime BETWEEN _currdateStart AND _currdateEnd and nLevel>1 and bRobot=0 
				GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.addnPlayer=temp.addnPlayer;

			#游戏人数【金币+比赛】
			update Table_WebData_OperationRep report join 
			(
						select nClubId,count(nPlayerId) nGameNumber, _currdateStart tEndTime 
						from table_webdata_analysis_firstgamehelp 
						where lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd
						GROUP BY nClubId	
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nGameNumber=temp.nGameNumber;
			#有效新增【金币+比赛】
			update Table_WebData_OperationRep report join 
			(
						select nClubId,count(nPlayerId) validAddnPlayer, _currdateStart tEndTime 
						from table_webdata_analysis_firstgamehelp 
						where firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd
						GROUP BY nClubId	
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.validAddnPlayer=temp.validAddnPlayer;
		
		
		update Table_WebData_OperationRep report join 
		(
				select nClubID,count(DISTINCT(nPlayerId)) loginPlayer,_currdateStart tEndTime from table_web_loginlog 
				where nClubId in(select nClubId from admin_proxy where proxyType=1) and szTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.loginPlayer=temp.loginPlayer;
		


		
		insert into Table_WebData_MothRep(nClubId,nIsTest,nUserName,proxyType,nLevel,nRechargeAmount,nWithdrawalAmount,nUpScore,nDownScore,
					nCashUpScore,nCashDownScore,nBetScore,nValidBet,nResultMoney,nTax,nTaskAmount,nActivityAmount,nReturnAmount,
					matchFee,returnMatchFee,matchAmount,tEndTime)
		select nClubId,nIsTest,nUserName,proxyType,nLevel,nRechargeAmount,nWithdrawalAmount,nUpScore,nDownScore,
					nCashUpScore,nCashDownScore,nBetScore,nValidBet,nResultMoney,nTax,nTaskAmount,nActivityAmount,nReturnAmount,
					matchFee,returnMatchFee,matchAmount,_currdateStart tEndTime 
		from Table_WebData_OperationRep where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		


		
		
		insert into Table_WebData_WinLoseGame(nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,
					 nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime 
		from Table_WebData_Game where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		
		update Table_WebData_WinLoseGame report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;

		
		insert into Table_WebData_WinLoseGameHome(nClubId,nGameType,nServerId,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nGameType,nServerId,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,SUM(nResultMoney) nResultMoney,SUM(nTax) nTax,_currdateStart tEndTime 
		from Table_WebData_PlayerGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd
		GROUP BY nClubId,nGameType,nServerId;
		
		update Table_WebData_WinLoseGameHome report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;



		set @sqlStr11=CONCAT("update Table_WebData_WinLoseGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber,
								count(DISTINCT(nPlayerID)) nGameNumber,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID  and report.tEndTime=temp.tEndTime
					set report.nGameNumber=temp.nGameNumber,report.nRoundTabCount=temp.nRoundTabCount,report.nRoundNumber=temp.nRoundNumber");
		PREPARE stmt_name11 FROM @sqlStr11; 
		EXECUTE stmt_name11;
		DEALLOCATE PREPARE stmt_name11;


		

		
		insert into Table_WebData_PlayerStatisGame(nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,nWinTabCount,nLoseTabCount,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,nWinTabCount,nLoseTabCount,
								nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
		from Table_WebData_Game where tEndTime BETWEEN _currdateStart AND _currdateEnd;

		
		update Table_WebData_PlayerStatisGame report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;
		


		

		insert into Table_WebData_PlayerStatisGameHome(nClubId,nIsTest,nUserName,proxyType,nLevel,nGameType,nServerId,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nUserName,proxyType,nLevel,nGameType,nServerId,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
		from Table_WebData_WinLoseGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd;  


		set @sqlStr12=CONCAT("update Table_WebData_PlayerStatisGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID and report.tEndTime=temp.tEndTime
					set report.nWinTabCount=temp.nWinTabCount");
		PREPARE stmt_name12 FROM @sqlStr12; 
		EXECUTE stmt_name12;
		DEALLOCATE PREPARE stmt_name12;

		set @sqlStr13=CONCAT("update Table_WebData_PlayerStatisGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID and report.tEndTime=temp.tEndTime
					set report.nLoseTabCount=temp.nLoseTabCount");
		PREPARE stmt_name13 FROM @sqlStr13; 
		EXECUTE stmt_name13;
		DEALLOCATE PREPARE stmt_name13;
		

		
		insert into Table_WebData_EveryDayTotal
							(nClubId,nIsTest,nUserName,proxyType,nLevel,addnPlayer,validAddnPlayer,loginPlayer,nGameNumber,nUpScore,nDownScore,nCashUpScore,
							nCashDownScore,nRechargeAmount,nWithdrawalAmount,nTaskAmount,nActivityAmount,
							nReturnAmount,nBetScore,nValidBet,nResultMoney,nTax,matchFee,returnMatchFee,matchAmount,tEndTime)
		select 		nClubID,nIsTest,nUserName,proxyType,nLevel,addnPlayer,validAddnPlayer,loginPlayer,nGameNumber,nUpScore,nDownScore,nCashUpScore,
							nCashDownScore,nRechargeAmount,nWithdrawalAmount,nTaskAmount,nActivityAmount,
							nReturnAmount,nBetScore,nValidBet,nResultMoney,nTax,matchFee,returnMatchFee,matchAmount,_currdateStart tEndTime
		from Table_WebData_OperationRep  where tEndTime BETWEEN _currdateStart AND _currdateEnd;

		
		update Table_WebData_EveryDayTotal report join 
		(
				select nClubId,SUM(nRechargeCount) nRechargeCount,SUM(nWithdrawalCount) nWithdrawalCount,_currdateStart tEndTime
				from Table_WebData_PlayerScore
				where tEndTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId 
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeCount=temp.nRechargeCount,report.nWithdrawalCount=temp.nWithdrawalCount;


		set @sqlStr14=CONCAT("update Table_WebData_EveryDayTotal report join 
		(
				select clubid nClubId,count(DISTINCT(nPlayerID)) nRechargeNumber,'",_currdateStart,"' tEndTime
				from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' AND nType=23 
				GROUP BY clubid
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeNumber=temp.nRechargeNumber");
		PREPARE stmt_name14 FROM @sqlStr14; 
		EXECUTE stmt_name14;
		DEALLOCATE PREPARE stmt_name14;


		set @sqlStr15=CONCAT("update Table_WebData_EveryDayTotal report join 
		(
				select clubid nClubId,count(DISTINCT(nPlayerID)) nWithdrawalNumber,'",_currdateStart,"' tEndTime
				from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' AND nType=28 
				GROUP BY clubid
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nWithdrawalNumber=temp.nWithdrawalNumber");
		PREPARE stmt_name15 FROM @sqlStr15; 
		EXECUTE stmt_name15;
		DEALLOCATE PREPARE stmt_name15;
		
		

		
		
		insert into Table_WebData_PlayerDataSort(nClubId,nIsTest,nPlayerId,nUpScore,nDownScore,nCashUpScore,nCashDownScore,nRechargeCount,nRechargeAmount,
								nWithdrawalCount,nWithdrawalAmount,nTaskAmount,nActivityAmount,nReturnAmount,matchFee,returnMatchFee,matchAmount,tEndTime)
		select nClubId,nIsTest,nPlayerId,nUpScore,nDownScore,nCashUpScore,nCashDownScore,nRechargeCount,nRechargeAmount,
								nWithdrawalCount,nWithdrawalAmount,nTaskAmount,nActivityAmount,nReturnAmount,matchFee,returnMatchFee,matchAmount,_currdateStart tEndTime
		from Table_WebData_PlayerScore  where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		
		update Table_WebData_PlayerDataSort report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;

		
		insert into Table_WebData_PlayerGameDataSort(nClubId,nIsTest,nGameType,nPlayerId,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nPlayerId,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,SUM(nResultMoney) nResultMoney,SUM(nTax) nTax,_currdateStart tEndTime 
		from  Table_WebData_PlayerGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd 
		GROUP BY nClubId,nGameType,nPlayerId;
		
		
		update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;
		

		set @sqlStr16=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nRound,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId  and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nRound=temp.nRound");
		PREPARE stmt_name16 FROM @sqlStr16; 
		EXECUTE stmt_name16;
		DEALLOCATE PREPARE stmt_name16;
		

		set @sqlStr17=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nWinTabCount=temp.nWinTabCount");
		PREPARE stmt_name17 FROM @sqlStr17; 
		EXECUTE stmt_name17;
		DEALLOCATE PREPARE stmt_name17;
		

		set @sqlStr18=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nLoseTabCount=temp.nLoseTabCount");
		PREPARE stmt_name18 FROM @sqlStr18; 
		EXECUTE stmt_name18;
		DEALLOCATE PREPARE stmt_name18;
		

		

		
		insert into Table_WebData_H5ProxData(nClubId,nIsTest,nUserName,nUpUserId,tEndTime)
		select nClubId,isTest,UserName,UserPId,_currdateStart tEndTime from admin_proxy where ProxyType=1 and GameProxyType=1;
		
		update Table_WebData_H5ProxData report join 
		(
				select userId,nClubId,userName,isTest nIsTest,_currdateStart tEndTime  from admin_proxy where ProxyType=1 and GameProxyType=1
		)temp on report.nUpUserId=temp.userId and report.tEndTime=temp.tEndTime
					set report.nUpnClubId=temp.nClubId,report.nUpUserName=temp.userName,report.nIsTest=temp.nIsTest;

		
		update Table_WebData_H5ProxData report join 
		(
				select nClubID,addnPlayer,validAddnPlayer,_currdateStart tEndTime  from table_webdata_operationrep where tEndTime between _currdateStart and _currdateEnd
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.addnPlayer=temp.addnPlayer,report.validAddnPlayer=temp.validAddnPlayer;

		
		update Table_WebData_H5ProxData report join 
		(
				select 	nClubID,IFNULL(SUM(nUpScore),0) nUpScore,IFNULL(SUM(nDownScore),0) nDownScore,IFNULL(SUM(nTaskAmount),0) nTaskAmount,
								IFNULL(SUM(nActivityAmount),0) nActivityAmount,
								IFNULL(SUM(matchFee),0) matchFee,IFNULL(SUM(returnMatchFee),0) returnMatchFee,IFNULL(SUM(matchAmount),0) matchAmount,
								_currdateStart tEndTime 
				from Table_WebData_PlayerScore where tEndTime between _currdateStart and _currdateEnd
				GROUP BY nClubID
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.nUpScore=temp.nUpScore,report.nDownScore=temp.nDownScore,
							report.nTaskAmount=temp.nTaskAmount,report.nActivityAmount=temp.nActivityAmount,
							report.matchFee=temp.matchFee,report.returnMatchFee=temp.returnMatchFee,report.matchAmount=temp.matchAmount;

		
		update Table_WebData_H5ProxData report join 
		(
				select nClubID,IFNULL(SUM(nBetScore),0) nBetScore,IFNULL(SUM(nValidBet),0) nValidBet,IFNULL(SUM(nResultMoney),0) nResultMoney,
							 IFNULL(SUM(nTax),0) nTax,_currdateStart tEndTime 
				from Table_WebData_Proxy where tEndTime between _currdateStart and _currdateEnd
				GROUP BY nClubID
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.nBetScore=temp.nBetScore,report.nValidBet=temp.nValidBet,
							report.nResultMoney=temp.nResultMoney,report.nTax=temp.nTax;
		
		
		insert into Table_WebData_H5ProxLineData(nClubId,nIsTest,nUsername,nUpUserId,nUpUserName,nUpnClubId,tEndTime)
		select nClubId,nIsTest,nUsername,nUpUserId,nUpUserName,nUpnClubId,tEndTime from Table_WebData_H5ProxData where tEndTime between _currdateStart and _currdateEnd;
		call Pro_WebData_H5ProxLineData(_currdateStart);
		

		
		call Pro_WebData_AppProxData(_currdateStart);
		

		
		insert into  Table_WebData_AppProxDataLine(nClubId,nIsTest,nUserName,nPlayerId,nExLevel,nExtenId,tEndTime)
		select nClubId,nIsTest,nUserName,nPlayerId,nExLevel,nExtenId,tEndTime 
		from Table_WebData_AppProxData where tEndTime between _currdateStart and _currdateEnd;				
		
		call Pro_WebData_AppProxDataLine(_currdateStart);
		
		call Pro_WebData_AppProxDataLineSum(_currdateStart);		
		
		call Pro_WebData_AppTotalReturnAmount(_currdateStart);
		
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_CommonData20200427
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_CommonData20200427`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_CommonData20200427`(
			in $startTime varchar(20)
)
begin 
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');

			#统计比赛报名费
			call Pro_WebData_Fee(_currdateStart,_currdateEnd);

			#用户行为分析：会员首次、末次游戏时间，首次充值时间数据同步----------从库执行  第一步
			set @currDate=DATE_SUB(DATE_FORMAT($startTime,'%Y-%m-%d'),INTERVAL -1 DAY) ;
			call Pro_WebData_Analysis_FirstRecord(@currDate);	
			#用户行为分析：新会员留存、游戏玩家转化、新增付费充值转化-数据同步---从库执行  第一步执行完成再执行第二步
			call Pro_WebData_Analysis_DataStati(@currDate);

			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);

			set @sqlStr=CONCAT("insert into Table_WebData_PlayerGameHome
						(nClubId,nGameType,nServerId,nPlayerId,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,detail.nGameType,detail.nServerId,detail.nPlayerId,SUM(detail.nBetScore) nBetScore,
						SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID,nGameType,nServerId,nPlayerId");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			
			update Table_WebData_PlayerGameHome report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nIsTest=temp.nIsTest;
			
			

			
			set @sqlStr1=CONCAT("insert into Table_WebData_Game
						(nClubId,nGameType,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,detail.nGameType,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber, count(DISTINCT(nPlayerID)) nGameNumber,
						SUM(detail.nBetScore) nBetScore,SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID,nGameType");
			PREPARE stmt_name1 FROM @sqlStr1; 
			EXECUTE stmt_name1;
			DEALLOCATE PREPARE stmt_name1;	
			
			update Table_WebData_Game report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nIsTest=temp.nIsTest;

			
			set @sqlStr2=CONCAT("update Table_WebData_Game report join 
			(
					select nClubID,nGameType,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
					GROUP BY nClubID,nGameType
			)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
						set report.nWinTabCount=temp.nWinTabCount");
			PREPARE stmt_name2 FROM @sqlStr2; 
			EXECUTE stmt_name2;
			DEALLOCATE PREPARE stmt_name2;	


			
			set @sqlStr3=CONCAT("update Table_WebData_Game report join 
			(
					select nClubID,nGameType,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
					GROUP BY nClubID,nGameType
			)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
						set report.nLoseTabCount=temp.nLoseTabCount");
			PREPARE stmt_name3 FROM @sqlStr3; 
			EXECUTE stmt_name3;
			DEALLOCATE PREPARE stmt_name3;	


			
			set @sqlStr4=CONCAT("insert into Table_WebData_Proxy
						(nClubId,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber, count(DISTINCT(nPlayerID)) nGameNumber,
						SUM(detail.nBetScore) nBetScore,SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID");
			PREPARE stmt_name4 FROM @sqlStr4; 
			EXECUTE stmt_name4;
			DEALLOCATE PREPARE stmt_name4;	

			
			update Table_WebData_Proxy report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nIsTest=temp.nIsTest;
			
			set @sqlStr5=CONCAT("update Table_WebData_Proxy report join 
			(
					select nClubID,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
					GROUP BY nClubID
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nWinTabCount=temp.nWinTabCount");
			PREPARE stmt_name5 FROM @sqlStr5; 
			EXECUTE stmt_name5;
			DEALLOCATE PREPARE stmt_name5;


			
			set @sqlStr6=CONCAT("update Table_WebData_Proxy report join 
			(
					select nClubID,count(szToken) nLoseTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
					GROUP BY nClubID
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nLoseTabCount=temp.nLoseTabCount");
			PREPARE stmt_name6 FROM @sqlStr6; 
			EXECUTE stmt_name6;
			DEALLOCATE PREPARE stmt_name6;
		


		
		set @sqlStr7=CONCAT("insert into Table_WebData_PlayerScore(
								nClubId,nPlayerId,nUpScore,nDownScore,nGameWinScore,
								nGameLoseScore,nCashUpScore,nCashDownScore,
								nRechargeAmount,nWithdrawalAmount,nTaskAmount,
								nReturnAmount,nActivityAmount,matchFee,returnMatchFee,matchAmount,tEndTime)
		select nClubId,nPlayerID,
					sum(case when nType=1  then nAmount else 0  end) 'nUpScore',
					sum(case when nType=2  then nAmount else 0  end) 'nDownScore',
					sum(case when nType=5  then nAmount else 0  end) 'nGameWinScore',
					sum(case when nType=6  then nAmount else 0  end) 'nGameLoseScore',
					sum(case when nType=20 then nAmount else 0  end) 'nCashUpScore',
					sum(case when nType=21 then nAmount else 0  end) 'nCashDownScore',
					sum(case when nType=23 then nAmount else 0  end) 'nRechargeAmount',
					sum(case when nType=28 then nAmount else 0  end) 'nWithdrawalAmount',
					sum(case when nType=24 then nAmount else 0  end) 'nTaskAmount',
					sum(case when nType=26 then nAmount else 0  end) 'nReturnAmount',
					sum(case when nType=29 then nAmount else 0  end) 'nActivityAmount',
					sum(case when nType=30 then nAmount else 0  end) 'matchFee',
					sum(case when nType=31 then nAmount else 0  end) 'returnMatchFee',
					sum(case when nType=32 then nAmount else 0  end) 'matchAmount',
					'",_currdateStart,"' tEndTime 
		from (
						select clubid nClubId,nPlayerID,nAmount,nType
						from (
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=1		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=2		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=5		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=6		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=20	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=21	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=23	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=28	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=24	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=26	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=29
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=30
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=31
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=32	
						)temp 
		)temp1 GROUP BY nClubId,nPlayerID");
		PREPARE stmt_name7 FROM @sqlStr7; 
		EXECUTE stmt_name7;
		DEALLOCATE PREPARE stmt_name7;
		
		update Table_WebData_PlayerScore report join 
		(
				select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
				set report.nIsTest=temp.nIsTest;
		
		set @sqlStr8=CONCAT("update Table_WebData_PlayerScore report join 
		(
				select clubid nClubId,nPlayerID,count(1) nRechargeCount,'",_currdateStart,"' tEndTime
				from  ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=23
				GROUP BY clubid,nPlayerID
		)temp on report.nClubId=temp.nClubId and report.nPlayerID=temp.nPlayerID  and report.tEndTime=temp.tEndTime
					set report.nRechargeCount=temp.nRechargeCount");
		PREPARE stmt_name8 FROM @sqlStr8; 
		EXECUTE stmt_name8;
		DEALLOCATE PREPARE stmt_name8;

		
		set @sqlStr9=CONCAT("update Table_WebData_PlayerScore report join 
		(
				select clubid nClubId,nPlayerID,count(1) nWithdrawalCount,'",_currdateStart,"' tEndTime
				from  ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=28
				GROUP BY clubid,nPlayerID
		)temp on report.nClubId=temp.nClubId and report.nPlayerID=temp.nPlayerID  and report.tEndTime=temp.tEndTime
					set report.nWithdrawalCount=temp.nWithdrawalCount");
		PREPARE stmt_name9 FROM @sqlStr9; 
		EXECUTE stmt_name9;
		DEALLOCATE PREPARE stmt_name9;
		

		
		insert into Table_WebData_OperationRep(nClubId,nIsTest,nUserName,proxyType,nLevel,tEndTime)
		select nClubId,isTest,UserName,GameProxyType,nLevel,_currdateStart tEndTime from admin_proxy where ProxyType=1;

		
		update Table_WebData_OperationRep report join 
		(
				select  nClubId,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
				from  Table_WebData_Proxy where tEndTime BETWEEN _currdateStart AND _currdateEnd
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRoundTabCount=temp.nRoundTabCount,report.nRoundNumber=temp.nRoundNumber,
							report.nGameNumber=temp.nGameNumber,report.nBetScore=temp.nBetScore,
							report.nValidBet=temp.nValidBet,report.nResultMoney=temp.nResultMoney,
							report.nTax=temp.nTax;

		
		update Table_WebData_OperationRep report join 
		(
				select  nClubId,SUM(nRechargeAmount) nRechargeAmount,SUM(nWithdrawalAmount) nWithdrawalAmount,
								SUM(nUpScore) nUpScore,SUM(nDownScore) nDownScore,SUM(nTaskAmount) nTaskAmount,
								SUM(nActivityAmount) nActivityAmount,SUM(nReturnAmount) nReturnAmount,
								SUM(matchFee) matchFee,SUM(returnMatchFee) returnMatchFee,SUM(matchAmount) matchAmount,
								_currdateStart tEndTime
				from  Table_WebData_PlayerScore where tEndTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeAmount=temp.nRechargeAmount,report.nWithdrawalAmount=temp.nWithdrawalAmount,
							report.nUpScore=temp.nUpScore,report.nDownScore=temp.nDownScore,
							report.nTaskAmount=temp.nTaskAmount,report.nActivityAmount=temp.nActivityAmount,
							report.nReturnAmount=temp.nReturnAmount,
							report.matchFee=temp.matchFee,report.returnMatchFee=temp.returnMatchFee,
							report.matchAmount=temp.matchAmount;

		
		update Table_WebData_OperationRep report join 
		(
				select nClubId,count(nPlayerID) addnPlayer,_currdateStart tEndTime from table_clubmember 
				where tJoinTime BETWEEN _currdateStart AND _currdateEnd and nLevel>1 and bRobot=0 
				GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.addnPlayer=temp.addnPlayer;

		#游戏人数【金币+比赛】
		update Table_WebData_OperationRep report join 
		(
					select nClubId,count(nPlayerId) nGameNumber, _currdateStart tEndTime 
					from table_webdata_analysis_firstgamehelp 
					where lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd
					GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nGameNumber=temp.nGameNumber;	

		#有效新增【金币+比赛】
		update Table_WebData_OperationRep report join 
		(
					select nClubId,count(nPlayerId) validAddnPlayer, _currdateStart tEndTime 
					from table_webdata_analysis_firstgamehelp 
					where firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd
					GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.validAddnPlayer=temp.validAddnPlayer;			
		
		update Table_WebData_OperationRep report join 
		(
				select nClubID,count(DISTINCT(nPlayerId)) loginPlayer,_currdateStart tEndTime from table_web_loginlog 
				where nClubId in(select nClubId from admin_proxy where proxyType=1) and szTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.loginPlayer=temp.loginPlayer;
		


		
		insert into Table_WebData_MothRep(nClubId,nIsTest,nUserName,proxyType,nLevel,nRechargeAmount,nWithdrawalAmount,nUpScore,nDownScore,
					nCashUpScore,nCashDownScore,nBetScore,nValidBet,nResultMoney,nTax,nTaskAmount,nActivityAmount,nReturnAmount,
					matchFee,returnMatchFee,matchAmount,tEndTime)
		select nClubId,nIsTest,nUserName,proxyType,nLevel,nRechargeAmount,nWithdrawalAmount,nUpScore,nDownScore,
					nCashUpScore,nCashDownScore,nBetScore,nValidBet,nResultMoney,nTax,nTaskAmount,nActivityAmount,nReturnAmount,
					matchFee,returnMatchFee,matchAmount,_currdateStart tEndTime 
		from Table_WebData_OperationRep where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		


		
		
		insert into Table_WebData_WinLoseGame(nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,
					 nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime 
		from Table_WebData_Game where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		
		update Table_WebData_WinLoseGame report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;

		
		insert into Table_WebData_WinLoseGameHome(nClubId,nGameType,nServerId,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nGameType,nServerId,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,SUM(nResultMoney) nResultMoney,SUM(nTax) nTax,_currdateStart tEndTime 
		from Table_WebData_PlayerGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd
		GROUP BY nClubId,nGameType,nServerId;
		
		update Table_WebData_WinLoseGameHome report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;



		set @sqlStr11=CONCAT("update Table_WebData_WinLoseGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber,
								count(DISTINCT(nPlayerID)) nGameNumber,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID  and report.tEndTime=temp.tEndTime
					set report.nGameNumber=temp.nGameNumber,report.nRoundTabCount=temp.nRoundTabCount,report.nRoundNumber=temp.nRoundNumber");
		PREPARE stmt_name11 FROM @sqlStr11; 
		EXECUTE stmt_name11;
		DEALLOCATE PREPARE stmt_name11;


		

		
		insert into Table_WebData_PlayerStatisGame(nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,nWinTabCount,nLoseTabCount,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,nWinTabCount,nLoseTabCount,
								nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
		from Table_WebData_Game where tEndTime BETWEEN _currdateStart AND _currdateEnd;

		
		update Table_WebData_PlayerStatisGame report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;
		


		

		insert into Table_WebData_PlayerStatisGameHome(nClubId,nIsTest,nUserName,proxyType,nLevel,nGameType,nServerId,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nUserName,proxyType,nLevel,nGameType,nServerId,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
		from Table_WebData_WinLoseGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd;  


		set @sqlStr12=CONCAT("update Table_WebData_PlayerStatisGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID and report.tEndTime=temp.tEndTime
					set report.nWinTabCount=temp.nWinTabCount");
		PREPARE stmt_name12 FROM @sqlStr12; 
		EXECUTE stmt_name12;
		DEALLOCATE PREPARE stmt_name12;

		set @sqlStr13=CONCAT("update Table_WebData_PlayerStatisGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID and report.tEndTime=temp.tEndTime
					set report.nLoseTabCount=temp.nLoseTabCount");
		PREPARE stmt_name13 FROM @sqlStr13; 
		EXECUTE stmt_name13;
		DEALLOCATE PREPARE stmt_name13;
		

		
		insert into Table_WebData_EveryDayTotal
							(nClubId,nIsTest,nUserName,proxyType,nLevel,addnPlayer,validAddnPlayer,loginPlayer,nGameNumber,nUpScore,nDownScore,nCashUpScore,
							nCashDownScore,nRechargeAmount,nWithdrawalAmount,nTaskAmount,nActivityAmount,
							nReturnAmount,nBetScore,nValidBet,nResultMoney,nTax,matchFee,returnMatchFee,matchAmount,tEndTime)
		select 		nClubID,nIsTest,nUserName,proxyType,nLevel,addnPlayer,validAddnPlayer,loginPlayer,nGameNumber,nUpScore,nDownScore,nCashUpScore,
							nCashDownScore,nRechargeAmount,nWithdrawalAmount,nTaskAmount,nActivityAmount,
							nReturnAmount,nBetScore,nValidBet,nResultMoney,nTax,matchFee,returnMatchFee,matchAmount,_currdateStart tEndTime
		from Table_WebData_OperationRep  where tEndTime BETWEEN _currdateStart AND _currdateEnd;

		
		update Table_WebData_EveryDayTotal report join 
		(
				select nClubId,SUM(nRechargeCount) nRechargeCount,SUM(nWithdrawalCount) nWithdrawalCount,_currdateStart tEndTime
				from Table_WebData_PlayerScore
				where tEndTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId 
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeCount=temp.nRechargeCount,report.nWithdrawalCount=temp.nWithdrawalCount;


		set @sqlStr14=CONCAT("update Table_WebData_EveryDayTotal report join 
		(
				select clubid nClubId,count(DISTINCT(nPlayerID)) nRechargeNumber,'",_currdateStart,"' tEndTime
				from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' AND nType=23 
				GROUP BY clubid
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeNumber=temp.nRechargeNumber");
		PREPARE stmt_name14 FROM @sqlStr14; 
		EXECUTE stmt_name14;
		DEALLOCATE PREPARE stmt_name14;


		set @sqlStr15=CONCAT("update Table_WebData_EveryDayTotal report join 
		(
				select clubid nClubId,count(DISTINCT(nPlayerID)) nWithdrawalNumber,'",_currdateStart,"' tEndTime
				from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' AND nType=28 
				GROUP BY clubid
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nWithdrawalNumber=temp.nWithdrawalNumber");
		PREPARE stmt_name15 FROM @sqlStr15; 
		EXECUTE stmt_name15;
		DEALLOCATE PREPARE stmt_name15;
		
		

		
		
		insert into Table_WebData_PlayerDataSort(nClubId,nIsTest,nPlayerId,nUpScore,nDownScore,nCashUpScore,nCashDownScore,nRechargeCount,nRechargeAmount,
								nWithdrawalCount,nWithdrawalAmount,nTaskAmount,nActivityAmount,nReturnAmount,matchFee,returnMatchFee,matchAmount,tEndTime)
		select nClubId,nIsTest,nPlayerId,nUpScore,nDownScore,nCashUpScore,nCashDownScore,nRechargeCount,nRechargeAmount,
								nWithdrawalCount,nWithdrawalAmount,nTaskAmount,nActivityAmount,nReturnAmount,matchFee,returnMatchFee,matchAmount,_currdateStart tEndTime
		from Table_WebData_PlayerScore  where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		
		update Table_WebData_PlayerDataSort report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;

		
		insert into Table_WebData_PlayerGameDataSort(nClubId,nIsTest,nGameType,nPlayerId,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nPlayerId,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,SUM(nResultMoney) nResultMoney,SUM(nTax) nTax,_currdateStart tEndTime 
		from  Table_WebData_PlayerGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd 
		GROUP BY nClubId,nGameType,nPlayerId;
		
		
		update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;
		

		set @sqlStr16=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nRound,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId  and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nRound=temp.nRound");
		PREPARE stmt_name16 FROM @sqlStr16; 
		EXECUTE stmt_name16;
		DEALLOCATE PREPARE stmt_name16;
		

		set @sqlStr17=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nWinTabCount=temp.nWinTabCount");
		PREPARE stmt_name17 FROM @sqlStr17; 
		EXECUTE stmt_name17;
		DEALLOCATE PREPARE stmt_name17;
		

		set @sqlStr18=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nLoseTabCount=temp.nLoseTabCount");
		PREPARE stmt_name18 FROM @sqlStr18; 
		EXECUTE stmt_name18;
		DEALLOCATE PREPARE stmt_name18;
		

		

		
		insert into Table_WebData_H5ProxData(nClubId,nIsTest,nUserName,nUpUserId,tEndTime)
		select nClubId,isTest,UserName,UserPId,_currdateStart tEndTime from admin_proxy where ProxyType=1 and GameProxyType=1;
		
		update Table_WebData_H5ProxData report join 
		(
				select userId,nClubId,userName,isTest nIsTest,_currdateStart tEndTime  from admin_proxy where ProxyType=1 and GameProxyType=1
		)temp on report.nUpUserId=temp.userId and report.tEndTime=temp.tEndTime
					set report.nUpnClubId=temp.nClubId,report.nUpUserName=temp.userName,report.nIsTest=temp.nIsTest;

		
		update Table_WebData_H5ProxData report join 
		(
				select nClubID,addnPlayer,validAddnPlayer,_currdateStart tEndTime  from table_webdata_operationrep where tEndTime between _currdateStart and _currdateEnd
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.addnPlayer=temp.addnPlayer,report.validAddnPlayer=temp.validAddnPlayer;

		
		update Table_WebData_H5ProxData report join 
		(
				select 	nClubID,IFNULL(SUM(nUpScore),0) nUpScore,IFNULL(SUM(nDownScore),0) nDownScore,IFNULL(SUM(nTaskAmount),0) nTaskAmount,
								IFNULL(SUM(nActivityAmount),0) nActivityAmount,
								IFNULL(SUM(matchFee),0) matchFee,IFNULL(SUM(returnMatchFee),0) returnMatchFee,IFNULL(SUM(matchAmount),0) matchAmount,
								_currdateStart tEndTime 
				from Table_WebData_PlayerScore where tEndTime between _currdateStart and _currdateEnd
				GROUP BY nClubID
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.nUpScore=temp.nUpScore,report.nDownScore=temp.nDownScore,
							report.nTaskAmount=temp.nTaskAmount,report.nActivityAmount=temp.nActivityAmount,
							report.matchFee=temp.matchFee,report.returnMatchFee=temp.returnMatchFee,report.matchAmount=temp.matchAmount;

		
		update Table_WebData_H5ProxData report join 
		(
				select nClubID,IFNULL(SUM(nBetScore),0) nBetScore,IFNULL(SUM(nValidBet),0) nValidBet,IFNULL(SUM(nResultMoney),0) nResultMoney,
							 IFNULL(SUM(nTax),0) nTax,_currdateStart tEndTime 
				from Table_WebData_Proxy where tEndTime between _currdateStart and _currdateEnd
				GROUP BY nClubID
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.nBetScore=temp.nBetScore,report.nValidBet=temp.nValidBet,
							report.nResultMoney=temp.nResultMoney,report.nTax=temp.nTax;
		
		
		insert into Table_WebData_H5ProxLineData(nClubId,nIsTest,nUsername,nUpUserId,nUpUserName,nUpnClubId,tEndTime)
		select nClubId,nIsTest,nUsername,nUpUserId,nUpUserName,nUpnClubId,tEndTime from Table_WebData_H5ProxData where tEndTime between _currdateStart and _currdateEnd;
		call Pro_WebData_H5ProxLineData(_currdateStart);
		

		
		call Pro_WebData_AppProxData(_currdateStart);
		

		
		insert into  Table_WebData_AppProxDataLine(nClubId,nIsTest,nUserName,nPlayerId,nExLevel,nExtenId,tEndTime)
		select nClubId,nIsTest,nUserName,nPlayerId,nExLevel,nExtenId,tEndTime 
		from Table_WebData_AppProxData where tEndTime between _currdateStart and _currdateEnd;				
		
		call Pro_WebData_AppProxDataLine(_currdateStart);
		
		call Pro_WebData_AppProxDataLineSum(_currdateStart);
		
		call Pro_WebData_AppTotalReturnAmount(_currdateStart);

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_CommonData20200427_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_CommonData20200427_Pre`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_CommonData20200427_Pre`(
			in $startTime varchar(20)
)
begin 
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
		
			#统计比赛报名费
			call Pro_WebData_Fee(_currdateStart,_currdateEnd);

		 	#用户行为分析：会员首次、末次游戏时间，首次充值时间数据同步----------从库执行  第一步
			set @currDate=DATE_SUB(DATE_FORMAT($startTime,'%Y-%m-%d'),INTERVAL -1 DAY) ;
			call Pro_WebData_Analysis_FirstRecord(@currDate);	
			#用户行为分析：新会员留存、游戏玩家转化、新增付费充值转化-数据同步---从库执行  第一步执行完成再执行第二步
			call Pro_WebData_Analysis_DataStati(@currDate);

			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);

			set @sqlStr=CONCAT("insert into Table_WebData_PlayerGameHome
						(nClubId,nGameType,nServerId,nPlayerId,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,detail.nGameType,detail.nServerId,detail.nPlayerId,SUM(detail.nBetScore) nBetScore,
						SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID,nGameType,nServerId,nPlayerId");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			
			update Table_WebData_PlayerGameHome report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nIsTest=temp.nIsTest;
			
			

			
			set @sqlStr1=CONCAT("insert into Table_WebData_Game
						(nClubId,nGameType,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,detail.nGameType,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber, count(DISTINCT(nPlayerID)) nGameNumber,
						SUM(detail.nBetScore) nBetScore,SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID,nGameType");
			PREPARE stmt_name1 FROM @sqlStr1; 
			EXECUTE stmt_name1;
			DEALLOCATE PREPARE stmt_name1;	
			
			update Table_WebData_Game report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nIsTest=temp.nIsTest;

			
			set @sqlStr2=CONCAT("update Table_WebData_Game report join 
			(
					select nClubID,nGameType,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
					GROUP BY nClubID,nGameType
			)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
						set report.nWinTabCount=temp.nWinTabCount");
			PREPARE stmt_name2 FROM @sqlStr2; 
			EXECUTE stmt_name2;
			DEALLOCATE PREPARE stmt_name2;	


			
			set @sqlStr3=CONCAT("update Table_WebData_Game report join 
			(
					select nClubID,nGameType,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
					GROUP BY nClubID,nGameType
			)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
						set report.nLoseTabCount=temp.nLoseTabCount");
			PREPARE stmt_name3 FROM @sqlStr3; 
			EXECUTE stmt_name3;
			DEALLOCATE PREPARE stmt_name3;	


			
			set @sqlStr4=CONCAT("insert into Table_WebData_Proxy
						(nClubId,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber, count(DISTINCT(nPlayerID)) nGameNumber,
						SUM(detail.nBetScore) nBetScore,SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID");
			PREPARE stmt_name4 FROM @sqlStr4; 
			EXECUTE stmt_name4;
			DEALLOCATE PREPARE stmt_name4;	

			
			update Table_WebData_Proxy report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nIsTest=temp.nIsTest;
			
			set @sqlStr5=CONCAT("update Table_WebData_Proxy report join 
			(
					select nClubID,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
					GROUP BY nClubID
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nWinTabCount=temp.nWinTabCount");
			PREPARE stmt_name5 FROM @sqlStr5; 
			EXECUTE stmt_name5;
			DEALLOCATE PREPARE stmt_name5;


			
			set @sqlStr6=CONCAT("update Table_WebData_Proxy report join 
			(
					select nClubID,count(szToken) nLoseTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
					GROUP BY nClubID
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nLoseTabCount=temp.nLoseTabCount");
			PREPARE stmt_name6 FROM @sqlStr6; 
			EXECUTE stmt_name6;
			DEALLOCATE PREPARE stmt_name6;
		


		
		set @sqlStr7=CONCAT("insert into Table_WebData_PlayerScore(
								nClubId,nPlayerId,nUpScore,nDownScore,nGameWinScore,
								nGameLoseScore,nCashUpScore,nCashDownScore,
								nRechargeAmount,nWithdrawalAmount,nTaskAmount,
								nReturnAmount,nActivityAmount,tEndTime)
		select nClubId,nPlayerID,
					sum(case when nType=1  then nAmount else 0  end) 'nUpScore',
					sum(case when nType=2  then nAmount else 0  end) 'nDownScore',
					sum(case when nType=5  then nAmount else 0  end) 'nGameWinScore',
					sum(case when nType=6  then nAmount else 0  end) 'nGameLoseScore',
					sum(case when nType=20 then nAmount else 0  end) 'nCashUpScore',
					sum(case when nType=21 then nAmount else 0  end) 'nCashDownScore',
					sum(case when nType=23 then nAmount else 0  end) 'nRechargeAmount',
					sum(case when nType=28 then nAmount else 0  end) 'nWithdrawalAmount',
					sum(case when nType=24 then nAmount else 0  end) 'nTaskAmount',
					sum(case when nType=26 then nAmount else 0  end) 'nReturnAmount',
					sum(case when nType=29 then nAmount else 0  end) 'nActivityAmount',
					'",_currdateStart,"' tEndTime 
		from (
						select clubid nClubId,nPlayerID,nAmount,nType
						from (
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=1		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=2		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=5		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=6		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=20	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=21	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=23	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=28	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=24	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=26	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=29	
						)temp 
		)temp1 GROUP BY nClubId,nPlayerID");
		PREPARE stmt_name7 FROM @sqlStr7; 
		EXECUTE stmt_name7;
		DEALLOCATE PREPARE stmt_name7;
		
		update Table_WebData_PlayerScore report join 
		(
				select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
				set report.nIsTest=temp.nIsTest;
		
		set @sqlStr8=CONCAT("update Table_WebData_PlayerScore report join 
		(
				select clubid nClubId,nPlayerID,count(1) nRechargeCount,'",_currdateStart,"' tEndTime
				from  ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=23
				GROUP BY clubid,nPlayerID
		)temp on report.nClubId=temp.nClubId and report.nPlayerID=temp.nPlayerID  and report.tEndTime=temp.tEndTime
					set report.nRechargeCount=temp.nRechargeCount");
		PREPARE stmt_name8 FROM @sqlStr8; 
		EXECUTE stmt_name8;
		DEALLOCATE PREPARE stmt_name8;

		
		set @sqlStr9=CONCAT("update Table_WebData_PlayerScore report join 
		(
				select clubid nClubId,nPlayerID,count(1) nWithdrawalCount,'",_currdateStart,"' tEndTime
				from  ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=28
				GROUP BY clubid,nPlayerID
		)temp on report.nClubId=temp.nClubId and report.nPlayerID=temp.nPlayerID  and report.tEndTime=temp.tEndTime
					set report.nWithdrawalCount=temp.nWithdrawalCount");
		PREPARE stmt_name9 FROM @sqlStr9; 
		EXECUTE stmt_name9;
		DEALLOCATE PREPARE stmt_name9;
		

		
		insert into Table_WebData_OperationRep(nClubId,nIsTest,nUserName,proxyType,nLevel,tEndTime)
		select nClubId,isTest,UserName,GameProxyType,nLevel,_currdateStart tEndTime from admin_proxy where ProxyType=1;

		
		update Table_WebData_OperationRep report join 
		(
				select  nClubId,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
				from  Table_WebData_Proxy where tEndTime BETWEEN _currdateStart AND _currdateEnd
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRoundTabCount=temp.nRoundTabCount,report.nRoundNumber=temp.nRoundNumber,
							report.nGameNumber=temp.nGameNumber,report.nBetScore=temp.nBetScore,
							report.nValidBet=temp.nValidBet,report.nResultMoney=temp.nResultMoney,
							report.nTax=temp.nTax;

		
		update Table_WebData_OperationRep report join 
		(
				select  nClubId,SUM(nRechargeAmount) nRechargeAmount,SUM(nWithdrawalAmount) nWithdrawalAmount,
								SUM(nUpScore) nUpScore,SUM(nDownScore) nDownScore,SUM(nTaskAmount) nTaskAmount,
								SUM(nActivityAmount) nActivityAmount,SUM(nReturnAmount) nReturnAmount,_currdateStart tEndTime
				from  Table_WebData_PlayerScore where tEndTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeAmount=temp.nRechargeAmount,report.nWithdrawalAmount=temp.nWithdrawalAmount,
							report.nUpScore=temp.nUpScore,report.nDownScore=temp.nDownScore,
							report.nTaskAmount=temp.nTaskAmount,report.nActivityAmount=temp.nActivityAmount,
							report.nReturnAmount=temp.nReturnAmount;

		
		update Table_WebData_OperationRep report join 
		(
				select nClubId,count(nPlayerID) addnPlayer,_currdateStart tEndTime from table_clubmember 
				where tJoinTime BETWEEN _currdateStart AND _currdateEnd and nLevel>1 and bRobot=0 
				GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.addnPlayer=temp.addnPlayer;
		#游戏人数【金币+比赛】
		update Table_WebData_OperationRep report join 
		(
					select nClubId,count(nPlayerId) nGameNumber, _currdateStart tEndTime 
					from table_webdata_analysis_firstgamehelp 
					where  lastGameTime>=_currdateStart and  lastGameTime<=_currdateEnd
					GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nGameNumber=temp.nGameNumber;	
		#有效新增【金币+比赛】
		update Table_WebData_OperationRep report join 
		(
					select nClubId,count(nPlayerId) validAddnPlayer, _currdateStart tEndTime 
					from table_webdata_analysis_firstgamehelp 
					where firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd
					GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.validAddnPlayer=temp.validAddnPlayer;		
		
		update Table_WebData_OperationRep report join 
		(
				select nClubID,count(DISTINCT(nPlayerId)) loginPlayer,_currdateStart tEndTime from table_web_loginlog 
				where nClubId in(select nClubId from admin_proxy where proxyType=1) and szTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.loginPlayer=temp.loginPlayer;
		


		
		insert into Table_WebData_MothRep(nClubId,nIsTest,nUserName,proxyType,nLevel,nRechargeAmount,nWithdrawalAmount,nUpScore,nDownScore,
					nCashUpScore,nCashDownScore,nBetScore,nValidBet,nResultMoney,nTax,nTaskAmount,nActivityAmount,nReturnAmount,tEndTime)
		select nClubId,nIsTest,nUserName,proxyType,nLevel,nRechargeAmount,nWithdrawalAmount,nUpScore,nDownScore,
					nCashUpScore,nCashDownScore,nBetScore,nValidBet,nResultMoney,nTax,nTaskAmount,nActivityAmount,nReturnAmount,_currdateStart tEndTime 
		from Table_WebData_OperationRep where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		


		
		
		insert into Table_WebData_WinLoseGame(nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,
					 nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime 
		from Table_WebData_Game where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		
		update Table_WebData_WinLoseGame report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;

		
		insert into Table_WebData_WinLoseGameHome(nClubId,nGameType,nServerId,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nGameType,nServerId,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,SUM(nResultMoney) nResultMoney,SUM(nTax) nTax,_currdateStart tEndTime 
		from Table_WebData_PlayerGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd
		GROUP BY nClubId,nGameType,nServerId;
		
		update Table_WebData_WinLoseGameHome report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;



		set @sqlStr11=CONCAT("update Table_WebData_WinLoseGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber,
								count(DISTINCT(nPlayerID)) nGameNumber,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID  and report.tEndTime=temp.tEndTime
					set report.nGameNumber=temp.nGameNumber,report.nRoundTabCount=temp.nRoundTabCount,report.nRoundNumber=temp.nRoundNumber");
		PREPARE stmt_name11 FROM @sqlStr11; 
		EXECUTE stmt_name11;
		DEALLOCATE PREPARE stmt_name11;


		

		
		insert into Table_WebData_PlayerStatisGame(nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,nWinTabCount,nLoseTabCount,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,nWinTabCount,nLoseTabCount,
								nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
		from Table_WebData_Game where tEndTime BETWEEN _currdateStart AND _currdateEnd;

		
		update Table_WebData_PlayerStatisGame report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;
		


		

		insert into Table_WebData_PlayerStatisGameHome(nClubId,nIsTest,nUserName,proxyType,nLevel,nGameType,nServerId,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nUserName,proxyType,nLevel,nGameType,nServerId,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
		from Table_WebData_WinLoseGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd;  


		set @sqlStr12=CONCAT("update Table_WebData_PlayerStatisGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID and report.tEndTime=temp.tEndTime
					set report.nWinTabCount=temp.nWinTabCount");
		PREPARE stmt_name12 FROM @sqlStr12; 
		EXECUTE stmt_name12;
		DEALLOCATE PREPARE stmt_name12;

		set @sqlStr13=CONCAT("update Table_WebData_PlayerStatisGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID and report.tEndTime=temp.tEndTime
					set report.nLoseTabCount=temp.nLoseTabCount");
		PREPARE stmt_name13 FROM @sqlStr13; 
		EXECUTE stmt_name13;
		DEALLOCATE PREPARE stmt_name13;
		

		
		insert into Table_WebData_EveryDayTotal
							(nClubId,nIsTest,nUserName,proxyType,nLevel,addnPlayer,validAddnPlayer,loginPlayer,nGameNumber,nUpScore,nDownScore,nCashUpScore,
							nCashDownScore,nRechargeAmount,nWithdrawalAmount,nTaskAmount,nActivityAmount,
							nReturnAmount,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select 		nClubID,nIsTest,nUserName,proxyType,nLevel,addnPlayer,validAddnPlayer,loginPlayer,nGameNumber,nUpScore,nDownScore,nCashUpScore,
							nCashDownScore,nRechargeAmount,nWithdrawalAmount,nTaskAmount,nActivityAmount,
							nReturnAmount,nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
		from Table_WebData_OperationRep  where tEndTime BETWEEN _currdateStart AND _currdateEnd;

		
		update Table_WebData_EveryDayTotal report join 
		(
				select nClubId,SUM(nRechargeCount) nRechargeCount,SUM(nWithdrawalCount) nWithdrawalCount,_currdateStart tEndTime
				from Table_WebData_PlayerScore
				where tEndTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId 
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeCount=temp.nRechargeCount,report.nWithdrawalCount=temp.nWithdrawalCount;


		set @sqlStr14=CONCAT("update Table_WebData_EveryDayTotal report join 
		(
				select clubid nClubId,count(DISTINCT(nPlayerID)) nRechargeNumber,'",_currdateStart,"' tEndTime
				from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' AND nType=23 
				GROUP BY clubid
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeNumber=temp.nRechargeNumber");
		PREPARE stmt_name14 FROM @sqlStr14; 
		EXECUTE stmt_name14;
		DEALLOCATE PREPARE stmt_name14;


		set @sqlStr15=CONCAT("update Table_WebData_EveryDayTotal report join 
		(
				select clubid nClubId,count(DISTINCT(nPlayerID)) nWithdrawalNumber,'",_currdateStart,"' tEndTime
				from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' AND nType=28 
				GROUP BY clubid
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nWithdrawalNumber=temp.nWithdrawalNumber");
		PREPARE stmt_name15 FROM @sqlStr15; 
		EXECUTE stmt_name15;
		DEALLOCATE PREPARE stmt_name15;
		
		

		
		
		insert into Table_WebData_PlayerDataSort(nClubId,nIsTest,nPlayerId,nUpScore,nDownScore,nCashUpScore,nCashDownScore,nRechargeCount,nRechargeAmount,
								nWithdrawalCount,nWithdrawalAmount,nTaskAmount,nActivityAmount,nReturnAmount,tEndTime)
		select nClubId,nIsTest,nPlayerId,nUpScore,nDownScore,nCashUpScore,nCashDownScore,nRechargeCount,nRechargeAmount,
								nWithdrawalCount,nWithdrawalAmount,nTaskAmount,nActivityAmount,nReturnAmount,_currdateStart tEndTime
		from Table_WebData_PlayerScore  where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		
		update Table_WebData_PlayerDataSort report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;

		
		insert into Table_WebData_PlayerGameDataSort(nClubId,nIsTest,nGameType,nPlayerId,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nPlayerId,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,SUM(nResultMoney) nResultMoney,SUM(nTax) nTax,_currdateStart tEndTime 
		from  Table_WebData_PlayerGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd 
		GROUP BY nClubId,nGameType,nPlayerId;
		
		
		update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;
		

		set @sqlStr16=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nRound,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId  and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nRound=temp.nRound");
		PREPARE stmt_name16 FROM @sqlStr16; 
		EXECUTE stmt_name16;
		DEALLOCATE PREPARE stmt_name16;
		

		set @sqlStr17=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nWinTabCount=temp.nWinTabCount");
		PREPARE stmt_name17 FROM @sqlStr17; 
		EXECUTE stmt_name17;
		DEALLOCATE PREPARE stmt_name17;
		

		set @sqlStr18=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nLoseTabCount=temp.nLoseTabCount");
		PREPARE stmt_name18 FROM @sqlStr18; 
		EXECUTE stmt_name18;
		DEALLOCATE PREPARE stmt_name18;
		

		

		
		insert into Table_WebData_H5ProxData(nClubId,nIsTest,nUserName,nUpUserId,tEndTime)
		select nClubId,isTest,UserName,UserPId,_currdateStart tEndTime from admin_proxy where ProxyType=1 and GameProxyType=1;
		
		update Table_WebData_H5ProxData report join 
		(
				select userId,nClubId,userName,isTest nIsTest,_currdateStart tEndTime  from admin_proxy where ProxyType=1 and GameProxyType=1
		)temp on report.nUpUserId=temp.userId and report.tEndTime=temp.tEndTime
					set report.nUpnClubId=temp.nClubId,report.nUpUserName=temp.userName,report.nIsTest=temp.nIsTest;

		
		update Table_WebData_H5ProxData report join 
		(
				select nClubID,addnPlayer,validAddnPlayer,_currdateStart tEndTime  from table_webdata_operationrep where tEndTime between _currdateStart and _currdateEnd
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.addnPlayer=temp.addnPlayer,report.validAddnPlayer=temp.validAddnPlayer;

		
		update Table_WebData_H5ProxData report join 
		(
				select nClubID,IFNULL(SUM(nUpScore),0) nUpScore,IFNULL(SUM(nDownScore),0) nDownScore,IFNULL(SUM(nTaskAmount),0) nTaskAmount,
							 IFNULL(SUM(nActivityAmount),0) nActivityAmount,_currdateStart tEndTime 
				from Table_WebData_PlayerScore where tEndTime between _currdateStart and _currdateEnd
				GROUP BY nClubID
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.nUpScore=temp.nUpScore,report.nDownScore=temp.nDownScore,
							report.nTaskAmount=temp.nTaskAmount,report.nActivityAmount=temp.nActivityAmount;

		
		update Table_WebData_H5ProxData report join 
		(
				select nClubID,IFNULL(SUM(nBetScore),0) nBetScore,IFNULL(SUM(nValidBet),0) nValidBet,IFNULL(SUM(nResultMoney),0) nResultMoney,
							 IFNULL(SUM(nTax),0) nTax,_currdateStart tEndTime 
				from Table_WebData_Proxy where tEndTime between _currdateStart and _currdateEnd
				GROUP BY nClubID
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.nBetScore=temp.nBetScore,report.nValidBet=temp.nValidBet,
							report.nResultMoney=temp.nResultMoney,report.nTax=temp.nTax;
		
		
		insert into Table_WebData_H5ProxLineData(nClubId,nIsTest,nUsername,nUpUserId,nUpUserName,nUpnClubId,tEndTime)
		select nClubId,nIsTest,nUsername,nUpUserId,nUpUserName,nUpnClubId,tEndTime from Table_WebData_H5ProxData where tEndTime between _currdateStart and _currdateEnd;
		call Pro_WebData_H5ProxLineData(_currdateStart);
		

		
		call Pro_WebData_AppProxData(_currdateStart);
		

		
		insert into  Table_WebData_AppProxDataLine(nClubId,nIsTest,nUserName,nPlayerId,nExLevel,nExtenId,tEndTime)
		select nClubId,nIsTest,nUserName,nPlayerId,nExLevel,nExtenId,tEndTime 
		from Table_WebData_AppProxData where tEndTime between _currdateStart and _currdateEnd;				
		
		call Pro_WebData_AppProxDataLine(_currdateStart);
		
		call Pro_WebData_AppProxDataLineSum(_currdateStart);
		
		call Pro_WebData_AppTotalReturnAmount(_currdateStart);

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_CommonData_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_CommonData_Pre`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_CommonData_Pre`(
		
)
begin 
			
			declare $startTime varchar(20) default  DATE_SUB(CURDATE(),INTERVAL 1 DAY) ;
			
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');


			#统计比赛报名费
			call Pro_WebData_Fee(_currdateStart,_currdateEnd);

			#用户行为分析：会员首次、末次游戏时间，首次充值时间数据同步----------从库执行  第一步
			call Pro_WebData_Analysis_FirstRecord(CURDATE());	
			#用户行为分析：新会员留存、游戏玩家转化、新增付费充值转化-数据同步---从库执行  第一步执行完成再执行第二步
			call Pro_WebData_Analysis_DataStati(CURDATE());	

			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);

			set @sqlStr=CONCAT("insert into Table_WebData_PlayerGameHome
						(nClubId,nGameType,nServerId,nPlayerId,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,detail.nGameType,detail.nServerId,detail.nPlayerId,SUM(detail.nBetScore) nBetScore,
						SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID,nGameType,nServerId,nPlayerId");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			
			update Table_WebData_PlayerGameHome report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nIsTest=temp.nIsTest;
			
			

			
			set @sqlStr1=CONCAT("insert into Table_WebData_Game
						(nClubId,nGameType,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,detail.nGameType,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber, count(DISTINCT(nPlayerID)) nGameNumber,
						SUM(detail.nBetScore) nBetScore,SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID,nGameType");
			PREPARE stmt_name1 FROM @sqlStr1; 
			EXECUTE stmt_name1;
			DEALLOCATE PREPARE stmt_name1;	
			
			update Table_WebData_Game report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nIsTest=temp.nIsTest;

			
			set @sqlStr2=CONCAT("update Table_WebData_Game report join 
			(
					select nClubID,nGameType,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
					GROUP BY nClubID,nGameType
			)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
						set report.nWinTabCount=temp.nWinTabCount");
			PREPARE stmt_name2 FROM @sqlStr2; 
			EXECUTE stmt_name2;
			DEALLOCATE PREPARE stmt_name2;	


			
			set @sqlStr3=CONCAT("update Table_WebData_Game report join 
			(
					select nClubID,nGameType,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
					GROUP BY nClubID,nGameType
			)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
						set report.nLoseTabCount=temp.nLoseTabCount");
			PREPARE stmt_name3 FROM @sqlStr3; 
			EXECUTE stmt_name3;
			DEALLOCATE PREPARE stmt_name3;	


			
			set @sqlStr4=CONCAT("insert into Table_WebData_Proxy
						(nClubId,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
			select  
						detail.nClubID,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber, count(DISTINCT(nPlayerID)) nGameNumber,
						SUM(detail.nBetScore) nBetScore,SUM(detail.nValidBet) nValidBet,SUM(detail.nResultMoney) nResultMoney,SUM(detail.nTax) nTax,'",_currdateStart,"' tEndTime
			from ",@table_clubgamescoredetail," detail
			where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
			GROUP BY nClubID");
			PREPARE stmt_name4 FROM @sqlStr4; 
			EXECUTE stmt_name4;
			DEALLOCATE PREPARE stmt_name4;	

			
			update Table_WebData_Proxy report join 
			(
					select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nIsTest=temp.nIsTest;
			
			set @sqlStr5=CONCAT("update Table_WebData_Proxy report join 
			(
					select nClubID,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
					GROUP BY nClubID
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nWinTabCount=temp.nWinTabCount");
			PREPARE stmt_name5 FROM @sqlStr5; 
			EXECUTE stmt_name5;
			DEALLOCATE PREPARE stmt_name5;


			
			set @sqlStr6=CONCAT("update Table_WebData_Proxy report join 
			(
					select nClubID,count(szToken) nLoseTabCount,'",_currdateStart,"' tEndTime
					from ",@table_clubgamescoredetail," detail
					where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
					GROUP BY nClubID
			)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nLoseTabCount=temp.nLoseTabCount");
			PREPARE stmt_name6 FROM @sqlStr6; 
			EXECUTE stmt_name6;
			DEALLOCATE PREPARE stmt_name6;
		


		
		set @sqlStr7=CONCAT("insert into Table_WebData_PlayerScore(
								nClubId,nPlayerId,nUpScore,nDownScore,nGameWinScore,
								nGameLoseScore,nCashUpScore,nCashDownScore,
								nRechargeAmount,nWithdrawalAmount,nTaskAmount,
								nReturnAmount,nActivityAmount,tEndTime)
		select nClubId,nPlayerID,
					sum(case when nType=1  then nAmount else 0  end) 'nUpScore',
					sum(case when nType=2  then nAmount else 0  end) 'nDownScore',
					sum(case when nType=5  then nAmount else 0  end) 'nGameWinScore',
					sum(case when nType=6  then nAmount else 0  end) 'nGameLoseScore',
					sum(case when nType=20 then nAmount else 0  end) 'nCashUpScore',
					sum(case when nType=21 then nAmount else 0  end) 'nCashDownScore',
					sum(case when nType=23 then nAmount else 0  end) 'nRechargeAmount',
					sum(case when nType=28 then nAmount else 0  end) 'nWithdrawalAmount',
					sum(case when nType=24 then nAmount else 0  end) 'nTaskAmount',
					sum(case when nType=26 then nAmount else 0  end) 'nReturnAmount',
					sum(case when nType=29 then nAmount else 0  end) 'nActivityAmount',
					'",_currdateStart,"' tEndTime 
		from (
						select clubid nClubId,nPlayerID,nAmount,nType
						from (
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=1		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=2		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=5		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=6		
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=20	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=21	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=23	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=28	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=24	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=26	
								union all
								select clubid,nPlayerID,nAmount,nType from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=29	
						)temp 
		)temp1 GROUP BY nClubId,nPlayerID");
		PREPARE stmt_name7 FROM @sqlStr7; 
		EXECUTE stmt_name7;
		DEALLOCATE PREPARE stmt_name7;
		
		update Table_WebData_PlayerScore report join 
		(
				select nClubID,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
				set report.nIsTest=temp.nIsTest;
		
		set @sqlStr8=CONCAT("update Table_WebData_PlayerScore report join 
		(
				select clubid nClubId,nPlayerID,count(1) nRechargeCount,'",_currdateStart,"' tEndTime
				from  ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=23
				GROUP BY clubid,nPlayerID
		)temp on report.nClubId=temp.nClubId and report.nPlayerID=temp.nPlayerID  and report.tEndTime=temp.tEndTime
					set report.nRechargeCount=temp.nRechargeCount");
		PREPARE stmt_name8 FROM @sqlStr8; 
		EXECUTE stmt_name8;
		DEALLOCATE PREPARE stmt_name8;

		
		set @sqlStr9=CONCAT("update Table_WebData_PlayerScore report join 
		(
				select clubid nClubId,nPlayerID,count(1) nWithdrawalCount,'",_currdateStart,"' tEndTime
				from  ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nType=28
				GROUP BY clubid,nPlayerID
		)temp on report.nClubId=temp.nClubId and report.nPlayerID=temp.nPlayerID  and report.tEndTime=temp.tEndTime
					set report.nWithdrawalCount=temp.nWithdrawalCount");
		PREPARE stmt_name9 FROM @sqlStr9; 
		EXECUTE stmt_name9;
		DEALLOCATE PREPARE stmt_name9;
		

		
		insert into Table_WebData_OperationRep(nClubId,nIsTest,nUserName,proxyType,nLevel,tEndTime)
		select nClubId,isTest,UserName,GameProxyType,nLevel,_currdateStart tEndTime from admin_proxy where ProxyType=1;

		
		update Table_WebData_OperationRep report join 
		(
				select  nClubId,nRoundTabCount,nRoundNumber,nGameNumber,nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
				from  Table_WebData_Proxy where tEndTime BETWEEN _currdateStart AND _currdateEnd
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRoundTabCount=temp.nRoundTabCount,report.nRoundNumber=temp.nRoundNumber,
							report.nGameNumber=temp.nGameNumber,report.nBetScore=temp.nBetScore,
							report.nValidBet=temp.nValidBet,report.nResultMoney=temp.nResultMoney,
							report.nTax=temp.nTax;

		
		update Table_WebData_OperationRep report join 
		(
				select  nClubId,SUM(nRechargeAmount) nRechargeAmount,SUM(nWithdrawalAmount) nWithdrawalAmount,
								SUM(nUpScore) nUpScore,SUM(nDownScore) nDownScore,SUM(nTaskAmount) nTaskAmount,
								SUM(nActivityAmount) nActivityAmount,SUM(nReturnAmount) nReturnAmount,_currdateStart tEndTime
				from  Table_WebData_PlayerScore where tEndTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeAmount=temp.nRechargeAmount,report.nWithdrawalAmount=temp.nWithdrawalAmount,
							report.nUpScore=temp.nUpScore,report.nDownScore=temp.nDownScore,
							report.nTaskAmount=temp.nTaskAmount,report.nActivityAmount=temp.nActivityAmount,
							report.nReturnAmount=temp.nReturnAmount;

		
		update Table_WebData_OperationRep report join 
		(
				select nClubId,count(nPlayerID) addnPlayer,_currdateStart tEndTime from table_clubmember 
				where tJoinTime BETWEEN _currdateStart AND _currdateEnd and nLevel>1 and bRobot=0 
				GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.addnPlayer=temp.addnPlayer;
		#游戏人数【金币+比赛】
		update Table_WebData_OperationRep report join 
		(
					select nClubId,count(nPlayerId) nGameNumber, _currdateStart tEndTime 
					from table_webdata_analysis_firstgamehelp 
					where lastGameTime>=_currdateStart and lastGameTime<=_currdateEnd
					GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.nGameNumber=temp.nGameNumber;
		#有效新增【金币+比赛】
		update Table_WebData_OperationRep report join 
		(
					select nClubId,count(nPlayerId) validAddnPlayer, _currdateStart tEndTime 
					from table_webdata_analysis_firstgamehelp 
					where firstGameTime>=_currdateStart and firstGameTime<=_currdateEnd
					GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
						set report.validAddnPlayer=temp.validAddnPlayer;		
		
		update Table_WebData_OperationRep report join 
		(
				select nClubID,count(DISTINCT(nPlayerId)) loginPlayer,_currdateStart tEndTime from table_web_loginlog 
				where nClubId in(select nClubId from admin_proxy where proxyType=1) and szTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId	
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.loginPlayer=temp.loginPlayer;
		


		
		insert into Table_WebData_MothRep(nClubId,nIsTest,nUserName,proxyType,nLevel,nRechargeAmount,nWithdrawalAmount,nUpScore,nDownScore,
					nCashUpScore,nCashDownScore,nBetScore,nValidBet,nResultMoney,nTax,nTaskAmount,nActivityAmount,nReturnAmount,tEndTime)
		select nClubId,nIsTest,nUserName,proxyType,nLevel,nRechargeAmount,nWithdrawalAmount,nUpScore,nDownScore,
					nCashUpScore,nCashDownScore,nBetScore,nValidBet,nResultMoney,nTax,nTaskAmount,nActivityAmount,nReturnAmount,_currdateStart tEndTime 
		from Table_WebData_OperationRep where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		


		
		
		insert into Table_WebData_WinLoseGame(nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,
					 nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime 
		from Table_WebData_Game where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		
		update Table_WebData_WinLoseGame report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;

		
		insert into Table_WebData_WinLoseGameHome(nClubId,nGameType,nServerId,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nGameType,nServerId,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,SUM(nResultMoney) nResultMoney,SUM(nTax) nTax,_currdateStart tEndTime 
		from Table_WebData_PlayerGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd
		GROUP BY nClubId,nGameType,nServerId;
		
		update Table_WebData_WinLoseGameHome report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;



		set @sqlStr11=CONCAT("update Table_WebData_WinLoseGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(DISTINCT(szToken)) nRoundTabCount,count(szToken) nRoundNumber,
								count(DISTINCT(nPlayerID)) nGameNumber,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID  and report.tEndTime=temp.tEndTime
					set report.nGameNumber=temp.nGameNumber,report.nRoundTabCount=temp.nRoundTabCount,report.nRoundNumber=temp.nRoundNumber");
		PREPARE stmt_name11 FROM @sqlStr11; 
		EXECUTE stmt_name11;
		DEALLOCATE PREPARE stmt_name11;


		

		
		insert into Table_WebData_PlayerStatisGame(nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,nWinTabCount,nLoseTabCount,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nGameNumber,nRoundTabCount,nRoundNumber,nWinTabCount,nLoseTabCount,
								nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
		from Table_WebData_Game where tEndTime BETWEEN _currdateStart AND _currdateEnd;

		
		update Table_WebData_PlayerStatisGame report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;
		


		

		insert into Table_WebData_PlayerStatisGameHome(nClubId,nIsTest,nUserName,proxyType,nLevel,nGameType,nServerId,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nUserName,proxyType,nLevel,nGameType,nServerId,nGameNumber,nRoundTabCount,nRoundNumber,
								nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
		from Table_WebData_WinLoseGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd;  


		set @sqlStr12=CONCAT("update Table_WebData_PlayerStatisGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID and report.tEndTime=temp.tEndTime
					set report.nWinTabCount=temp.nWinTabCount");
		PREPARE stmt_name12 FROM @sqlStr12; 
		EXECUTE stmt_name12;
		DEALLOCATE PREPARE stmt_name12;

		set @sqlStr13=CONCAT("update Table_WebData_PlayerStatisGameHome report join 
		(
				select nClubID,nGameType,nServerID,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
				GROUP BY nClubID,nGameType,nServerID
		)temp on report.nClubId=temp.nClubId and report.nGameType=temp.nGameType and report.nServerID=temp.nServerID and report.tEndTime=temp.tEndTime
					set report.nLoseTabCount=temp.nLoseTabCount");
		PREPARE stmt_name13 FROM @sqlStr13; 
		EXECUTE stmt_name13;
		DEALLOCATE PREPARE stmt_name13;
		

		
		insert into Table_WebData_EveryDayTotal
							(nClubId,nIsTest,nUserName,proxyType,nLevel,addnPlayer,validAddnPlayer,loginPlayer,nGameNumber,nUpScore,nDownScore,nCashUpScore,
							nCashDownScore,nRechargeAmount,nWithdrawalAmount,nTaskAmount,nActivityAmount,
							nReturnAmount,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select 		nClubID,nIsTest,nUserName,proxyType,nLevel,addnPlayer,validAddnPlayer,loginPlayer,nGameNumber,nUpScore,nDownScore,nCashUpScore,
							nCashDownScore,nRechargeAmount,nWithdrawalAmount,nTaskAmount,nActivityAmount,
							nReturnAmount,nBetScore,nValidBet,nResultMoney,nTax,_currdateStart tEndTime
		from Table_WebData_OperationRep  where tEndTime BETWEEN _currdateStart AND _currdateEnd;

		
		update Table_WebData_EveryDayTotal report join 
		(
				select nClubId,SUM(nRechargeCount) nRechargeCount,SUM(nWithdrawalCount) nWithdrawalCount,_currdateStart tEndTime
				from Table_WebData_PlayerScore
				where tEndTime BETWEEN _currdateStart AND _currdateEnd
				GROUP BY nClubId 
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeCount=temp.nRechargeCount,report.nWithdrawalCount=temp.nWithdrawalCount;


		set @sqlStr14=CONCAT("update Table_WebData_EveryDayTotal report join 
		(
				select clubid nClubId,count(DISTINCT(nPlayerID)) nRechargeNumber,'",_currdateStart,"' tEndTime
				from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' AND nType=23 
				GROUP BY clubid
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nRechargeNumber=temp.nRechargeNumber");
		PREPARE stmt_name14 FROM @sqlStr14; 
		EXECUTE stmt_name14;
		DEALLOCATE PREPARE stmt_name14;


		set @sqlStr15=CONCAT("update Table_WebData_EveryDayTotal report join 
		(
				select clubid nClubId,count(DISTINCT(nPlayerID)) nWithdrawalNumber,'",_currdateStart,"' tEndTime
				from ",@table_clublogscore," where CreateTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' AND nType=28 
				GROUP BY clubid
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nWithdrawalNumber=temp.nWithdrawalNumber");
		PREPARE stmt_name15 FROM @sqlStr15; 
		EXECUTE stmt_name15;
		DEALLOCATE PREPARE stmt_name15;
		
		

		
		
		insert into Table_WebData_PlayerDataSort(nClubId,nIsTest,nPlayerId,nUpScore,nDownScore,nCashUpScore,nCashDownScore,nRechargeCount,nRechargeAmount,
								nWithdrawalCount,nWithdrawalAmount,nTaskAmount,nActivityAmount,nReturnAmount,tEndTime)
		select nClubId,nIsTest,nPlayerId,nUpScore,nDownScore,nCashUpScore,nCashDownScore,nRechargeCount,nRechargeAmount,
								nWithdrawalCount,nWithdrawalAmount,nTaskAmount,nActivityAmount,nReturnAmount,_currdateStart tEndTime
		from Table_WebData_PlayerScore  where tEndTime BETWEEN _currdateStart AND _currdateEnd;
		
		update Table_WebData_PlayerDataSort report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;

		
		insert into Table_WebData_PlayerGameDataSort(nClubId,nIsTest,nGameType,nPlayerId,nBetScore,nValidBet,nResultMoney,nTax,tEndTime)
		select nClubId,nIsTest,nGameType,nPlayerId,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,SUM(nResultMoney) nResultMoney,SUM(nTax) nTax,_currdateStart tEndTime 
		from  Table_WebData_PlayerGameHome where tEndTime BETWEEN _currdateStart AND _currdateEnd 
		GROUP BY nClubId,nGameType,nPlayerId;
		
		
		update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,UserName,GameProxyType,nLevel,isTest nIsTest,_currdateStart tEndTime from admin_proxy where proxyType=1
		)temp on report.nClubId=temp.nClubId and report.tEndTime=temp.tEndTime
					set report.nUserName=temp.UserName,report.proxyType=temp.GameProxyType,report.nLevel=temp.nLevel,report.nIsTest=temp.nIsTest;
		

		set @sqlStr16=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nRound,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"'
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId  and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nRound=temp.nRound");
		PREPARE stmt_name16 FROM @sqlStr16; 
		EXECUTE stmt_name16;
		DEALLOCATE PREPARE stmt_name16;
		

		set @sqlStr17=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nWinTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney>0
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nWinTabCount=temp.nWinTabCount");
		PREPARE stmt_name17 FROM @sqlStr17; 
		EXECUTE stmt_name17;
		DEALLOCATE PREPARE stmt_name17;
		

		set @sqlStr18=CONCAT("update Table_WebData_PlayerGameDataSort report join 
		(
				select nClubID,nGameType,nPlayerId,count(nRound) nLoseTabCount,'",_currdateStart,"' tEndTime
				from ",@table_clubgamescoredetail," detail
				where tEndTime BETWEEN '",_currdateStart,"' AND '",_currdateEnd,"' and nResultMoney<0
				GROUP BY nClubID,nGameType,nPlayerId
		)temp on report.nClubId=temp.nClubId and report.nPlayerId=temp.nPlayerId and report.nGameType=temp.nGameType and report.tEndTime=temp.tEndTime
					set report.nLoseTabCount=temp.nLoseTabCount");
		PREPARE stmt_name18 FROM @sqlStr18; 
		EXECUTE stmt_name18;
		DEALLOCATE PREPARE stmt_name18;
		

		

		
		insert into Table_WebData_H5ProxData(nClubId,nIsTest,nUserName,nUpUserId,tEndTime)
		select nClubId,isTest,UserName,UserPId,_currdateStart tEndTime from admin_proxy where ProxyType=1 and GameProxyType=1;
		
		update Table_WebData_H5ProxData report join 
		(
				select userId,nClubId,userName,isTest nIsTest,_currdateStart tEndTime  from admin_proxy where ProxyType=1 and GameProxyType=1
		)temp on report.nUpUserId=temp.userId and report.tEndTime=temp.tEndTime
					set report.nUpnClubId=temp.nClubId,report.nUpUserName=temp.userName,report.nIsTest=temp.nIsTest;

		
		update Table_WebData_H5ProxData report join 
		(
				select nClubID,addnPlayer,validAddnPlayer,_currdateStart tEndTime  from table_webdata_operationrep where tEndTime between _currdateStart and _currdateEnd
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.addnPlayer=temp.addnPlayer,report.validAddnPlayer=temp.validAddnPlayer;

		
		update Table_WebData_H5ProxData report join 
		(
				select nClubID,IFNULL(SUM(nUpScore),0) nUpScore,IFNULL(SUM(nDownScore),0) nDownScore,IFNULL(SUM(nTaskAmount),0) nTaskAmount,
							 IFNULL(SUM(nActivityAmount),0) nActivityAmount,_currdateStart tEndTime 
				from Table_WebData_PlayerScore where tEndTime between _currdateStart and _currdateEnd
				GROUP BY nClubID
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.nUpScore=temp.nUpScore,report.nDownScore=temp.nDownScore,
							report.nTaskAmount=temp.nTaskAmount,report.nActivityAmount=temp.nActivityAmount;

		
		update Table_WebData_H5ProxData report join 
		(
				select nClubID,IFNULL(SUM(nBetScore),0) nBetScore,IFNULL(SUM(nValidBet),0) nValidBet,IFNULL(SUM(nResultMoney),0) nResultMoney,
							 IFNULL(SUM(nTax),0) nTax,_currdateStart tEndTime 
				from Table_WebData_Proxy where tEndTime between _currdateStart and _currdateEnd
				GROUP BY nClubID
		)temp on report.nClubID=temp.nClubID and report.tEndTime=temp.tEndTime
					set report.nBetScore=temp.nBetScore,report.nValidBet=temp.nValidBet,
							report.nResultMoney=temp.nResultMoney,report.nTax=temp.nTax;
		
		
		insert into Table_WebData_H5ProxLineData(nClubId,nIsTest,nUsername,nUpUserId,nUpUserName,nUpnClubId,tEndTime)
		select nClubId,nIsTest,nUsername,nUpUserId,nUpUserName,nUpnClubId,tEndTime from Table_WebData_H5ProxData where tEndTime between _currdateStart and _currdateEnd;
		call Pro_WebData_H5ProxLineData(_currdateStart);
		

		
		call Pro_WebData_AppProxData(_currdateStart);
		

		
		insert into  Table_WebData_AppProxDataLine(nClubId,nIsTest,nUserName,nPlayerId,nExLevel,nExtenId,tEndTime)
		select nClubId,nIsTest,nUserName,nPlayerId,nExLevel,nExtenId,tEndTime 
		from Table_WebData_AppProxData where tEndTime between _currdateStart and _currdateEnd;				
		
		call Pro_WebData_AppProxDataLine(_currdateStart);
		
		call Pro_WebData_AppProxDataLineSum(_currdateStart);		
		
		call Pro_WebData_AppTotalReturnAmount(_currdateStart);

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_Fee
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_Fee`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_Fee`(
	/*
		创建时间:2020-11-12 
		修改时间:2020-11-21 
		功能描述:运营商分成统计【金币报名费、物品报名费、奖励】
	*/
	in $startTime varchar(19),
	in $endTime varchar(19)
)
BEGIN
			#-------------------------------------------------运营商-游戏参与人数---------------------------------------begin
					insert into table_webdata_FeeProxyGame(nClubId,nGameType,nPlayerCount,tEndTime)
					select nClubID,nGameType,count(nPlayerId) counts,$startTime
					from (
									select nClubID,nGameType,nPlayerId from table_match_game_score_detail where tEndTime>=$startTime and tEndTime<=$endTime
									GROUP BY nClubID,nGameType,nPlayerId
							 )temp1 GROUP BY nClubID,nGameType;
			#-------------------------------------------------运营商-游戏参与人数---------------------------------------end



			#-------------------------------------------------运营商参与人数---------------------------------------begin

					insert into table_webdata_FeeProxy(nClubId,nPlayerCount,tEndTime)
					select nClubID,count(nPlayerId) counts,$startTime
					from (
									select nClubID,nPlayerId from table_match_game_score_detail where tEndTime>=$startTime and tEndTime<=$endTime
									GROUP BY nClubID,nPlayerId
							 )temp1 GROUP BY nClubID;

			#-------------------------------------------------运营商参与人数---------------------------------------end
			
			#----------------------------------------------运营商-游戏房间报名费统计---------------------------------------begin
			drop temporary table if exists temp_table_webdata_Fee;  
			create temporary table temp_table_webdata_Fee(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int default 0,
				nGameType int default 0,
				nServerId int default 0,
				matchCount int default 0,
				nPlayerCount int default 0,
				nFeeTotal bigint default 0 COMMENT '总报名费(金币)',
				nFeeGoodsTotal bigint default 0 COMMENT '总报名费(物品)',
				nRewardTotal bigint default 0 COMMENT '总奖励',
				nFeeRate int  DEFAULT 0 COMMENT '金币分成(运营商)',
				nFeeGoodsRate int  DEFAULT 0 COMMENT '物品分成(运营商)',
				nRewardRate int  DEFAULT 0 COMMENT '奖励分成(运营商)'
			);
			#插入临时表
			#积分变更表、物品消耗表
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",$startTime);

			set @sqlStr=CONCAT("	insert into temp_table_webdata_Fee(nClubId,nServerId,nFeeTotal,nFeeGoodsTotal,nRewardTotal)
														select nClubId,nServerId,(nFeeTotal+returnFeeTotal)*-1 nFeeTotal,(nFeeGoodsTotal*-1) nFeeGoodsTotal,nRewardTotal
														from(
																		select nClubId,nServerId,
																							sum(case when nType=30 then nAmount else 0  end) 'nFeeTotal',
																							sum(case when nType=31 then nAmount else 0  end) 'returnFeeTotal',
																							sum(case when nType=32 then nAmount else 0  end) 'nRewardTotal',
																							sum(case when nType=100 then nAmount else 0  end) 'nFeeGoodsTotal',
																							sum(case when nType=101 then nAmount else 0  end) 'nFeeTemp' 
																		from(
																						select nClubId,nAmount,nType,nServerId
																						from (
																										select clubid nClubId,nAmount,nType,nGameId nServerId  from ",@table_clublogscore," where nType=30	
																										union all
																										select clubid nClubId,nAmount,nType,nGameId nServerId from ",@table_clublogscore," where nType=31	
																										union all
																										select clubid nClubId,nAmount,nType,nGameId nServerId from ",@table_clublogscore," where nType=32
																										union all 
																										select nClubId,0 nAmount,101 nType,nServerId from table_match_game_score_detail  proxy where tEndTime>='",$startTime,"' and proxy.tEndTime<='",$endTime,"'
																										union all
																										select nClubId,num nAmount,100 nType,nServerId from table_clubGoodsOperatLog where nGoodsId=1 and (CreateTime between '",$startTime,"'  and '",$endTime,"') and nOperatType=6
																								)temp1
																		)temp2 GROUP BY nClubId,nServerId
														)temp3");
			PREPARE stmt_name FROM @sqlStr;
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			#更新运营商税率至临时表
			update temp_table_webdata_Fee fee join
			(
					select nClubId,nFeeRate,nFeeRateGoods nFeeGoodsRate,nRewardRate 
					from table_match_proxyrate
			)temp on fee.nClubId=temp.nClubId 
						set fee.nFeeRate=temp.nFeeRate,fee.nFeeGoodsRate=temp.nFeeGoodsRate,
								fee.nRewardRate=temp.nRewardRate;

			select count(1) into @totalCount from temp_table_webdata_Fee;
			if @totalCount>0 then 
				set @currId=1;
				while (@currId<=@totalCount) do
						select nClubId,nServerId,nFeeTotal,nFeeGoodsTotal,nRewardTotal,nFeeRate,nFeeGoodsRate,nRewardRate 
						into @nClubId,@nServerId,@nFeeTotal,@nFeeGoodsTotal,@nRewardTotal,@nFeeRate,@nFeeGoodsRate,@nRewardRate 
						from temp_table_webdata_Fee where Id=@currId;

						#游戏类型、举办场次
						set @nGameType=round(@nServerId/100,0);
						select count(szMatchID)  into @matchCount 
						from(
										select szMatchID from table_match_game_score_detail 
										where nClubId=@nClubId and nServerId=@nServerId and tEndTime>=$startTime and tEndTime<=$endTime
										GROUP BY szMatchID
						)temp1;
				
						#参与人数
						select count(nPlayerId) into @nPlayerCount
						from (
										select nPlayerId from table_match_game_score_detail 
										where nClubId=@nClubId and nServerId=@nServerId and tEndTime>=$startTime and tEndTime<=$endTime
										GROUP BY nClubId,nServerId,nPlayerId
								 )temp1;

						#运营商金币分成率、物品分成率、奖励分成率---默认100%
						set @rate_Money=1,@rate_Goods=1,@rate_Reward=1;
						if @nFeeRate>0 then 
								set @rate_Money=TRUNCATE(@nFeeRate/10000,2);
						end if;
						if @nFeeGoodsRate>0 then 
								set @rate_Goods=TRUNCATE(@nFeeGoodsRate/10000,2);
						end if;
						if @nRewardRate>0 then 
								set @rate_Reward=TRUNCATE(@nRewardRate/10000,2);
						end if;
						#计算运营商、公司的金币、物品、奖励（报名费）
						set @nFeeProxy=0,@nFeeGoodsProxy=0,@nRewardProxy=0,
								@nFeeCompany=0,@nFeeGoodsCompany=0,@nRewardCompany=0;
						if @nFeeTotal>0 then 
								set @nFeeProxy=round(@nFeeTotal*@rate_Money,0);
								set @nFeeCompany=@nFeeTotal-@nFeeProxy;
						end if;
						if @nFeeGoodsTotal>0 then 
								set @nFeeGoodsProxy=round(@nFeeGoodsTotal*@rate_Goods,0);
								set @nFeeGoodsCompany=@nFeeGoodsTotal-@nFeeGoodsProxy;
						end if;
						if @nRewardTotal>0 then 
								set @nRewardProxy=round(@nRewardTotal*@rate_Reward,0);
								set @nRewardCompany=@nRewardTotal-@nRewardProxy;
						end if;
						#新增
						insert into table_webdata_Fee(nClubId,nGameType,nServerId,matchCount,nPlayerCount,
																					nFeeTotal,nFeeProxy,nFeeCompany,nFeeRate,
																					nFeeGoodsTotal,nFeeGoodsProxy,nFeeGoodsCompany,nFeeGoodsRate,
																					nRewardTotal,nRewardProxy,nRewardCompany,nRewardRate,tEndTime
																					)
																	 values(@nClubId,@nGameType,@nServerId,@matchCount,@nPlayerCount,
																					@nFeeTotal,@nFeeProxy,@nFeeCompany,@rate_Money*10000,
																					@nFeeGoodsTotal,@nFeeGoodsProxy,@nFeeGoodsCompany,@rate_Goods*10000,
																					@nRewardTotal,@nRewardProxy,@nRewardCompany,@rate_Reward*10000,$startTime);
						set @currId=@currId+1;
				end while;
			end if;
			#----------------------------------------------运营商-游戏房间报名费统计---------------------------------------end

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_H5ProxLineData
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_H5ProxLineData`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_H5ProxLineData`(

	in $startTime varchar(19)
)
begin 
			
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');

			declare _nClubId int default 0;
			
			declare done int default false;
			
			declare cur cursor for select proxy.nClubId from admin_proxy proxy 
														 where proxy.ProxyType=1 and GameProxyType=1;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId;
			
			if done then					
					leave read_loop;    
			end if;
					
					select count(1) into @nNextCount from Table_WebData_H5ProxyLine where nClubID=_nClubId and tJoinTime between _currdateStart and _currdateEnd;

					select SUM(addnPlayer),SUM(validAddnPlayer),SUM(nUpScore),SUM(nDownScore),
								 SUM(nTaskAmount),SUM(nActivityAmount),SUM(nBetScore),SUM(nValidBet), 
								 SUM(nResultMoney),SUM(nTax), SUM(matchFee),SUM(returnMatchFee),SUM(matchAmount)
					into @addnPlayer,@validAddnPlayer,@nUpScore,@nDownScore,
							 @nTaskAmount,@nActivityAmount,@nBetScore,@nValidBet,
							 @nResultMoney,@nTax,@matchFee,@returnMatchFee,@matchAmount 
					from (
									
									select nClubId,addnPlayer,validAddnPlayer,
												 nUpScore,nDownScore,
												 nTaskAmount,nActivityAmount,
												 nBetScore,nValidBet, 
												 nResultMoney,nTax,matchFee,returnMatchFee,matchAmount  
									from Table_WebData_H5ProxData datas where nClubID=_nClubId and tEndTime between _currdateStart and _currdateEnd 
									union all 
									select nClubId, addnPlayer,validAddnPlayer,
																	 nUpScore,nDownScore,
																	 nTaskAmount,nActivityAmount,
																	 nBetScore,nValidBet, 
																	 nResultMoney,nTax,matchFee,returnMatchFee,matchAmount
									from Table_WebData_H5ProxData dat
									where tEndTime between _currdateStart and _currdateEnd 
												and EXISTS(select nClubId from Table_WebData_H5ProxyLine where nClubID=_nClubId and dat.nClubId=nNextID)
					)temp;
				update Table_WebData_H5ProxLineData 
				set nNextCount=@nNextCount,addnPlayer=@addnPlayer,validAddnPlayer=@validAddnPlayer,
						nUpScore=@nUpScore,nDownScore=@nDownScore,
						nTaskAmount=@nTaskAmount,nActivityAmount=@nActivityAmount,											
						nBetScore=@nBetScore,nValidBet=@nValidBet,
						nResultMoney=@nResultMoney,nTax=@nTax,matchFee=@matchFee,returnMatchFee=@returnMatchFee,matchAmount=@matchAmount
				where nClubID=_nClubId and tEndTime between _currdateStart and _currdateEnd;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_H5ProxyLine
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_H5ProxyLine`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_H5ProxyLine`(

)
begin 
			

			declare _nClubId,_UserPId,_tempId int default 0;
			declare _CreateTime varchar(64) default '';
			
			declare done int default false;
			
			declare cur cursor for select nClubId,UserPId,CreateTime from admin_proxy where proxyType=1 and gameProxyType=1;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId,_UserPId,_CreateTime;
			
			if done then					
					leave read_loop;    
			end if;
						set _tempId=_UserPId;
						while _tempId>0 do 

								select nClubId,UserId into @nClubId,@userId  from admin_proxy where UserId=_tempId;
								insert into Table_WebData_H5ProxyLine(nClubID,nNextID,tJoinTime)
								values(@nClubId,_nClubId,_CreateTime);								
								select UserPId into _tempId from admin_proxy where UserId=@userId;
						end while;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_H5ProxyLineById
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_H5ProxyLineById`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_H5ProxyLineById`(

	in $nClubId int
)
begin 
			

			declare _nClubId,_UserPId,_tempId int default 0;
			declare _CreateTime varchar(64) default '';
			
			declare done int default false;
			
			declare cur cursor for select nClubId,UserPId,CreateTime from admin_proxy where nClubId=$nClubId and proxyType=1 and gameProxyType=1;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId,_UserPId,_CreateTime;
			
			if done then					
					leave read_loop;    
			end if;
						set _tempId=_UserPId;
						while _tempId>0 do 

								select nClubId,UserId into @nClubId,@userId  from admin_proxy where UserId=_tempId;
								insert into Table_WebData_H5ProxyLine(nClubID,nNextID,tJoinTime)
								values(@nClubId,_nClubId,_CreateTime);								
								select UserPId into _tempId from admin_proxy where UserId=@userId;
						end while;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_RoomCardFirst
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_RoomCardFirst`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_RoomCardFirst`(
		/*
				Admin房卡首页数据--每天统计
		*/
	in $curdate varchar(19) 
)
BEGIN
			set @startTime=CONCAT(DATE_FORMAT($curdate,'%Y-%m-%d'),' 00:00:00');
			set @endTime=CONCAT(DATE_FORMAT($curdate,'%Y-%m-%d'),' 23:59:59');
			#房卡会员
			set @nClubId=666000;

			#当天登录会员
			set @loginNum=0;
			select count(nPlayerId) into @loginNum
			from(
						select mem.nPlayerId
						from table_league_club_member mem left join table_web_loginlog login on mem.nPlayerId=login.nPlayerId
						where mem.nClubID=@nClubId and login.szTime>=@startTime and login.szTime<=@endTime
						GROUP BY mem.nPlayerId
					)temp1;

			#当天进行游戏的会员
			set @gameNum=0;
			select count(nPlayerId) into @gameNum 
			from (
						select game.nPlayerId from table_league_club_game_score_detail game
						where game.tEndTime>=@startTime and game.tEndTime<=@endTime
						GROUP BY game.nPlayerId
			)temp1; 

			#当天注册会员
			set @addUserNum=0;
			select count(mem.nPlayerId) into @addUserNum 
			from table_league_club_member mem 
			where mem.nClubID=@nClubId and mem.tJoinTime>=@startTime and mem.tJoinTime<=@endTime;

			#有效新增【截止当天第一次游戏】
			set @validAddUserNum=0;
			select count(nPlayerId) into @validAddUserNum from Table_WebData_RoomCardFirstGameHelp 
			where firstGameTime>=@startTime and firstGameTime<=@endTime;

			#当天开房数、局数
			set @openRoomNum=0,@roundNum=0;
			select count(DISTINCT(szToken)),count(roundNum) into @openRoomNum,@roundNum
			from(
						select szToken,count(nRound) roundNum from table_league_club_game_score_detail 
						where tEndTime>=@startTime and tEndTime<=@endTime
						GROUP BY szToken,nRound
					)temp1;
			/*
				nType=1 	部长往俱乐部充值			[-100]
				nType=2 	部长从俱乐部提取			[100]
				nType=3 	俱乐部开房消耗				[-100]
				nType=4 	普通开房消耗					[-100]
				nType=5 	后台加钻							[100]
				nType=6 	后台扣钻							[-100]
				nType=7 	线上商城充值					[100]
				nType=8 	赠送会员钻石					[-100]
				nType=9 	接收会员赠送的钻石		[100]
				nType=10	俱乐部改名						[-100]
				nType=11	俱乐部房退钻					[100]
				nType=12	普通房间退钻					[100]
				nType=13	洗牌扣钻							[-100]
				nType=14	商城道具							[-100]
			*/
			#充值金额--线上、充值人数--线上
			set @recharge=0,@rechargeNum=0;
			select IFNULL(SUM(recharge),0),count(rechargeNum)
			into @recharge,@rechargeNum
			from(
						select SUM(nKindId) recharge,count(nPlayerId) rechargeNum from table_league_diamond_log where nType=7 and CreateTime>=@startTime and CreateTime<=@endTime	
						GROUP BY nPlayerID
					)temp1;

			#@expendDiamondNum消耗钻石--线上【3会员在俱乐部+4俱乐部外+10修改俱乐部名称】+11俱乐部房退钻+12普通房间退钻+13洗牌扣钻+14商城道具;
			#@addDiamondNum钻石--后台赠送;@deductDiamondNum钻石--后台扣除;
			#@rechargeDiamondNum充值钻石--线上【当日会员在商城充值购买的钻石数】
			set @expendDiamondNum=0,@addDiamondNum=0,@deductDiamondNum=0,@rechargeDiamondNum=0;
		  select IFNULL((expendDiamondNumClub+expendDiamondNumUser+expendDiamondNumClubName+returnDiamondNumClub+returnDiamondNumUser+shuffleDiamondNumUser+mallDiamondNumUser),0),IFNULL(addDiamondNum,0),IFNULL(deductDiamondNum,0),IFNULL(rechargeDiamondNum,0)
			into @expendDiamondNum,@addDiamondNum,@deductDiamondNum,@rechargeDiamondNum
			from (
								select
											sum(case when nType=3  then nDiamond else 0  end) 'expendDiamondNumClub',
											sum(case when nType=4  then nDiamond else 0  end) 'expendDiamondNumUser',
											sum(case when nType=5  then nDiamond else 0  end) 'addDiamondNum',
											sum(case when nType=6  then nDiamond else 0  end) 'deductDiamondNum',
											sum(case when nType=7  then nDiamond else 0  end) 'rechargeDiamondNum',
											sum(case when nType=10  then nDiamond else 0  end) 'expendDiamondNumClubName',
											sum(case when nType=11  then nDiamond else 0  end) 'returnDiamondNumClub',
											sum(case when nType=12  then nDiamond else 0  end) 'returnDiamondNumUser',
											sum(case when nType=13  then nDiamond else 0  end) 'shuffleDiamondNumUser',
											sum(case when nType=14  then nDiamond else 0  end) 'mallDiamondNumUser'
								from (
												select nType,nDiamond from table_league_diamond_log where nType=4 and CreateTime>=@startTime and CreateTime<=@endTime	
												union all
												select nType,nDiamond from table_league_diamond_log where nType=5 and CreateTime>=@startTime and CreateTime<=@endTime	
												union all 
												select nType,nDiamond from table_league_diamond_log where nType=6 and CreateTime>=@startTime and CreateTime<=@endTime	
												union all 
												select nType,nDiamond from table_league_diamond_log where nType=7 and CreateTime>=@startTime and CreateTime<=@endTime	
												union all 
												select nType,nDiamond from table_league_diamond_log where nType=10 and CreateTime>=@startTime and CreateTime<=@endTime	
												union all 
												select nType,nDiamond from table_league_diamond_log where nType=12 and CreateTime>=@startTime and CreateTime<=@endTime	
												union all 
												select nType,nDiamond from table_league_diamond_log where nType=13 and CreateTime>=@startTime and CreateTime<=@endTime	
												union all 
												select nType,nDiamond from table_league_diamond_log where nType=14 and CreateTime>=@startTime and CreateTime<=@endTime
												union all 
												select nType,nDiamond from table_league_club_diamond_log where nType=3 and CreateTime>=@startTime and CreateTime<=@endTime
												union all 
												select nType,nDiamond from table_league_club_diamond_log where nType=11 and CreateTime>=@startTime and CreateTime<=@endTime
										 )temp1
						)temp2;
			
			#后台赠送--后台花费金额
			set @addDiamondRecharge=0;
			select IFNULL(SUM(nKindId),0) into @addDiamondRecharge from table_league_diamond_log where nType=5 and CreateTime>=@startTime and CreateTime<=@endTime;

			#后台扣除--后台花费金额
			set @deductDiamondRecharge=0;
			select IFNULL(SUM(nKindId),0) into @deductDiamondRecharge from table_league_diamond_log where nType=6 and CreateTime>=@startTime and CreateTime<=@endTime;
			
			#剩余钻石【会员钻石+俱乐部钻石】
			set @overDiamondNum=0;
			select IFNULL(SUM(temp1.nDiamond),0) into @overDiamondNum  
			from (
							select users.nCardCount nDiamond
							from table_league_club_member mem LEFT JOIN table_user users on mem.nPlayerID=users.nPlayerId
							where mem.nClubID=@nClubId and users.nCardCount>0
							union all 
							select nDiamond from table_league_club_info where nDiamond>0
					)temp1;
			#已提现
			set @nAmount=0;
			select IFNULL(SUM(nAmount),0) into @nAmount from table_agent_apply where nStatus=1 and ApprovalTime>=@startTime and ApprovalTime<=@endTime;

			#待提现【当前时间内剩余可提现的金额】
			set @waitnAmount=0;
			select IFNULL(SUM(nAmount),0) into @waitnAmount
			from(
						select nAmount from table_agent_info where nAmount>0
						union all
						select nAmount from table_citypartner_info where nAmount>0
			)temp;

			#插入统计记录
			if exists (select Id from Table_WebData_RoomCardFirst where tEndTime>=@startTime and tEndTime<=@endTime) then 
						delete from Table_WebData_RoomCardFirst where tEndTime>=@startTime and tEndTime<=@endTime;
			end if;
			insert into Table_WebData_RoomCardFirst
			(
					loginNum,gameNum,addUserNum,validAddUserNum,openRoomNum,roundNum,recharge,nAmount,waitnAmount,
					rechargeNum,rechargeDiamondNum,expendDiamondNum,deductDiamondNum,deductDiamondRecharge,
					addDiamondNum,addDiamondRecharge,overDiamondNum,tEndTime
			)values 
			(
					@loginNum,@gameNum,@addUserNum,@validAddUserNum,@openRoomNum,@roundNum,@recharge,@nAmount,@waitnAmount,
					@rechargeNum,@rechargeDiamondNum,@expendDiamondNum,@deductDiamondNum,@deductDiamondRecharge,
					@addDiamondNum,@addDiamondRecharge,@overDiamondNum,@startTime
			);
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_RoomCardFirstRecord
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_RoomCardFirstRecord`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_RoomCardFirstRecord`(
	in $curdate varchar(19) 
)
BEGIN
			set @startTime=CONCAT(DATE_FORMAT($curdate,'%Y-%m-%d'),' 00:00:00');
			set @endTime=CONCAT(DATE_FORMAT($curdate,'%Y-%m-%d'),' 23:59:59');
				#------------创建临时表——首次、末次游戏记录更新-----------begin
			drop temporary table if exists temp_table_webdata_roomcardfirstgamehelp;  
			create temporary table temp_table_webdata_roomcardfirstgamehelp(  
				Id int unsigned  not null  auto_increment primary key,
				nPlayerId int DEFAULT 0
			);
			#插入临时表
			insert into temp_table_webdata_roomcardfirstgamehelp(nPlayerId)
			select nPlayerId from table_league_club_game_score_detail game 
			where game.tEndTime>=@startTime and game.tEndTime<=@endTime
			GROUP BY nPlayerId;

			select count(1) into @totalCount from temp_table_webdata_roomcardfirstgamehelp;
			if @totalCount>0 then 
					set @currId=1;
					while (@currId<=@totalCount) do
								select nPlayerId into @nPlayerId from temp_table_webdata_roomcardfirstgamehelp where Id=@currId;
								if exists(select nPlayerId from Table_WebData_RoomCardFirstGameHelp where nPlayerId=@nPlayerId) then 
											update Table_WebData_RoomCardFirstGameHelp set lastGameTime=@startTime where nPlayerId=@nPlayerId;
								else 
											insert into Table_WebData_RoomCardFirstGameHelp(nPlayerId,firstGameTime,lastGameTime,tEndTime)
											values(@nPlayerId,@startTime,@startTime,@startTime);
								end if;
								set @currId=@currId+1;
					end while;
			end if;
			#------------创建临时表——首次、末次游戏记录更新-----------begin
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_RoomCardRoundStati
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_RoomCardRoundStati`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_RoomCardRoundStati`(
		/*
				Admin房卡牌局统计--每天统计
		*/
	in $curdate varchar(19) 
)
BEGIN
			set @startTime=CONCAT(DATE_FORMAT($curdate,'%Y-%m-%d'),' 00:00:00');
			set @endTime=CONCAT(DATE_FORMAT($curdate,'%Y-%m-%d'),' 23:59:59');

#-----------------------Admin房卡牌局统计_运营商------------------------------begin

			#插入统计记录
			if exists (select nGameType from Table_WebData_RoomCardRoundStatiClub where tEndTime>=@startTime and tEndTime<=@endTime) then 
						delete from Table_WebData_RoomCardRoundStatiClub where tEndTime>=@startTime and tEndTime<=@endTime;
			end if;

			#钻石消耗数【3俱乐部内消耗+4俱乐部外消耗+11俱乐部房退钻+12普通房间退钻】
			insert into Table_WebData_RoomCardRoundStatiClub(nClubId,nGameType,expendDiamondNum,tEndTime)
			select nClubId,nGameTypes,IFNULL(SUM(nDiamond),0) expendDiamondNum,@startTime
			from(
						select nClubId,FLOOR(nKindID/100) nGameTypes,nDiamond 
						from table_league_diamond_log where CreateTime>=@startTime and CreateTime<=@endTime and nType=4
						union all
						select nClubId,FLOOR(nKindID/100) nGameTypes,nDiamond 
						from table_league_diamond_log where CreateTime>=@startTime and CreateTime<=@endTime and nType=12
						union all
						select nClubId,FLOOR(nKindID/100) nGameTypes,nDiamond 
						from table_league_club_diamond_log where CreateTime>=@startTime and CreateTime<=@endTime and nType=3
						union all
						select nClubId,FLOOR(nKindID/100) nGameTypes,nDiamond 
						from table_league_club_diamond_log where CreateTime>=@startTime and CreateTime<=@endTime and nType=11
					)temp1 GROUP BY nClubId,nGameTypes;


			#更新 开房数、局数
			update Table_WebData_RoomCardRoundStatiClub report join
			(
					select nClubId,nGameTypes,IFNULL(SUM(szToken),0) openRoomNum,IFNULL(SUM(nRound),0) roundNum
					from(
								select nClubId,nGameTypes,count(DISTINCT(szToken)) szToken,IFNULL(count(nRound),0) nRound
								from(
											select nClubId,FLOOR(nKindID/100) nGameTypes,szToken,count(nRound) nRound from table_league_club_game_score_detail 
											where tEndTime>=@startTime and tEndTime<=@endTime
											GROUP BY nClubId,nGameTypes,szToken,nRound
								)temp1 GROUP BY nClubId,nGameTypes
					)temp2 GROUP BY nClubId,nGameTypes
			)temp1 on report.nClubId=temp1.nClubId and report.nGameType=temp1.nGameTypes
						set report.openRoomNum=temp1.openRoomNum,report.roundNum=temp1.roundNum
						where report.tEndTime>=@startTime and report.tEndTime<=@endTime;

			#更新游戏人数
			update Table_WebData_RoomCardRoundStatiClub report join 
			(
					select nClubId,nGameTypes,count(nPlayerId) gameNum
					from
					(
								select nClubId,FLOOR(nKindID/100) nGameTypes,nPlayerId from table_league_club_game_score_detail 
								where tEndTime>=@startTime and tEndTime<=@endTime
								GROUP BY nClubId,nGameTypes,nPlayerId
					)temp GROUP BY nClubId,nGameTypes
			)temp on report.nGameType=temp.nGameTypes and report.nClubId=temp.nClubId set report.gameNum=temp.gameNum
			 where report.tEndTime>=@startTime and report.tEndTime<=@endTime;

			#更新洗牌人数、洗牌扣钻
			update Table_WebData_RoomCardRoundStatiClub report join 
			(
					select nClubId,FLOOR(nKindID/100) nGameTypes,count(DISTINCT(nPlayerId)) shuffleNum,IFNULL(SUM(nDiamond),0) shuffleDiamondNum
					from table_league_diamond_log where CreateTime>=@startTime and CreateTime<=@endTime and nType=13
					GROUP BY nClubId,nGameTypes
			)temp on report.nGameType=temp.nGameTypes and report.nClubId=temp.nClubId 
						set report.shuffleNum=temp.shuffleNum,report.shuffleDiamondNum=temp.shuffleDiamondNum
			 where report.tEndTime>=@startTime and report.tEndTime<=@endTime;



#-----------------------Admin房卡牌局统计_运营商------------------------------end



#-----------------------Admin房卡牌局统计_全部------------------------------begin
			#插入统计记录
			if exists (select nGameType from Table_WebData_RoomCardRoundStatiAll where tEndTime>=@startTime and tEndTime<=@endTime) then 
						delete from Table_WebData_RoomCardRoundStatiAll where tEndTime>=@startTime and tEndTime<=@endTime;
			end if;

			#游戏Id、开房数、局数
			insert into Table_WebData_RoomCardRoundStatiAll
			(
					nGameType,gameNum,openRoomNum,roundNum,expendDiamondNum,tEndTime
			)
			select nGameType,0,IFNULL(SUM(openRoomNum),0),IFNULL(SUM(roundNum),0),IFNULL(SUM(expendDiamondNum),0),@startTime 
			from Table_WebData_RoomCardRoundStatiClub  where tEndTime>=@startTime and tEndTime<=@endTime
			GROUP BY nGameType;

			#更新游戏人数
			update Table_WebData_RoomCardRoundStatiAll report join 
			(
					select nGameTypes,count(nPlayerId) gameNum
					from
					(
								select FLOOR(nKindID/100) nGameTypes,nPlayerId from table_league_club_game_score_detail 
								where tEndTime>=@startTime and tEndTime<=@endTime
								GROUP BY nGameTypes,nPlayerId
					)temp GROUP BY nGameTypes
			)temp on report.nGameType=temp.nGameTypes set report.gameNum=temp.gameNum
			 where report.tEndTime>=@startTime and report.tEndTime<=@endTime;

			#更新洗牌人数、洗牌扣钻
			update Table_WebData_RoomCardRoundStatiAll report join 
			(
					select FLOOR(nKindID/100) nGameTypes,count(DISTINCT(nPlayerId)) shuffleNum,IFNULL(SUM(nDiamond),0) shuffleDiamondNum
					from table_league_diamond_log where CreateTime>=@startTime and CreateTime<=@endTime and nType=13
					GROUP BY nGameTypes
			)temp on report.nGameType=temp.nGameTypes 
						set report.shuffleNum=temp.shuffleNum,report.shuffleDiamondNum=temp.shuffleDiamondNum
			 where report.tEndTime>=@startTime and report.tEndTime<=@endTime;

#-----------------------Admin房卡牌局统计_全部------------------------------end
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_WebData_RoomCardSort
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_WebData_RoomCardSort`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_WebData_RoomCardSort`(
		/*
				Admin房卡排行榜--每天统计
		*/
	in $curdate varchar(19) 
)
BEGIN
			set @startTime=CONCAT(DATE_FORMAT($curdate,'%Y-%m-%d'),' 00:00:00');
			set @endTime=CONCAT(DATE_FORMAT($curdate,'%Y-%m-%d'),' 23:59:59');


			#插入统计记录
			if exists (select nPlayerId from Table_WebData_RoomCardSortUser where tEndTime>=@startTime and tEndTime<=@endTime) then 
						delete from Table_WebData_RoomCardSortUser where tEndTime>=@startTime and tEndTime<=@endTime;
			end if;
			if exists (select nClubId from Table_WebData_RoomCardSortClub where tEndTime>=@startTime and tEndTime<=@endTime) then 
						delete from Table_WebData_RoomCardSortClub where tEndTime>=@startTime and tEndTime<=@endTime;
			end if;
			
			
			#-----------------------Admin房卡排行榜_会员------------------------------begin
			/*
				nType=1 	部长往俱乐部充值			[-100]
				nType=2 	部长从俱乐部提取			[100]
				nType=3 	俱乐部开房消耗				[-100]
				nType=4 	普通开房消耗					[-100]
				nType=5 	后台加钻							[100]
				nType=6 	后台扣钻							[-100]
				nType=7 	线上商城充值					[100]
				nType=8 	赠送会员钻石					[-100]
				nType=9 	接收会员赠送的钻石		[100]
				nType=10	俱乐部改名						[-100]
				nType=11	俱乐部房退钻					[100]
				nType=12	普通房间退钻					[100]
				nType=13	洗牌扣钻							[-100]
				nType=14	商城道具							[-100]
				排行榜------会员排行_每天统计【会员账号、昵称、充值、购买钻石数、消耗钻石数、赠送钻石数】
			*/

			#创建临时表
			drop temporary table if exists temp_table_webdata_roomcardsort;  
			create temporary table temp_table_webdata_roomcardsort(  
				Id int unsigned  not null  auto_increment primary key,
				nPlayerId int DEFAULT 0
			);			
			#插入临时表
			insert into temp_table_webdata_roomcardsort(nPlayerId)
			select nPlayerId 
			from(
						select nPlayerId from table_league_diamond_log where CreateTime>=@startTime and CreateTime<=@endTime 
						union 
						select nPlayerId from table_league_club_diamond_log where CreateTime>=@startTime and CreateTime<=@endTime 
			)temp1 GROUP BY nPlayerId;

			#-----------------------Admin房卡排行榜_会员------------------------------end
			select count(1) into @totalCount from temp_table_webdata_roomcardsort;
			if @totalCount>0 then 
					set @currId=1;
					while (@currId<=@totalCount) do
								select nPlayerId into @nPlayerId from temp_table_webdata_roomcardsort where Id=@currId;

								#后台充钻、花费金额
								select IFNULL(SUM(nDiamond),0),IFNULL(SUM(nKindID),0) into @addDiamondNum,@rechargeMoney from table_league_diamond_log 
								where nType=5 and nPlayerId=@nPlayerId and CreateTime>=@startTime and CreateTime<=@endTime;

								#后台扣钻
								select IFNULL(SUM(nDiamond),0) into @deductDiamondNum from table_league_diamond_log 
								where nType=6 and nPlayerId=@nPlayerId and CreateTime>=@startTime and CreateTime<=@endTime;

								#充值钻石、充值金额
								select IFNULL(SUM(nDiamond),0),IFNULL(SUM(nKindID),0) into @rechargeDiamondNum,@recharge from table_league_diamond_log 
								where nType=7 and nPlayerId=@nPlayerId and CreateTime>=@startTime and CreateTime<=@endTime;

								#消耗钻石【包含 3俱乐部内消耗+4俱乐部外消耗+10修改俱乐部名称消耗+11俱乐部房退钻+12普通房间退钻+13洗牌扣钻+14商城道具 的总数								
								select IFNULL(SUM(nDiamond),0) into @expendDiamondNum  
								from(
											select nDiamond from table_league_diamond_log where nType=4 and nPlayerId=@nPlayerId and CreateTime>=@startTime and CreateTime<=@endTime
											union all
											select nDiamond from table_league_diamond_log where nType=10 and nPlayerId=@nPlayerId and CreateTime>=@startTime and CreateTime<=@endTime
											union all
											select nDiamond from table_league_diamond_log where nType=12 and nPlayerId=@nPlayerId and CreateTime>=@startTime and CreateTime<=@endTime
											union all
											select nDiamond from table_league_diamond_log where nType=13 and nPlayerId=@nPlayerId and CreateTime>=@startTime and CreateTime<=@endTime
											union all
											select nDiamond from table_league_diamond_log where nType=14 and nPlayerId=@nPlayerId and CreateTime>=@startTime and CreateTime<=@endTime
											union all
											select nDiamond from table_league_club_diamond_log where nType=3 and nPlayerId=@nPlayerId and CreateTime>=@startTime and CreateTime<=@endTime
											union all
											select nDiamond from table_league_club_diamond_log where nType=11 and nPlayerId=@nPlayerId and CreateTime>=@startTime and CreateTime<=@endTime
										)temp1;

								#赠送钻石
								select IFNULL(SUM(nDiamond),0) into @giveDiamondNum from table_league_diamond_log 
								where nType=8 and nPlayerId=@nPlayerId and CreateTime>=@startTime and CreateTime<=@endTime;
								#插入会员排行表
								insert into Table_WebData_RoomCardSortUser
								(nPlayerId,recharge,rechargeDiamondNum,expendDiamondNum,giveDiamondNum,rechargeMoney,addDiamondNum,deductDiamondNum,tEndTime)
								values(@nPlayerId,@recharge,@rechargeDiamondNum,@expendDiamondNum,@giveDiamondNum,@rechargeMoney,@addDiamondNum,@deductDiamondNum,@startTime);
								set @currId=@currId+1;
					end while;
			end if;

			#-----------------------Admin房卡排行榜_俱乐部------------------------------begin
			#排行榜------俱乐部排行_每天统计【开房数、牌局数、消耗钻石数】

			#插入俱乐部排行榜表
			insert into Table_WebData_RoomCardSortClub(nClubId,openRoomNum,roundNum,tEndTime)
			select nClubId,IFNULL(SUM(openRoomNum),0),IFNULL(SUM(roundNum),0),@startTime 
			from Table_WebData_RoomCardRoundStatiClub where tEndTime>=@startTime and tEndTime<=@endTime
			GROUP BY nClubId;
			
			#更新 俱乐部排行榜消耗钻石数【3俱乐部内消耗+11俱乐部房退钻+4俱乐部外消耗+12普通房间退钻+13洗牌扣钻+14商城道具】
			update Table_WebData_RoomCardSortClub report join 
			(
						select temp1.nClubId,IFNULL(SUM(temp1.nDiamond),0) expendDiamondNum from 
						(
									select nClubId,nDiamond from table_league_club_diamond_log 
									where nType=3 and CreateTime>=@startTime and CreateTime<=@endTime
									union all 
									select nClubId,nDiamond from table_league_club_diamond_log 
									where nType=11 and CreateTime>=@startTime and CreateTime<=@endTime
									union all
									select nClubId,nDiamond from table_league_diamond_log 
									where nType=4 and CreateTime>=@startTime and CreateTime<=@endTime
									union all
									select nClubId,nDiamond from table_league_diamond_log 
									where nType=12 and CreateTime>=@startTime and CreateTime<=@endTime
									union all
									select nClubId,nDiamond from table_league_diamond_log 
									where nType=13 and CreateTime>=@startTime and CreateTime<=@endTime
									union all
									select nClubId,nDiamond from table_league_diamond_log 
									where nType=14 and CreateTime>=@startTime and CreateTime<=@endTime
						)temp1 GROUP BY temp1.nClubId						
			)temp on report.nClubId=temp.nClubId set report.expendDiamondNum=temp.expendDiamondNum
			where report.tEndTime>=@startTime and report.tEndTime<=@endTime;
	
			#-----------------------Admin房卡排行榜_俱乐部------------------------------end
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddAgent
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddAgent`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AddAgent`(
	/*
		后台/手机代理后台 新增代理
		$currUserId 后台操作人Id		
		$nPlayerId 被添加为代理的会员Id
		$upAgentId 父级代理Id 0 表示当前被添加为代理为1级代理
		$ratio 分成比例10000=100%
	*/
	in $currUserId int,
	in $nPlayerId int,
	in $upAgentId	int,
	in $ratio int,
	out $returnVal int,
	out $resultMsg varchar(64)
)
returnNode:BEGIN
					#房卡用户
					set @nClubId=666000;
					#最低分成、最高分成
					set @minRatio=100,@maxRatio=10000;
					#代理等级、最大代理等级、商城等级
					set @nLevel=1,@maxLevel=3,@markLevel=2;
					if not exists(select mem.nPlayerId from table_league_club_member mem 
															inner join table_user users on mem.nPlayerID=users.nPlayerId 
															where mem.nClubId=@nClubId and users.nPlayerId=$nPlayerId) then
										set $returnVal=-1;
										set $resultMsg='用户不存在';
										leave returnNode;
					end if;
					#分成比例区间必须在1%——100%之间【含1%和100%】
					if $ratio<@minRatio or $ratio>@maxRatio then 
							set $returnVal=-1;
							set $resultMsg='用户分成比例区间必须在1%——100%之间';
							leave returnNode;
					end if;
					if exists(select nPlayerId from table_agent_info where nPlayerID=$nPlayerId) then 
							set $returnVal=-1;
							set $resultMsg='当前用户已是代理身份';
							leave returnNode;
					end if;
					#手机代理后台开下级代理
					if $upAgentId>0 then
								if not exists(select mem.nPlayerId from table_league_club_member mem 
															inner join table_user users on mem.nPlayerID=users.nPlayerId 
															where mem.nClubId=@nClubId and users.nPlayerId=$upAgentId) then
										set $returnVal=-1;
										set $resultMsg='当前精英的上级精英不存在';
										leave returnNode;
								else 
										select extendCode into @extendCode from table_user where nPlayerID=$nPlayerId;
										if $upAgentId<>@extendCode then 
												set $returnVal=-1;
												set $resultMsg='需要绑定了您推荐码的会员，才能为其设置精英';
												leave returnNode;
										end if;
										if exists(select nPlayerID from table_agent_info where nPlayerID=$upAgentId) then 
													select ratio,nLevel into @upratio,@upnLevel from table_agent_info where nPlayerID=$upAgentId;
													if $ratio>=@upratio then 
																set $returnVal=-1;
																set $resultMsg=CONCAT('当前精英分成比例不能高于或等于上级精英的分成比例【',ROUND(@upratio/100,2),'%】');
																leave returnNode;
													else 
															set @nLevel=@upnLevel+1;
															if @nLevel>@maxLevel then 
																	set $returnVal=-1;
																	set $resultMsg=CONCAT('精英等级已达上限',@maxLevel,'级');
																	leave returnNode;
															end if;
													end if;
										else 
													set $returnVal=-1;
													set $resultMsg='当前精英的上级精英不存在或不是精英';
													leave returnNode;
										end if;
								end if;
					 else 
							#后台开1级代理
							set $upAgentId=0;
					 end if;
					#插入代理信息表
					set @UpCPID=0;
					if $upAgentId>0 then 
							select UpCPID into @UpCPID from table_agent_info where nPlayerID=$upAgentId;
					end if;
					set @createTime=NOW();
					insert into table_agent_info(nPlayerID,UpAgentID,nLevel,ratio,UpCPID,CreateCPTime,CreateTime) values($nPlayerId,$upAgentId,@nLevel,$ratio,@UpCPID,@createTime,@createTime);
					#更新用户代理标识【11房卡代理】
					update table_user set acctype=11 where nPlayerId=$nPlayerId;

					#代理层级关系表
					if @nLevel>1 then 
							set @maxWhile=0;
							set @tempUpAgentId=$upAgentId;
							while @tempUpAgentId>0 do 
									if not exists(select nPlayerID from table_agent_tree where nPlayerID=@tempUpAgentId and nNextPlayerID=$nPlayerId) then 
											insert into table_agent_tree(nPlayerID,nNextPlayerID,CreateTime)
											values(@tempUpAgentId,$nPlayerId,@createTime);
									end if;

									select UpAgentID into @upAgentID from table_agent_info where nPlayerID=@tempUpAgentId; 
									set @tempUpAgentId=@upAgentID;
									set @maxWhile=@maxWhile+1;
									if @maxWhile>@maxLevel then 
											set @tempUpAgentId=0;
									end if;
							end while;
					end if;
					if $currUserId>0 then 
							#插入日志
							#操作人
							select userName into @userName from admin_user where UserId=$currUserId;
							select szThirdAccount into @szThirdAccount from table_user where nPlayerId=$nPlayerId;

							set @logDes=CONCAT('【设置代理】运营用户:【',@userName,'】 设置了会员【ID:',$nPlayerId,',账号:',@szThirdAccount,'】为1级代理');
							insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
							values(0,82,$currUserId,0,0,@logDes,NOW());
					end if;
					set $returnVal=1;
					set $resultMsg='成功';
					leave returnNode;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddAppUser
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddAppUser`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AddAppUser`(
		
		in $userId int,
		in $userName varchar(50),
		in $userPassord varchar(50),
		in $userNickName varchar(50),
		in $userPhone varchar(11),
		in $userEmail varchar(50),
		in $remark varchar(200),
		out $returnVal int,
		out $resultMsg varchar(50)
)
returnNode:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				if exists(select UserId from admin_user where UserName=$userName) then
						set $returnVal=-1;
						set $resultMsg='用户名已存在';
						leave returnNode;
				end if;

				start transaction;

				insert into admin_user(UserType,UserName,UserPassord,UserNickName,UserPhone,UserEmail,Remark,`Status`,CreateTime)
				values (2,$userName,$userPassord,$userNickName,$userPhone,$userEmail,$remark,1,NOW());
				set @adminUId = @@IDENTITY;
				
				select nClubId,nLevel,UserName into @nClubID,@nLevel,@UserName from admin_proxy where UserId=$userId;
				insert into admin_proxy
							(UserId,ProxyType,UserPId,Rate,nPlayerId,nClubId,IsCreate,
							 CreateUserId,CreateTime,DesKey,Md5Key,UserName,GameProxyType,nLevel)
				select @adminUId,2,UserId,Rate,nPlayerId,nClubId,IsCreate,
							 $userId,NOW(),'','',$userName,2,(@nLevel+1) 
				from admin_proxy where nClubId=@nClubID and ProxyType=1 and GameProxyType=2;
				#添加日志
				set @logDes=CONCAT('【添加后台账号】运营用户:【',@UserName,'】 添加后台账号;账号:',$userName,';等级:',(@nLevel+1));
				insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
				values(@nClubID,25,$userId,0,0,@logDes,NOW());

				if errno=0 then
						set $returnVal=@adminUId;
						set $resultMsg='成功';
						commit;
				else
						set $returnVal=-99;
						set $resultMsg='执行异常';
							rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddDiamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddDiamond`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AddDiamond`(
		in $szThirdAccount varchar(64),
		in $nDiamond int,
		in $nMoney int,
		in $szRemark varchar(256),
		in $operatUserId int,
		out $returnVal int,
		out $resultMsg varchar(64)
)
returnNode:BEGIN

			declare errno int default 0;
			declare continue handler for sqlexception set errno = 1;
			#公共俱乐部Id
			set @RoomCardClubId=666000;
			if not exists(select mem.nPlayerId,users.szThirdAccount from table_league_club_member mem  
										INNER JOIN table_user users on mem.nPlayerId = users.nPlayerId 
										where mem.nClubId=@RoomCardClubId and users.szThirdAccount=$szThirdAccount limit 0,1) then
						set $returnVal=-1;
						set $resultMsg='会员账号不存在';
						leave returnNode;
			end if;
			#会员Id,会员钻石数
			select mem.nPlayerId,users.nCardCount into @nPlayerId,@nCardCount from table_league_club_member mem  
			INNER JOIN table_user users on mem.nPlayerId = users.nPlayerId 
			where mem.nClubId=@RoomCardClubId and users.szThirdAccount=$szThirdAccount limit 0,1;
			#操作人
			select userName into @userName from admin_user where UserId=$operatUserId;
				
			start transaction;
			#更新个人钻石
			set @newDiamond=@nCardCount+$nDiamond;
			set @currTime=NOW();
			update table_user set nCardCount=@newDiamond where nPlayerId=@nPlayerId;
			#钻石账变
			insert into table_league_diamond_log(nPlayerID,nKindID,nClubID,nDiamond,nPlayerDiamond,nType,CreateTime,szInfo,szRemark)
			values(@nPlayerId,$nMoney,0,$nDiamond,@newDiamond,5,@currTime,@userName,$szRemark);

			#添加日志
			set @logDes=CONCAT('【充扣钻】运营用户:【',@userName,'】 为会员【ID:',@nPlayerId,',会员账号:',$szThirdAccount,'】充值了"',$nDiamond,'"个钻石;充值后钻石为:"',@newDiamond,'"');
			insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
			values(0,83,$operatUserId,0,$nDiamond,@logDes,@currTime);
			if errno=0 then
					set $returnVal=@nPlayerId;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-99;
					set $resultMsg='执行异常';
					rollback;
			end if;
			
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddDownLoad
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddDownLoad`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AddDownLoad`(
	
	in $sysType int,
	in $ipAddress varchar(20),
	in $roomPlayerId varchar(20),
	out $returnVal int
)
begin 
			set $returnVal=0;
			insert into table_statistics_download(SysType,RoomPlayerId,IPAddress,CreateTime) values($sysType,$roomPlayerId,$ipAddress,NOW());
			set $returnVal=@@identity;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddEnterPriseLog
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddEnterPriseLog`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AddEnterPriseLog`(
		
	in $nClubId int,
	in $operateType int,
	in $operatePlayerId int,
	in $targetPlayerId int,
	in $remark varchar(500)
)
begin 
			insert into enterpriselog(nClubId,operateType,operatePlayerId,targetPlayerId,remark)
			values($nClubId,$operateType,$operatePlayerId,$targetPlayerId,$remark);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddOperationUser
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddOperationUser`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_AddOperationUser`(
		in $createUserId int,
		in $userName varchar(50),
		in $userPassord varchar(50),
		in $userNickName varchar(50),
		in $userPhone varchar(11),
		in $userEmail varchar(50),
		in $remark varchar(200),
		out $returnVal int,
		out $resultMsg varchar(50)
)
returnNode:begin 
				if exists(select UserId from admin_user where UserName=$userName) then
						set $returnVal=-1;
						set $resultMsg='用户名已存在';
						leave returnNode;
				end if;
				insert into admin_user(UserType,UserName,UserPassord,UserNickName,UserPhone,UserEmail,Remark,`Status`,CreateTime)
				values (3,$userName,$userPassord,$userNickName,$userPhone,$userEmail,$remark,1,NOW());
				set @adminUId = @@IDENTITY;
				#管理员新建账号等级为2;运营账号新账号等级+1
				set @nLevel=2;
				select UserType,UserName into @UserType,@UserName from admin_user where UserId=$createUserId;
				if @UserType=3 then 
						select nLevel into @nLevelSub from admin_usersub where userId=$createUserId;
						set @nLevel=@nLevelSub+1;
				end if;
				insert into admin_usersub(UserId,UserName,UserPId,nLevel,CreateTime)
				values(@adminUId,$userName,$createUserId,@nLevel,NOW());

				#写入日志【修改运营商】运营用户:admin 修改App运营商信息;账号:ceshi0610011;运营商ID:1211
				set @Des=CONCAT('【添加后台账号】运营用户:【',@UserName,'】添加后台账号;账号:【',$userName,'】;等级:',@nLevel);
				insert into admin_log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
				values(0,25,$createUserId,0,0,@Des,NOW());
				set $returnVal=@adminUId;
				set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddProxyToCityPartner
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddProxyToCityPartner`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AddProxyToCityPartner`(
	/*
		添加直属代理 至 城市合伙人
		$currUserId 后台操作人Id		
		$nPlayerId  城市合伙人Id
		$szThirdAccount 代理的会员账号
	*/
	in $currUserId int,
	in $nPlayerId int,
	in $szThirdAccount varchar(64),
	out $returnVal int,
	out $resultMsg varchar(64)
)
returnNode:BEGIN
					#房卡用户
					set @nClubId=666000,@nPlayerId=0;
					set @createTime=NOW();
					if not exists(select nPlayerId from table_citypartner_info where nPlayerId=$nPlayerId) then 
								set $returnVal=-1;
								set $resultMsg='城市合伙人不存在';
								leave returnNode;
					end if;
					if not exists(select mem.nPlayerId,users.szThirdAccount from table_league_club_member mem 
												inner join table_user users on mem.nPlayerID=users.nPlayerId 
												where mem.nClubId=@nClubId and users.szThirdAccount=$szThirdAccount) then
										set $returnVal=-1;
										set $resultMsg=CONCAT('会员账号【',$szThirdAccount,'】不存在');
										leave returnNode;
					else  
								select mem.nPlayerId into @nPlayerId from table_league_club_member mem 
								inner join table_user users on mem.nPlayerID=users.nPlayerId 
								where mem.nClubId=@nClubId and users.szThirdAccount=$szThirdAccount;
					end if;
					if not exists(select nPlayerId from table_agent_info where nPlayerId=@nPlayerId) then 
								set $returnVal=-1;
								set $resultMsg=CONCAT('会员账号【',$szThirdAccount,'】不是代理');
								leave returnNode;
					else 
								select nLevel,UpCPID into @nLevel,@UpCPID from table_agent_info where nPlayerId=@nPlayerId;
								if @nLevel>1 then 
											set $returnVal=-1;
											set $resultMsg=CONCAT('会员账号【',$szThirdAccount,'】必须是一级代理');
											leave returnNode;
								end if;
								if @UpCPID>0 then 
											set $returnVal=-1;
											set $resultMsg=CONCAT('会员账号【',$szThirdAccount,'】已绑定区域合伙人');
											leave returnNode;
								end if;
					end if;

					#更新代理信息表
					update table_agent_info set UpCPID=$nPlayerId,CreateCPTime=@createTime where nPlayerId=@nPlayerId;
					#更新代理层级关系信息表
					update table_agent_info set UpCPID=$nPlayerId,CreateCPTime=@createTime 
					where nPlayerId in (select nNextPlayerID from table_agent_tree where nPlayerID=@nPlayerId);
					

					#插入日志
					#操作人
					select userName into @userName from admin_user where UserId=$currUserId;
					#城市合伙人账号
					select szThirdAccount into @cityszThirdAccount from table_user where nPlayerId=$nPlayerId;

					set @logDes=CONCAT('【添加直属代理】运营用户:【',@userName,'】 为城市合伙人【ID:',$nPlayerId,',账号:',@cityszThirdAccount,'】添加了直属代理【ID:',@nPlayerId,',账号:',$szThirdAccount,'】');
					insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
					values(0,90,$currUserId,0,0,@logDes,NOW());

					set $returnVal=1;
					set $resultMsg='成功';
					leave returnNode;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddProxyUser
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddProxyUser`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AddProxyUser`(
		
		in $userId int,
		in $userName varchar(50),
		in $userPassord varchar(50),
		in $userNickName varchar(50),
		in $userPhone varchar(11),
		in $userEmail varchar(50),
		in $remark varchar(200),
		in $rate int,
		in $isCreate int,
		in $GameProxyType int,
		out $proxyUserId int,
		out $returnVal int,
		out $resultMsg varchar(50)
)
returnNode:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				set $proxyUserId=0;
				if LENGTH($userName)>=50 then 
						set $returnVal=-1;
						set $resultMsg='运营商账号超出限制';
						leave returnNode;
				end if;
				if LENGTH($userNickName)>=50 then 
						set $returnVal=-1;
						set $resultMsg='运营商昵称超出限制';
						leave returnNode;
				end if;
				if exists(select UserId from admin_user where UserName=$userName) then
						set $returnVal=-1;
						set $resultMsg='运营商账号已存在';
						leave returnNode;
				end if;
				if $rate<=0 or $rate>=1000 then 
						set $returnVal=-1;
						set $resultMsg='运营商占成比例输入有误';
						leave returnNode;
				end if;
				start transaction;
				
				INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szOpenId,szNickname,
															preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nChannel) 
				VALUES(0,0,NOW(),1,'','','',DATE_SUB(NOW(),INTERVAL 1 DAY),'',1,2000,0,0,'',0);    
				set @T_UId = @@IDENTITY;
				
				SET @ClubName = CONCAT('V',@T_UId);    
				
				set @ClubScore=900000000000;
				INSERT INTO Table_ClubInfo (szClubName, nIconID, bIsPublic, nStatus, CreatePlayerID, szCity,szDesc, nScore, nTaxRateNormal, 
																		nTaxRateBig, nWinnerRoyaltyRate, nBigRoomRoyaltyRate,bIsPrivate,nChannel) 
				VALUES  (@ClubName,0,0,1,@T_UId,'','',@ClubScore,100,0,0,0,0,0);
				set @nClubID = @@IDENTITY;

				

				set @GameProxyTypeName='H5运营商';
				set @sysCode=1001018;
				if $GameProxyType=2 then 
						set @GameProxyTypeName='App运营商';
						set @sysCode=1001008;
				end if;
				INSERT INTO table_club_game_cfg (nClubID,nGameType,nStatus,nDuDiamondMode)
				select @nClubID,Type,valid,1 from sys_code where `Code`=@sysCode;
				
				INSERT INTO Table_clubmember (nClubID,nPlayerID,nLevel,nStatus,nScore,nExtenID)	VALUES 	(@nClubID,@T_UId,1,1,0,0);
				
				
				insert into admin_user(UserType,UserName,UserPassord,UserNickName,UserPhone,UserEmail,Remark,`Status`,CreateTime)
				values (2,$userName,$userPassord,$userNickName,$userPhone,$userEmail,$remark,1,NOW());
				set @adminUId = @@IDENTITY;
				set @DesKey=substring(MD5(@T_UId),1,8);
				set @Md5Key=substring(MD5(@nClubID),1,16);
				insert into admin_proxy(UserId,ProxyType,UserPId,Rate,nPlayerId,nClubId,IsCreate,CreateUserId,CreateTime,DesKey,Md5Key,UserName,GameProxyType,nLevel)
				values(@adminUId,1,0,$rate,@T_UId,@nClubID,$isCreate,$userId,NOW(),@DesKey,@Md5Key,$userName,$GameProxyType,1);

				#新增操作日志desc Admin_Log
        select UserName into @UserName from admin_user where UserId=$userId;
				
				set @logDes=CONCAT('【添加运营商】运营用户:【',@UserName,'】 添加',@GameProxyTypeName,';账号:【',$userName,'】;运营商ID:【',@nClubID,'】');
				insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
				values(@nClubID,23,$userId,0,0,@logDes,NOW());
				if errno=0 then
						update Table_ClubInfo set nChannel=@nClubID where nClubID=@nClubID;
						update Table_User set nChannel=@nClubID,szThirdAccount=$userName,szThirdPass=$userPassord where nPlayerId=@T_UId;
						set $proxyUserId=@adminUId;
						set $returnVal=1;
						set $resultMsg='成功';
						#同步比赛配置
						call Pro_web_CopyMatchCofig(@nClubID);
						commit;
				else
						set $returnVal=-99;
						set $resultMsg='执行异常';
						rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddProxyUserNext
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddProxyUserNext`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AddProxyUserNext`(
		/*
			CreateDate:2019-03-04
			ModifyDate:2020-03-04
			Des:添加下级代理或者子账号
									(
										代理→代理
										代理→子账号
										子账号→代理
										子账号→子账号
									)
			Param:	$userId=操作人Id;$userName=用户名;$userPassord=密码;
							$userNickName=昵称;$userPhone=手机号码;$userEmail=邮箱;$remark=备注;
							$rate=上级占成(除以1000);$isCreate=是否允许创建代理
							$proxyType=添加账号类型
							
		*/
		in $userId int,
		in $userName varchar(50),
		in $userPassord varchar(50),
		in $userNickName varchar(50),
		in $userPhone varchar(11),
		in $userEmail varchar(50),
		in $remark varchar(200),
		in $rate int,
		in $isCreate int,
		in $proxyType int,
		out $returnVal int,
		out $resultMsg varchar(50)
)
returnNode:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;

				select nClubId into @proxyClubId from admin_proxy where UserId=$userId;
				select Rate into @proxyRate from admin_proxy where nClubId=@proxyClubId and ProxyType=1;
				
				if $proxyType=1 and ($rate<=0 or $rate>=1000 or @proxyRate>$rate) then 
						set $returnVal=-1;
						set $resultMsg='运营商占成比例输入不合法';
						leave returnNode;
				end if;
				if exists(select UserId from admin_user where UserName=$userName) then
						set $returnVal=-1;
						set $resultMsg='用户名已存在';
						leave returnNode;
				end if;
				if $proxyType=1 then 
						if not exists(select UserId from admin_proxy where UserId=$userId and isCreate=1) then
								set $returnVal=-1;
								set $resultMsg='尚无添加用户的操作权限';
								leave returnNode;
						end if;
				end if;
				#获取当前操作用户的账号类型（1代理;2子账号）
				select ProxyType,Rate into @ProxyType,@Rate from admin_proxy where UserId=$userId;
				set @createType=0;
				if(@ProxyType=1 and $proxyType=1) then 					#代理新建代理
						set @createType=1;
						if $rate<@Rate then 
							set $returnVal=-1;
							set $resultMsg='代理占成输入不合法';
							leave returnNode;
						end if;
				elseif (@ProxyType=1 and $proxyType=2) then			#代理新建子账号
						set @createType=2;
				elseif (@ProxyType=2 and $proxyType=1) then			#子账号新建代理
						set @createType=3;
						if $rate<@Rate then 
							set $returnVal=-1;
							set $resultMsg='代理占成输入不合法';
							leave returnNode;
						end if;
				elseif (@ProxyType=2 and $proxyType=2) then			#子账号新建子账号
						set @createType=4;
				else 
						set $returnVal=-1;
						set $resultMsg='添加失败,参数错误';
						leave returnNode;
				end if;
			
				set @T_UId=0;								#table_user 		自增ID
				set @nClubID =0;						#Table_ClubInfo 自增ID
				set @adminUId =0;						#admin_user  		代理、子账号自增ID
				start transaction;
				if (@createType=1 or @createType=3) then #代理新建代理;#子账号新建代理
							set @ClubScore=900000000000;	#Table_ClubInfo 俱乐部初始积分
							#初始化table_user、table_clubinfo、table_club_game_cfg、table_clubmember
							INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szOpenId,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nChannel) 
							VALUES(0,0,NOW(),1,'','','',DATE_SUB(NOW(),INTERVAL 1 DAY),'',1,2000,0,0,'',0);    
							set @T_UId = @@IDENTITY;
							
							SET @ClubName = CONCAT('V',@T_UId);    
							#创建一个俱乐部
							
							INSERT INTO Table_ClubInfo (szClubName, nIconID, bIsPublic, nStatus, CreatePlayerID, szCity,szDesc, nScore, nTaxRateNormal, 
																					nTaxRateBig, nWinnerRoyaltyRate, nBigRoomRoyaltyRate,bIsPrivate,nChannel) 
							VALUES  (@ClubName,0,0,1,@T_UId,'','',@ClubScore,100,0,0,0,0,0);
							set @nClubID = @@IDENTITY;

							
							#加入俱乐部成员表
							INSERT INTO Table_clubmember (nClubID,nPlayerID,nLevel,nStatus,nScore,nExtenID)	VALUES 	(@nClubID,@T_UId,1,1,0,0);
							#新增运营商代理
							insert into admin_user(UserType,UserName,UserPassord,UserNickName,UserPhone,UserEmail,Remark,`Status`,CreateTime)
							values (2,$userName,$userPassord,$userNickName,$userPhone,$userEmail,$remark,1,NOW());
							set @adminUId = @@IDENTITY;
							#代理新建代理
							set @UserPId=$userId;
							#子账号新建代理
							if @createType=3 then 
									select UserPId into @UserPId from admin_proxy where UserId=$userId;
							end if;
							#俱乐部游戏配置表
							select nClubId,nLevel into @configClubId,@nLevel from admin_proxy where UserId=@UserPId;							
							INSERT INTO table_club_game_cfg (nClubID,nGameType,nStatus,nDuDiamondMode,nextStatus)
							select @nClubID,Type,valid,1,1 from sys_code where `Code`=1001018;
							set @DesKey=substring(MD5(@T_UId),1,8);
							set @Md5Key=substring(MD5(@nClubID),1,16);
							insert into admin_proxy(UserId,ProxyType,UserPId,Rate,nPlayerId,nClubId,IsCreate,CreateUserId,CreateTime,DesKey,Md5Key,UserName,GameProxyType,nLevel)
							values(@adminUId,$proxyType,@UserPId,$rate,@T_UId,@nClubID,$isCreate,$userId,NOW(),@DesKey,@Md5Key,$userName,1,(@nLevel+1));
							
							select UserName,nClubId into @UserName,@logClubId from admin_proxy where UserId=$userId;
							set @logDes=CONCAT('【添加运营商】运营用户:【',@UserName,'】 添加运营商;账号:【',$userName,'】;运营商ID:【',@nClubID,'】');
							insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
							values(@logClubId,23,$userId,0,0,@logDes,NOW());
							
							#同步比赛配置
							call Pro_web_CopyMatchCofig(@nClubID);

				elseif(@createType=2 or @createType=4) then #代理新建子账号;#子账号新建子账号
							insert into admin_user(UserType,UserName,UserPassord,UserNickName,UserPhone,UserEmail,Remark,`Status`,CreateTime)
							values (2,$userName,$userPassord,$userNickName,$userPhone,$userEmail,$remark,1,NOW());
							set @adminUId = @@IDENTITY;

								
							#代理新建子账号
							set @UserPId=$userId;
							set @nLevel=2;
							#子账号新建子账号
							if @createType=4 then 
										select UserPId,nLevel into @UserPId,@subnLevel from admin_proxy where UserId=$userId;
										set @nLevel=@subnLevel+1;
							end if;
							select Rate,nPlayerId,nClubId into $rate,@T_UId,@nClubID from admin_proxy where UserId=$userId;
							
							#获取父代理的权限
							select IsCreate into @IsCreate from admin_proxy where UserId=@UserPId;
							insert into admin_proxy(UserId,ProxyType,UserPId,Rate,nPlayerId,nClubId,IsCreate,CreateUserId,CreateTime,DesKey,Md5Key,UserName,GameProxyType,nLevel)
							values(@adminUId,$proxyType,@UserPId,$rate,@T_UId,@nClubID,@IsCreate,$userId,NOW(),'','',$userName,1,@nLevel);

							select UserName,nClubId into @UserName,@logClubId from admin_proxy where UserId=$userId;
							set @Des=CONCAT('【添加后台账号】运营用户:【',@UserName,'】添加后台账号;账号:【',$userName,'】;等级:',@nLevel);
							insert into admin_log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
							values(@logClubId,25,$userId,0,0,@Des,NOW());
				end if;
				
				if errno=0 then
						if (@createType=1 or @createType=3) then
								update Table_ClubInfo set nChannel=@nClubID where nClubID=@nClubID;
								update Table_User set nChannel=@nClubID,szThirdAccount=$userName,szThirdPass=$userPassord where nPlayerId=@T_UId;
								#H5代理线关系
								call Pro_WebData_H5ProxyLineById(@nClubID);
						end if;
						set $returnVal=@adminUId;
						set $resultMsg='成功';
						commit;
				else
						set $returnVal=-99;
						set $resultMsg='执行异常';
							rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddRobotCofig
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddRobotCofig`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AddRobotCofig`(
	 
  IN $ServerID INT,         
	IN $ServiceMode INT,     
	IN $RobotCount INT,      
	IN $EnterTime INT,       
	IN $LeaveTime INT,       
	IN $EnterMinInterval INT, 
	IN $EnterMaxInterval INT, 
	IN $LeaveMinInterval INT, 
	IN $LeaveMaxInterval INT , 
	IN $TakeMinScore bigint,       
	IN $TakeMaxScore bigint,        
  IN $SwitchMinInnings INT,  
  IN $SwitchMaxInnings INT,   
	out $BatchID INT   
)
BEGIN
		
         
     INSERT INTO table_robot_configure (ServerID, ServiceMode, RobotCount,EnterTime,LeaveTime,EnterMinInterval,
																				EnterMaxInterval,LeaveMinInterval,LeaveMaxInterval,TakeMinScore,TakeMaxScore,SwitchMinInnings,SwitchMaxInnings)
																VALUES ($ServerID, $ServiceMode, $RobotCount, $EnterTime,$LeaveTime,$EnterMinInterval,
																				$EnterMaxInterval,$LeaveMinInterval,$LeaveMaxInterval,$TakeMinScore,$TakeMaxScore,$SwitchMinInnings,$SwitchMaxInnings);
        set $BatchID=@@identity;	
 END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddRoomCardScore
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddRoomCardScore`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AddRoomCardScore`(
		/*
				赠送积分
				2021-12-27
		*/
		in $szThirdAccount varchar(64),
		in $nAmount int,
		in $szMark varchar(128),
		in $operatUserId int,
		out $returnVal int,
		out $resultMsg varchar(64)
)
returnNode:BEGIN

			declare errno int default 0;
			declare continue handler for sqlexception set errno = 1;
			if $nAmount<=0 then 
						set $returnVal=-1;
						set $resultMsg='积分不合法';
						leave returnNode;
			end if;
			if not exists(select nPlayerId from table_user where acctype>=1 and acctype<=111 and szThirdAccount=$szThirdAccount) then
						set $returnVal=-1;
						set $resultMsg='会员账号不存在';
						leave returnNode;
			else 
						select nPlayerId into @nPlayerId from table_user where acctype>=1 and acctype<=111 and szThirdAccount=$szThirdAccount limit 0,1;
			end if;
			#尚未开户--初始化
			if not exists(select nPlayerId from table_jscore_user where nPlayerId=@nPlayerId) then
					insert into table_jscore_user(nPlayerId,nExtenId,nScore,szTaskData,szName,phone,address) values(@nPlayerId,0,0,'','','','');
			end if;
			#会员积分
			select nScore into @nScore from table_jscore_user  where nPlayerId=@nPlayerId;

			#操作人
			select userName into @userName from admin_user where UserId=$operatUserId;
				
			start transaction;
			#账变后积分
			set @newScore=@nScore+$nAmount;
			set @currTime=NOW();
			update table_jscore_user set nScore=nScore+$nAmount where nPlayerId=@nPlayerId;
			#积分账变
			insert into table_jscore_log(nPlayerId,nSourceId,nAmount,nScore,nType,tCreateTime,szMark)
			values(@nPlayerId,$operatUserId,$nAmount,@newScore,1,@currTime,$szMark);

			#添加日志
			set @logDes=CONCAT('【赠送积分】运营用户:【',@userName,'】 赠送了会员【ID:',@nPlayerId,',账号:',$szThirdAccount,'】"',$nAmount,'"积分;赠送后积分为:"',@newScore,'"');
			insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
			values(0,93,$operatUserId,0,$nAmount,@logDes,@currTime);
			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-99;
					set $resultMsg='执行异常';
					rollback;
			end if;
			
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AddTable_Manager_Login_Token
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AddTable_Manager_Login_Token`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AddTable_Manager_Login_Token`(
	
	in $nPlayerId int,
	in $szToken varchar(64),
	out $returnVal int,
	out $returnMsg varchar(50)
)
returnNode:begin 
		if $nPlayerId<=0 then 
				set $returnVal=-1;
				set $returnMsg='用户Id不正确';
				leave returnNode;
		end if;
		if $szToken is null or $szToken='' then 
				set $returnVal=-1;
				set $returnMsg='token不能为空';
				leave returnNode;
		end if;
		if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId and nActive=1) then 
				set $returnVal=-1;
				set $returnMsg='该用户不存在或者已被注销';
				leave returnNode;
		end if;
		insert into table_manager_login_token(nPlayerID,szToken) values($nPlayerId,$szToken);
		set $returnVal=1;
		set $returnMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AdminDepositSum
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AdminDepositSum`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AdminDepositSum`(
/*
		创建时间:2020-07-28
		修改时间:2020-07-28
		功能描述:Admin财务管理-充值、提现分析
	*/
	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
				#当前时间年月日
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			
			#创建临时表
			drop temporary table if exists temp_table_AdminDepositSum;  
			create temporary table temp_table_AdminDepositSum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0 
			);
			set @sqlStr=CONCAT("insert into  temp_table_AdminDepositSum(nClubId) "," select temp.nClubID
																	 from (
																					select nClubID from table_web_loginlog 
																					where nClubID in(select nClubId from admin_proxy where proxyType=1) and szTime>='",_currdateStart,"' and szTime<='",_currdateEnd,"'
																					union 
																					select nClubID from table_clubmember where tJoinTime>='",_currdateStart,"' and tJoinTime<='",_currdateEnd,"'
																					union 
																					select nClubID from ",@table_clubgamescoredetail," where tEndTime>='",_currdateStart,"'  and tEndTime<='",_currdateEnd,"'
																					union 
																					select clubid nClubID from ",@table_clublogscore," where nType in(23,28) and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'
																		)temp INNER JOIN admin_proxy proxy on temp.nClubID=proxy.nClubId where proxy.ProxyType=1 and proxy.gameProxyType=2");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;		
			
			select count(1) into @totalCount from temp_table_AdminDepositSum;
			if @totalCount >0 then 
						set @currdateStart=_currdateStart,@currdateEnd=_currdateEnd;
						set @currId=1;
						while (@currId<=@totalCount) do
								select nClubId into @nClubId from temp_table_AdminDepositSum where Id=@currId;
								#登录人数
								set @loginNumber=0;
								select count(DISTINCT(nPlayerId)) into @loginNumber from table_web_loginlog where szTime>=_currdateStart and szTime<=_currdateEnd and nClubID=@nClubId;


								#游戏人数
								set @gameNumber=0;
								set @sqlStr1=CONCAT("select count(nPlayerId) into @gameNumber  
																		 from( 

																					 select detail.nPlayerId from ",@table_clubgamescoredetail," detail 
																					 where detail.nClubID=",@nClubId," and detail.tEndTime>='",@currdateStart,"' and detail.tEndTime<='",@currdateEnd,"' 
																					 union 
																					 select nPlayerId from table_match_game_score_detail  
																					 where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																				 )temp
																		");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1;
								DEALLOCATE PREPARE stmt_name1;

								#新增
								set @addUser=0;
								select count(mem.nPlayerID) into @addUser from table_clubmember mem 
								where mem.nClubID=@nClubId and mem.nLevel>1 and mem.tJoinTime>=_currdateStart and mem.tJoinTime<=_currdateEnd;


								#有效新增
								set @validAdd=0;
								set @sqlStr2=CONCAT(" select count(nPlayerID) into @validAdd  
																		  from( 
																						select nClubID,nPlayerID from ",@table_clubgamescoredetail," where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																						union 
																						select nClubId,nPlayerId from table_match_game_score_detail  where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																					)temp where nPlayerId not in(select nPlayerId from table_webdata_analysis_firstgamehelp where nClubId=",@nClubId," ) 
																		");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2;
								DEALLOCATE PREPARE stmt_name2;	

								#新增首冲人数、金额---历史
								set @firstRechargeNumber=0,@firstRecharge=0;
								set @sqlStr3=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @firstRechargeNumber,@firstRecharge
																		from 
																		(
																			select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																					 where log.nType=23 and log.nPlayerID=temp2.nPlayerID 
																																								 and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																			from (								
																						select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																						from
																						(																									
																							select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																							where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																									and not exists(select b.nPlayerID from table_webdata_playerscore b 
																																 where nClubId=",@nClubId," and b.nRechargeCount>0 and b.nRechargeAmount>0 and b.tEndTime<'",@currdateStart,"' 
																																			 and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId) 
																						)temp1  GROUP BY nPlayerID
																												
																					)temp2
																		)temp3");
								PREPARE stmt_name3 FROM @sqlStr3; 
								EXECUTE stmt_name3;
								DEALLOCATE PREPARE stmt_name3;


								#新增二冲人数、金额---历史
								set @twoRechargeNumber=0,@twoRecharge=0;						
								set @sqlStr4=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @twoRechargeNumber,@twoRecharge
																			from (
																							select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																				where nPlayerID=tem3.nPlayerID and clubid=",@nClubId," and nType=23 
																																							and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																				ORDER BY CreateTime asc limit 1,1) nAmount
																							from (
																										select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																										where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																													not exists(select b.nPlayerID from table_third_order b 
																																		 where b.nClubId=",@nClubId," and b.nType=3 and b.nStatus in(1,4,6) and b.ConfirmTime<'",@currdateStart,"' 
																																					 and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId)
																										GROUP BY a.clubid,a.nPlayerID 
																							)tem3
																							union 
																							select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																				where nPlayerID=tem4.nPlayerID and clubid=",@nClubId," and nType=23 
																																							and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																				ORDER BY CreateTime asc limit 0,1) nAmount
																							from (
																										select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																										where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"'  
																													and exists(select b.nPlayerID,count(b.nPlayerID) counts from table_third_order b 
																																		 where b.nClubId=",@nClubId," and b.nType=3 and b.nStatus in(1,4,6) and b.ConfirmTime<'",@currdateStart,"' 
																																					 and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId
																																		 GROUP BY b.nClubId,b.nPlayerID HAVING counts=1)
																										GROUP BY a.clubid,a.nPlayerID 
																							)tem4
																			)tem5 where nAmount>0");
								PREPARE stmt_name4 FROM @sqlStr4; 
								EXECUTE stmt_name4;
								DEALLOCATE PREPARE stmt_name4;

								#多次充值人数、金额----每天大于等于2次以上充值人数、金额
								set @manyRechargeNumber=0,@manyRecharge=0;
								set @sqlStr5=CONCAT("select count(counts),IFNULL(SUM(nAmount),0) into @manyRechargeNumber,@manyRecharge from 
																		(
																					select nPlayerID ,count(nPlayerID) counts,IFNULL(SUM(nAmount),0) nAmount from ",@table_clublogscore," 
																					where clubid=? and nType=23 and CreateTime>=? and CreateTime<=?
																					group by nPlayerID
																					HAVING counts>=2
																		)temp3");
								PREPARE stmt_name5 FROM @sqlStr5; 
								EXECUTE stmt_name5 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name5;

								#充值总人数、充值总次数、充值总金额
								set @rechargeNumber=0,@rechargeCount=0,@recharge=0;
								set @sqlStr6=CONCAT("select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @rechargeNumber,@rechargeCount,@recharge 
																		 from ",@table_clublogscore," where clubid=? and nType=23 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name6 FROM @sqlStr6; 
								EXECUTE stmt_name6 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name6;
								#新增首提人数、金额---历史
								set @firstWithdrawalNumber=0,@firstWithdrawal=0;
								set @sqlStr7=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @firstWithdrawalNumber,@firstWithdrawal
																		from 
																		(
																				select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																						 where log.nType=28 and log.nPlayerID=temp2.nPlayerID 
																																									 and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																				from (								
																								select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																								from
																								(																									
																									select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																											and not exists(select b.nPlayerID from table_webdata_playerscore b 
																																		 where nClubId=",@nClubId," and b.nWithdrawalCount>0 and b.nWithdrawalAmount<0 and b.tEndTime<'",@currdateStart,"' 
																																					 and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId)
																								)temp1  GROUP BY nPlayerID
																													
																						)temp2
																		)temp3");
								PREPARE stmt_name7 FROM @sqlStr7; 
								EXECUTE stmt_name7;
								DEALLOCATE PREPARE stmt_name7;

								#新增二提人数、金额---历史
								set @twoWithdrawalNumber=0,@twoWithdrawal=0;						
								set @sqlStr8=CONCAT("select count(nPlayerID) ,IFNULL(SUM(nAmount),0) into @twoWithdrawalNumber,@twoWithdrawal
																		from (
																						select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																			where nPlayerID=tem3.nPlayerID and clubid=",@nClubId," and nType=28 
																																						and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																			ORDER BY CreateTime asc limit 1,1) nAmount
																						from (
																									select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"'  and 
																												not exists(select b.nPlayerID from table_third_order b 
																																	 where b.nClubId=",@nClubId," and b.nType=4 and b.nStatus in(1,4,6) and b.ConfirmTime<'",@currdateStart,"' 
																																				 and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId)
																									GROUP BY a.clubid,a.nPlayerID 
																						)tem3
																						union 
																						select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																			where nPlayerID=tem4.nPlayerID and clubid=",@nClubId," and nType=28 
																																						and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"'  
																																			ORDER BY CreateTime asc limit 0,1) nAmount
																						from (
																									select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																												exists(select b.nPlayerID,count(b.nPlayerID) counts from table_third_order b 
																															 where b.nClubId=",@nClubId," and b.nType=4 and b.nStatus in(1,4,6) and b.ConfirmTime<'",@currdateStart,"' 
																																		 and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId
																															 GROUP BY b.nClubId,b.nPlayerID HAVING counts=1)
																									GROUP BY a.clubid,a.nPlayerID 
																						)tem4
																		)tem5 where nAmount<0");
								PREPARE stmt_name8 FROM @sqlStr8; 
								EXECUTE stmt_name8;
								DEALLOCATE PREPARE stmt_name8;

								#多次提现人数、金额----每天大于等于2次以上提现人数、金额
								set @manyWithdrawalNumber=0,@manyWithdrawal=0;
								set @sqlStr9=CONCAT("select count(counts),IFNULL(SUM(nAmount),0) into @manyWithdrawalNumber,@manyWithdrawal from 
																		(
																					select nPlayerID ,count(nPlayerID) counts,IFNULL(SUM(nAmount),0) nAmount from ",@table_clublogscore," 
																					where clubid=? and nType=28 and CreateTime>=? and CreateTime<=?
																					group by nPlayerID
																					HAVING counts>=2
																		)temp3");
								PREPARE stmt_name9 FROM @sqlStr9; 
								EXECUTE stmt_name9 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name9;

								#提现总人数、提现总次数、提现总金额
								set @withdrawalNumber=0,@withdrawalCount=0,@withdrawal=0;
								set @sqlStr10=CONCAT("select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @withdrawalNumber,@withdrawalCount,@withdrawal 
																			from ",@table_clublogscore,"
																			where clubid=? and nType=28 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name10 FROM @sqlStr10; 
								EXECUTE stmt_name10 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name10;

								#微信充值人数、充值次数、充值金额--nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @weixinRechargeNumber=0,@weixinRechargeCount=0,@weixinRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @weixinRechargeNumber,@weixinRechargeCount,@weixinRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=1
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=1
											)temp3;

								#支付宝充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @zhifubaoRechargeNumber=0,@zhifubaoRechargeCount=0,@zhifubaoRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @zhifubaoRechargeNumber,@zhifubaoRechargeCount,@zhifubaoRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=2
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=2
											)temp3;				
			
								#银行卡充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @bankRechargeNumber=0,@bankRechargeCount=0,@bankRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @bankRechargeNumber,@bankRechargeCount,@bankRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=3
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=3
											)temp3;		

								#云闪付充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @cloudPayRechargeNumber=0,@cloudPayRechargeCount=0,@cloudPayRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @cloudPayRechargeNumber,@cloudPayRechargeCount,@cloudPayRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=4
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=4
											)temp3;

								#在线网银充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @onlineBankRechargeNumber=0,@onlineBankRechargeCount=0,@onlineBankRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @onlineBankRechargeNumber,@onlineBankRechargeCount,@onlineBankRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=5
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=5
											)temp3;

								#快捷支付充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @quickPayRechargeNumber=0,@quickPayRechargeCount=0,@quickPayRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @quickPayRechargeNumber,@quickPayRechargeCount,@quickPayRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=6
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=6
											)temp3;

								#银联扫码充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @unionpayCodeRechargeNumber=0,@unionpayCodeRechargeCount=0,@unionpayCodeRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @unionpayCodeRechargeNumber,@unionpayCodeRechargeCount,@unionpayCodeRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=7
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=7
											)temp3;

								#京东扫码充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @jdCodeRechargeNumber=0,@jdCodeRechargeCount=0,@jdCodeRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @jdCodeRechargeNumber,@jdCodeRechargeCount,@jdCodeRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=8
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=8
											)temp3;

								#QQ支付充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @qqCodeRechargeNumber=0,@qqCodeRechargeCount=0,@qqCodeRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @qqCodeRechargeNumber,@qqCodeRechargeCount,@qqCodeRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=9
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=9
											)temp3;

								#是否存在当天统计记录
								if exists(select nClubID from Table_Web_ManageDepositReport where nClubID=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
										update Table_Web_ManageDepositReport 
										set 
												loginNumber=@loginNumber,gameNumber=@gameNumber,validAdd=@validAdd,addUser=@addUser,
												firstRechargeNumber=@firstRechargeNumber,firstRecharge=@firstRecharge,
												twoRechargeNumber=@twoRechargeNumber,twoRecharge=@twoRecharge,
												manyRechargeNumber=@manyRechargeNumber,manyRecharge=@manyRecharge,
												rechargeNumber=@rechargeNumber,rechargeCount=@rechargeCount,recharge=@recharge,
												firstWithdrawalNumber=@firstWithdrawalNumber,firstWithdrawal=@firstWithdrawal,
												twoWithdrawalNumber=@twoWithdrawalNumber,twoWithdrawal=@twoWithdrawal,
												manyWithdrawalNumber=@manyWithdrawalNumber,manyWithdrawal=@manyWithdrawal,
												withdrawalNumber=@withdrawalNumber,withdrawalCount=@withdrawalCount,withdrawal=@withdrawal,
												weixinRechargeNumber=@weixinRechargeNumber,weixinRechargeCount=@weixinRechargeCount,weixinRecharge=@weixinRecharge,
												zhifubaoRechargeNumber=@zhifubaoRechargeNumber,zhifubaoRechargeCount=@zhifubaoRechargeCount,zhifubaoRecharge=@zhifubaoRecharge,
												bankRechargeNumber=@bankRechargeNumber,bankRechargeCount=@bankRechargeCount,bankRecharge=@bankRecharge,
												cloudPayRechargeNumber=@cloudPayRechargeNumber,cloudPayRechargeCount=@cloudPayRechargeCount,cloudPayRecharge=@cloudPayRecharge,
												onlineBankRechargeNumber=@onlineBankRechargeNumber,onlineBankRechargeCount=@onlineBankRechargeCount,onlineBankRecharge=@onlineBankRecharge,
												quickPayRechargeNumber=@quickPayRechargeNumber,quickPayRechargeCount=@quickPayRechargeCount,quickPayRecharge=@quickPayRecharge,
												unionpayCodeRechargeNumber=@unionpayCodeRechargeNumber,unionpayCodeRechargeCount=@unionpayCodeRechargeCount,unionpayCodeRecharge=@unionpayCodeRecharge,
												jdCodeRechargeNumber=@jdCodeRechargeNumber,jdCodeRechargeCount=@jdCodeRechargeCount,jdCodeRecharge=@jdCodeRecharge,
												qqCodeRechargeNumber=@qqCodeRechargeNumber,qqCodeRechargeCount=@qqCodeRechargeCount,qqCodeRecharge=@qqCodeRecharge
										where nClubID=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
								else 
										insert into Table_Web_ManageDepositReport
										(
											nClubID,loginNumber,gameNumber,validAdd,addUser,
											firstRechargeNumber,firstRecharge,
											twoRechargeNumber,twoRecharge,
											manyRechargeNumber,manyRecharge,
											rechargeNumber,rechargeCount,recharge,
											firstWithdrawalNumber,firstWithdrawal,
											twoWithdrawalNumber,twoWithdrawal,
											manyWithdrawalNumber,manyWithdrawal,
											withdrawalNumber,withdrawalCount,withdrawal,
											weixinRechargeNumber,weixinRechargeCount,weixinRecharge,
											zhifubaoRechargeNumber,zhifubaoRechargeCount,zhifubaoRecharge,
											bankRechargeNumber,bankRechargeCount,bankRecharge,
											cloudPayRechargeNumber,cloudPayRechargeCount,cloudPayRecharge,
											onlineBankRechargeNumber,onlineBankRechargeCount,onlineBankRecharge,
											quickPayRechargeNumber,quickPayRechargeCount,quickPayRecharge,
											unionpayCodeRechargeNumber,unionpayCodeRechargeCount,unionpayCodeRecharge,
											jdCodeRechargeNumber,jdCodeRechargeCount,jdCodeRecharge,
											qqCodeRechargeNumber,qqCodeRechargeCount,qqCodeRecharge,
											tEndTime
										) 
										values(@nClubId,@loginNumber,@gameNumber,@validAdd,@addUser,
														@firstRechargeNumber,@firstRecharge,
														@twoRechargeNumber,@twoRecharge,
														@manyRechargeNumber,@manyRecharge,
														@rechargeNumber,@rechargeCount,@recharge,
														@firstWithdrawalNumber,@firstWithdrawal,
														@twoWithdrawalNumber,@twoWithdrawal,
														@manyWithdrawalNumber,@manyWithdrawal,
														@withdrawalNumber,@withdrawalCount,@withdrawal,
														@weixinRechargeNumber,@weixinRechargeCount,@weixinRecharge,
														@zhifubaoRechargeNumber,@zhifubaoRechargeCount,@zhifubaoRecharge,
														@bankRechargeNumber,@bankRechargeCount,@bankRecharge,
														@cloudPayRechargeNumber,@cloudPayRechargeCount,@cloudPayRecharge,
														@onlineBankRechargeNumber,@onlineBankRechargeCount,@onlineBankRecharge,
														@quickPayRechargeNumber,@quickPayRechargeCount,@quickPayRecharge,
														@unionpayCodeRechargeNumber,@unionpayCodeRechargeCount,@unionpayCodeRecharge,
														@jdCodeRechargeNumber,@jdCodeRechargeCount,@jdCodeRecharge,
														@qqCodeRechargeNumber,@qqCodeRechargeCount,@qqCodeRecharge,
														$startTime);
								end if;
					set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AdminDepositSum20191214
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AdminDepositSum20191214`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AdminDepositSum20191214`(

	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
				
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			
			#创建临时表
			drop temporary table if exists temp_table_AdminDepositSum;  
			create temporary table temp_table_AdminDepositSum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0 
			);

			
			set @sqlStr=CONCAT("insert into  temp_table_AdminDepositSum(nClubId) "," select temp.nClubID
																	 from (
																					select nClubID from table_web_loginlog 
																					where nClubID in(select nClubId from admin_proxy where proxyType=1) and szTime>='",_currdateStart,"' and szTime<='",_currdateEnd,"'
																					union 
																					select nClubID from table_clubmember where tJoinTime>='",_currdateStart,"' and tJoinTime<='",_currdateEnd,"'
																					union 
																					select nClubID from ",@table_clubgamescoredetail," where tEndTime>='",_currdateStart,"'  and tEndTime<='",_currdateEnd,"'
																					union 
																					select clubid nClubID from ",@table_clublogscore," where nType in(23,28) and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'
																		)temp INNER JOIN admin_proxy proxy on temp.nClubID=proxy.nClubId where proxy.ProxyType=1 and proxy.gameProxyType=2");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;		
			
			select count(1) into @totalCount from temp_table_AdminDepositSum;
			if @totalCount >0 then 
						set @currdateStart=_currdateStart,@currdateEnd=_currdateEnd;
						set @currId=1;
						while (@currId<=@totalCount) do
									select nClubId into @nClubId from temp_table_AdminDepositSum where Id=@currId;			
									set @loginNumber=0;
									select count(DISTINCT(nPlayerId)) into @loginNumber from table_web_loginlog where szTime>=_currdateStart and szTime<=_currdateEnd and nClubID=@nClubId;

									
								#游戏人数
								set @gameNumber=0;
								set @sqlStr1=CONCAT("select count(nPlayerId) into @gameNumber  
																		 from( 

																					 select detail.nPlayerId from ",@table_clubgamescoredetail," detail 
																					 where detail.nClubID=",@nClubId," and detail.tEndTime>='",@currdateStart,"' and detail.tEndTime<='",@currdateEnd,"' 
																					 union 
																					 select nPlayerId from table_match_game_score_detail  
																					 where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																				 )temp
																		");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1;
								DEALLOCATE PREPARE stmt_name1;
									
									set @addUser=0;
									select count(mem.nPlayerID) into @addUser from table_clubmember mem 
									where mem.nClubID=@nClubId and mem.nLevel>1 and mem.tJoinTime>=_currdateStart and mem.tJoinTime<=_currdateEnd;

								#有效新增
								set @validAdd=0;
								set @sqlStr2=CONCAT(" select count(nPlayerID) into @validAdd  
																		  from( 
																						select nClubID,nPlayerID from ",@table_clubgamescoredetail," where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																						union 
																						select nClubId,nPlayerId from table_match_game_score_detail  where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																					)temp where nPlayerId not in(select nPlayerId from table_webdata_analysis_firstgamehelp where nClubId=",@nClubId," ) 
																		");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2;
								DEALLOCATE PREPARE stmt_name2;
									
									set @firstRechargeNumber=0,@firstRecharge=0;
									set @sqlStr3=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @firstRechargeNumber,@firstRecharge
																			from 
																			(
																					select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																							 where log.nType=23 and log.nPlayerID=temp2.nPlayerID 
																																										 and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																					from (								
																									select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																									from
																									(
																										
																										select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																										where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"'
																												  and not exists(select b.nPlayerID from table_webdata_playerscore b 
																																			   where nClubId=",@nClubId," and b.nRechargeCount>0 and b.nRechargeAmount>0 and b.tEndTime<'",@currdateStart,"' 
																																							 and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId)
																									)temp1  GROUP BY nPlayerID
																														
																							)temp2
																			)temp3");
								PREPARE stmt_name3 FROM @sqlStr3; 
								EXECUTE stmt_name3;
								DEALLOCATE PREPARE stmt_name3;

									
									set @twoRechargeNumber=0,@twoRecharge=0;						
									set @sqlStr4=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @twoRechargeNumber,@twoRecharge
																			from (
																							
																							select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																				where nPlayerID=tem3.nPlayerID and clubid=",@nClubId," and nType=23 
																																							and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																				ORDER BY CreateTime asc limit 1,1) nAmount
																							from (
																										select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																										where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																													not exists(select b.nPlayerID from table_third_order b 
																																		 where b.nClubId=",@nClubId," and b.nType=3 and b.nStatus in(1,4,6) and b.ConfirmTime<'",@currdateStart,"' 
																																					 and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId)
																										GROUP BY a.clubid,a.nPlayerID 
																							)tem3
																							union 													
																							select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																				where nPlayerID=tem4.nPlayerID and clubid=",@nClubId," and nType=23 
																																							and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																				ORDER BY CreateTime asc limit 0,1) nAmount
																							from (
																										select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																										where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																													exists(select b.nPlayerID,count(b.nPlayerID) counts from table_third_order b 
																																 where b.nClubId=",@nClubId," and b.nType=3 and b.nStatus in(1,4,6) and b.ConfirmTime<'",@currdateStart,"' 
																																			and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId
																																 GROUP BY b.nClubId,b.nPlayerID HAVING counts=1)
																										GROUP BY a.clubid,a.nPlayerID 
																							)tem4
																			)tem5 where nAmount>0");
								PREPARE stmt_name4 FROM @sqlStr4; 
								EXECUTE stmt_name4;
								DEALLOCATE PREPARE stmt_name4;

									
								set @manyRechargeNumber=0,@manyRecharge=0;
								set @sqlStr5=CONCAT("select count(counts),IFNULL(SUM(nAmount),0) into @manyRechargeNumber,@manyRecharge from 
								(
											select nPlayerID ,count(nPlayerID) counts,IFNULL(SUM(nAmount),0) nAmount from ",@table_clublogscore," 
											where clubid=? and nType=23 and CreateTime>=? and CreateTime<=?
											group by nPlayerID
											HAVING counts>=2
								)temp3");
								PREPARE stmt_name5 FROM @sqlStr5; 
								EXECUTE stmt_name5 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name5;

									
								set @rechargeNumber=0,@rechargeCount=0,@recharge=0;
								set @sqlStr6=CONCAT("select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @rechargeNumber,@rechargeCount,@recharge 
																		 from ",@table_clublogscore," 
																		 where clubid=? and nType=23 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name6 FROM @sqlStr6; 
								EXECUTE stmt_name6 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name6;

									
								set @firstWithdrawalNumber=0,@firstWithdrawal=0;
								set @sqlStr7=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @firstWithdrawalNumber,@firstWithdrawal
																		from 
																		(
																				select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																						 where log.nType=28 and log.nPlayerID=temp2.nPlayerID 
																																									 and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																				from (								
																								select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																								from
																								(
																									
																									select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"'
																											and not exists(select b.nPlayerID from table_webdata_playerscore b 
																																		 where nClubId=",@nClubId," and b.nWithdrawalCount>0 and b.nWithdrawalAmount<0 and b.tEndTime<'",@currdateStart,"' 
																																		 and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId)
																								)temp1  GROUP BY nPlayerID
																													
																						)temp2
																		)temp3");
								PREPARE stmt_name7 FROM @sqlStr7; 
								EXECUTE stmt_name7;
								DEALLOCATE PREPARE stmt_name7;

									
								set @twoWithdrawalNumber=0,@twoWithdrawal=0;						
								set @sqlStr8=CONCAT("select count(nPlayerID) ,IFNULL(SUM(nAmount),0) into @twoWithdrawalNumber,@twoWithdrawal
																		from (
																						
																						select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																			where nPlayerID=tem3.nPlayerID and clubid=",@nClubId," and nType=28 
																																						and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																			ORDER BY CreateTime asc limit 1,1) nAmount
																						from (
																									select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																												not exists(select b.nPlayerID from table_third_order b 
																																	 where b.nClubId=",@nClubId," and b.nType=4 and b.nStatus in(1,4,6) and b.ConfirmTime<'",@currdateStart,"' 
																																	 and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId)
																									GROUP BY a.clubid,a.nPlayerID 
																						)tem3
																						union 																						
																						select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																			where nPlayerID=tem4.nPlayerID and clubid=",@nClubId," and nType=28 
																																						and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																			ORDER BY CreateTime asc limit 0,1) nAmount
																						from (
																									select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																												exists(select b.nPlayerID,count(b.nPlayerID) counts from table_third_order b 
																															 where b.nClubId=",@nClubId," and b.nType=4 and b.nStatus in(1,4,6) and b.ConfirmTime<'",@currdateStart,"' 
																																		 and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId
																															 GROUP BY b.nClubId,b.nPlayerID HAVING counts=1)
																									GROUP BY a.clubid,a.nPlayerID 
																						)tem4
																		)tem5 where nAmount<0");
								PREPARE stmt_name8 FROM @sqlStr8; 
								EXECUTE stmt_name8;
								DEALLOCATE PREPARE stmt_name8;


									
								set @manyWithdrawalNumber=0,@manyWithdrawal=0;
								set @sqlStr9=CONCAT("select count(counts),IFNULL(SUM(nAmount),0) into @manyWithdrawalNumber,@manyWithdrawal from 
																		(
																					select nPlayerID ,count(nPlayerID) counts,IFNULL(SUM(nAmount),0) nAmount from ",@table_clublogscore," 
																					where clubid=? and nType=28 and CreateTime>=? and CreateTime<=?
																					group by nPlayerID
																					HAVING counts>=2
																		)temp3");
								PREPARE stmt_name9 FROM @sqlStr9; 
								EXECUTE stmt_name9 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name9;

									
								set @withdrawalNumber=0,@withdrawalCount=0,@withdrawal=0;
								set @sqlStr10=CONCAT("select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @withdrawalNumber,@withdrawalCount,@withdrawal 
																			from ",@table_clublogscore,"
																			where clubid=? and nType=28 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name10 FROM @sqlStr10; 
								EXECUTE stmt_name10 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name10;
									

									
									set @weixinRechargeNumber=0,@weixinRechargeCount=0,@weixinRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @weixinRechargeNumber,@weixinRechargeCount,@weixinRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=1
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=1
												)temp3;

									
									set @zhifubaoRechargeNumber=0,@zhifubaoRechargeCount=0,@zhifubaoRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @zhifubaoRechargeNumber,@zhifubaoRechargeCount,@zhifubaoRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=2
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=2
												)temp3;				
				
									
									set @bankRechargeNumber=0,@bankRechargeCount=0,@bankRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @bankRechargeNumber,@bankRechargeCount,@bankRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=3
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=3
												)temp3;		

									
									set @cloudPayRechargeNumber=0,@cloudPayRechargeCount=0,@cloudPayRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @cloudPayRechargeNumber,@cloudPayRechargeCount,@cloudPayRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=4
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=4
												)temp3;

									
									set @onlineBankRechargeNumber=0,@onlineBankRechargeCount=0,@onlineBankRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @onlineBankRechargeNumber,@onlineBankRechargeCount,@onlineBankRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=5
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=5
												)temp3;

									
									set @quickPayRechargeNumber=0,@quickPayRechargeCount=0,@quickPayRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @quickPayRechargeNumber,@quickPayRechargeCount,@quickPayRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=6
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=6
												)temp3;

									
									set @unionpayCodeRechargeNumber=0,@unionpayCodeRechargeCount=0,@unionpayCodeRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @unionpayCodeRechargeNumber,@unionpayCodeRechargeCount,@unionpayCodeRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=7
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=7
												)temp3;

									
									set @jdCodeRechargeNumber=0,@jdCodeRechargeCount=0,@jdCodeRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @jdCodeRechargeNumber,@jdCodeRechargeCount,@jdCodeRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=8
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=8
												)temp3;

									
									set @qqCodeRechargeNumber=0,@qqCodeRechargeCount=0,@qqCodeRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @qqCodeRechargeNumber,@qqCodeRechargeCount,@qqCodeRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=9
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=9
												)temp3;

									
									if exists(select nClubID from Table_Web_ManageDepositReport where nClubID=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
											update Table_Web_ManageDepositReport 
											set 
													loginNumber=@loginNumber,gameNumber=@gameNumber,validAdd=@validAdd,addUser=@addUser,
													firstRechargeNumber=@firstRechargeNumber,firstRecharge=@firstRecharge,
													twoRechargeNumber=@twoRechargeNumber,twoRecharge=@twoRecharge,
													manyRechargeNumber=@manyRechargeNumber,manyRecharge=@manyRecharge,
													rechargeNumber=@rechargeNumber,rechargeCount=@rechargeCount,recharge=@recharge,
													firstWithdrawalNumber=@firstWithdrawalNumber,firstWithdrawal=@firstWithdrawal,
													twoWithdrawalNumber=@twoWithdrawalNumber,twoWithdrawal=@twoWithdrawal,
													manyWithdrawalNumber=@manyWithdrawalNumber,manyWithdrawal=@manyWithdrawal,
													withdrawalNumber=@withdrawalNumber,withdrawalCount=@withdrawalCount,withdrawal=@withdrawal,
													weixinRechargeNumber=@weixinRechargeNumber,weixinRechargeCount=@weixinRechargeCount,weixinRecharge=@weixinRecharge,
													zhifubaoRechargeNumber=@zhifubaoRechargeNumber,zhifubaoRechargeCount=@zhifubaoRechargeCount,zhifubaoRecharge=@zhifubaoRecharge,
													bankRechargeNumber=@bankRechargeNumber,bankRechargeCount=@bankRechargeCount,bankRecharge=@bankRecharge,
													cloudPayRechargeNumber=@cloudPayRechargeNumber,cloudPayRechargeCount=@cloudPayRechargeCount,cloudPayRecharge=@cloudPayRecharge,
													onlineBankRechargeNumber=@onlineBankRechargeNumber,onlineBankRechargeCount=@onlineBankRechargeCount,onlineBankRecharge=@onlineBankRecharge,
													quickPayRechargeNumber=@quickPayRechargeNumber,quickPayRechargeCount=@quickPayRechargeCount,quickPayRecharge=@quickPayRecharge,
													unionpayCodeRechargeNumber=@unionpayCodeRechargeNumber,unionpayCodeRechargeCount=@unionpayCodeRechargeCount,unionpayCodeRecharge=@unionpayCodeRecharge,
													jdCodeRechargeNumber=@jdCodeRechargeNumber,jdCodeRechargeCount=@jdCodeRechargeCount,jdCodeRecharge=@jdCodeRecharge,
													qqCodeRechargeNumber=@qqCodeRechargeNumber,qqCodeRechargeCount=@qqCodeRechargeCount,qqCodeRecharge=@qqCodeRecharge
											where nClubID=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
									else 
											insert into Table_Web_ManageDepositReport
											(
												nClubID,loginNumber,gameNumber,validAdd,addUser,
												firstRechargeNumber,firstRecharge,
												twoRechargeNumber,twoRecharge,
												manyRechargeNumber,manyRecharge,
												rechargeNumber,rechargeCount,recharge,
												firstWithdrawalNumber,firstWithdrawal,
												twoWithdrawalNumber,twoWithdrawal,
												manyWithdrawalNumber,manyWithdrawal,
												withdrawalNumber,withdrawalCount,withdrawal,
												weixinRechargeNumber,weixinRechargeCount,weixinRecharge,
												zhifubaoRechargeNumber,zhifubaoRechargeCount,zhifubaoRecharge,
												bankRechargeNumber,bankRechargeCount,bankRecharge,
												cloudPayRechargeNumber,cloudPayRechargeCount,cloudPayRecharge,
												onlineBankRechargeNumber,onlineBankRechargeCount,onlineBankRecharge,
												quickPayRechargeNumber,quickPayRechargeCount,quickPayRecharge,
												unionpayCodeRechargeNumber,unionpayCodeRechargeCount,unionpayCodeRecharge,
												jdCodeRechargeNumber,jdCodeRechargeCount,jdCodeRecharge,
												qqCodeRechargeNumber,qqCodeRechargeCount,qqCodeRecharge,
												tEndTime
											) 
											values(@nClubId,@loginNumber,@gameNumber,@validAdd,@addUser,
															@firstRechargeNumber,@firstRecharge,
															@twoRechargeNumber,@twoRecharge,
															@manyRechargeNumber,@manyRecharge,
															@rechargeNumber,@rechargeCount,@recharge,
															@firstWithdrawalNumber,@firstWithdrawal,
															@twoWithdrawalNumber,@twoWithdrawal,
															@manyWithdrawalNumber,@manyWithdrawal,
															@withdrawalNumber,@withdrawalCount,@withdrawal,
															@weixinRechargeNumber,@weixinRechargeCount,@weixinRecharge,
															@zhifubaoRechargeNumber,@zhifubaoRechargeCount,@zhifubaoRecharge,
															@bankRechargeNumber,@bankRechargeCount,@bankRecharge,
															@cloudPayRechargeNumber,@cloudPayRechargeCount,@cloudPayRecharge,
															@onlineBankRechargeNumber,@onlineBankRechargeCount,@onlineBankRecharge,
															@quickPayRechargeNumber,@quickPayRechargeCount,@quickPayRecharge,
															@unionpayCodeRechargeNumber,@unionpayCodeRechargeCount,@unionpayCodeRecharge,
															@jdCodeRechargeNumber,@jdCodeRechargeCount,@jdCodeRecharge,
															@qqCodeRechargeNumber,@qqCodeRechargeCount,@qqCodeRecharge,
															$endTime);
									end if;
			
					set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AdminDepositSum20191214_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AdminDepositSum20191214_Pre`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AdminDepositSum20191214_Pre`(

	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
				
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			
			#创建临时表
			drop temporary table if exists temp_table_AdminDepositSum;  
			create temporary table temp_table_AdminDepositSum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0 
			);

			
			set @sqlStr=CONCAT("insert into  temp_table_AdminDepositSum(nClubId) "," select temp.nClubID
																	 from (
																					select nClubID from table_web_loginlog 
																					where nClubID in(select nClubId from admin_proxy where proxyType=1) and szTime>='",_currdateStart,"' and szTime<='",_currdateEnd,"'
																					union 
																					select nClubID from table_clubmember where tJoinTime>='",_currdateStart,"' and tJoinTime<='",_currdateEnd,"'
																					union 
																					select nClubID from ",@table_clubgamescoredetail," where tEndTime>='",_currdateStart,"'  and tEndTime<='",_currdateEnd,"'
																					union 
																					select clubid nClubID from ",@table_clublogscore," where nType in(23,28) and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'
																		)temp INNER JOIN admin_proxy proxy on temp.nClubID=proxy.nClubId where proxy.ProxyType=1 and proxy.gameProxyType=2");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;		
			
			select count(1) into @totalCount from temp_table_AdminDepositSum;
			if @totalCount >0 then 
						set @currdateStart=_currdateStart,@currdateEnd=_currdateEnd;
						set @currId=1;
						while (@currId<=@totalCount) do
									select nClubId into @nClubId from temp_table_AdminDepositSum where Id=@currId;			
									set @loginNumber=0;
									select count(DISTINCT(nPlayerId)) into @loginNumber from table_web_loginlog where szTime>=_currdateStart and szTime<=_currdateEnd and nClubID=@nClubId;

									
								#游戏人数
								set @gameNumber=0;
								set @sqlStr1=CONCAT("select count(nPlayerId) into @gameNumber  
																		 from( 

																					 select detail.nPlayerId from ",@table_clubgamescoredetail," detail 
																					 where detail.nClubID=",@nClubId," and detail.tEndTime>='",@currdateStart,"' and detail.tEndTime<='",@currdateEnd,"' 
																					 union 
																					 select nPlayerId from table_match_game_score_detail  
																					 where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																				 )temp
																		");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1;
								DEALLOCATE PREPARE stmt_name1;
									
									set @addUser=0;
									select count(mem.nPlayerID) into @addUser from table_clubmember mem 
									where mem.nClubID=@nClubId and mem.nLevel>1 and mem.tJoinTime>=_currdateStart and mem.tJoinTime<=_currdateEnd;


								#有效新增
								set @validAdd=0;
								set @sqlStr2=CONCAT(" select count(nPlayerID) into @validAdd  
																		  from( 
																						select nClubID,nPlayerID from ",@table_clubgamescoredetail," where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																						union 
																						select nClubId,nPlayerId from table_match_game_score_detail  where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																					)temp where nPlayerId not in(select nPlayerId from table_webdata_analysis_firstgamehelp where nClubId=",@nClubId," ) 
																		");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2;
								DEALLOCATE PREPARE stmt_name2;
	
									set @firstRechargeNumber=0,@firstRecharge=0;
									set @sqlStr3=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @firstRechargeNumber,@firstRecharge
																			from 
																			(
																					select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																							 where log.nType=23 and log.nPlayerID=temp2.nPlayerID 
																																										 and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																					from (								
																									select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																									from
																									(
																										
																										select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																										where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"'
																												  and not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																			   where clubid=",@nClubId," and b.nType=23 and b.CreateTime<'",@currdateStart,"' 
																																							 and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid)
																									)temp1  GROUP BY nPlayerID
																														
																							)temp2
																			)temp3");
								PREPARE stmt_name3 FROM @sqlStr3; 
								EXECUTE stmt_name3;
								DEALLOCATE PREPARE stmt_name3;

									
									set @twoRechargeNumber=0,@twoRecharge=0;						
									set @sqlStr4=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @twoRechargeNumber,@twoRecharge
																			from (
																							
																							select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																				where nPlayerID=tem3.nPlayerID and clubid=",@nClubId," and nType=23 
																																							and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																				ORDER BY CreateTime asc limit 1,1) nAmount
																							from (
																										select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																										where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																													not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																		 where b.clubid=",@nClubId," and b.nType=23 and b.CreateTime<'",@currdateStart,"' 
																																					 and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid)
																										GROUP BY a.clubid,a.nPlayerID 
																							)tem3
																							union 													
																							select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																				where nPlayerID=tem4.nPlayerID and clubid=",@nClubId," and nType=23 
																																							and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																				ORDER BY CreateTime asc limit 0,1) nAmount
																							from (
																										select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																										where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																													exists(select b.nPlayerID,count(b.nPlayerID) counts from ",@table_clublogscore," b 
																																 where b.clubid=",@nClubId," and b.nType=23 and b.CreateTime<'",@currdateStart,"' 
																																			and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid
																																 GROUP BY b.clubid,b.nPlayerID HAVING counts=1)
																										GROUP BY a.clubid,a.nPlayerID 
																							)tem4
																			)tem5 where nAmount>0");
								PREPARE stmt_name4 FROM @sqlStr4; 
								EXECUTE stmt_name4;
								DEALLOCATE PREPARE stmt_name4;

									
								set @manyRechargeNumber=0,@manyRecharge=0;
								set @sqlStr5=CONCAT("select count(counts),IFNULL(SUM(nAmount),0) into @manyRechargeNumber,@manyRecharge from 
								(
											select nPlayerID ,count(nPlayerID) counts,IFNULL(SUM(nAmount),0) nAmount from ",@table_clublogscore," 
											where clubid=? and nType=23 and CreateTime>=? and CreateTime<=?
											group by nPlayerID
											HAVING counts>=2
								)temp3");
								PREPARE stmt_name5 FROM @sqlStr5; 
								EXECUTE stmt_name5 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name5;

									
								set @rechargeNumber=0,@rechargeCount=0,@recharge=0;
								set @sqlStr6=CONCAT("select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @rechargeNumber,@rechargeCount,@recharge 
																		 from ",@table_clublogscore," 
																		 where clubid=? and nType=23 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name6 FROM @sqlStr6; 
								EXECUTE stmt_name6 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name6;

									
								set @firstWithdrawalNumber=0,@firstWithdrawal=0;
								set @sqlStr7=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @firstWithdrawalNumber,@firstWithdrawal
																		from 
																		(
																				select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																						 where log.nType=28 and log.nPlayerID=temp2.nPlayerID 
																																									 and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																				from (								
																								select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																								from
																								(
																									
																									select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"'
																											and not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																		 where clubid=",@nClubId," and b.nType=28 and b.CreateTime<'",@currdateStart,"' 
																																		 and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid)
																								)temp1  GROUP BY nPlayerID
																													
																						)temp2
																		)temp3");
								PREPARE stmt_name7 FROM @sqlStr7; 
								EXECUTE stmt_name7;
								DEALLOCATE PREPARE stmt_name7;

									
								set @twoWithdrawalNumber=0,@twoWithdrawal=0;						
								set @sqlStr8=CONCAT("select count(nPlayerID) ,IFNULL(SUM(nAmount),0) into @twoWithdrawalNumber,@twoWithdrawal
																		from (
																						
																						select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																			where nPlayerID=tem3.nPlayerID and clubid=",@nClubId," and nType=28 
																																						and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																			ORDER BY CreateTime asc limit 1,1) nAmount
																						from (
																									select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																												not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																	 where b.clubid=",@nClubId," and b.nType=28 and b.CreateTime<'",@currdateStart,"' 
																																	 and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid)
																									GROUP BY a.clubid,a.nPlayerID 
																						)tem3
																						union 																						
																						select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																			where nPlayerID=tem4.nPlayerID and clubid=",@nClubId," and nType=28 
																																						and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																			ORDER BY CreateTime asc limit 0,1) nAmount
																						from (
																									select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																												exists(select b.nPlayerID,count(b.nPlayerID) counts from ",@table_clublogscore," b 
																															 where b.clubid=",@nClubId," and b.nType=28 and b.CreateTime<'",@currdateStart,"' 
																																		 and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid
																															 GROUP BY b.clubid,b.nPlayerID HAVING counts=1)
																									GROUP BY a.clubid,a.nPlayerID 
																						)tem4
																		)tem5 where nAmount<0");
								PREPARE stmt_name8 FROM @sqlStr8; 
								EXECUTE stmt_name8;
								DEALLOCATE PREPARE stmt_name8;


									
								set @manyWithdrawalNumber=0,@manyWithdrawal=0;
								set @sqlStr9=CONCAT("select count(counts),IFNULL(SUM(nAmount),0) into @manyWithdrawalNumber,@manyWithdrawal from 
																		(
																					select nPlayerID ,count(nPlayerID) counts,IFNULL(SUM(nAmount),0) nAmount from ",@table_clublogscore," 
																					where clubid=? and nType=28 and CreateTime>=? and CreateTime<=?
																					group by nPlayerID
																					HAVING counts>=2
																		)temp3");
								PREPARE stmt_name9 FROM @sqlStr9; 
								EXECUTE stmt_name9 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name9;

									
								set @withdrawalNumber=0,@withdrawalCount=0,@withdrawal=0;
								set @sqlStr10=CONCAT("select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @withdrawalNumber,@withdrawalCount,@withdrawal 
																			from ",@table_clublogscore,"
																			where clubid=? and nType=28 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name10 FROM @sqlStr10; 
								EXECUTE stmt_name10 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name10;
									

									
									set @weixinRechargeNumber=0,@weixinRechargeCount=0,@weixinRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @weixinRechargeNumber,@weixinRechargeCount,@weixinRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=1
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=1
												)temp3;

									
									set @zhifubaoRechargeNumber=0,@zhifubaoRechargeCount=0,@zhifubaoRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @zhifubaoRechargeNumber,@zhifubaoRechargeCount,@zhifubaoRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=2
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=2
												)temp3;				
				
									
									set @bankRechargeNumber=0,@bankRechargeCount=0,@bankRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @bankRechargeNumber,@bankRechargeCount,@bankRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=3
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=3
												)temp3;		

									
									set @cloudPayRechargeNumber=0,@cloudPayRechargeCount=0,@cloudPayRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @cloudPayRechargeNumber,@cloudPayRechargeCount,@cloudPayRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=4
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=4
												)temp3;

									
									set @onlineBankRechargeNumber=0,@onlineBankRechargeCount=0,@onlineBankRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @onlineBankRechargeNumber,@onlineBankRechargeCount,@onlineBankRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=5
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=5
												)temp3;

									
									set @quickPayRechargeNumber=0,@quickPayRechargeCount=0,@quickPayRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @quickPayRechargeNumber,@quickPayRechargeCount,@quickPayRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=6
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=6
												)temp3;

									
									set @unionpayCodeRechargeNumber=0,@unionpayCodeRechargeCount=0,@unionpayCodeRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @unionpayCodeRechargeNumber,@unionpayCodeRechargeCount,@unionpayCodeRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=7
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=7
												)temp3;

									
									set @jdCodeRechargeNumber=0,@jdCodeRechargeCount=0,@jdCodeRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @jdCodeRechargeNumber,@jdCodeRechargeCount,@jdCodeRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=8
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=8
												)temp3;

									
									set @qqCodeRechargeNumber=0,@qqCodeRechargeCount=0,@qqCodeRecharge=0;
									select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @qqCodeRechargeNumber,@qqCodeRechargeCount,@qqCodeRecharge
									from (
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=9
													union all 
													select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
													where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=9
												)temp3;

									
									if exists(select nClubID from Table_Web_ManageDepositReport where nClubID=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
											update Table_Web_ManageDepositReport 
											set 
													loginNumber=@loginNumber,gameNumber=@gameNumber,validAdd=@validAdd,addUser=@addUser,
													firstRechargeNumber=@firstRechargeNumber,firstRecharge=@firstRecharge,
													twoRechargeNumber=@twoRechargeNumber,twoRecharge=@twoRecharge,
													manyRechargeNumber=@manyRechargeNumber,manyRecharge=@manyRecharge,
													rechargeNumber=@rechargeNumber,rechargeCount=@rechargeCount,recharge=@recharge,
													firstWithdrawalNumber=@firstWithdrawalNumber,firstWithdrawal=@firstWithdrawal,
													twoWithdrawalNumber=@twoWithdrawalNumber,twoWithdrawal=@twoWithdrawal,
													manyWithdrawalNumber=@manyWithdrawalNumber,manyWithdrawal=@manyWithdrawal,
													withdrawalNumber=@withdrawalNumber,withdrawalCount=@withdrawalCount,withdrawal=@withdrawal,
													weixinRechargeNumber=@weixinRechargeNumber,weixinRechargeCount=@weixinRechargeCount,weixinRecharge=@weixinRecharge,
													zhifubaoRechargeNumber=@zhifubaoRechargeNumber,zhifubaoRechargeCount=@zhifubaoRechargeCount,zhifubaoRecharge=@zhifubaoRecharge,
													bankRechargeNumber=@bankRechargeNumber,bankRechargeCount=@bankRechargeCount,bankRecharge=@bankRecharge,
													cloudPayRechargeNumber=@cloudPayRechargeNumber,cloudPayRechargeCount=@cloudPayRechargeCount,cloudPayRecharge=@cloudPayRecharge,
													onlineBankRechargeNumber=@onlineBankRechargeNumber,onlineBankRechargeCount=@onlineBankRechargeCount,onlineBankRecharge=@onlineBankRecharge,
													quickPayRechargeNumber=@quickPayRechargeNumber,quickPayRechargeCount=@quickPayRechargeCount,quickPayRecharge=@quickPayRecharge,
													unionpayCodeRechargeNumber=@unionpayCodeRechargeNumber,unionpayCodeRechargeCount=@unionpayCodeRechargeCount,unionpayCodeRecharge=@unionpayCodeRecharge,
													jdCodeRechargeNumber=@jdCodeRechargeNumber,jdCodeRechargeCount=@jdCodeRechargeCount,jdCodeRecharge=@jdCodeRecharge,
													qqCodeRechargeNumber=@qqCodeRechargeNumber,qqCodeRechargeCount=@qqCodeRechargeCount,qqCodeRecharge=@qqCodeRecharge
											where nClubID=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
									else 
											insert into Table_Web_ManageDepositReport
											(
												nClubID,loginNumber,gameNumber,validAdd,addUser,
												firstRechargeNumber,firstRecharge,
												twoRechargeNumber,twoRecharge,
												manyRechargeNumber,manyRecharge,
												rechargeNumber,rechargeCount,recharge,
												firstWithdrawalNumber,firstWithdrawal,
												twoWithdrawalNumber,twoWithdrawal,
												manyWithdrawalNumber,manyWithdrawal,
												withdrawalNumber,withdrawalCount,withdrawal,
												weixinRechargeNumber,weixinRechargeCount,weixinRecharge,
												zhifubaoRechargeNumber,zhifubaoRechargeCount,zhifubaoRecharge,
												bankRechargeNumber,bankRechargeCount,bankRecharge,
												cloudPayRechargeNumber,cloudPayRechargeCount,cloudPayRecharge,
												onlineBankRechargeNumber,onlineBankRechargeCount,onlineBankRecharge,
												quickPayRechargeNumber,quickPayRechargeCount,quickPayRecharge,
												unionpayCodeRechargeNumber,unionpayCodeRechargeCount,unionpayCodeRecharge,
												jdCodeRechargeNumber,jdCodeRechargeCount,jdCodeRecharge,
												qqCodeRechargeNumber,qqCodeRechargeCount,qqCodeRecharge,
												tEndTime
											) 
											values(@nClubId,@loginNumber,@gameNumber,@validAdd,@addUser,
															@firstRechargeNumber,@firstRecharge,
															@twoRechargeNumber,@twoRecharge,
															@manyRechargeNumber,@manyRecharge,
															@rechargeNumber,@rechargeCount,@recharge,
															@firstWithdrawalNumber,@firstWithdrawal,
															@twoWithdrawalNumber,@twoWithdrawal,
															@manyWithdrawalNumber,@manyWithdrawal,
															@withdrawalNumber,@withdrawalCount,@withdrawal,
															@weixinRechargeNumber,@weixinRechargeCount,@weixinRecharge,
															@zhifubaoRechargeNumber,@zhifubaoRechargeCount,@zhifubaoRecharge,
															@bankRechargeNumber,@bankRechargeCount,@bankRecharge,
															@cloudPayRechargeNumber,@cloudPayRechargeCount,@cloudPayRecharge,
															@onlineBankRechargeNumber,@onlineBankRechargeCount,@onlineBankRecharge,
															@quickPayRechargeNumber,@quickPayRechargeCount,@quickPayRecharge,
															@unionpayCodeRechargeNumber,@unionpayCodeRechargeCount,@unionpayCodeRecharge,
															@jdCodeRechargeNumber,@jdCodeRechargeCount,@jdCodeRecharge,
															@qqCodeRechargeNumber,@qqCodeRechargeCount,@qqCodeRecharge,
															$endTime);
									end if;
			
					set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AdminDepositSum_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AdminDepositSum_Pre`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AdminDepositSum_Pre`(
/*
		创建时间:2020-05-26
		修改时间:2020-05-26
		功能描述:Admin财务管理-充值、提现分析
	*/
	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
				#当前时间年月日
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			
			#创建临时表
			drop temporary table if exists temp_table_AdminDepositSum;  
			create temporary table temp_table_AdminDepositSum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0 
			);
			set @sqlStr=CONCAT("insert into  temp_table_AdminDepositSum(nClubId) "," select temp.nClubID
																	 from (
																					select nClubID from table_web_loginlog 
																					where nClubID in(select nClubId from admin_proxy where proxyType=1) and szTime>='",_currdateStart,"' and szTime<='",_currdateEnd,"'
																					union 
																					select nClubID from table_clubmember where tJoinTime>='",_currdateStart,"' and tJoinTime<='",_currdateEnd,"'
																					union 
																					select nClubID from ",@table_clubgamescoredetail," where tEndTime>='",_currdateStart,"'  and tEndTime<='",_currdateEnd,"'
																					union 
																					select clubid nClubID from ",@table_clublogscore," where nType in(23,28) and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'
																		)temp INNER JOIN admin_proxy proxy on temp.nClubID=proxy.nClubId where proxy.ProxyType=1 and proxy.gameProxyType=2");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;		
			
			select count(1) into @totalCount from temp_table_AdminDepositSum;
			if @totalCount >0 then 
						set @currdateStart=_currdateStart,@currdateEnd=_currdateEnd;
						set @currId=1;
						while (@currId<=@totalCount) do
								select nClubId into @nClubId from temp_table_AdminDepositSum where Id=@currId;
								#登录人数
								set @loginNumber=0;
								select count(DISTINCT(nPlayerId)) into @loginNumber from table_web_loginlog where szTime>=_currdateStart and szTime<=_currdateEnd and nClubID=@nClubId;

								#游戏人数
								set @gameNumber=0;
								set @sqlStr1=CONCAT("select count(nPlayerId) into @gameNumber  
																		 from( 

																					 select detail.nPlayerId from ",@table_clubgamescoredetail," detail 
																					 where detail.nClubID=",@nClubId," and detail.tEndTime>='",@currdateStart,"' and detail.tEndTime<='",@currdateEnd,"' 
																					 union 
																					 select nPlayerId from table_match_game_score_detail  
																					 where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																				 )temp
																		");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1;
								DEALLOCATE PREPARE stmt_name1;

								#新增
								set @addUser=0;
								select count(mem.nPlayerID) into @addUser from table_clubmember mem 
								where mem.nClubID=@nClubId and mem.nLevel>1 and mem.tJoinTime>=_currdateStart and mem.tJoinTime<=_currdateEnd;

								#有效新增
								set @validAdd=0;
								set @sqlStr2=CONCAT(" select count(nPlayerID) into @validAdd  
																		  from( 
																						select nClubID,nPlayerID from ",@table_clubgamescoredetail," where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																						union 
																						select nClubId,nPlayerId from table_match_game_score_detail  where nClubID=",@nClubId," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																					)temp where nPlayerId not in(select nPlayerId from table_webdata_analysis_firstgamehelp where nClubId=",@nClubId," ) 
																		");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2;
								DEALLOCATE PREPARE stmt_name2;

								#新增首冲人数、金额---历史
								set @firstRechargeNumber=0,@firstRecharge=0;
								set @sqlStr3=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @firstRechargeNumber,@firstRecharge
																		from 
																		(
																			select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																					 where log.nType=23 and log.nPlayerID=temp2.nPlayerID 
																																								 and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																			from (								
																						select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																						from
																						(																									
																							select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																							where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																									and not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																 where clubid=",@nClubId," and b.nType=23 and b.CreateTime<'",@currdateStart,"' 
																																			 and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid) 
																						)temp1  GROUP BY nPlayerID
																												
																					)temp2
																		)temp3");
								PREPARE stmt_name3 FROM @sqlStr3; 
								EXECUTE stmt_name3;
								DEALLOCATE PREPARE stmt_name3;


								#新增二冲人数、金额---历史
								set @twoRechargeNumber=0,@twoRecharge=0;						
								set @sqlStr4=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @twoRechargeNumber,@twoRecharge
																			from (
																							select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																				where nPlayerID=tem3.nPlayerID and clubid=",@nClubId," and nType=23 
																																							and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																				ORDER BY CreateTime asc limit 1,1) nAmount
																							from (
																										select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																										where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																													not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																		 where b.clubid=",@nClubId," and b.nType=23 and b.CreateTime<'",@currdateStart,"' 
																																					 and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid)
																										GROUP BY a.clubid,a.nPlayerID 
																							)tem3
																							union 
																							select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																				where nPlayerID=tem4.nPlayerID and clubid=",@nClubId," and nType=23 
																																							and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																				ORDER BY CreateTime asc limit 0,1) nAmount
																							from (
																										select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																										where clubid=",@nClubId," and nType=23 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"'  
																													and exists(select b.nPlayerID,count(b.nPlayerID) counts from ",@table_clublogscore," b 
																																		 where b.clubid=",@nClubId," and b.nType=23 and b.CreateTime<'",@currdateStart,"' 
																																					 and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid
																																		 GROUP BY b.clubid,b.nPlayerID HAVING counts=1)
																										GROUP BY a.clubid,a.nPlayerID 
																							)tem4
																			)tem5 where nAmount>0");
								PREPARE stmt_name4 FROM @sqlStr4; 
								EXECUTE stmt_name4;
								DEALLOCATE PREPARE stmt_name4;

								#多次充值人数、金额----每天大于等于2次以上充值人数、金额
								set @manyRechargeNumber=0,@manyRecharge=0;
								set @sqlStr5=CONCAT("select count(counts),IFNULL(SUM(nAmount),0) into @manyRechargeNumber,@manyRecharge from 
																		(
																					select nPlayerID ,count(nPlayerID) counts,IFNULL(SUM(nAmount),0) nAmount from ",@table_clublogscore," 
																					where clubid=? and nType=23 and CreateTime>=? and CreateTime<=?
																					group by nPlayerID
																					HAVING counts>=2
																		)temp3");
								PREPARE stmt_name5 FROM @sqlStr5; 
								EXECUTE stmt_name5 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name5;

								#充值总人数、充值总次数、充值总金额
								set @rechargeNumber=0,@rechargeCount=0,@recharge=0;
								set @sqlStr6=CONCAT("select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @rechargeNumber,@rechargeCount,@recharge 
																		 from ",@table_clublogscore," where clubid=? and nType=23 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name6 FROM @sqlStr6; 
								EXECUTE stmt_name6 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name6;
								#新增首提人数、金额---历史
								set @firstWithdrawalNumber=0,@firstWithdrawal=0;
								set @sqlStr7=CONCAT("select count(nPlayerID),IFNULL(SUM(nAmount),0) into @firstWithdrawalNumber,@firstWithdrawal
																		from 
																		(
																				select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																						 where log.nType=28 and log.nPlayerID=temp2.nPlayerID 
																																									 and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																				from (								
																								select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																								from
																								(																									
																									select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																											and not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																		 where clubid=",@nClubId," and b.nType=28 and b.CreateTime<'",@currdateStart,"' 
																																					 and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid)
																								)temp1  GROUP BY nPlayerID
																													
																						)temp2
																		)temp3");
								PREPARE stmt_name7 FROM @sqlStr7; 
								EXECUTE stmt_name7;
								DEALLOCATE PREPARE stmt_name7;

								#新增二提人数、金额---历史
								set @twoWithdrawalNumber=0,@twoWithdrawal=0;						
								set @sqlStr8=CONCAT("select count(nPlayerID) ,IFNULL(SUM(nAmount),0) into @twoWithdrawalNumber,@twoWithdrawal
																		from (
																						select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																			where nPlayerID=tem3.nPlayerID and clubid=",@nClubId," and nType=28 
																																						and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' 
																																			ORDER BY CreateTime asc limit 1,1) nAmount
																						from (
																									select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"'  and 
																												not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																	 where b.clubid=",@nClubId," and b.nType=28 and b.CreateTime<'",@currdateStart,"' 
																																				 and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid)
																									GROUP BY a.clubid,a.nPlayerID 
																						)tem3
																						union 
																						select nClubId,nPlayerID,(select nAmount from ",@table_clublogscore," 
																																			where nPlayerID=tem4.nPlayerID and clubid=",@nClubId," and nType=28 
																																						and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"'  
																																			ORDER BY CreateTime asc limit 0,1) nAmount
																						from (
																									select a.clubid nClubId,a.nPlayerID from ",@table_clublogscore," a
																									where clubid=",@nClubId," and nType=28 and CreateTime>='",@currdateStart,"' and CreateTime<='",@currdateEnd,"' and 
																												exists(select b.nPlayerID,count(b.nPlayerID) counts from ",@table_clublogscore," b 
																															 where b.clubid=",@nClubId," and b.nType=28 and b.CreateTime<'",@currdateStart,"' 
																																		 and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid
																															 GROUP BY b.clubid,b.nPlayerID HAVING counts=1)
																									GROUP BY a.clubid,a.nPlayerID 
																						)tem4
																		)tem5 where nAmount<0");
								PREPARE stmt_name8 FROM @sqlStr8; 
								EXECUTE stmt_name8;
								DEALLOCATE PREPARE stmt_name8;

								#多次提现人数、金额----每天大于等于2次以上提现人数、金额
								set @manyWithdrawalNumber=0,@manyWithdrawal=0;
								set @sqlStr9=CONCAT("select count(counts),IFNULL(SUM(nAmount),0) into @manyWithdrawalNumber,@manyWithdrawal from 
																		(
																					select nPlayerID ,count(nPlayerID) counts,IFNULL(SUM(nAmount),0) nAmount from ",@table_clublogscore," 
																					where clubid=? and nType=28 and CreateTime>=? and CreateTime<=?
																					group by nPlayerID
																					HAVING counts>=2
																		)temp3");
								PREPARE stmt_name9 FROM @sqlStr9; 
								EXECUTE stmt_name9 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name9;

								#提现总人数、提现总次数、提现总金额
								set @withdrawalNumber=0,@withdrawalCount=0,@withdrawal=0;
								set @sqlStr10=CONCAT("select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @withdrawalNumber,@withdrawalCount,@withdrawal 
																			from ",@table_clublogscore,"
																			where clubid=? and nType=28 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name10 FROM @sqlStr10; 
								EXECUTE stmt_name10 USING  @nClubId,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name10;

								#微信充值人数、充值次数、充值金额--nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @weixinRechargeNumber=0,@weixinRechargeCount=0,@weixinRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @weixinRechargeNumber,@weixinRechargeCount,@weixinRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=1
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=1
											)temp3;

								#支付宝充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @zhifubaoRechargeNumber=0,@zhifubaoRechargeCount=0,@zhifubaoRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @zhifubaoRechargeNumber,@zhifubaoRechargeCount,@zhifubaoRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=2
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=2
											)temp3;				
			
								#银行卡充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @bankRechargeNumber=0,@bankRechargeCount=0,@bankRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @bankRechargeNumber,@bankRechargeCount,@bankRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=3
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=3
											)temp3;		

								#云闪付充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @cloudPayRechargeNumber=0,@cloudPayRechargeCount=0,@cloudPayRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @cloudPayRechargeNumber,@cloudPayRechargeCount,@cloudPayRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=4
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=4
											)temp3;

								#在线网银充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @onlineBankRechargeNumber=0,@onlineBankRechargeCount=0,@onlineBankRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @onlineBankRechargeNumber,@onlineBankRechargeCount,@onlineBankRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=5
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=5
											)temp3;

								#快捷支付充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @quickPayRechargeNumber=0,@quickPayRechargeCount=0,@quickPayRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @quickPayRechargeNumber,@quickPayRechargeCount,@quickPayRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=6
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=6
											)temp3;

								#银联扫码充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @unionpayCodeRechargeNumber=0,@unionpayCodeRechargeCount=0,@unionpayCodeRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @unionpayCodeRechargeNumber,@unionpayCodeRechargeCount,@unionpayCodeRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=7
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=7
											)temp3;

								#京东扫码充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @jdCodeRechargeNumber=0,@jdCodeRechargeCount=0,@jdCodeRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @jdCodeRechargeNumber,@jdCodeRechargeCount,@jdCodeRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=8
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=8
											)temp3;

								#QQ支付充值人数、充值次数、充值金额nRechargeCount:(1-微信;2-支付宝;3-银行卡;4-云闪付;5-在线网银;6-快捷支付;7-银联扫码;8-京东扫码;9-QQ支付;)
								set @qqCodeRechargeNumber=0,@qqCodeRechargeCount=0,@qqCodeRecharge=0;
								select count(DISTINCT(nPlayerID)),count(1),IFNULL(SUM(nAmount),0) into @qqCodeRechargeNumber,@qqCodeRechargeCount,@qqCodeRecharge
								from (
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=1 and nRechargeCount=9
												union all 
												select nPlayerID,IFNULL(nAmount,0) nAmount from table_third_order 
												where nClubID=@nClubId and ConfirmTime>=_currdateStart and ConfirmTime<=_currdateEnd and nType=3 and nStatus=4 and nRechargeCount=9
											)temp3;

								#是否存在当天统计记录
								if exists(select nClubID from Table_Web_ManageDepositReport where nClubID=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
										update Table_Web_ManageDepositReport 
										set 
												loginNumber=@loginNumber,gameNumber=@gameNumber,validAdd=@validAdd,addUser=@addUser,
												firstRechargeNumber=@firstRechargeNumber,firstRecharge=@firstRecharge,
												twoRechargeNumber=@twoRechargeNumber,twoRecharge=@twoRecharge,
												manyRechargeNumber=@manyRechargeNumber,manyRecharge=@manyRecharge,
												rechargeNumber=@rechargeNumber,rechargeCount=@rechargeCount,recharge=@recharge,
												firstWithdrawalNumber=@firstWithdrawalNumber,firstWithdrawal=@firstWithdrawal,
												twoWithdrawalNumber=@twoWithdrawalNumber,twoWithdrawal=@twoWithdrawal,
												manyWithdrawalNumber=@manyWithdrawalNumber,manyWithdrawal=@manyWithdrawal,
												withdrawalNumber=@withdrawalNumber,withdrawalCount=@withdrawalCount,withdrawal=@withdrawal,
												weixinRechargeNumber=@weixinRechargeNumber,weixinRechargeCount=@weixinRechargeCount,weixinRecharge=@weixinRecharge,
												zhifubaoRechargeNumber=@zhifubaoRechargeNumber,zhifubaoRechargeCount=@zhifubaoRechargeCount,zhifubaoRecharge=@zhifubaoRecharge,
												bankRechargeNumber=@bankRechargeNumber,bankRechargeCount=@bankRechargeCount,bankRecharge=@bankRecharge,
												cloudPayRechargeNumber=@cloudPayRechargeNumber,cloudPayRechargeCount=@cloudPayRechargeCount,cloudPayRecharge=@cloudPayRecharge,
												onlineBankRechargeNumber=@onlineBankRechargeNumber,onlineBankRechargeCount=@onlineBankRechargeCount,onlineBankRecharge=@onlineBankRecharge,
												quickPayRechargeNumber=@quickPayRechargeNumber,quickPayRechargeCount=@quickPayRechargeCount,quickPayRecharge=@quickPayRecharge,
												unionpayCodeRechargeNumber=@unionpayCodeRechargeNumber,unionpayCodeRechargeCount=@unionpayCodeRechargeCount,unionpayCodeRecharge=@unionpayCodeRecharge,
												jdCodeRechargeNumber=@jdCodeRechargeNumber,jdCodeRechargeCount=@jdCodeRechargeCount,jdCodeRecharge=@jdCodeRecharge,
												qqCodeRechargeNumber=@qqCodeRechargeNumber,qqCodeRechargeCount=@qqCodeRechargeCount,qqCodeRecharge=@qqCodeRecharge
										where nClubID=@nClubId and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
								else 
										insert into Table_Web_ManageDepositReport
										(
											nClubID,loginNumber,gameNumber,validAdd,addUser,
											firstRechargeNumber,firstRecharge,
											twoRechargeNumber,twoRecharge,
											manyRechargeNumber,manyRecharge,
											rechargeNumber,rechargeCount,recharge,
											firstWithdrawalNumber,firstWithdrawal,
											twoWithdrawalNumber,twoWithdrawal,
											manyWithdrawalNumber,manyWithdrawal,
											withdrawalNumber,withdrawalCount,withdrawal,
											weixinRechargeNumber,weixinRechargeCount,weixinRecharge,
											zhifubaoRechargeNumber,zhifubaoRechargeCount,zhifubaoRecharge,
											bankRechargeNumber,bankRechargeCount,bankRecharge,
											cloudPayRechargeNumber,cloudPayRechargeCount,cloudPayRecharge,
											onlineBankRechargeNumber,onlineBankRechargeCount,onlineBankRecharge,
											quickPayRechargeNumber,quickPayRechargeCount,quickPayRecharge,
											unionpayCodeRechargeNumber,unionpayCodeRechargeCount,unionpayCodeRecharge,
											jdCodeRechargeNumber,jdCodeRechargeCount,jdCodeRecharge,
											qqCodeRechargeNumber,qqCodeRechargeCount,qqCodeRecharge,
											tEndTime
										) 
										values(@nClubId,@loginNumber,@gameNumber,@validAdd,@addUser,
														@firstRechargeNumber,@firstRecharge,
														@twoRechargeNumber,@twoRecharge,
														@manyRechargeNumber,@manyRecharge,
														@rechargeNumber,@rechargeCount,@recharge,
														@firstWithdrawalNumber,@firstWithdrawal,
														@twoWithdrawalNumber,@twoWithdrawal,
														@manyWithdrawalNumber,@manyWithdrawal,
														@withdrawalNumber,@withdrawalCount,@withdrawal,
														@weixinRechargeNumber,@weixinRechargeCount,@weixinRecharge,
														@zhifubaoRechargeNumber,@zhifubaoRechargeCount,@zhifubaoRecharge,
														@bankRechargeNumber,@bankRechargeCount,@bankRecharge,
														@cloudPayRechargeNumber,@cloudPayRechargeCount,@cloudPayRecharge,
														@onlineBankRechargeNumber,@onlineBankRechargeCount,@onlineBankRecharge,
														@quickPayRechargeNumber,@quickPayRechargeCount,@quickPayRecharge,
														@unionpayCodeRechargeNumber,@unionpayCodeRechargeCount,@unionpayCodeRecharge,
														@jdCodeRechargeNumber,@jdCodeRechargeCount,@jdCodeRecharge,
														@qqCodeRechargeNumber,@qqCodeRechargeCount,@qqCodeRecharge,
														$startTime);
								end if;
					set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AdminFirstPageSum
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AdminFirstPageSum`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AdminFirstPageSum`(
/*
		功能描述:Admin首页数据汇总
	*/
	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
				#当前时间年月日
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			declare _tempUserId int  default 0;
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			#创建临时表
			drop temporary table if exists temp_table_AdminFirstPageSum;  
			create temporary table temp_table_AdminFirstPageSum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				gameProxyType int DEFAULT 0,
				userPId int DEFAULT 0
			);
			
			set @sqlStr=CONCAT("insert into temp_table_AdminFirstPageSum(nClubId,gameProxyType,userPId) 
														 select temp.nClubID,proxy.GameProxyType ,proxy.userPId
														 from (
																		select nClubID from table_web_loginlog 
																		where nClubID in(select nClubId from admin_proxy where proxyType=1) and szTime>='",_currdateStart,"' and szTime<='",_currdateEnd,"'
																		union 
																		select nClubID from table_clubmember where tJoinTime>='",_currdateStart,"' and tJoinTime<='",_currdateEnd,"'
																		union 
																		select nClubID from ",@table_clubgamescoredetail," where tEndTime>='",_currdateStart,"' and tEndTime<='",_currdateEnd,"'
																		union 
																		select clubid nClubID from ",@table_clublogscore," 
																		where nType in(1,2,23,24,26,28,29,30,31,32) and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'
															)temp INNER JOIN admin_proxy proxy on temp.nClubID=proxy.nClubId where proxy.ProxyType=1");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
			select count(1) into @totalCount from temp_table_AdminFirstPageSum;
			if @totalCount >0 then 
						set @currdateStart=_currdateStart,@currdateEnd=_currdateEnd;
						set @currId=1;
						while (@currId<=@totalCount) do
								select nClubID,gameProxyType,userPId into @nClubID,@gameProxyType,@userPId from temp_table_AdminFirstPageSum where Id=@currId;
								#第一次删除
								if @currId=1 then 
										delete from Table_Web_ManageFirstPageReport where tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
								end if;
								#登录人数
								set @loginNumber=0;
								select count(DISTINCT(nPlayerId)) into @loginNumber from table_web_loginlog where szTime>=_currdateStart and szTime<=_currdateEnd and nClubID=@nClubID;

								#游戏人数
								set @gameNumber=0;
								set @sqlStr1=CONCAT("select count(nPlayerId) into @gameNumber  
																		 from( 

																					 select detail.nPlayerId from ",@table_clubgamescoredetail," detail 
																					 where detail.nClubID=",@nClubID," and detail.tEndTime>='",@currdateStart,"' and detail.tEndTime<='",@currdateEnd,"' 
																					 union 
																					 select nPlayerId from table_match_game_score_detail  
																					 where nClubID=",@nClubID," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																				 )temp
																		");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1;
								DEALLOCATE PREPARE stmt_name1;

								#新增
								set @addUser=0;
								select count(mem.nPlayerID) into @addUser from table_clubmember mem 
								where mem.nClubID=@nClubID and mem.nLevel>1 and mem.tJoinTime>=_currdateStart and mem.tJoinTime<=_currdateEnd;


								#有效新增
								set @validAdd=0;
								set @sqlStr2=CONCAT(" select count(nPlayerID) into @validAdd  
																		  from( 
																						select nClubID,nPlayerID from ",@table_clubgamescoredetail," where nClubID=",@nClubID," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																						union 
																						select nClubId,nPlayerId from table_match_game_score_detail  where nClubID=",@nClubID," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																					)temp where nPlayerId not in(select nPlayerId from table_webdata_analysis_firstgamehelp where nClubId=",@nClubID," ) 
																		");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2;
								DEALLOCATE PREPARE stmt_name2;								

								#上分、下分、充值金额23、24任务、返利26、提现金额28,29活动
								set @nUpScore=0,@nDownScore=0,@recharge=0,@tasknAmount=0,@returnRebate=0,@withdrawal=0,@activityAmount=0,@matchFee=0,@returnMatchFee=0,@matchAmount=0;
								set @sqlStr3=CONCAT("select IFNULL(sum(case when nType=1 then nAmount  else 0 end),0) nUpScore,
																						IFNULL(sum(case when nType=2 then nAmount  else 0 end),0) nDownScore,
																						IFNULL(sum(case when nType=23 then nAmount  else 0 end),0) recharge,
																						IFNULL(sum(case when nType=24 then nAmount  else 0 end),0) tasknAmount,
																						IFNULL(sum(case when nType=26 then nAmount  else 0 end),0) returnRebate,
																						IFNULL(sum(case when nType=28 then nAmount  else 0 end),0) withdrawal,										
																						IFNULL(sum(case when nType=29 then nAmount  else 0 end),0) activityAmount,
																						IFNULL(sum(case when nType=30 then nAmount  else 0 end),0) matchFee,
																						IFNULL(sum(case when nType=31 then nAmount  else 0 end),0) returnMatchFee,
																						IFNULL(sum(case when nType=32 then nAmount  else 0 end),0) matchAmount
																						into @nUpScore,@nDownScore,@recharge,@tasknAmount,@returnRebate,@withdrawal,@activityAmount,@matchFee,@returnMatchFee,@matchAmount 
																		from ",@table_clublogscore," log 
																		where log.clubid=? and log.nType in(1,2,23,24,26,28,29,30,31,32) and    log.CreateTime>=? and log.CreateTime<=?");
								PREPARE stmt_name3 FROM @sqlStr3; 
								EXECUTE stmt_name3 USING  @nClubID,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name3;

								#总投注、游戏盈亏、有效投注、抽水、局数_人
								set @nBetScore=0,@nResultMoney=0,@nValidBet=0,@nTax=0,@roundNumber=0;
								set @sqlStr4=CONCAT("select IFNULL(SUM(nBetScore),0) nBetScore,IFNULL(SUM(nResultMoney),0) nResultMoney,IFNULL(SUM(nValidBet),0) nValidBet,
																						 IFNULL(SUM(nTax),0) nTax, count(szToken) roundNumber
																						 into @nBetScore,@nResultMoney,@nValidBet,@nTax,@roundNumber
																			from ",@table_clubgamescoredetail," detail 
																			where detail.nClubID=? and detail.tEndTime>=? and detail.tEndTime<=?");
								PREPARE stmt_name4 FROM @sqlStr4; 
								EXECUTE stmt_name4 USING  @nClubID,@currdateStart,@currdateEnd;
								DEALLOCATE PREPARE stmt_name4;

								#用户余额
								set @totalnAmount=0;
								select IFNULL(SUM(nScore),0) into @totalnAmount from table_clubmember where nClubID=@nClubID and nStatus=1 and nLevel>1;

								#是否存在当天统计记录
								if exists(select nClubID from Table_Web_ManageFirstPageReport where nClubID=@nClubID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
										set @testA=1;#防止MySql报错
										if @gameProxyType=1 then 	
													update Table_Web_ManageFirstPageReport 
													set loginNumber=loginNumber+@loginNumber,gameNumber=gameNumber+@gameNumber,validAdd=validAdd+@validAdd,addUser=addUser+@addUser,
															recharge=recharge+@recharge,withdrawal=withdrawal+@withdrawal,roundNumber=roundNumber+@roundNumber,
															nValidBet=nValidBet+@nValidBet,nTax=nTax+@nTax,nResultMoney=nResultMoney+@nResultMoney,
															nUpScore=nUpScore+@nUpScore,nDownScore=nDownScore+@nDownScore,nBetScore=nBetScore+@nBetScore,
															tasknAmount=tasknAmount+@tasknAmount,activityAmount=activityAmount+@activityAmount,
															matchFee=matchFee+@matchFee,returnMatchFee=returnMatchFee+@returnMatchFee,matchAmount=matchAmount+@matchAmount,
															returnRebate=returnRebate+@returnRebate,totalnAmount=totalnAmount+@totalnAmount
													where nClubID=@nClubID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
										else 
													update Table_Web_ManageFirstPageReport 
													set loginNumber=@loginNumber,gameNumber=@gameNumber,validAdd=@validAdd,addUser=@addUser,
															recharge=@recharge,withdrawal=@withdrawal,roundNumber=@roundNumber,
															nValidBet=@nValidBet,nTax=@nTax,nResultMoney=@nResultMoney,
															nUpScore=@nUpScore,nDownScore=@nDownScore,nBetScore=@nBetScore,
															tasknAmount=@tasknAmount,activityAmount=@activityAmount,
															matchFee=@matchFee,returnMatchFee=@returnMatchFee,matchAmount=@matchAmount,
															returnRebate=@returnRebate,totalnAmount=@totalnAmount
													where nClubID=@nClubID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
										end if;
								else 
										insert into Table_Web_ManageFirstPageReport(nClubID,proxyType,loginNumber,gameNumber,validAdd,addUser,
																																recharge,withdrawal,roundNumber,nValidBet,nTax,
																																nUpScore,nDownScore,nBetScore,
																																nResultMoney,tasknAmount,activityAmount,
																																matchFee,returnMatchFee,matchAmount,
																																returnRebate,totalnAmount,tEndTime) 
																												values(@nClubID,@gameProxyType,@loginNumber,@gameNumber,@validAdd,@addUser,
																																@recharge,@withdrawal,@roundNumber,@nValidBet,@nTax,
																																@nUpScore,@nDownScore,@nBetScore,
																																@nResultMoney,@tasknAmount,@activityAmount,
																																@matchFee,@returnMatchFee,@matchAmount,
																																@returnRebate,@totalnAmount,$startTime);
								end if;
								#H5整条线
								if @gameProxyType=1 then 	
										set _tempUserId=@userPId;
										set @isflag=1;
										set @num=1;							
										while @isflag=1 and _tempUserId>0 do 
													set @num=@num+1;
													select nClubId into @tempnClubID from admin_proxy where UserId=_tempUserId and ProxyType=1 and GameProxyType=1;
													#是否存在当天统计记录
													if exists(select nClubID from Table_Web_ManageFirstPageReport where nClubID=@tempnClubID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 							
																#叠加更新
																update Table_Web_ManageFirstPageReport set loginNumber=loginNumber+@loginNumber,gameNumber=gameNumber+@gameNumber,validAdd=validAdd+@validAdd,addUser=addUser+@addUser,
																																recharge=recharge+@recharge,withdrawal=withdrawal+@withdrawal,roundNumber=roundNumber+@roundNumber,
																																nValidBet=nValidBet+@nValidBet,nTax=nTax+@nTax,nResultMoney=nResultMoney+@nResultMoney,
																																nUpScore=nUpScore+@nUpScore,nDownScore=nDownScore+@nDownScore,nBetScore=nBetScore+@nBetScore,
																																tasknAmount=tasknAmount+@tasknAmount,activityAmount=activityAmount+@activityAmount,
																																matchFee=matchFee+@matchFee,returnMatchFee=returnMatchFee+@returnMatchFee,matchAmount=matchAmount+@matchAmount,
																																returnRebate=returnRebate+@returnRebate,totalnAmount=totalnAmount+@totalnAmount
																where nClubID=@tempnClubID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
													else 	
															insert into Table_Web_ManageFirstPageReport(nClubID,proxyType,loginNumber,gameNumber,validAdd,addUser,
																																recharge,withdrawal,roundNumber,nValidBet,nTax,
																																nUpScore,nDownScore,nBetScore,
																																nResultMoney,tasknAmount,activityAmount,
																																matchFee,returnMatchFee,matchAmount,
																																returnRebate,totalnAmount,tEndTime) 
																												values(@tempnClubID,@gameProxyType,@loginNumber,@gameNumber,@validAdd,@addUser,
																																@recharge,@withdrawal,@roundNumber,@nValidBet,@nTax,
																																@nUpScore,@nDownScore,@nBetScore,
																																@nResultMoney,@tasknAmount,@activityAmount,
																																@matchFee,@returnMatchFee,@matchAmount,
																																@returnRebate,@totalnAmount,$startTime);										
													end if;
													select UserPId into _tempUserId from admin_proxy where UserId=_tempUserId and ProxyType=1 and GameProxyType=1;
													if _tempUserId=0 then
															set @isflag=0;
															set _tempUserId=0;
													end if;									
													if @num>200 then 
																set @isflag=0;
																set _tempUserId=0;
													end if;
											end while;
								end if;
					set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AdminFirstPageSum20191214
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AdminFirstPageSum20191214`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AdminFirstPageSum20191214`(

	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
				
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			
			declare _tempUserId int  default 0;
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			#创建临时表
			drop temporary table if exists temp_table_AdminFirstPageSum;  
			create temporary table temp_table_AdminFirstPageSum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				gameProxyType int DEFAULT 0,
				userPId int DEFAULT 0
			);
			
			set @sqlStr=CONCAT("insert into temp_table_AdminFirstPageSum(nClubId,gameProxyType,userPId) 
														 select temp.nClubID,proxy.GameProxyType ,proxy.userPId
														 from (
																		select nClubID from table_web_loginlog 
																		where nClubID in(select nClubId from admin_proxy where proxyType=1) and szTime>='",_currdateStart,"' and szTime<='",_currdateEnd,"'
																		union 
																		select nClubID from table_clubmember where tJoinTime>='",_currdateStart,"' and tJoinTime<='",_currdateEnd,"'
																		union 
																		select nClubID from ",@table_clubgamescoredetail," where tEndTime>='",_currdateStart,"' and tEndTime<='",_currdateEnd,"'
																		union 
																		select clubid nClubID from ",@table_clublogscore," 
																		where nType in(1,2,23,24,26,28,29) and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'
															)temp INNER JOIN admin_proxy proxy on temp.nClubID=proxy.nClubId where proxy.ProxyType=1");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			select count(1) into @totalCount from temp_table_AdminFirstPageSum;
			if @totalCount >0 then 
						set @currdateStart=_currdateStart,@currdateEnd=_currdateEnd;
						set @currId=1;
						while (@currId<=@totalCount) do
										select nClubID,gameProxyType,userPId into @nClubID,@gameProxyType,@userPId from temp_table_AdminFirstPageSum where Id=@currId;

										set @loginNumber=0;
										select count(DISTINCT(nPlayerId)) into @loginNumber from table_web_loginlog where szTime>=_currdateStart and szTime<=_currdateEnd and nClubID=@nClubID;

										
								#游戏人数
								set @gameNumber=0;
								set @sqlStr1=CONCAT("select count(nPlayerId) into @gameNumber  
																		 from( 

																					 select detail.nPlayerId from ",@table_clubgamescoredetail," detail 
																					 where detail.nClubID=",@nClubID," and detail.tEndTime>='",@currdateStart,"' and detail.tEndTime<='",@currdateEnd,"' 
																					 union 
																					 select nPlayerId from table_match_game_score_detail  
																					 where nClubID=",@nClubID," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																				 )temp
																		");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1;
								DEALLOCATE PREPARE stmt_name1;


										
										set @addUser=0;
										select count(mem.nPlayerID) into @addUser from table_clubmember mem 
										where mem.nClubID=@nClubID and mem.nLevel>1 and mem.tJoinTime>=_currdateStart and mem.tJoinTime<=_currdateEnd;

										
								#有效新增
								set @validAdd=0;
								set @sqlStr2=CONCAT(" select count(nPlayerID) into @validAdd  
																		  from( 
																						select nClubID,nPlayerID from ",@table_clubgamescoredetail," where nClubID=",@nClubID," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																						union 
																						select nClubId,nPlayerId from table_match_game_score_detail  where nClubID=",@nClubID," and tEndTime>='",@currdateStart,"' and tEndTime<='",@currdateEnd,"' 
																					)temp where nPlayerId not in(select nPlayerId from table_webdata_analysis_firstgamehelp where nClubId=",@nClubID," ) 
																		");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2;
								DEALLOCATE PREPARE stmt_name2;	
										
										set @nUpScore=0,@nDownScore=0,@recharge=0,@tasknAmount=0,@returnRebate=0,@withdrawal=0,@activityAmount=0;
										set @sqlStr3=CONCAT("select 	IFNULL(sum(case when nType=1 then nAmount  else 0 end),0) nUpScore,
																									IFNULL(sum(case when nType=2 then nAmount  else 0 end),0) nDownScore,
																									IFNULL(sum(case when nType=23 then nAmount  else 0 end),0) recharge,
																									IFNULL(sum(case when nType=24 then nAmount  else 0 end),0) tasknAmount,
																									IFNULL(sum(case when nType=26 then nAmount  else 0 end),0) returnRebate,
																									IFNULL(sum(case when nType=28 then nAmount  else 0 end),0) withdrawal,										
																									IFNULL(sum(case when nType=29 then nAmount  else 0 end),0) activityAmount
																									into @nUpScore,@nDownScore,@recharge,@tasknAmount,@returnRebate,@withdrawal, @activityAmount
																					from ",@table_clublogscore," log 
																					where log.clubid=? and log.nType in(1,2,23,24,26,28,29) and    log.CreateTime>=? and log.CreateTime<=?");
										PREPARE stmt_name3 FROM @sqlStr3; 
										EXECUTE stmt_name3 USING  @nClubID,@currdateStart,@currdateEnd;
										DEALLOCATE PREPARE stmt_name3;
										
										
										set @nBetScore=0,@nResultMoney=0,@nValidBet=0,@nTax=0,@roundNumber=0;
										set @sqlStr4=CONCAT("select IFNULL(SUM(nBetScore),0) nBetScore,IFNULL(SUM(nResultMoney),0) nResultMoney,IFNULL(SUM(nValidBet),0) nValidBet,
																								 IFNULL(SUM(nTax),0) nTax, count(szToken) roundNumber
																								 into @nBetScore,@nResultMoney,@nValidBet,@nTax,@roundNumber
																					from ",@table_clubgamescoredetail," detail 
																					where detail.nClubID=? and detail.tEndTime>=? and detail.tEndTime<=?");
										PREPARE stmt_name4 FROM @sqlStr4; 
										EXECUTE stmt_name4 USING  @nClubID,@currdateStart,@currdateEnd;
										DEALLOCATE PREPARE stmt_name4;

										
										set @totalnAmount=0;
										select IFNULL(SUM(nScore),0) into @totalnAmount from table_clubmember where nClubID=@nClubID and nStatus=1 and nLevel>1;
										
										if exists(select nClubID from Table_Web_ManageFirstPageReport where nClubID=@nClubID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
												set @testA=1;
												if @gameProxyType=1 then 	
														update Table_Web_ManageFirstPageReport 
														set loginNumber=loginNumber+@loginNumber,gameNumber=gameNumber+@gameNumber,validAdd=validAdd+@validAdd,addUser=addUser+@addUser,
																recharge=recharge+@recharge,withdrawal=withdrawal+@withdrawal,roundNumber=roundNumber+@roundNumber,
																nValidBet=nValidBet+@nValidBet,nTax=nTax+@nTax,nResultMoney=nResultMoney+@nResultMoney,
																nUpScore=nUpScore+@nUpScore,nDownScore=nDownScore+@nDownScore,nBetScore=nBetScore+@nBetScore,
																tasknAmount=tasknAmount+@tasknAmount,activityAmount=activityAmount+@activityAmount,returnRebate=returnRebate+@returnRebate,totalnAmount=totalnAmount+@totalnAmount
														where nClubID=@nClubID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
												else 
														update Table_Web_ManageFirstPageReport 
														set loginNumber=@loginNumber,gameNumber=@gameNumber,validAdd=@validAdd,addUser=@addUser,
																recharge=@recharge,withdrawal=@withdrawal,roundNumber=@roundNumber,
																nValidBet=@nValidBet,nTax=@nTax,nResultMoney=@nResultMoney,
																nUpScore=@nUpScore,nDownScore=@nDownScore,nBetScore=@nBetScore,
																tasknAmount=@tasknAmount,activityAmount=@activityAmount,returnRebate=@returnRebate,totalnAmount=@totalnAmount
														where nClubID=@nClubID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
												end if;
										else 
												insert into Table_Web_ManageFirstPageReport(nClubID,proxyType,loginNumber,gameNumber,validAdd,addUser,
																																		recharge,withdrawal,roundNumber,nValidBet,nTax,
																																		nUpScore,nDownScore,nBetScore,
																																		nResultMoney,tasknAmount,activityAmount,returnRebate,totalnAmount,tEndTime) 
																														values(@nClubID,@gameProxyType,@loginNumber,@gameNumber,@validAdd,@addUser,
																																		@recharge,@withdrawal,@roundNumber,@nValidBet,@nTax,
																																		@nUpScore,@nDownScore,@nBetScore,
																																		@nResultMoney,@tasknAmount,@activityAmount,@returnRebate,@totalnAmount,$endTime);
										end if;
										
										
										if @gameProxyType=1 then 	
												set _tempUserId=@userPId;
												set @isflag=1;
												set @num=1;							
												while @isflag=1 and _tempUserId>0 do 
															set @num=@num+1;
															select nClubId into @tempnClubID from admin_proxy where UserId=_tempUserId and ProxyType=1 and GameProxyType=1;
															
															if exists(select nClubID from Table_Web_ManageFirstPageReport where nClubID=@tempnClubID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 							
																		
																		update Table_Web_ManageFirstPageReport set loginNumber=loginNumber+@loginNumber,gameNumber=gameNumber+@gameNumber,validAdd=validAdd+@validAdd,addUser=addUser+@addUser,
																																		recharge=recharge+@recharge,withdrawal=withdrawal+@withdrawal,roundNumber=roundNumber+@roundNumber,
																																		nValidBet=nValidBet+@nValidBet,nTax=nTax+@nTax,nResultMoney=nResultMoney+@nResultMoney,
																																		nUpScore=nUpScore+@nUpScore,nDownScore=nDownScore+@nDownScore,nBetScore=nBetScore+@nBetScore,
																																		tasknAmount=tasknAmount+@tasknAmount,activityAmount=activityAmount+@activityAmount,returnRebate=returnRebate+@returnRebate,totalnAmount=totalnAmount+@totalnAmount
																		where nClubID=@tempnClubID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
															else 	
																	insert into Table_Web_ManageFirstPageReport(nClubID,proxyType,loginNumber,gameNumber,validAdd,addUser,
																																		recharge,withdrawal,roundNumber,nValidBet,nTax,
																																		nUpScore,nDownScore,nBetScore,
																																		nResultMoney,tasknAmount,activityAmount,returnRebate,totalnAmount,tEndTime) 
																														values(@tempnClubID,@gameProxyType,@loginNumber,@gameNumber,@validAdd,@addUser,
																																		@recharge,@withdrawal,@roundNumber,@nValidBet,@nTax,
																																		@nUpScore,@nDownScore,@nBetScore,
																																		@nResultMoney,@tasknAmount,@activityAmount,@returnRebate,@totalnAmount,$endTime);										
															end if;
															select UserPId into _tempUserId from admin_proxy where UserId=_tempUserId and ProxyType=1 and GameProxyType=1;
															if _tempUserId=0 then
																	set @isflag=0;
																	set _tempUserId=0;
															end if;									
															if @num>200 then 
																		set @isflag=0;
																		set _tempUserId=0;
															end if;
													end while;
										end if;
							
									set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AdminFirstPageSumModify
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AdminFirstPageSumModify`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AdminFirstPageSumModify`(

)
begin 
			
			declare _startDate varchar(19) default CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(CURDATE(),interval 1 day),' 23:59:59');

			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_startDate);
			#更新App运营商返佣
			set @sqlStr=CONCAT("update Table_Web_ManageFirstPageReport report join 
													(
														select IFNULL(sum(nAmount),0) returnRebate,clubid nClubID from ",@table_clublogscore," 
														where nType=26 and CreateTime>='",_startDate,"' and CreateTime<='",_endDate,"'
														group by clubid
													)temp on temp.nClubID=report.nClubId set report.returnRebate=temp.returnRebate
																where report.tEndTime>='",_startDate,"' and report.tEndTime<='",_endDate,"'");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			#更新运营商总余额20210118
			drop temporary table if exists temp_table_AdminFirstPageSumDay;  
			create temporary table temp_table_AdminFirstPageSumDay(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				gameProxyType int DEFAULT 0
			);
			insert into temp_table_AdminFirstPageSumDay(nClubId,gameProxyType)
			select nClubId,gameProxyType from admin_proxy where ProxyType=1 and gameProxyType>=1 and gameProxyType<=2;

			select count(1) into @totalCount from temp_table_AdminFirstPageSumDay;
			if @totalCount >0 then 
						set @currId=1;
						while (@currId<=@totalCount) do
								set @totalnAmount=0;
								select nClubID,gameProxyType into @nClubID,@gameProxyType from temp_table_AdminFirstPageSumDay where Id=@currId;
								if @gameProxyType=2 then 
												#总余额
												select IFNULL(SUM(nScore),0) into @totalnAmount from table_clubmember where nClubID=@nClubID and nStatus=1 and nLevel>1;
								else 
												select IFNULL(SUM(nScore),0) into @totalnAmount from 
												(
														select @nClubID nClubID,@nClubID nNextID union all
														select nClubID,nNextID from table_webdata_h5proxyline line where nClubID=@nClubID 
												)tem1 LEFT JOIN table_clubmember mem on tem1.nNextID=mem.nClubId
												where mem.nStatus=1 and mem.nLevel>1 and nNextID not in (10006,10009,10012,10008);
								end if;
								if not exists(select nClubID from Table_Web_ManageFirstPageReport where nClubID=@nClubID and tEndTime>=_startDate and tEndTime<=_endDate) then 
										insert into Table_Web_ManageFirstPageReport(nClubID,proxyType,totalnAmount,tEndTime)
										values(@nClubID,@gameProxyType,@totalnAmount,_startDate);
								end if;
								set @currId=@currId+1;
						end while;
			end if;

			#背包物品统计20210926---H5/App
			insert into Table_WebKnapsack_GoodsStati(nClubId,nGoodsId,nConsumeCount,nSendCount,CreateTime)
			select nClubId,nGoodsId,
						sum(case when num<0  then num else 0  end) 'nConsumeCount',
						sum(case when num>0  then num else 0  end) 'nSendCount',
						_startDate
			from table_clubGoodsOperatLog where CreateTime>=_startDate and CreateTime<=_endDate and nClubID>0
			GROUP BY nClubId,nGoodsId;			

			#Admin_房卡后台基础数据-------------------------------begin

			set @currDate=date_sub(CURDATE(),interval 1 day);
			#首页数据
			if not exists(select Id from Table_WebData_RoomCardFirst where tEndTime>=_startDate and tEndTime<=_endDate) then 
						set @overDiamondNum=0,@nClubId=666000;
						select IFNULL(SUM(temp1.nDiamond),0) into @overDiamondNum  
						from (
										select users.nCardCount nDiamond
										from table_league_club_member mem LEFT JOIN table_user users on mem.nPlayerID=users.nPlayerId
										where mem.nClubID=@nClubId and users.nCardCount>0
										union all 
										select nDiamond from table_league_club_info where nDiamond>0
								)temp1;
						insert into Table_WebData_RoomCardFirst (overDiamondNum,tEndTime) values (@overDiamondNum,_startDate);
			end if;
			#Admin房卡用户_首次、末次游戏记录更新
			#select * from Table_WebData_RoomCardFirstGameHelp where tEndTime>='2020-12-06 00:00:00';
			call Pro_WebData_RoomCardFirstRecord(@currDate);

			#Admin房卡首页数据--每天统计
			#select * from Table_WebData_RoomCardFirst where tEndTime>='2020-12-06 00:00:00';
			call Pro_WebData_RoomCardFirst(@currDate);

			#Admin房卡牌局统计--每天统计
			#select * from Table_WebData_RoomCardRoundStatiAll where tEndTime>='2020-12-06 00:00:00';
			#select * from Table_WebData_RoomCardRoundStatiClub where tEndTime>='2020-12-06 00:00:00';
			call Pro_WebData_RoomCardRoundStati(@currDate);
			
			#Admin房卡排行榜--每天统计
			#select * from Table_WebData_RoomCardSortUser where tEndTime>='2020-12-06 00:00:00';
			#select * from Table_WebData_RoomCardSortClub where tEndTime>='2020-12-06 00:00:00';
			call Pro_WebData_RoomCardSort(@currDate);	
			#Admin_房卡后台基础数据-------------------------------end


			#道具物品统计20210926-------------房卡------------------begin
			/*
				1- 第三方增加
				2-	第三方减少
				3-	网站后台增加
				4-	网站后台扣除
				5-	游戏里增加
				6-	游戏里扣除
				7-	商城购买
				8-	道具使用
				9-	道具过期
			*/
			#nPlatID=1-H5(App);2-新房卡
			insert into Table_WebKnapsack_GoodsStatiRoomCard(nGoodsId,buyCount,buyNum,nConsumeCount,nSendCount,nTaskCount,CreateTime)
			select nGoodsID,0 buyCount,0 buyNum,0 nConsumeCount,0 nSendCount,0 nTaskCount,_startDate CreateTime 
			from table_clubgoodsinfor where nPlatID=2 and nGoodsId<1000;
			
			#购买数量、购买人数
			update Table_WebKnapsack_GoodsStatiRoomCard card join
			(
				select IFNULL(SUM(num),0) buyCount,count(DISTINCT(nPlayerID)) buyNum,nGoodsId,_startDate CreateTime from table_clubGoodsOperatLog 
				where CreateTime>=_startDate and CreateTime<=_endDate and nClubID<=0 and nOperatType=7
				GROUP BY nGoodsId
			)temp on card.nGoodsId=temp.nGoodsId and card.CreateTime=temp.CreateTime
						set card.buyCount=temp.buyCount,card.buyNum=temp.buyNum;


			#任务获得
			update Table_WebKnapsack_GoodsStatiRoomCard card join
			(
						select IFNULL(SUM(num),0) nTaskCount,nGoodsId,_startDate CreateTime
						from(
										select num,nGoodsId from table_clubGoodsOperatLog 
										where CreateTime>=_startDate and CreateTime<=_endDate and nClubID<=0 and nOperatType=10
							)temp1 GROUP BY temp1.nGoodsId
			)temp on card.nGoodsId=temp.nGoodsId and card.CreateTime=temp.CreateTime
						set card.nTaskCount=temp.nTaskCount;

			#消耗总量
			update Table_WebKnapsack_GoodsStatiRoomCard card join
			(
						select IFNULL(SUM(num),0) nConsumeCount,nGoodsId,_startDate CreateTime
						from(
										select num,nGoodsId from table_clubGoodsOperatLog 
										where CreateTime>=_startDate and CreateTime<=_endDate and nClubID<=0 and nOperatType=2
										union all 
										select num,nGoodsId from table_clubGoodsOperatLog 
										where CreateTime>=_startDate and CreateTime<=_endDate and nClubID<=0 and nOperatType=4
										union all 
										select num,nGoodsId from table_clubGoodsOperatLog 
										where CreateTime>=_startDate and CreateTime<=_endDate and nClubID<=0 and nOperatType=6
										union all 
										select num,nGoodsId from table_clubGoodsOperatLog 
										where CreateTime>=_startDate and CreateTime<=_endDate and nClubID<=0 and nOperatType=8
										union all 
										select num,nGoodsId from table_clubGoodsOperatLog 
										where CreateTime>=_startDate and CreateTime<=_endDate and nClubID<=0 and nOperatType=9
							)temp1 GROUP BY temp1.nGoodsId
			)temp on card.nGoodsId=temp.nGoodsId and card.CreateTime=temp.CreateTime
						set card.nConsumeCount=temp.nConsumeCount;

			#发放总量
			update Table_WebKnapsack_GoodsStatiRoomCard card join
			(
						select IFNULL(SUM(num),0) nSendCount,nGoodsId,_startDate CreateTime
						from(
										select num,nGoodsId from table_clubGoodsOperatLog 
										where CreateTime>=_startDate and CreateTime<=_endDate and nClubID<=0 and nOperatType=1
										union all 
										select num,nGoodsId from table_clubGoodsOperatLog 
										where CreateTime>=_startDate and CreateTime<=_endDate and nClubID<=0 and nOperatType=3
										union all 
										select num,nGoodsId from table_clubGoodsOperatLog 
										where CreateTime>=_startDate and CreateTime<=_endDate and nClubID<=0 and nOperatType=5
							)temp1 GROUP BY temp1.nGoodsId
			)temp on card.nGoodsId=temp.nGoodsId and card.CreateTime=temp.CreateTime
						set card.nSendCount=temp.nSendCount;

			#道具物品统计20210926-------------房卡------------------end
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AdminRunData
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AdminRunData`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AdminRunData`(
/*
		创建时间:2019-12-14
		修改时间:2020-04-23
		功能描述:Admin后台更新时--数据同步
	*/
	in $startDate varchar(20),#开始时间--2019-04-01
	in $endDate varchar(20)		#结束时间--2019-05-01
)
begin 
			declare _tempData varchar(20) default $startDate;
			while _tempData<$endDate do 
	
						/*
							操作表:Table_Web_ManageFirstPageReport
							功能描述:Admin首页数据汇总
						*/
						#call Pro_Web_AdminFirstPageSum20191214(CONCAT(_tempData,' 00:00:00'),CONCAT(_tempData,' 23:59:59'));

						/*
							操作表:Table_Web_ManageDepositReport
							功能描述:Admin财务管理充值提现分析汇总
						*/
						#call Pro_Web_AdminDepositSum20191214(CONCAT(_tempData,' 00:00:00'),CONCAT(_tempData,' 23:59:59'));


						/*							
							基础数据
						*/
						call Pro_WebData_CommonData20200427(_tempData);
						set _tempData=date_sub(_tempData,interval -1 day);
			end while;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AdminSysProxyLevelData20191228
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AdminSysProxyLevelData20191228`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AdminSysProxyLevelData20191228`(

)
begin 
			declare _userId,_userPId,_tempUserId int default 0;
			
			declare done int default false;
			
			declare cur cursor for select userId from admin_proxy where ProxyType=1 ORDER BY userPId asc;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _userId;
			
			if done then					
					leave read_loop;    
			end if;
							set _tempUserId=_userId;
							set @flag=1;							
							set @nLevel=0;
							while @flag=1 do
									set @nLevel=@nLevel+1;
									select UserPId into _tempUserId from admin_proxy where UserId=_tempUserId;
									if _tempUserId=0 then 
											set @flag=0;
											update admin_proxy set nLevel=@nLevel where UserId=_userId;
									end if;
							end while;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AgentCommission
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AgentCommission`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AgentCommission`(
	/*
		 
		房卡代理分成:创建时间_2021-04-19
		房卡代理分成、城市合伙人分成:修改时间 2021-07-26【代理充值且商城等级小于9级按会员分成】
		$nPlayerId 充值的会员Id
		$nAmount	 充值金额(1000=1￥)
		$createTime 充值时间
	*/
	in $nPlayerId int,
	in $nAmount	int,
	in $createTime	varchar(32),
	out $returnVal int,
	out $resultMsg varchar(64)
)
returnNode:BEGIN
					#房卡用户、商城等级【代理充值且商城等级小于9级按会员分成】
					set @nClubId=666000,@maxMallLevel=9;
					if $nAmount<=0 then 
							set $returnVal=-1;
							set $resultMsg='充值金额有误';
							leave returnNode;
					end if;
					if not exists(select mem.nPlayerId from table_league_club_member mem 
															inner join table_user users on mem.nPlayerID=users.nPlayerId 
															where mem.nClubId=@nClubId and users.nPlayerId=$nPlayerId) then
										set $returnVal=-1;
										set $resultMsg='会员不存在';
										leave returnNode;
					end if;
					# @nType=0-会员充值; @nType=1-代理充值;@currAgentId=当前充值人所属代理Id
					set @nType=0,@currAgentId=0;
					#代理充值
					set @currAgentId=0;
					if exists(select nPlayerID from table_agent_info where nPlayerID=$nPlayerId) then 
								#代理商城等级
								select reser1 into @mallLevel from table_user where nPlayerID=$nPlayerId;
								if @mallLevel<@maxMallLevel then 
										#小于9级按会员分成
										set @nType=0;
										select extendCode into @currAgentId from table_user where nPlayerId=$nPlayerId;
								else 
										set @nType=1;
										set @currAgentId=$nPlayerId;
								end if;
					else								
								select extendCode into @currAgentId from table_user where nPlayerId=$nPlayerId;
								set @nType=0;
					end if;
					#当前充值用户是否绑定代理推荐码
					if not exists(select nPlayerID from table_agent_info where nPlayerID=@currAgentId) then 
								set $returnVal=-1;
								set $resultMsg='尚未绑定推荐码或推荐码无效';
								leave returnNode;
					end if;
					#【身份为会员的充值执行代理分成逻辑】
					if @nType=0 then 
							#直属分成
							set @nSubAgentID=0;
							select upAgentID,ratio into @upAgentID,@ratio from table_agent_info where nPlayerID=@currAgentId;
							if @ratio>0 then 
									set @nAmount=ROUND(@ratio/10000*$nAmount);
									#更新代理账户
									update table_agent_info set nAmount=nAmount+@nAmount where nPlayerID=@currAgentId; 
									#新增分成记录表
									insert into table_agent_commission(nPlayerID,nSourceID,nType,ratio,nAmount,nRecharge,CreateTime,nSubAgentID,nAgentID)
									values(@currAgentId,$nPlayerId,0,@ratio,@nAmount,$nAmount,$createTime,@nSubAgentID,@currAgentId);
							end if;
							
							if @upAgentID>0 then 				
									set @nSubAgentID=@currAgentId;			
									set @tempUpAgentId=@upAgentID;
									set @tempRatio=@ratio;
									set @maxWhile=0;
									while @tempUpAgentId>0 do 
											select upAgentID,ratio into @upAgentID,@ratio from table_agent_info where nPlayerID=@tempUpAgentId;
											set @tempRatioDiff=@ratio-@tempRatio;
											if @tempRatioDiff>0 then 
													
													set @nAmountAgent=ROUND(@tempRatioDiff/10000*$nAmount);
													#更新代理账户
													update table_agent_info set nAmount=nAmount+@nAmountAgent where nPlayerID=@tempUpAgentId; 
													#新增代理分成记录表
													insert into table_agent_commission(nPlayerID,nSourceID,nType,ratio,nAmount,nRecharge,CreateTime,nSubAgentID,nAgentID)
													values(@tempUpAgentId,$nPlayerId,1,@tempRatioDiff,@nAmountAgent,$nAmount,$createTime,@nSubAgentID,@currAgentId);												
											end if;
											set @nSubAgentID=@tempUpAgentId;
											set @tempUpAgentId=@upAgentID;
											set @tempRatio=@ratio;	
											set @maxWhile=@maxWhile+1;
											if @maxWhile>10 then 
													set @tempUpAgentId=-1;
											end if;
									end while;
							 end if;
					end if;

					#【会员、代理的充值执行城市合伙人分成逻辑】
					
					#充值人所属合伙人
					select UpCPID into @UpCPID from table_agent_info where nPlayerId=@currAgentId;
					if @UpCPID<=0 then 
								set $returnVal=-1;
								set $resultMsg='当前会员/代理尚未加入任何城市合伙人账号';
								leave returnNode;			
					end if;
					if not exists (select nPlayerId from table_citypartner_info where nPlayerId=@UpCPID) then 
								set $returnVal=-1;
								set $resultMsg='城市合伙人账号不存在';
								leave returnNode;	
					end if;
					#新增城市合伙人充值记录
					insert into table_recharge_detail(nPlayerID,nCPID,nType,nRecharge,CreateTime,nAgentID)values($nPlayerId,@UpCPID,@nType,$nAmount,$createTime,@currAgentId);
					if @nType=0 then
							select UpCPID,ratio_player into @parentUpCPID,@cityRatio from table_citypartner_info where nPlayerId=@UpCPID;							
					else  
							select UpCPID,ratio_agent into @parentUpCPID,@cityRatio from table_citypartner_info where nPlayerId=@UpCPID;
					end if;

					set @nAmountCity=ROUND(@cityRatio/10000*$nAmount);
					#更新城市合伙人账户
					update table_citypartner_info set nAmount=nAmount+@nAmountCity where nPlayerID=@UpCPID; 
					#新增城市合伙人分成记录表
					insert into table_citypartner_commission(nPlayerID,nSourceID,nCPID,nType,ratio,nAmount,nRecharge,CreateTime,nAgentID)
					values(@UpCPID,$nPlayerId,@UpCPID,@nType,@cityRatio,@nAmountCity,$nAmount,$createTime,@currAgentId);

					#城市合伙人分成差
					if @parentUpCPID>0 then			
									set @tempCityUpAgentId=@parentUpCPID;
									set @tempRatio=@cityRatio;
									set @maxWhile=0;
									while @tempCityUpAgentId>0 do 
											
											if @nType=0 then
													select UpCPID,ratio_player into @parentUpCPID,@cityRatio from table_citypartner_info where nPlayerID=@tempCityUpAgentId;				
											else  
													select UpCPID,ratio_agent  into @parentUpCPID,@cityRatio from table_citypartner_info where nPlayerID=@tempCityUpAgentId;
											end if;
											set @tempRatioDiff=@cityRatio-@tempRatio;
											if @tempRatioDiff>0 then 
													
													set @nAmountComm=ROUND(@tempRatioDiff/10000*$nAmount);
													#更新城市合伙人账户
													update table_citypartner_info set nAmount=nAmount+@nAmountComm where nPlayerID=@tempCityUpAgentId; 
													#新增城市合伙人分成记录表
													insert into table_citypartner_commission(nPlayerID,nSourceID,nCPID,nType,ratio,nAmount,nRecharge,CreateTime,nAgentID)
													values(@tempCityUpAgentId,$nPlayerId,@UpCPID,@nType,@tempRatioDiff,@nAmountComm,$nAmount,$createTime,@currAgentId);
											end if;
											set @tempCityUpAgentId=@parentUpCPID;
											set @tempRatio=@cityRatio;
											set @maxWhile=@maxWhile+1;
											if @maxWhile>10 then 
													set @tempCityUpAgentId=-1;
											end if;
									end while;					
					end if;
					set $returnVal=1;
					set $resultMsg='成功';
					leave returnNode;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AgentCommission20210712
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AgentCommission20210712`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_AgentCommission20210712`(
	/*
		 
		房卡代理分成:创建时间_2021-04-19
		房卡代理分成、城市合伙人分成:修改时间 2021-06-27
		$nPlayerId 充值的会员Id
		$nAmount	 充值金额(1000=1￥)
		$createTime 充值时间
	*/
	in $nPlayerId int,
	in $nAmount	int,
	in $createTime	varchar(32),
	out $returnVal int,
	out $resultMsg varchar(64)
)
returnNode:BEGIN
					#房卡用户
					set @nClubId=666000;
					if $nAmount<=0 then 
							set $returnVal=-1;
							set $resultMsg='充值金额有误';
							leave returnNode;
					end if;
					if not exists(select mem.nPlayerId from table_league_club_member mem 
															inner join table_user users on mem.nPlayerID=users.nPlayerId 
															where mem.nClubId=@nClubId and users.nPlayerId=$nPlayerId) then
										set $returnVal=-1;
										set $resultMsg='会员不存在';
										leave returnNode;
					end if;
					# @nType=0-会员充值; @nType=1-代理充值;@currAgentId=当前充值人所属代理Id
					set @nType=0,@currAgentId=0;
					#代理充值
					if exists(select nPlayerID from table_agent_info where nPlayerID=$nPlayerId) then 
								set @nType=1;
								set @currAgentId=$nPlayerId;
					else 
								#当前会员充值是否绑定代理推荐码
								select extendCode into @currAgentId from table_user where nPlayerId=$nPlayerId;
								if not exists(select nPlayerID from table_agent_info where nPlayerID=@currAgentId) then 
											set $returnVal=-1;
											set $resultMsg='尚未绑定推荐码或推荐码无效';
											leave returnNode;
								end if;
								set @nType=0;
					end if;

					#【身份为会员的充值执行代理分成逻辑】
					if @nType=0 then 
							#直属分成
							set @nSubAgentID=0;
							select upAgentID,ratio into @upAgentID,@ratio from table_agent_info where nPlayerID=@currAgentId;
							if @ratio>0 then 
									set @nAmount=ROUND(@ratio/10000*$nAmount);
									#更新代理账户
									update table_agent_info set nAmount=nAmount+@nAmount where nPlayerID=@currAgentId; 
									#新增分成记录表
									insert into table_agent_commission(nPlayerID,nSourceID,nType,ratio,nAmount,nRecharge,CreateTime,nSubAgentID)
									values(@currAgentId,$nPlayerId,0,@ratio,@nAmount,$nAmount,$createTime,@nSubAgentID);
							end if;
							
							if @upAgentID>0 then 				
									set @nSubAgentID=@currAgentId;			
									set @tempUpAgentId=@upAgentID;
									set @tempRatio=@ratio;
									set @maxWhile=0;
									while @tempUpAgentId>0 do 
											select upAgentID,ratio into @upAgentID,@ratio from table_agent_info where nPlayerID=@tempUpAgentId;
											set @tempRatioDiff=@ratio-@tempRatio;
											if @tempRatioDiff>0 then 
													
													set @nAmountAgent=ROUND(@tempRatioDiff/10000*$nAmount);
													#更新代理账户
													update table_agent_info set nAmount=nAmount+@nAmountAgent where nPlayerID=@tempUpAgentId; 
													#新增代理分成记录表
													insert into table_agent_commission(nPlayerID,nSourceID,nType,ratio,nAmount,nRecharge,CreateTime,nSubAgentID)
													values(@tempUpAgentId,$nPlayerId,1,@tempRatioDiff,@nAmountAgent,$nAmount,$createTime,@nSubAgentID);												
											end if;
											set @nSubAgentID=@tempUpAgentId;
											set @tempUpAgentId=@upAgentID;
											set @tempRatio=@ratio;	
											set @maxWhile=@maxWhile+1;
											if @maxWhile>10 then 
													set @tempUpAgentId=-1;
											end if;
									end while;
							 end if;
					end if;

					#【会员、代理的充值执行城市合伙人分成逻辑】
					
					#充值人所属合伙人
					select UpCPID into @UpCPID from table_agent_info where nPlayerId=@currAgentId;
					if @UpCPID<=0 then 
								set $returnVal=-1;
								set $resultMsg='当前会员/代理尚未加入任何城市合伙人账号';
								leave returnNode;			
					end if;
					if not exists (select nPlayerId from table_citypartner_info where nPlayerId=@UpCPID) then 
								set $returnVal=-1;
								set $resultMsg='城市合伙人账号不存在';
								leave returnNode;	
					end if;
					#新增城市合伙人充值记录
					insert into table_recharge_detail(nPlayerID,nCPID,nType,nRecharge,CreateTime)values($nPlayerId,@UpCPID,@nType,$nAmount,$createTime);
					if @nType=0 then
							select UpCPID,ratio_player into @parentUpCPID,@cityRatio from table_citypartner_info where nPlayerId=@UpCPID;							
					else  
							select UpCPID,ratio_agent into @parentUpCPID,@cityRatio from table_citypartner_info where nPlayerId=@UpCPID;
					end if;

					set @nAmountCity=ROUND(@cityRatio/10000*$nAmount);
					#更新城市合伙人账户
					update table_citypartner_info set nAmount=nAmount+@nAmountCity where nPlayerID=@UpCPID; 
					#新增城市合伙人分成记录表
					insert into table_citypartner_commission(nPlayerID,nSourceID,nCPID,nType,ratio,nAmount,nRecharge,CreateTime)
					values(@UpCPID,$nPlayerId,@UpCPID,@nType,@cityRatio,@nAmountCity,$nAmount,$createTime);

					#城市合伙人分成差
					if @parentUpCPID>0 then			
									set @tempCityUpAgentId=@parentUpCPID;
									set @tempRatio=@cityRatio;
									set @maxWhile=0;
									while @tempCityUpAgentId>0 do 
											
											if @nType=0 then
													select UpCPID,ratio_player into @parentUpCPID,@cityRatio from table_citypartner_info where nPlayerID=@tempCityUpAgentId;				
											else  
													select UpCPID,ratio_agent  into @parentUpCPID,@cityRatio from table_citypartner_info where nPlayerID=@tempCityUpAgentId;
											end if;
											set @tempRatioDiff=@cityRatio-@tempRatio;
											if @tempRatioDiff>0 then 
													
													set @nAmountComm=ROUND(@tempRatioDiff/10000*$nAmount);
													#更新城市合伙人账户
													update table_citypartner_info set nAmount=nAmount+@nAmountComm where nPlayerID=@tempCityUpAgentId; 
													#新增城市合伙人分成记录表
													insert into table_citypartner_commission(nPlayerID,nSourceID,nCPID,nType,ratio,nAmount,nRecharge,CreateTime)
													values(@tempCityUpAgentId,$nPlayerId,@UpCPID,@nType,@tempRatioDiff,@nAmountComm,$nAmount,$createTime);
											end if;
											set @tempCityUpAgentId=@parentUpCPID;
											set @tempRatio=@cityRatio;
											set @maxWhile=@maxWhile+1;
											if @maxWhile>10 then 
													set @tempCityUpAgentId=-1;
											end if;
									end while;					
					end if;
					set $returnVal=1;
					set $resultMsg='成功';
					leave returnNode;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_AutoLogin
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_AutoLogin`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_Web_AutoLogin`(
	
	in $nPlayerId int,
	in $szToken varchar(64),
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnNode:begin 
				if ($szToken is null) or ($szToken is null) or($nPlayerId<=0) then 
						set $returnVal=-1;
						set $resultMsg='未授权,请重新登录';
						leave returnNode;
				end if;
				if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='该账号不存在或者已被禁用';
						leave returnNode;
				end if;
				if not exists(select nPlayerId from table_manager_login_token where nStatus=0 and nPlayerId=$nPlayerId and szToken=$szToken and tCreateTime>DATE_ADD(NOW(),INTERVAL -5 MINUTE) order by Id desc limit 0,1) then 
						set $returnVal=-1;
						set $resultMsg='用户登录身份信息已过期或者不存在';
						leave returnNode;
				else 
						update table_manager_login_token set nStatus=1,tModifyTime=now() where nStatus=0 and nPlayerId=$nPlayerId and szToken=$szToken;
						set $returnVal=1;
						set $resultMsg='通过校验';
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_CancelOrder
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_CancelOrder`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_CancelOrder`(
		
	in $Id int,
	in $szOrder varchar(128),
	in $nClubId int,
	in $optionUserId int,
	in $szRemark varchar(128),
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;
				end if;
				if not exists(select szOrder from table_pyramid_examine  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnVal;
				end if;
				if not exists(select szOrder from table_third_order  where nType=4 and szOrder=$szOrder and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnVal;
				end if;

				select nStatus into @nStatus from table_third_order  where nType=4 and szOrder=$szOrder and nClubID=$nClubId;
				if @nStatus=0 or @nStatus=3 or @nStatus=5  then 
								select nAmount,nPlayerID into @nAmount,@nPlayerID from table_pyramid_examine  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId;
								select nScore into @nPlayerSocre from table_clubmember where nClubID=$nClubId and nPlayerID=@nPlayerID and nStatus=1;

								set @scoreType=27;
								set @nPlayerLogScore=(@nPlayerSocre+@nAmount);
								call pr_club_changeLogClubScore3_comman(@nPlayerID,0,0,@nAmount,$szOrder,$optionUserId,@nPlayerLogScore,@scoreType,0,0,'撤回提单',$nClubId,0);
								update table_clubmember set nScore=@nPlayerLogScore where nClubID=$nClubId and nPlayerID=@nPlayerID;
							
								
								select UserName into @UserName from admin_user where UserId=$optionUserId;
								update table_pyramid_examine set nFlag=5,tFinanceActTime=NOW(),FinanceAccount=@UserName,szRemark=$szRemark 
								where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId;
								#不确定是否需要更新
								#update table_third_order set nStatus=2,szDesc=$szRemark,szMark='撤回提单' 
								#where szOrder=$szOrder and nClubID=$nClubId;

								set $returnVal=@nPlayerID;
								set $resultMsg='成功';
								leave returnVal;
				else 
								set $returnVal=-1;
								set $resultMsg='订单已被处理';
								leave returnVal;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_CancelOrder_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_CancelOrder_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_CancelOrder_Pre`(
		
	in $Id int,
	in $szOrder varchar(128),
	in $nClubId int,
	in $optionUserId int,
	in $szRemark varchar(128),
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;
				end if;
				if not exists(select szOrder from table_pyramid_examine  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnVal;
				end if;
				if not exists(select szOrder from table_third_order  where nType=4 and szOrder=$szOrder and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnVal;
				end if;

				select nStatus into @nStatus from table_third_order  where nType=4 and szOrder=$szOrder and nClubID=$nClubId;
				if @nStatus=0 or @nStatus=3 or @nStatus=5  then 
								select nAmount,nPlayerID into @nAmount,@nPlayerID from table_pyramid_examine  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId;
								select nScore into @nPlayerSocre from table_clubmember where nClubID=$nClubId and nPlayerID=@nPlayerID and nStatus=1;

								set @scoreType=27;
								set @nPlayerLogScore=(@nPlayerSocre+@nAmount);
								call pr_club_changeLogClubScore3_comman(@nPlayerID,0,0,@nAmount,$szOrder,$optionUserId,@nPlayerLogScore,@scoreType,0,0,'撤回提单',$nClubId,0);
								update table_clubmember set nScore=@nPlayerLogScore where nClubID=$nClubId and nPlayerID=@nPlayerID;
							
								
								select UserName into @UserName from admin_user where UserId=$optionUserId;
								update table_pyramid_examine set nFlag=5,tFinanceActTime=NOW(),FinanceAccount=@UserName,szRemark=$szRemark 
								where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId;
								#不确定是否需要更新
								#update table_third_order set nStatus=2,szDesc=$szRemark,szMark='撤回提单' 
								#where szOrder=$szOrder and nClubID=$nClubId;

								set $returnVal=@nPlayerID;
								set $resultMsg='成功';
								leave returnVal;
				else 
								set $returnVal=-1;
								set $resultMsg='订单已被处理';
								leave returnVal;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubAddDiamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubAddDiamond`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubAddDiamond`(
		
	in $type int,
	in $gamePlayerId int,
	in $nClubID int,
	in $nPlayerId int,
	in $nScore int,
	in $remark varchar(200),
	out $returnVal int,
	out $resultMsg varchar(50),
	out $msgIds varchar(200),
	out $nPlayerIds varchar(200)
)
returnVal:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				set $msgIds='';
				set $nPlayerIds=CONCAT($nPlayerId,',',$gamePlayerId);
				if $nScore<=0 then 
						set $returnVal=-1;
						set $resultMsg='钻石数量是必须大于0的正整数';
						leave returnVal;
				end if;
				
				
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubID and CreatePlayerID=$gamePlayerId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在或者没有此操作权限';
						leave returnVal;
				else 
						if $gamePlayerId=$nPlayerId then 
								set $returnVal=-1;
								set $resultMsg='俱乐部创始人不能给自己赠送钻石';
								leave returnVal;
						end if;
				end if;
				
				if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnVal;
				end if;
				if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$gamePlayerId) then 
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubmember  where  nStatus=1 and nClubID=$nClubID and nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='该用户不在此俱乐部中';
						leave returnVal;
				end if;
				
				select nCardCount,szNickName into @clubnCardCount,@szNickName from table_user where nPlayerId=$gamePlayerId;
				
				select nCardCount,szNickName into @playernCardCount,@nPlayerNickName from table_user where nPlayerId=$nPlayerId;
				
				if @clubnCardCount<=0 or @clubnCardCount<$nScore then 
						set $returnVal=-1;
						set $resultMsg='创始人账户钻石不足';
						leave returnVal;
				end if;
				start transaction;
				
				insert into Table_ClubLogDiamond(nGameID,nPlayerID,nAmount,nScore,nType,szDesc,clubid) values(2013,$gamePlayerId,$nScore,(@clubnCardCount-$nScore),9,'创始人赠送用户钻石-俱乐部创始人减钻',$nClubID);
				update table_user set nCardCount=(@clubnCardCount-$nScore) where nPlayerId=$gamePlayerId;

				
				insert into Table_ClubLogDiamond(nGameID,nPlayerID,nAmount,nScore,nType,szDesc,clubid) values(2013,$nPlayerId,$nScore,(@playernCardCount+$nScore),8,'创始人赠送用户钻石-俱乐部成员加钻',$nClubID);
				update table_user set nCardCount=(@playernCardCount+$nScore) where nPlayerId=$nPlayerId;
				
				
				select szClubName into @szClubName from table_clubinfo where nClubID=$nClubID;
				insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) values($nPlayerId,502,'赠送钻石',CONCAT('俱乐部"',@szClubName,'"(',$nClubID,')的创始人(',$gamePlayerId,')发放了',$nScore,'钻石给你'));
				set $msgIds=@@identity;
				
				
				insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) values($gamePlayerId,502,'赠送钻石',CONCAT('俱乐部"',@szClubName,'"(',$nClubID,')的创始人(',$gamePlayerId,')发放了',$nScore,'钻石给用户(',$nPlayerId,')"',@nPlayerNickName,'"'));
				set @msgIds=@@identity;
				set $msgIds=CONCAT($msgIds,',',@msgIds);
				
				call Pro_Web_AddEnterPriseLog($nClubID,42,$gamePlayerId,$nPlayerId,CONCAT('创始人(ID:',$gamePlayerId,')赠送用户ID:',$nPlayerId,',',$nScore,'钻石',',备注:',$remark));
				if errno=0 then
						set $returnVal=1;
						set $resultMsg='成功';
						commit;
				else
						set $returnVal=-99;
						set $resultMsg='执行存储过程异常';
						rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubDonateScore
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubDonateScore`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubDonateScore`(
		
	in $type int,
	in $nSubType int,
	in $adminUserId int,
	in $nClubId int,
	in $nPlayerId int,
	in $nScore bigint,
	in $nTaxRate int,
	in $remark varchar(200),
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				if not exists(select nClubID from table_clubinfo  where nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='运营商不存在';
						leave returnVal;
				end if;
				if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='会员不存在';
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubmember  where  nClubID=$nClubId and nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='该用户不在此俱乐部中';
						leave returnVal;
				end if;
				select UserType into @UserType from admin_user  where  UserId=$adminUserId;
				select nClubId into @authnClubId from admin_proxy where UserId=$adminUserId;
				
				if @UserType=2 and $nClubId<>@authnClubId  then
						set $returnVal=-1;
						set $resultMsg='尚未授权';
						leave returnVal;
				end if;
				if $nScore<=0 then 
						set $returnVal=-1;
						set $resultMsg='积分数量必须大于0';
						leave returnVal;
				end if;				
				select nScore into @totalClubScore from table_clubinfo where nClubID=$nClubId;
				select nScore into @clubPlayerSocre from table_clubmember where nClubID=$nClubId and nPlayerID=$nPlayerId;
				
				if $type=1 then 
							if @totalClubScore<=0 or @totalClubScore<$nScore then 
									set $returnVal=-1;
									set $resultMsg='俱乐部积分不足';
									leave returnVal;
							end if;	
							set @title='上分';
							set @nClubLogScore=(@totalClubScore-$nScore);
							set @nPlayerScore=(@clubPlayerSocre+$nScore);
							set @scoreType=1;
							set @logType=3;
							set @subTitle='';
							if $nSubType=1 then 
									set @subTitle='注册送金';
							elseif $nSubType=2 then 
									set @subTitle='首充送金';
							elseif $nSubType=3 then 
									set @subTitle='首登送金';
							elseif $nSubType=4 then 
									set @subTitle='连续登录送金';
							elseif $nSubType=5 then 
									set @subTitle='投注送金';
							elseif $nSubType=6 then 
									set @subTitle='银行卡充值返利';
							elseif $nSubType=7 then 
									set @subTitle='天天投注送豪礼';
							elseif $nSubType=8 then 
									set @subTitle='邀请好友送彩金';
							elseif $nSubType=9 then 
									set @subTitle='代理彩金奖上奖';
							elseif $nSubType=10 then 
									set @subTitle='新人见面礼';
							elseif $nSubType=11 then 
									set @subTitle='红包大闯关';
							elseif $nSubType=0 then 
									set @subTitle='其他';
							end if;
							set @bodyTitle=CONCAT(@title,'"',@subTitle,'"');
				else 
				
						 if @clubPlayerSocre<=0 or @clubPlayerSocre<$nScore then  
									set $returnVal=-1;
									set $resultMsg='用户积分不足';
									leave returnVal;
						 end if;
						 set @title='下分';
						 set @nClubLogScore=(@totalClubScore+$nScore);
						 set @nPlayerScore=(@clubPlayerSocre-$nScore);
						 set @scoreType=2;
						 set @logType=4;
							set @bodyTitle=@title;
				end if;

				start transaction;
				select UserName into @UserName from admin_user where UserId=$adminUserId;

				if @scoreType=1 then 
						set @userScore=$nScore;
						set @logScore=$nScore*-1;
						
				else 
						set @userScore=$nScore*-1;
						set @logScore=$nScore;						
				end if;
				
				insert into Table_ClubLogPlatformScore (nClubID,nGameID,nTableID,szOrder,nAmount,nScore,nType,szDesc,sourceid,targetid) 
																				values($nClubId,0,0,'',@logScore,@nClubLogScore,@scoreType,$remark,$adminUserId,$nPlayerId);
				
				#insert into Table_ClubLogScore(nPlayerID,nGameID,nTableID,nAmount,szOrder,operateID,nScore,nType,nTaxRate,szDesc,clubid,nSubType) 
																			#values($nPlayerId,0,0,@userScore,'',$adminUserId,@nPlayerScore,@scoreType,$nTaxRate,$remark,$nClubId,$nSubType);
				call pr_club_changeLogClubScore3_comman($nPlayerId,0,0,@userScore,'',$adminUserId,@nPlayerScore,@scoreType,$nSubType,$nTaxRate,$remark,$nClubId,0);

				update table_clubinfo set nScore=@nClubLogScore where nClubID=$nClubId;				
				
				update table_clubmember set nScore=@nPlayerScore where nClubID=$nClubId and nPlayerID=$nPlayerId;
				
				
				
				select szThirdAccount into @szThirdAccount from table_user where nPlayerId=$nPlayerId;
				
				if $remark='' then 
						set $remark='--';
				end if;
				set @adminLog=CONCAT('【',@bodyTitle,'操作】运营用户:【',@UserName,'】为会员账号:【',@szThirdAccount,'】会员ID:【',$nPlayerId,'】',@title,'：',TRUNCATE($nScore/1000,3),';备注：',$remark);
				insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des) values($nClubId,@logType,$adminUserId,$nPlayerId,($nScore/1000),@adminLog);
				if errno=0 then
						set $returnVal=1;
						set $resultMsg='成功';
						commit;
				else
						set $returnVal=-99;
						set $resultMsg='执行存储过程异常';
						rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubDonateScore_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubDonateScore_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_ClubDonateScore_Pre`(
		
	in $type int,
	in $nSubType int,
	in $adminUserId int,
	in $nClubId int,
	in $nPlayerId int,
	in $nScore bigint,
	in $nTaxRate int,
	in $remark varchar(200),
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;
				end if;
				if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubmember  where  nStatus=1 and nClubID=$nClubId and nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='该用户不在此俱乐部中';
						leave returnVal;
				end if;
				select UserType into @UserType from admin_user  where  UserId=$adminUserId;
				select nClubId into @authnClubId from admin_proxy where UserId=$adminUserId;
				
				if @UserType=2 and $nClubId<>@authnClubId  then
						set $returnVal=-1;
						set $resultMsg='尚未授权';
						leave returnVal;
				end if;
				if $nScore<=0 then 
						set $returnVal=-1;
						set $resultMsg='积分数量必须大于0';
						leave returnVal;
				end if;				
				select nScore into @totalClubScore from table_clubinfo where nStatus=1 and nClubID=$nClubId;
				select nScore into @clubPlayerSocre from table_clubmember where nClubID=$nClubId and nPlayerID=$nPlayerId and nStatus=1;
				
				if $type=1 then 
							if @totalClubScore<=0 or @totalClubScore<$nScore then 
									set $returnVal=-1;
									set $resultMsg='俱乐部积分不足';
									leave returnVal;
							end if;	
							set @title='上分';
							set @nClubLogScore=(@totalClubScore-$nScore);
							set @nPlayerScore=(@clubPlayerSocre+$nScore);
							set @scoreType=1;
							set @logType=3;
							set @subTitle='';
							if $nSubType=1 then 
									set @subTitle='注册送金';
							elseif $nSubType=2 then 
									set @subTitle='首充送金';
							elseif $nSubType=3 then 
									set @subTitle='首登送金';
							elseif $nSubType=4 then 
									set @subTitle='连续登录送金';
							elseif $nSubType=5 then 
									set @subTitle='投注送金';
							elseif $nSubType=6 then 
									set @subTitle='银行卡充值返利';
							elseif $nSubType=7 then 
									set @subTitle='天天投注送豪礼';
							elseif $nSubType=8 then 
									set @subTitle='邀请好友送彩金';
							elseif $nSubType=9 then 
									set @subTitle='代理彩金奖上奖';
							elseif $nSubType=10 then 
									set @subTitle='新人见面礼';
							elseif $nSubType=11 then 
									set @subTitle='红包大闯关';
							elseif $nSubType=0 then 
									set @subTitle='其他';
							end if;
							set @bodyTitle=CONCAT(@title,'"',@subTitle,'"');
				else 
				
						 if @clubPlayerSocre<=0 or @clubPlayerSocre<$nScore then  
									set $returnVal=-1;
									set $resultMsg='用户积分不足';
									leave returnVal;
						 end if;
						 set @title='下分';
						 set @nClubLogScore=(@totalClubScore+$nScore);
						 set @nPlayerScore=(@clubPlayerSocre-$nScore);
						 set @scoreType=2;
						 set @logType=4;
							set @bodyTitle=@title;
				end if;

				start transaction;
				select UserName into @UserName from admin_user where UserId=$adminUserId;

				if @scoreType=1 then 
						set @userScore=$nScore;
						set @logScore=$nScore*-1;
						
				else 
						set @userScore=$nScore*-1;
						set @logScore=$nScore;						
				end if;
				
				insert into Table_ClubLogPlatformScore (nClubID,nGameID,nTableID,szOrder,nAmount,nScore,nType,szDesc,sourceid,targetid) 
																				values($nClubId,0,0,'',@logScore,@nClubLogScore,@scoreType,$remark,$adminUserId,$nPlayerId);
				
				#insert into Table_ClubLogScore(nPlayerID,nGameID,nTableID,nAmount,szOrder,operateID,nScore,nType,nTaxRate,szDesc,clubid,nSubType) 
																			#values($nPlayerId,0,0,@userScore,'',$adminUserId,@nPlayerScore,@scoreType,$nTaxRate,$remark,$nClubId,$nSubType);
				call pr_club_changeLogClubScore3_comman($nPlayerId,0,0,@userScore,'',$adminUserId,@nPlayerScore,@scoreType,$nSubType,$nTaxRate,$remark,$nClubId,0);

				update table_clubinfo set nScore=@nClubLogScore where nStatus=1 and nClubID=$nClubId;				
				
				update table_clubmember set nScore=@nPlayerScore where nClubID=$nClubId and nPlayerID=$nPlayerId;
				
				
				
				select szThirdAccount into @szThirdAccount from table_user where nPlayerId=$nPlayerId;
				
				if $remark='' then 
						set $remark='--';
				end if;
				set @adminLog=CONCAT('【',@bodyTitle,'操作】：用户【',@UserName,'】为【',@szThirdAccount,'（',$nPlayerId,'）】',@title,'：',TRUNCATE($nScore/1000,3),';备注：',$remark);
				insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des) values($nClubId,@logType,$adminUserId,$nPlayerId,($nScore/1000),@adminLog);
				if errno=0 then
						set $returnVal=1;
						set $resultMsg='成功';
						commit;
				else
						set $returnVal=-99;
						set $resultMsg='执行存储过程异常';
						rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubHundDiamondCFG
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubHundDiamondCFG`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubHundDiamondCFG`(
		
			in $nClubId int,
			in $nGameType int,
			in $nHundredType1 int,
			in $nHundredType2 int,
			in $nHundredType3 int,
			out $returnVal int,
			out $resultMsg varchar(50)
)
returnNode:begin
		if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
				set $returnVal=-1;
				set $resultMsg='俱乐部不存在';
				leave returnNode;
		end if;
		
		if exists (select nClubId from table_club_hundred_dudiamond_cfg where nClubId=$nClubId and nGameType=$nGameType and nHundredType=1) then 
				update table_club_hundred_dudiamond_cfg set nAmount=$nHundredType1 where nClubId=$nClubId and nGameType=$nGameType and nHundredType=1;
		else 
				insert into table_club_hundred_dudiamond_cfg(nClubId,nGameType,nHundredType,nAmount) values($nClubId,$nGameType,1,$nHundredType1);
		end if;
		
		if exists (select nClubId from table_club_hundred_dudiamond_cfg where nClubId=$nClubId and nGameType=$nGameType and nHundredType=2) then 
				update table_club_hundred_dudiamond_cfg set nAmount=$nHundredType2 where nClubId=$nClubId and nGameType=$nGameType and nHundredType=2;
		else 
					insert into table_club_hundred_dudiamond_cfg(nClubId,nGameType,nHundredType,nAmount) values($nClubId,$nGameType,2,$nHundredType2);
		end if;
		
		if exists (select nClubId from table_club_hundred_dudiamond_cfg where nClubId=$nClubId and nGameType=$nGameType and nHundredType=3) then 
				update table_club_hundred_dudiamond_cfg set nAmount=$nHundredType3 where nClubId=$nClubId and nGameType=$nGameType and nHundredType=3;
		else 
				insert into table_club_hundred_dudiamond_cfg(nClubId,nGameType,nHundredType,nAmount) values($nClubId,$nGameType,3,$nHundredType3);
		end if;
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubInfo_Assent
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubInfo_Assent`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubInfo_Assent`(
		
	in $gamePlayerId int,
	in $nClubId int,
	in $nPlayerId int,
	out $returnVal int,
	out $resultMsg varchar(50),
	out $msgId varchar(200),
	out $nPlayerIds varchar(200)
)
returnNode:begin
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				set $msgId='';
				set $nPlayerIds='';
		if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
				set $returnVal=-1;
				set $resultMsg='俱乐部不存在';
				leave returnNode;
		end if;
		if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId or nPlayerId=$gamePlayerId and nActive=1) then
				set $returnVal=-1;
				set $resultMsg='用户不存在';
				leave returnNode;
		end if;
		if not exists(select nClubID from table_clubapplication where nPlayerID=$nPlayerId and nClubID=$nClubId and nStatus=1) then
				set $returnVal=-1;
				set $resultMsg='该申请已经被处理';
				leave returnNode;
		end if;
		if exists(select nPlayerId from table_clubmember where nPlayerID=$nPlayerId and nClubID=$nClubId and  nStatus=1) then
				set $returnVal=-1;
				set $resultMsg='用户已存在俱乐部';
				leave returnNode;
		end if;
			
		select count(1) into @clubtotalCount from table_clubmember 
		where nplayerId=$nPlayerId and nstatus=1 and nClubID in(select nClubID from table_clubinfo info  where info.nStatus=1);
		if @clubtotalCount>=5 then 
				set $returnVal=-1;
				set $resultMsg='同一用户所在俱乐部不能超过5个';
				leave returnNode;
		end if;
			
		if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=1 and nStatus=1) then 
		
				set @ProxyName='创始人';
		else 
				if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=2 and nStatus=1)then 
						set @ProxyName='管理员';
						
						if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=3 and nStatus=1) then 
							set $returnVal=-1;
							set $resultMsg='您的账号没有该俱乐部的同意权限';
							leave returnNode;
						end if;
				else 
						set @ProxyName='成员';
						set $returnVal=-1;
						set $resultMsg='您的账号(成员)没有该俱乐部的同意权限';
						leave returnNode;
				end if;
		end if;
		start transaction;
		
		select szNickName into @szNickName from table_user where nPlayerId=$nPlayerId;
		
		if exists(select ID from table_clubmember where nClubID=$nClubId and nPlayerID=$nPlayerId) then 
				
				update table_clubmember set nStatus=1,tJoinTime=NOW() where nClubID=$nClubId and nPlayerID=$nPlayerId;
		else 
				insert  into table_clubmember(nClubID,nPlayerID,szNickName,nLevel,nStatus,nScore)
				values($nClubId,$nPlayerId,@szNickName,3,1,0);
		end if;
		
		update table_clubapplication set nStatus=2,tOperationTime=NOW() where nPlayerID=$nPlayerId and nClubID=$nClubId and nStatus=1;

		
		insert into table_clubevent(nClubID,nEventType,szDesc) values($nClubId,10,CONCAT(@ProxyName,' 同意用户(Id:',$nPlayerId,'),昵称:"',@szNickName,'"加入俱乐部',$nClubId));

		
		select szClubName into @szClubName from table_clubinfo where nClubID=$nClubId;		
		insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) values($nPlayerId,502,'同意加入俱乐部',CONCAT(@szClubName,'(',$nClubId,')已同意你加入'));
		set @msgId=@@identity;
		
		select szNickName into @GameszNickName from table_user where nPlayerId=$gamePlayerId;
		
		select MAX(nMsgId) into @maxMsgId from table_user_msg;
		insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) 
		select nPlayerID,502,'同意加入俱乐部',CONCAT(@GameszNickName,'已批准',@szNickName,'(',$nPlayerId,')加入俱乐部') 
		from table_clubmember where nClubID=$nClubId and nStatus=1 and nLevel<3;
		
		select GROUP_CONCAT(nMsgId),GROUP_CONCAT(nPlayerId) into @nMsgIdStr,@nPlayerIdStr from 
																			(
																				select nMsgId,nPlayerId from table_user_msg where nMsgId>=@maxMsgId and nMsgType=502 and nIsRead=0
																				and sMsgTitle='同意加入俱乐部' and nPlayerId in(select nPlayerId from table_clubmember where nClubID=$nClubId and nStatus=1 and nLevel<3)
																				ORDER BY nMsgId desc LIMIT 20
																			)t;
		if @nMsgIdStr is not null then 
				set $msgId=CONCAT(@msgId,',',@nMsgIdStr);
		else 
				set $msgId=@msgId;
		end if;
		if @nPlayerIdStr is not null then 
				set $nPlayerIds=CONCAT($nPlayerId,',',@nPlayerIdStr);
		else 
				set $nPlayerIds=CONCAT($nPlayerId);
		end if;
		
		
		
		call Pro_Web_AddEnterPriseLog($nClubId,26,$gamePlayerId,$nPlayerId,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')同意用户ID:',$nPlayerId,'加入俱乐部,俱乐部ID:',$nClubId));
			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					COMMIT;
			ELSE
					set $returnVal=-1;
					set $resultMsg='存储过程执行异常';
					ROLLBACK;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubInfo_FriendRoyaltyRate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubInfo_FriendRoyaltyRate`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubInfo_FriendRoyaltyRate`(
		
			in $gamePlayerId int,
			in $nClubId int,
			in $nGameId int,
			in $nCode int,
			in $nTaxRate int,
			in $nType int,
			out $returnVal int,
			out $resultMsg varchar(100)
)
returnNode:begin 
		if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$gamePlayerId) then 
			set $returnVal=-1;
			set $resultMsg='用户不存在';
			leave returnNode;
		end if;
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId) then 
			set $returnVal=-1;
			set $resultMsg='俱乐部不存在';
			leave returnNode;
		end if;	
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId and CreatePlayerID=$gamePlayerId) then 	
				set @ProxyName='管理员';
				if not exists(select nClubID from table_clubmember where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=2 and nStatus=1) then 
						set $returnVal=-1;
						set $resultMsg='当前管理员成员不在此俱乐部中';
						leave returnNode;
				end if;
				
				if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=4 and nStatus=1) then 
					set $returnVal=-1;
					set $resultMsg='尚无修改俱乐部服务费比例的操作权限';
					leave returnNode;
				end if;
		else 
				set @ProxyName='创始人';
		end if;
		
		select TypeName into @TypeName from sys_code where `code`=$nGameId and Type=$nCode;
		
		select TypeName into @GameTypeName from sys_code where `code`=1001008 and SortId=$nGameId;
		
		if $nType=1 then 
					set @oldnTaxRate=0;
					if exists(select nClubId,nCode,nGameId,nTaxRate,szDesc,nStatus from table_club_cc where nClubId=$nClubId and nGameId=$nGameId and nCode=$nCode) then 
							select nTaxRate into @oldnTaxRate from table_club_cc where nClubId=$nClubId and nGameId=$nGameId and nCode=$nCode;							
							if @oldnTaxRate<>$nTaxRate then 
									set @oldnTaxRate=CONCAT(round(@oldnTaxRate/10,1),'%');
									set @nTaxRate=CONCAT(round($nTaxRate/10,1),'%');
									update table_club_cc set nTaxRate=$nTaxRate where nClubId=$nClubId and nGameId=$nGameId and nCode=$nCode;									
									call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改俱乐部:(俱乐部Id:',$nClubId,',游戏类型-“',@GameTypeName,'”)服务费比例的',@TypeName,':"',@oldnTaxRate,'"变更为"',@nTaxRate,'"'));
							end if;
					else 
							set @oldnTaxRate=CONCAT(round(@oldnTaxRate/10,1),'%');
							set @nTaxRate=CONCAT(round($nTaxRate/10,1),'%');
							insert into table_club_cc(nClubId,nGameId,nCode,nTaxRate,szDesc,nStatus)
							values ($nClubId,$nGameId,$nCode,$nTaxRate,'',1);
							call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改俱乐部:(俱乐部Id:',$nClubId,',游戏类型-“',@GameTypeName,'”)服务费比例的',@TypeName,':"',@oldnTaxRate,'"变更为"',@nTaxRate,'"'));
					end if;
		elseif $nType=2 then  
		
					set @oldnTaxRate=0;
					if exists(select nClubId,nCode,nGameId,nTaxRate,szDesc,nStatus from table_club_cc_low where nClubId=$nClubId and nGameId=$nGameId and nCode=$nCode) then 
							select nTaxRate into @oldnTaxRate from table_club_cc_low where nClubId=$nClubId and nGameId=$nGameId and nCode=$nCode;					
							if @oldnTaxRate<>$nTaxRate then 
									set @oldnTaxRate=CONCAT(round(@oldnTaxRate/10,1),'%');
									set @nTaxRate=CONCAT(round($nTaxRate/10,1),'%');
									update table_club_cc_low set nTaxRate=$nTaxRate where nClubId=$nClubId and nGameId=$nGameId and nCode=$nCode;
									call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改俱乐部:(俱乐部Id:',$nClubId,',游戏类型-“',@GameTypeName,'”)服务费比例的',@TypeName,':"',@oldnTaxRate,'"变更为"',@nTaxRate,'"'));
							end if;
					else 
							set @oldnTaxRate=CONCAT(round(@oldnTaxRate/10,1),'%');
							set @nTaxRate=CONCAT(round($nTaxRate/10,1),'%');
							insert into table_club_cc_low(nClubId,nGameId,nCode,nTaxRate,szDesc,nStatus)
							values ($nClubId,$nGameId,$nCode,$nTaxRate,'',1);
							call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改俱乐部:(俱乐部Id:',$nClubId,',游戏类型-“',@GameTypeName,'”)服务费比例的',@TypeName,':"',@oldnTaxRate,'"变更为"',@nTaxRate,'"'));
					end if;
		else 
				set $returnVal=-1;
				set $resultMsg='非法操作';
				leave returnNode;
	  end if;	
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubInfo_HundredConfigSet
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubInfo_HundredConfigSet`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubInfo_HundredConfigSet`(
		
			in $gamePlayerId int,
			in $nClubId int,
			in $nGameType int,
			in $nHundredType int,
			in $nOpen int,
			in $nAllowPlayBank int,
			in $nEmptySysBank int,
			in $nMaxUnionBankNum int,
			in $nUnBankValSysWin bigint,
			in $nUnBankValSysLose bigint,			
			out $returnVal int,
			out $resultMsg varchar(100)
)
returnNode:begin 
		if $nHundredType<=0 or $nMaxUnionBankNum<=0 or $nUnBankValSysWin<=0 or $nUnBankValSysLose<=0 then 
			set $returnVal=-1;
			set $resultMsg='参数有误';
			leave returnNode;
		end if;
		if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$gamePlayerId) then 
			set $returnVal=-1;
			set $resultMsg='用户不存在';
			leave returnNode;
		end if;
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId) then 
			set $returnVal=-1;
			set $resultMsg='俱乐部不存在';
			leave returnNode;
		end if;	
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId and CreatePlayerID=$gamePlayerId) then 	
				set @ProxyName='管理员';
				if not exists(select nClubID from table_clubmember where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=2 and nStatus=1) then 
						set $returnVal=-1;
						set $resultMsg='当前管理员成员不在此俱乐部中';
						leave returnNode;
				end if;
				
				if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=20 and nStatus=1) then 
					set $returnVal=-1;
					set $resultMsg='尚无修改百人场庄家设置的操作权限';
					leave returnNode;
				end if;
		else 
				set @ProxyName='创始人';
		end if;
		if $nHundredType=1 then 
				set @nHundredType='初级场';
		elseif $nHundredType=2 then 
			set @nHundredType='中级场';
		else 
			set @nHundredType='高级场';
		end if;
		select TypeName into @GameTypeName from sys_code where `code`=1001011 and Type=$nGameType;
		if not exists(select nClubID from table_club_hundred_cfg where nClubId=$nClubId and nGameType=$nGameType and nHundredType=$nHundredType) then 
				
				select nOpen,nAllowPlayBank,nEmptySysBank,nMaxUnionBankNum,nUnBankValSysWin,nUnBankValSysLose 
							into @nOpen,@nAllowPlayBank,@nEmptySysBank,@nMaxUnionBankNum,@nUnBankValSysWin,@nUnBankValSysLose
				from table_club_hundred_cfg where nClubId=0 and nGameType=0 and nHundredType=$nHundredType;
				
				insert into table_club_hundred_cfg(nClubID,nGameType,nHundredType,nOpen,nAllowPlayBank,nEmptySysBank,nMaxUnionBankNum,nUnBankValSysWin,nUnBankValSysLose)
				values($nClubId,$nGameType,$nHundredType,$nOpen,$nAllowPlayBank,$nEmptySysBank,$nMaxUnionBankNum,$nUnBankValSysWin,$nUnBankValSysLose);
				
				if @nOpen<>$nOpen then 
						if @nOpen=0 then 
								set @defaultOpen='关闭';
						else 
								set @defaultOpen='开启';
						end if;
						if $nOpen=0 then 
								set @newtOpen='关闭';
						else 
								set @newtOpen='开启';
						end if;
						call Pro_Web_AddEnterPriseLog($nClubId,57,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 ”百人场开关"设置:"',@defaultOpen,'"变更为"',@newtOpen,'"')
																					);
				end if;
				
				if @nAllowPlayBank<>$nAllowPlayBank then 
						if @nAllowPlayBank=0 then 
								set @defnAllowPlayBank='关闭';
						else 
								set @defnAllowPlayBank='开启';
						end if;
						if $nAllowPlayBank=0 then 
								set @newAllowPlayBank='关闭';
						else 
								set @newAllowPlayBank='开启';
						end if;
						call Pro_Web_AddEnterPriseLog($nClubId,59,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 ”允许用户上庄"设置:"',@defnAllowPlayBank,'"变更为"',@newAllowPlayBank,'"')
																					);
				end if;
				
				if @nEmptySysBank<>$nEmptySysBank then 
						if @nEmptySysBank=0 then 
								set @defnEmptySysBank='关闭';
						else 
								set @defnEmptySysBank='开启';
						end if;
						if $nEmptySysBank=0 then 
								set @newnEmptySysBank='关闭';
						else 
								set @newnEmptySysBank='开启';
						end if;
						call Pro_Web_AddEnterPriseLog($nClubId,60,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 无人上庄时系统上庄"设置:"',@defnEmptySysBank,'"变更为"',@newnEmptySysBank,'"')
																					);
				end if;
				
				if @nMaxUnionBankNum<>$nMaxUnionBankNum then 
						call Pro_Web_AddEnterPriseLog($nClubId,61,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 最大联合上庄人数"设置:"',@nMaxUnionBankNum,'"变更为"',$nMaxUnionBankNum,'"')
																					);
				end if;
				
				if @nUnBankValSysWin<>$nUnBankValSysWin then 
						call Pro_Web_AddEnterPriseLog($nClubId,62,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 系统盈利自动下庄值"设置:"',@nUnBankValSysWin,'"变更为"',$nUnBankValSysWin,'"')
																					);
				end if;
				
				if @nUnBankValSysLose<>$nUnBankValSysLose then 
						call Pro_Web_AddEnterPriseLog($nClubId,63,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 系统亏损自动下庄值"设置:"',@nUnBankValSysLose,'"变更为"',$nUnBankValSysLose,'"')
																					);
				end if;
		else 
				
				select nOpen,nAllowPlayBank,nEmptySysBank,nMaxUnionBankNum,nUnBankValSysWin,nUnBankValSysLose 
							into @nOpen,@nAllowPlayBank,@nEmptySysBank,@nMaxUnionBankNum,@nUnBankValSysWin,@nUnBankValSysLose
				from table_club_hundred_cfg where nClubId=$nClubId and nGameType=$nGameType and nHundredType=$nHundredType;
				
				
				if @nOpen<>$nOpen then 
						if @nOpen=0 then 
								set @defaultOpen='关闭';
						else 
								set @defaultOpen='开启';
						end if;
						if $nOpen=0 then 
								set @newtOpen='关闭';
						else 
								set @newtOpen='开启';
						end if;
						update table_club_hundred_cfg set nOpen=$nOpen where nClubId=$nClubId and nGameType=$nGameType and nHundredType=$nHundredType;
						call Pro_Web_AddEnterPriseLog($nClubId,57,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 ”百人场开关"设置:"',@defaultOpen,'"变更为"',@newtOpen,'"')
																					);
				end if;
				
				if @nAllowPlayBank<>$nAllowPlayBank then 
						if @nAllowPlayBank=0 then 
								set @defnAllowPlayBank='关闭';
						else 
								set @defnAllowPlayBank='开启';
						end if;
						if $nAllowPlayBank=0 then 
								set @newAllowPlayBank='关闭';
						else 
								set @newAllowPlayBank='开启';
						end if;
						update table_club_hundred_cfg set nAllowPlayBank=$nAllowPlayBank where nClubId=$nClubId and nGameType=$nGameType and nHundredType=$nHundredType;
						call Pro_Web_AddEnterPriseLog($nClubId,59,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 ”允许用户上庄"设置:"',@defnAllowPlayBank,'"变更为"',@newAllowPlayBank,'"')
																					);
				end if;
				
				if @nEmptySysBank<>$nEmptySysBank then 
						if @nEmptySysBank=0 then 
								set @defnEmptySysBank='关闭';
						else 
								set @defnEmptySysBank='开启';
						end if;
						if $nEmptySysBank=0 then 
								set @newnEmptySysBank='关闭';
						else 
								set @newnEmptySysBank='开启';
						end if;
						update table_club_hundred_cfg set nEmptySysBank=$nEmptySysBank where nClubId=$nClubId and nGameType=$nGameType and nHundredType=$nHundredType;
						call Pro_Web_AddEnterPriseLog($nClubId,60,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 无人上庄时系统上庄"设置:"',@defnEmptySysBank,'"变更为"',@newnEmptySysBank,'"')
																					);
				end if;
				
				if @nMaxUnionBankNum<>$nMaxUnionBankNum then 
						update table_club_hundred_cfg set nMaxUnionBankNum=$nMaxUnionBankNum where nClubId=$nClubId and nGameType=$nGameType and nHundredType=$nHundredType;
						call Pro_Web_AddEnterPriseLog($nClubId,61,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 最大联合上庄人数"设置:"',@nMaxUnionBankNum,'"变更为"',$nMaxUnionBankNum,'"')
																					);
				end if;
				
				if @nUnBankValSysWin<>$nUnBankValSysWin then 
						update table_club_hundred_cfg set nUnBankValSysWin=$nUnBankValSysWin where nClubId=$nClubId and nGameType=$nGameType and nHundredType=$nHundredType;
						call Pro_Web_AddEnterPriseLog($nClubId,62,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 系统盈利自动下庄值"设置:"',@nUnBankValSysWin,'"变更为"',$nUnBankValSysWin,'"')
																					);
				end if;
				
				if @nUnBankValSysLose<>$nUnBankValSysLose then 
						update table_club_hundred_cfg set nUnBankValSysLose=$nUnBankValSysLose where nClubId=$nClubId and nGameType=$nGameType and nHundredType=$nHundredType;
						call Pro_Web_AddEnterPriseLog($nClubId,63,$gamePlayerId,0,
																						CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏 系统亏损自动下庄值"设置:"',@nUnBankValSysLose,'"变更为"',$nUnBankValSysLose,'"')
																					);
				end if;
		end if;
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubInfo_HundredConfigSetDefault
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubInfo_HundredConfigSetDefault`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubInfo_HundredConfigSetDefault`(
		
			in $gamePlayerId int,
			in $nClubId int,
			in $nGameType int,
			in $nHundredType int,
			out $returnVal int,
			out $resultMsg varchar(100)
)
returnNode:begin 
		if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$gamePlayerId) then 
			set $returnVal=-1;
			set $resultMsg='用户不存在';
			leave returnNode;
		end if;
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId) then 
			set $returnVal=-1;
			set $resultMsg='俱乐部不存在';
			leave returnNode;
		end if;	
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId and CreatePlayerID=$gamePlayerId) then 	
				set @ProxyName='管理员';
				if not exists(select nClubID from table_clubmember where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=2 and nStatus=1) then 
						set $returnVal=-1;
						set $resultMsg='当前管理员成员不在此俱乐部中';
						leave returnNode;
				end if;
				
				if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=20 and nStatus=1) then 
					set $returnVal=-1;
					set $resultMsg='尚无修改百人场庄家设置的操作权限';
					leave returnNode;
				end if;
		else 
				set @ProxyName='创始人';
		end if;
		if $nHundredType=1 then 
				set @nHundredType='初级场';
		elseif $nHundredType=2 then 
			set @nHundredType='中级场';
		else 
			set @nHundredType='高级场';
		end if;
		select TypeName into @GameTypeName from sys_code where `code`=1001011 and Type=$nGameType;
		if exists(select nClubID from table_club_hundred_cfg where nClubId=$nClubId and nGameType=$nGameType and nHundredType=$nHundredType) then 
				
				delete from table_club_hundred_cfg where nClubId=$nClubId and nGameType=$nGameType and nHundredType=$nHundredType;
		end if;
		
		insert into table_club_hundred_cfg
					(nClubID,nGameType,nHundredType,nOpen,nAllowPlayBank,nEmptySysBank,nMaxUnionBankNum,nUnBankValSysWin,nUnBankValSysLose)
		select $nClubId,$nGameType,$nHundredType,nOpen,nAllowPlayBank,nEmptySysBank,nMaxUnionBankNum,nUnBankValSysWin,nUnBankValSysLose from table_club_hundred_cfg 
		where nClubId=0 and nGameType=0 and nHundredType=$nHundredType;
		
		call Pro_Web_AddEnterPriseLog($nClubId,58,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改百人场"',@nHundredType,'" "',@GameTypeName,'" 游戏的 百人场庄家设置的默认设置'));
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubInfo_HundredServiceFeeRateSet
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubInfo_HundredServiceFeeRateSet`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubInfo_HundredServiceFeeRateSet`(
		
			in $gamePlayerId int,
			in $nClubId int,
			in $nGameId int,
			in $nCode int,
			in $nTaxRate int,
			in $nHundredType int,
			out $returnVal int,
			out $resultMsg varchar(100)
)
returnNode:begin 
		if $nHundredType<=0 then 
			set $returnVal=-1;
			set $resultMsg='场次类型有误';
			leave returnNode;
		end if;
		if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$gamePlayerId) then 
			set $returnVal=-1;
			set $resultMsg='用户不存在';
			leave returnNode;
		end if;
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId) then 
			set $returnVal=-1;
			set $resultMsg='俱乐部不存在';
			leave returnNode;
		end if;	
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId and CreatePlayerID=$gamePlayerId) then 	
				set @ProxyName='管理员';
				if not exists(select nClubID from table_clubmember where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=2 and nStatus=1) then 
						set $returnVal=-1;
						set $resultMsg='当前管理员成员不在此俱乐部中';
						leave returnNode;
				end if;
				
				if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=4 and nStatus=1) then 
					set $returnVal=-1;
					set $resultMsg='尚无修改百人场服务费比例的操作权限';
					leave returnNode;
				end if;
		else 
				set @ProxyName='创始人';
		end if;
		
		select TypeName into @TypeName from sys_code where `code`=$nGameId and Type=$nCode;
		
		select TypeName into @GameTypeName from sys_code where `code`=1001011 and SortId=$nGameId;
		
		set @oldnTaxRate=0;
		if exists(select nClubId,nCode,nGameId,nTaxRate,szDesc,nStatus from table_club_hundred_cc where nClubId=$nClubId and nGameId=$nGameId and nCode=$nCode and nHundredType=$nHundredType) then 
				select nTaxRate into @oldnTaxRate from table_club_hundred_cc where nClubId=$nClubId and nGameId=$nGameId and nCode=$nCode and nHundredType=$nHundredType;							
				if @oldnTaxRate<>$nTaxRate then 
						set @oldnTaxRate=CONCAT(round(@oldnTaxRate/10,1),'%');
						set @nTaxRate=CONCAT(round($nTaxRate/10,1),'%');
						update table_club_hundred_cc set nTaxRate=$nTaxRate where nClubId=$nClubId and nGameId=$nGameId and nCode=$nCode and nHundredType=$nHundredType;								
						call Pro_Web_AddEnterPriseLog($nClubId,64,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改俱乐部:(俱乐部Id:',$nClubId,',游戏类型-“',@GameTypeName,'”)百人场服务费比例的',@TypeName,':"',@oldnTaxRate,'"变更为"',@nTaxRate,'"'));
				end if;
		else 
				set @oldnTaxRate=CONCAT(round(@oldnTaxRate/10,1),'%');
				set @nTaxRate=CONCAT(round($nTaxRate/10,1),'%');
				insert into table_club_hundred_cc(nClubId,nGameId,nCode,nTaxRate,szDesc,nHundredType,nStatus)
				values ($nClubId,$nGameId,$nCode,$nTaxRate,'',$nHundredType,1);
				call Pro_Web_AddEnterPriseLog($nClubId,64,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改俱乐部:(俱乐部Id:',$nClubId,',游戏类型-“',@GameTypeName,'”)百人场服务费比例的',@TypeName,':"',@oldnTaxRate,'"变更为"',@nTaxRate,'"'));
		end if;

		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubInfo_Invite
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubInfo_Invite`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubInfo_Invite`(
		
	in $nClubId int,
	in $nPlayerId int,
	in $gamePlayerId int,
	out $returnVal int,
	out $resultMsg varchar(50),
	out $msgId int
)
returnNode:begin
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				set $msgId=0;
		if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
				set $returnVal=-1;
				set $resultMsg='俱乐部不存在';
				leave returnNode;
		end if;
		if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId or nPlayerId=$gamePlayerId and nActive=1) then
				set $returnVal=-1;
				set $resultMsg='用户不存在';
				leave returnNode;
		end if;
		if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nStatus=1 and nPlayerID=$nPlayerId) then
				set $returnVal=-1;
				set $resultMsg='用户已存在俱乐部';
				leave returnNode;
		end if;
		
		
		select count(1) into @clubtotalCount from table_clubmember 
		where nplayerId=$nPlayerId and nstatus=1 and EXISTS(select info.nClubID from table_clubinfo info  where table_clubmember.nClubID=info.nClubID and info.nStatus=1);
		if @clubtotalCount>=5 then 
				set $returnVal=-1;
				set $resultMsg='同一用户所在俱乐部不能超过5个';
				leave returnNode;
		end if;
		if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=1 and nStatus=1) then 
				
				set @ProxyName='创始人';
		else 
				if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=2 and nStatus=1)then 
						set @ProxyName='管理员';
						
						if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=7 and nStatus=1) then 
								set $returnVal=-1;
								set $resultMsg='尚无该俱乐部的邀请加入俱乐部的操作权限';
								leave returnNode;
						end if;
				else 
						set @ProxyName='成员';
						set $returnVal=-1;
						set $resultMsg='尚无该俱乐部的邀请加入俱乐部的操作权限';
						leave returnNode;
				end if;
		end if;
		start transaction;
		
		insert into table_clubapplication(nClubID,nPlayerID,nStatus,tOperationTime)
		values($nClubId,$nPlayerId,2,NOW());

		
		select szNickName into @szNickName from table_user where nPlayerId=$nPlayerId;
		
		if exists(select ID from table_clubmember where nClubID=$nClubId and nPlayerID=$nPlayerId) then 
				
				update table_clubmember set nStatus=1,tJoinTime=NOW() where nClubID=$nClubId and nPlayerID=$nPlayerId;
		else 
				insert  into table_clubmember(nClubID,nPlayerID,szNickName,nLevel,nStatus,nScore) values($nClubId,$nPlayerId,@szNickName,3,1,0);
		end if;
		
		
		insert into table_clubevent(nClubID,nEventType,szDesc) values($nClubId,15,CONCAT('用户(Id：',$nPlayerId,'),昵称:"',@szNickName,'"被',@ProxyName,'邀请加入俱乐部',$nClubId));
		
		select szClubName into @szClubName from table_clubinfo where nClubID=$nClubId;
		insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) values($nPlayerId,502,'邀请加入俱乐部',CONCAT(@szClubName,'(',$nClubId,')邀请你加入俱乐部'));
		set $msgId=@@identity;
		
		call Pro_Web_AddEnterPriseLog($nClubId,26,$gamePlayerId,$nPlayerId,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')邀请用户ID:',$nPlayerId,'加入俱乐部,俱乐部ID:',$nClubId));
			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			ELSE
					set $returnVal=-1;
					set $resultMsg='存储过程执行异常';
					rollback;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubInfo_Refuse
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubInfo_Refuse`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubInfo_Refuse`(
		
	in $gamePlayerId int,
	in $nClubId int,
	in $nPlayerId int,
	out $returnVal int,
	out $resultMsg varchar(50),
	out $msgId int 
)
returnNode:begin
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				set $msgId=0;
		if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
				set $returnVal=-1;
				set $resultMsg='俱乐部不存在';
				leave returnNode;
		end if;
		if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId or nPlayerId=$gamePlayerId and nActive=1) then
				set $returnVal=-1;
				set $resultMsg='用户不存在';
				leave returnNode;
		end if;
		if not exists(select nPlayerId from table_clubapplication where nPlayerID=$nPlayerId and nClubID=$nClubId and nStatus=1) then
				set $returnVal=-1;
				set $resultMsg='新申请已被处理';
				leave returnNode;
		end if;
		if not exists(select nClubID from table_clubapplication where nPlayerID=$nPlayerId and nClubID=$nClubId and nStatus=1) then
				set $returnVal=-1;
				set $resultMsg='该申请已经被处理';
				leave returnNode;
		end if;
		if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=1 and nStatus=1) then 
				
				set @ProxyName='创始人';
		else 
				if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=2 and nStatus=1)then 
						set @ProxyName='管理员';
						
						if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=3 and nStatus=1) then 
								set $returnVal=-1;
								set $resultMsg='您的账号没有该俱乐部的拒绝权限';
								leave returnNode;
						end if;
				else 
						set @ProxyName='成员';
						set $returnVal=-1;
						set $resultMsg='您的账号(成员)没有该俱乐部的拒绝权限';
						leave returnNode;
				end if;
		end if;
		start transaction;		
		select szNickName into @szNickName from table_user where nPlayerId=$nPlayerId;
		
		update table_clubapplication set nStatus=3,tOperationTime=NOW() where nPlayerID=$nPlayerId and nClubID=$nClubId and nStatus=1;

		
		insert into table_clubevent(nClubID,nEventType,szDesc) values($nClubId,16,CONCAT('用户(Id：',$nPlayerId,'),昵称:"',@szNickName,'"被',@ProxyName,'拒绝加入俱乐部',$nClubId));

		
		select szClubName into @szClubName from table_clubinfo where nClubID=$nClubId;
		insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) values($nPlayerId,502,'拒绝加入俱乐部',CONCAT(@szClubName,'(',$nClubId,')已拒绝你加入'));
		set $msgId=@@identity;
		
		call Pro_Web_AddEnterPriseLog($nClubId,26,$gamePlayerId,$nPlayerId,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')拒绝用户ID:',$nPlayerId,'加入俱乐部,俱乐部ID:',$nClubId));
			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			ELSE
					set $returnVal=-1;
					set $resultMsg='存储过程执行异常';
					rollback;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubInfo_RoyaltyRate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubInfo_RoyaltyRate`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubInfo_RoyaltyRate`(
		
in $type int,
in $royaltyRate int,
in $totalRoyaltyRate int,
in $nClubId int,
in $gamePlayerId int,
out $returnVal int,
out $resultMsg varchar(100)
)
returnNode:begin 

		if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$gamePlayerId) then 
			set $returnVal=-1;
			set $resultMsg='用户不存在';
			leave returnNode;
		end if;
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId) then 
			set $returnVal=-1;
			set $resultMsg='俱乐部不存在';
			leave returnNode;
		end if;
		if $type=1 then 
				set @setName='百人场设置';
		else 
				set @setName='房间分红设置';
		end if;		
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId and CreatePlayerID=$gamePlayerId) then 	
				set @ProxyName='管理员';
				
				if not exists(select nClubID from table_clubmember where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=2 and nStatus=1) then 
						set $returnVal=-1;
						set $resultMsg='当前管理员成员不在此俱乐部中';
						leave returnNode;
				end if;
				
				if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=4 and nStatus=1) then 
					set $returnVal=-1;
					set $resultMsg=CONCAT('您的账号没有该俱乐部',@setName,'的操作权限');
					leave returnNode;
				end if;
		else 
				set @ProxyName='创始人';
		end if;
		select nTaxRateBig,nTaxTRateBig,nTaxRateNormal,nTaxTRateNormal into @nTaxRateBig,@nTaxTRateBig,@nTaxRateNormal,@nTaxTRateNormal from table_clubinfo where nStatus=1 and  nClubID=$nClubId;
		
		if $royaltyRate>0 then 
				set @Newrate=CONCAT(TRUNCATE($royaltyRate/10,2),'%');
		else 
				set @Newrate=CONCAT(0,'%');
		end if;
		
		if $totalRoyaltyRate>0 then 
				set @NewtotalRate=CONCAT(TRUNCATE($totalRoyaltyRate/10,2),'%');
		else 
				set @NewtotalRate=CONCAT(0,'%');
		end if;
		if $type=1 then 
				update table_clubinfo set nTaxRateBig=$royaltyRate,nTaxTRateBig=$totalRoyaltyRate where nClubID=$nClubId; 
				
				if @nTaxRateBig>0 then 
						set @OldnTaxRateBig=CONCAT(TRUNCATE(@nTaxRateBig/10,2),'%');
				else 
						set @OldnTaxRateBig=CONCAT(0,'%');
				end if;					
				
				if @nTaxTRateBig>0 then 
						set @OldnTaxTRateBig=CONCAT(TRUNCATE(@nTaxTRateBig/10,2),'%');
				else 
						set @OldnTaxTRateBig=CONCAT(0,'%');
				end if;
				
				call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')','修改百人场单局赢家服务费比例:"',@OldnTaxRateBig,'"变更为','"',@Newrate,'"'));
				call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')','修改百人场总局赢家服务费比例:"',@OldnTaxTRateBig,'"变更为','"',@NewtotalRate,'"'));
		elseif $type=2 then  
				update table_clubinfo set nTaxRateNormal=$royaltyRate,nTaxTRateNormal=$totalRoyaltyRate where nClubID=$nClubId;
				
				if @nTaxRateNormal>0 then 
						set @OldnTaxRateNormal=CONCAT(TRUNCATE(@nTaxRateNormal/10,2),'%');
				else 
						set @OldnTaxRateNormal=CONCAT(0,'%');
				end if;					
				
				if @nTaxTRateNormal>0 then 
						set @OldnTaxTRateNormal=CONCAT(TRUNCATE(@nTaxTRateNormal/10,2),'%');
				else 
						set @OldnTaxTRateNormal=CONCAT(0,'%');
				end if;
				call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')','修改好友场单局赢家服务费比例:"',@OldnTaxRateNormal,'"变更为','"',@Newrate,'"'));
				call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')','修改好友场总局赢家服务费比例:"',@OldnTaxTRateNormal,'"变更为','"',@NewtotalRate,'"'));
		else 
				set $returnVal=-1;
				set $resultMsg='非法操作';
				leave returnNode;
		end if;
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubInfo_UpdateFeeServiceSet
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubInfo_UpdateFeeServiceSet`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubInfo_UpdateFeeServiceSet`(
		
	
	in $nClubId int,
	in $gamePlayerId int,
	in $nPlayerId int,
	in $nFreeServiceFee int,
	in $hundredOpenVal int,
	out $returnVal int,
	out $resultMsg varchar(100)
)
returnNode:begin 
				
				if not exists(select nPlayerId from table_user  where nPlayerId=$nPlayerId or nPlayerId=$gamePlayerId and nActive=1) then 
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubmember  where nStatus=1 and nClubID=$nClubId and nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='用户不在该俱乐部';
						leave returnNode;
				end if;
				if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=1 and nStatus=1) then 
							
							set @ProxyName='创始人';
				else 
							if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=2 and nStatus=1)then 
									set @ProxyName='管理员';
									
									if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=14 and nStatus=1) then 
											set $returnVal=-1;
											set $resultMsg='尚无该俱乐部免服务费的操作权限';
											leave returnNode;
									end if;
							else 
									set @ProxyName='成员';
									set $returnVal=-1;
									set $resultMsg='尚无该俱乐部免服务费的操作权限';
									leave returnNode;
							end if;
				end if;

				
				select nFreeServiceFee into @nFreeServiceFee from table_clubmember where nStatus=1 and nClubID=$nClubId and nPlayerId=$nPlayerId;
				if @nFreeServiceFee<> $nFreeServiceFee then 
						if @nFreeServiceFee=0 then 
										set @nFreeServiceFeeName='关闭';										
							else 
										set @nFreeServiceFeeName='开启';										 
						end if;
						if $nFreeServiceFee=0 then 
									set @newnFreeServiceFeeName='关闭';
									set @clubEventType=31; 
						else 
									set @newnFreeServiceFeeName='开启';
									set @clubEventType=30;
						end if;
						update table_clubmember set nFreeServiceFee=$nFreeServiceFee where nClubID=$nClubId and nPlayerId=$nPlayerId;  
						call Pro_Web_AddEnterPriseLog($nClubId,39,$gamePlayerId,$nPlayerId,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改用户:(ID:',$nPlayerId,'),','的积分场免服务费开关设置:"',@nFreeServiceFeeName,'"变更为"',@newnFreeServiceFeeName,'"'));
						
						insert into table_clubevent(nClubID,nEventType,szDesc) values($nClubId,@clubEventType,CONCAT(@ProxyName,' "',@newnFreeServiceFeeName,'"用户(Id:',$nPlayerId,')积分场免服务费'));
				end if;			
				
				if exists(select nClubID from table_club_hundred_free_charge where nClubID=$nClubId and nPlayerID=$nPlayerId) then 
						select nStatus into @nStatus from table_club_hundred_free_charge where nClubID=$nClubId and nPlayerID=$nPlayerId;
						if @nStatus<>$hundredOpenVal then 
								if @nStatus=0 then 
										set @nStatusName='关闭';										
								else 
										set @nStatusName='开启';								 
								end if;
								if $hundredOpenVal=0 then 
										set @hundredOpenValName='关闭';
										set @clubEventType=31; 
								else 
										set @hundredOpenValName='开启';
										set @clubEventType=30;
								end if;
								update table_club_hundred_free_charge set nStatus=$hundredOpenVal where nClubID=$nClubId and nPlayerID=$nPlayerId;  
								call Pro_Web_AddEnterPriseLog($nClubId,39,$gamePlayerId,$nPlayerId,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改用户:(ID:',$nPlayerId,'),','的百人场免服务费开关设置:"',@nStatusName,'"变更为"',@hundredOpenValName,'"'));
								
								insert into table_clubevent(nClubID,nEventType,szDesc) values($nClubId,@clubEventType,CONCAT(@ProxyName,' "',@newnFreeServiceFeeName,'"用户(Id:',$nPlayerId,')百人场免服务费'));
						end if;
				else 
						insert into table_club_hundred_free_charge(nClubID,nGameID,nHundredType,nPlayerID,nStatus)
						values($nClubId,0,0,$nPlayerId,$hundredOpenVal);
						if $hundredOpenVal=0 then 
								set @hundredOpenValName='关闭';
								set @clubEventType=31; 
						else 
								set @hundredOpenValName='开启';
								set @clubEventType=30;
						end if;
						call Pro_Web_AddEnterPriseLog($nClubId,39,$gamePlayerId,$nPlayerId,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改用户:(ID:',$nPlayerId,'),','的百人场免服务费开关设置:"默认值"变更为"',@hundredOpenValName,'"'));
						
						insert into table_clubevent(nClubID,nEventType,szDesc) values($nClubId,@clubEventType,CONCAT(@ProxyName,' "',@newnFreeServiceFeeName,'"用户(Id:',$nPlayerId,')百人场免服务费'));
				end if;
				set $returnVal=1;
				set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubInfo_UpdateGameOpenSet
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubInfo_UpdateGameOpenSet`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubInfo_UpdateGameOpenSet`(
		
			in $gamePlayerId int,
			in $nClubId int,
			in $nGameType int,
			in $nStatus int,
			out $returnVal int,
			out $resultMsg varchar(100)
)
returnNode:begin 
		if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$gamePlayerId) then 
			set $returnVal=-1;
			set $resultMsg='用户不存在';
			leave returnNode;
		end if;
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId) then 
			set $returnVal=-1;
			set $resultMsg='俱乐部不存在';
			leave returnNode;
		end if;	
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId and CreatePlayerID=$gamePlayerId) then 	
				set @ProxyName='管理员';
				if not exists(select nClubID from table_clubmember where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=2 and nStatus=1) then 
						set $returnVal=-1;
						set $resultMsg='当前管理员成员不在此俱乐部中';
						leave returnNode;
				end if;
				
				if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=11 and nStatus=1) then 
					set $returnVal=-1;
					set $resultMsg='尚无修改俱乐部游戏开关的操作权限';
					leave returnNode;
				end if;
		else 
				set @ProxyName='创始人';
		end if;
		
		select TypeName into @TypeName from sys_code where `code`=1001008 and Type=$nGameType;
		set @nStatus=0;
		if exists(select nClubID,nGameType,nStatus from table_club_game_cfg where nClubID=$nClubId and nGameType=$nGameType) then 
				select nStatus into @nStatus from table_club_game_cfg where nClubID=$nClubId and nGameType=$nGameType;
				if @nStatus=0 then 
						set @oldnStatusName='不可见';
						set @newnStatusName='可见';
				else 
						set @oldnStatusName='可见';
						set @newnStatusName='不可见';
				end if;
				if @nStatus<>$nStatus then 
						update table_club_game_cfg set nStatus=$nStatus where nClubID=$nClubId and nGameType=$nGameType;
						call Pro_Web_AddEnterPriseLog($nClubId,33,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改俱乐部(nClubId:',$nClubId,'),游戏开关设置:',@TypeName,':"',@oldnStatusName,'"变更为"',@newnStatusName,'"'));
				end if;
		else 
				if $nStatus=1 then 
								set @oldnStatusName='不可见';
								set @newnStatusName='可见';
						else 
								set @oldnStatusName='';
								set @newnStatusName='不可见';
				end if;
				
				set @nDuDiamondMode=0;
				
				if $nGameType=3 then 
							set @nDuDiamondMode=1;
				else 
						set @nDuDiamondMode=2;
				end if;
				insert into table_club_game_cfg(nClubId,nGameType,nStatus,nDuDiamondMode)
				values ($nClubId,$nGameType,$nStatus,@nDuDiamondMode);
				if $nStatus=1 then
					call Pro_Web_AddEnterPriseLog($nClubId,33,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改俱乐部(nClubId:',$nClubId,'),游戏开关设置:',@TypeName,':"',@oldnStatusName,'"变更为"',@newnStatusName,'"'));
				end if;
		end if;		
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemberAppLine
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemberAppLine`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubMemberAppLine`(

	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 			
			declare _tempExtenID int  default 0;
			declare _nClubId,_nPlayerID,_nExtenID int  default 0;
			declare _tJoinTime varchar(32)  default '';
			
			declare done int default false;
			
			declare cur cursor for select mem.nClubId,mem.nPlayerID,mem.nExtenID,mem.tJoinTime 
														 from admin_proxy proxy left join table_clubmember mem on proxy.nClubId=mem.nClubId
														 where proxy.proxyType=1 and proxy.gameProxyType=2 and mem.bRobot=0 and mem.nExtenID>0 and mem.tJoinTime>=$startTime and mem.tJoinTime<$endTime;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId,_nPlayerID,_nExtenID,_tJoinTime;
			
			if done then					
					leave read_loop;    
			end if;

						set _tempExtenID=_nExtenID;
						set @isflag=1;
						set @num=1;
						while @isflag=1 and _tempExtenID>0 do 
									set @num=@num+1;
									insert into table_clubmemberAppLine(nClubID,nPlayerID,nNextID,tJoinTime)values(_nClubId,_tempExtenID,_nPlayerID,_tJoinTime);
									if exists (select nExtenID from table_clubmember where nPlayerID=_tempExtenID) then 
											select nExtenID into _tempExtenID from table_clubmember where nClubId=_nClubId and nPlayerID=_tempExtenID limit 0,1;
									else 
												set @isflag=0;
												set _tempExtenID=0;
									end if;
									if @num>200 then 
												set @isflag=0;
												set _tempExtenID=0;
									end if;
						end while;
						
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemberAppLineSynData20191130
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemberAppLineSynData20191130`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubMemberAppLineSynData20191130`(

	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 			
			declare _tempExtenID int  default 0;
			declare _nClubId,_nPlayerID,_nExtenID int  default 0;
			declare _tJoinTime varchar(32)  default '';
			
			declare done int default false;
			
			declare cur cursor for select mem.nClubId,mem.nPlayerID,mem.nExtenID,mem.tJoinTime 
														 from admin_proxy proxy left join table_clubmember mem on proxy.nClubId=mem.nClubId
														 where proxy.proxyType=1 and proxy.gameProxyType=2 and mem.bRobot=0 and mem.nExtenID>0 and mem.tJoinTime>=$startTime and mem.tJoinTime<=$endTime;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId,_nPlayerID,_nExtenID,_tJoinTime;
			
			if done then					
					leave read_loop;    
			end if;

						set _tempExtenID=_nExtenID;
						set @isflag=1;
						set @num=1;
						while @isflag=1 and _tempExtenID>0 do 
									set @num=@num+1;
									insert into table_clubmemberAppLine(nClubID,nPlayerID,nNextID,tJoinTime)values(_nClubId,_tempExtenID,_nPlayerID,_tJoinTime);
									if exists (select nExtenID from table_clubmember where nPlayerID=_tempExtenID) then 
											select nExtenID into _tempExtenID from table_clubmember where nClubId=_nClubId and nPlayerID=_tempExtenID limit 0,1;
									else 
												set @isflag=0;
												set _tempExtenID=0;
									end if;
									if @num>200 then 
												set @isflag=0;
												set _tempExtenID=0;
									end if;
						end while;
						
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemberProxySum
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemberProxySum`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubMemberProxySum`(

	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
			
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			
			declare _tempExtenID int  default 0;
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			#创建临时表
			drop temporary table if exists temp_table_ClubMemberProxySum;  
			create temporary table temp_table_ClubMemberProxySum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				nPlayerID int DEFAULT 0
			);
			
			set @sqlStr=CONCAT("insert into temp_table_ClubMemberProxySum(nClubId,nPlayerID) 
													select nClubId,nPlayerID 
													from (
																	select log.clubid nClubId,log.nPlayerID 
																	from ",@table_clublogscore," log left join admin_proxy proxy on proxy.nClubId=log.clubid
																	where log.CreateTime>='",$startTime,"' and log.CreateTime<'",$endTime,"' and proxy.proxyType=1 and proxy.gameProxyType=2 
																	GROUP BY log.clubid,log.nPlayerID
																)temp where nPlayerID>0");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
			
			select count(1) into @totalCount from temp_table_ClubMemberProxySum;
			if @totalCount >0 then 
						set @startTime=$startTime,@endTime=$endTime;
						set @currId=1;
						while (@currId<=@totalCount) do
								select nClubId,nPlayerID into @nClubId,@nPlayerID from temp_table_ClubMemberProxySum where Id=@currId;
			
								set @sqlStr1=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @recharge,@rechargeCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=23 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name1;
								
								set @sqlStr2=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @withdrawal,@withdrawalCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=28 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name2;

								
								set @sqlStr3=CONCAT("select IFNULL(SUM(nValidBet),0) into @water from ",@table_clubgamescoredetail," 
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<?");
								PREPARE stmt_name3 FROM @sqlStr3; 
								EXECUTE stmt_name3 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name3;

								
								set @sqlStr4=CONCAT("select IFNULL(SUM(nAmount),0) into @upnAmount from ",@table_clublogscore," 
																		 where clubid=? and nPlayerID=? and nType=1 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name4 FROM @sqlStr4; 
								EXECUTE stmt_name4 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name4;

								
								set @sqlStr5=CONCAT("select IFNULL(SUM(nAmount),0) into @downnAmount from ",@table_clublogscore,"  
																		 where clubid=? and nPlayerID=? and nType=2 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name5 FROM @sqlStr5; 
								EXECUTE stmt_name5 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name5;

								
								set @sqlStr6=CONCAT("select IFNULL(SUM(nAmount),0) into @tasknAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=24 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name6 FROM @sqlStr6; 
								EXECUTE stmt_name6 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name6;
								
								set @sqlStr7=CONCAT("select IFNULL(SUM(nAmount),0) into @activitynAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=29 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name7 FROM @sqlStr7; 
								EXECUTE stmt_name7 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name7;
								
								
								set @sqlStr8=CONCAT("select IFNULL(SUM(nResultMoney),0) into @nResultMoney from ",@table_clubgamescoredetail,"  
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<?");
								PREPARE stmt_name8 FROM @sqlStr8; 
								EXECUTE stmt_name8 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name8;

								
								set @sqlStr9=CONCAT("select IFNULL(SUM(nTax),0) into @nTax from ",@table_clubgamescoredetail,"   
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<?");
								PREPARE stmt_name9 FROM @sqlStr9; 
								EXECUTE stmt_name9 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name9;

								
								set @rechargeNumber=0;
								set @withdrawalNumber=0;
								set @sqlStr10=CONCAT("select count(1) into @rechargeSum from ",@table_clublogscore,"  
																		 where  clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																						and nType=23 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name10 FROM @sqlStr10; 
								EXECUTE stmt_name10;
								DEALLOCATE PREPARE stmt_name10;

								if @rechargeSum>0 then 
										set @rechargeNumber=1;
								end if;
								set @sqlStr11=CONCAT("select count(1) into @withdrawalSum from ",@table_clublogscore,"   
																			where clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																					  and nType=28 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name11 FROM @sqlStr11; 
								EXECUTE stmt_name11;
								DEALLOCATE PREPARE stmt_name11;


								#扣报名费
								set @sqlStr12=CONCAT("select IFNULL(SUM(nAmount),0) into @matchFee from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=30 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name12 FROM @sqlStr12; 
								EXECUTE stmt_name12 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name12;
								#退报名费
								set @sqlStr13=CONCAT("select IFNULL(SUM(nAmount),0) into @returnMatchFee from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=31 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name13 FROM @sqlStr13; 
								EXECUTE stmt_name13 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name13;
								#比赛奖励
								set @sqlStr14=CONCAT("select IFNULL(SUM(nAmount),0) into @matchAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=32 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name14 FROM @sqlStr14; 
								EXECUTE stmt_name14 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name14;

								if @withdrawalSum>0 then 
										set @withdrawalNumber=1;
								end if;
								
								if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
											
											update table_web_clubmemberproxy 
											set recharge=recharge+@recharge,rechargeCount=rechargeCount+@rechargeCount,rechargeNumber=@rechargeNumber,
													withdrawal=withdrawal+@withdrawal,withdrawalCount=withdrawalCount+@withdrawalCount,withdrawalNumber=@withdrawalNumber,water=water+@water,
													upnAmount=upnAmount+@upnAmount,downnAmount=downnAmount+@downnAmount,tasknAmount=tasknAmount+@tasknAmount,
													activitynAmount=activitynAmount+@activitynAmount,matchFee=matchFee+@matchFee,
													returnMatchFee=returnMatchFee+@returnMatchFee,matchAmount=matchAmount+@matchAmount,
													nResultMoney=nResultMoney+@nResultMoney,nTax=nTax+@nTax,
													tEndTime=$startTime
											where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
								else								
										insert into table_web_clubmemberproxy(nClubId,nPlayerId,recharge,withdrawal,rechargeCount,rechargeNumber,
																													withdrawalCount,withdrawalNumber,water,upnAmount,downnAmount,tasknAmount,
																													activitynAmount,matchFee,returnMatchFee,matchAmount,
																													nResultMoney,nTax,tEndTime)
										values(@nClubId,@nPlayerID,@recharge,@withdrawal,@rechargeCount,@rechargeNumber,
													@withdrawalCount,@withdrawalNumber,@water,@upnAmount,@downnAmount,@tasknAmount,
																													@activitynAmount,@matchFee,@returnMatchFee,@matchAmount,@nResultMoney,@nTax,$startTime);
								end if;
								
								select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=@nPlayerID limit 0,1; 
								if _tempExtenID>0 then 
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set directlyWater=directlyWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,directlyWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$startTime);
											end if;
								end if;
								
								set @isflag=1;
								set @num=1;
								while @isflag=1 and _tempExtenID>0 do 
											set @num=@num+1;
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set teamWater=teamWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,teamWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$startTime);											
											end if;
											if exists(select nExtenID from table_clubmember where nPlayerID=_tempExtenID) then 
													select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=_tempExtenID limit 0,1;
											else 
													set @isflag=0;
													set _tempExtenID=0;
											end if;									
											if @num>200 then 
														set @isflag=0;
														set _tempExtenID=0;
											end if;
								end while;
						
			
					set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemberProxySumSynData20191129
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemberProxySumSynData20191129`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubMemberProxySumSynData20191129`(

	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
						
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			
			declare _tempExtenID int  default 0;
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			#创建临时表
			drop temporary table if exists temp_table_ClubMemberProxySum;  
			create temporary table temp_table_ClubMemberProxySum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				nPlayerID int DEFAULT 0
			);
	
			set @sqlStr=CONCAT("insert into temp_table_ClubMemberProxySum(nClubId,nPlayerID) 
													select nClubId,nPlayerID 
													from (
																	select log.clubid nClubId,log.nPlayerID 
																	from ",@table_clublogscore," log left join admin_proxy proxy on proxy.nClubId=log.clubid
																	where log.CreateTime>='",$startTime,"' and log.CreateTime<='",$endTime,"' and proxy.proxyType=1 and proxy.gameProxyType=2 
																	GROUP BY log.clubid,log.nPlayerID
																)temp where nPlayerID>0");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			select count(1) into @totalCount from temp_table_ClubMemberProxySum;
			if @totalCount >0 then 
						set @startTime=$startTime,@endTime=$endTime;
						set @currId=1;
						while (@currId<=@totalCount) do
								select nClubId,nPlayerID into @nClubId,@nPlayerID from temp_table_ClubMemberProxySum where Id=@currId;	
		
								set @sqlStr1=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @recharge,@rechargeCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=23 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name1;
								
								set @sqlStr2=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @withdrawal,@withdrawalCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=28 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name2;

								
								set @sqlStr3=CONCAT("select IFNULL(SUM(nValidBet),0) into @water from ",@table_clubgamescoredetail," 
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name3 FROM @sqlStr3; 
								EXECUTE stmt_name3 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name3;

								
								set @sqlStr4=CONCAT("select IFNULL(SUM(nAmount),0) into @upnAmount from ",@table_clublogscore," 
																		 where clubid=? and nPlayerID=? and nType=1 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name4 FROM @sqlStr4; 
								EXECUTE stmt_name4 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name4;

								
								set @sqlStr5=CONCAT("select IFNULL(SUM(nAmount),0) into @downnAmount from ",@table_clublogscore,"  
																		 where clubid=? and nPlayerID=? and nType=2 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name5 FROM @sqlStr5; 
								EXECUTE stmt_name5 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name5;

								
								set @sqlStr6=CONCAT("select IFNULL(SUM(nAmount),0) into @tasknAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=24 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name6 FROM @sqlStr6; 
								EXECUTE stmt_name6 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name6;
								
								set @sqlStr7=CONCAT("select IFNULL(SUM(nAmount),0) into @activitynAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=29 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name7 FROM @sqlStr7; 
								EXECUTE stmt_name7 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name7;

								
								set @sqlStr8=CONCAT("select IFNULL(SUM(nResultMoney),0) into @nResultMoney from ",@table_clubgamescoredetail,"  
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name8 FROM @sqlStr8; 
								EXECUTE stmt_name8 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name8;

								
								set @sqlStr9=CONCAT("select IFNULL(SUM(nTax),0) into @nTax from ",@table_clubgamescoredetail,"   
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name9 FROM @sqlStr9; 
								EXECUTE stmt_name9 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name9;

								
								set @rechargeNumber=0;
								set @withdrawalNumber=0;
								set @sqlStr10=CONCAT("select count(1) into @rechargeSum from ",@table_clublogscore,"  
																		 where  clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																						and nType=23 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name10 FROM @sqlStr10; 
								EXECUTE stmt_name10;
								DEALLOCATE PREPARE stmt_name10;

								if @rechargeSum>0 then 
										set @rechargeNumber=1;
								end if;
								set @sqlStr11=CONCAT("select count(1) into @withdrawalSum from ",@table_clublogscore,"   
																			where clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																					  and nType=28 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name11 FROM @sqlStr11; 
								EXECUTE stmt_name11;
								DEALLOCATE PREPARE stmt_name11;
								if @withdrawalSum>0 then 
										set @withdrawalNumber=1;
								end if;
								
								if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
											
											update table_web_clubmemberproxy 
											set recharge=recharge+@recharge,rechargeCount=rechargeCount+@rechargeCount,rechargeNumber=@rechargeNumber,
													withdrawal=withdrawal+@withdrawal,withdrawalCount=withdrawalCount+@withdrawalCount,withdrawalNumber=@withdrawalNumber,water=water+@water,
													upnAmount=upnAmount+@upnAmount,downnAmount=downnAmount+@downnAmount,tasknAmount=tasknAmount+@tasknAmount,
													activitynAmount=activitynAmount+@activitynAmount,nResultMoney=nResultMoney+@nResultMoney,nTax=nTax+@nTax,
													tEndTime=$startTime
											where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
								else								
										insert into table_web_clubmemberproxy(nClubId,nPlayerId,recharge,withdrawal,rechargeCount,rechargeNumber,
																													withdrawalCount,withdrawalNumber,water,upnAmount,downnAmount,tasknAmount,
																													activitynAmount,nResultMoney,nTax,tEndTime)
										values(@nClubId,@nPlayerID,@recharge,@withdrawal,@rechargeCount,@rechargeNumber,
													@withdrawalCount,@withdrawalNumber,@water,@upnAmount,@downnAmount,@tasknAmount,
																													@activitynAmount,@nResultMoney,@nTax,$startTime);
								end if;
								
								select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=@nPlayerID limit 0,1;
								if _tempExtenID>0 then 
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set directlyWater=directlyWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,directlyWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$startTime);
											end if;
								end if;
								
								set @isflag=1;
								set @num=1;
								while @isflag=1 and _tempExtenID>0 do 
											set @num=@num+1;
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set teamWater=teamWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,teamWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$startTime);											
											end if;
											if exists(select nExtenID from table_clubmember where nPlayerID=_tempExtenID) then 
													select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=_tempExtenID limit 0,1;
											else 
													set @isflag=0;
													set _tempExtenID=0;
											end if;									
											if @num>200 then 
														set @isflag=0;
														set _tempExtenID=0;
											end if;
								end while;
						
					set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemberProxySumSynData20191129bak
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemberProxySumSynData20191129bak`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubMemberProxySumSynData20191129bak`(

	in $startTime varchar(20),
	in $endTime varchar(20),
	in $nClubId int
)
begin 
						
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			
			declare _tempExtenID int  default 0;
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			#创建临时表
			drop temporary table if exists temp_table_ClubMemberProxySum;  
			create temporary table temp_table_ClubMemberProxySum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				nPlayerID int DEFAULT 0
			);
	
			set @sqlStr=CONCAT("insert into temp_table_ClubMemberProxySum(nClubId,nPlayerID) 
													select nClubId,nPlayerID 
													from (
																	select log.clubid nClubId,log.nPlayerID 
																	from ",@table_clublogscore," log left join admin_proxy proxy on proxy.nClubId=log.clubid
																	where log.clubid=",$nClubId," and log.CreateTime>='",$startTime,"' and log.CreateTime<='",$endTime,"' and proxy.proxyType=1 and proxy.gameProxyType=2 
																	GROUP BY log.clubid,log.nPlayerID
																)temp where nPlayerID>0");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			select count(1) into @totalCount from temp_table_ClubMemberProxySum;
			if @totalCount >0 then 
						set @startTime=$startTime,@endTime=$endTime;
						set @currId=1;
						while (@currId<=@totalCount) do
								select nClubId,nPlayerID into @nClubId,@nPlayerID from temp_table_ClubMemberProxySum where Id=@currId;	
		
								set @sqlStr1=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @recharge,@rechargeCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=23 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name1;
								
								set @sqlStr2=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @withdrawal,@withdrawalCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=28 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name2;

								
								set @sqlStr3=CONCAT("select IFNULL(SUM(nValidBet),0) into @water from ",@table_clubgamescoredetail," 
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name3 FROM @sqlStr3; 
								EXECUTE stmt_name3 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name3;

								
								set @sqlStr4=CONCAT("select IFNULL(SUM(nAmount),0) into @upnAmount from ",@table_clublogscore," 
																		 where clubid=? and nPlayerID=? and nType=1 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name4 FROM @sqlStr4; 
								EXECUTE stmt_name4 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name4;

								
								set @sqlStr5=CONCAT("select IFNULL(SUM(nAmount),0) into @downnAmount from ",@table_clublogscore,"  
																		 where clubid=? and nPlayerID=? and nType=2 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name5 FROM @sqlStr5; 
								EXECUTE stmt_name5 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name5;

								
								set @sqlStr6=CONCAT("select IFNULL(SUM(nAmount),0) into @tasknAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=24 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name6 FROM @sqlStr6; 
								EXECUTE stmt_name6 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name6;
								
								set @sqlStr7=CONCAT("select IFNULL(SUM(nAmount),0) into @activitynAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=29 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name7 FROM @sqlStr7; 
								EXECUTE stmt_name7 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name7;

								
								set @sqlStr8=CONCAT("select IFNULL(SUM(nResultMoney),0) into @nResultMoney from ",@table_clubgamescoredetail,"  
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name8 FROM @sqlStr8; 
								EXECUTE stmt_name8 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name8;

								
								set @sqlStr9=CONCAT("select IFNULL(SUM(nTax),0) into @nTax from ",@table_clubgamescoredetail,"   
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name9 FROM @sqlStr9; 
								EXECUTE stmt_name9 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name9;

								
								set @rechargeNumber=0;
								set @withdrawalNumber=0;
								set @sqlStr10=CONCAT("select count(1) into @rechargeSum from ",@table_clublogscore,"  
																		 where  clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																						and nType=23 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name10 FROM @sqlStr10; 
								EXECUTE stmt_name10;
								DEALLOCATE PREPARE stmt_name10;

								if @rechargeSum>0 then 
										set @rechargeNumber=1;
								end if;
								set @sqlStr11=CONCAT("select count(1) into @withdrawalSum from ",@table_clublogscore,"   
																			where clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																					  and nType=28 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name11 FROM @sqlStr11; 
								EXECUTE stmt_name11;
								DEALLOCATE PREPARE stmt_name11;
								if @withdrawalSum>0 then 
										set @withdrawalNumber=1;
								end if;
								
								if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
											
											update table_web_clubmemberproxy 
											set recharge=recharge+@recharge,rechargeCount=rechargeCount+@rechargeCount,rechargeNumber=@rechargeNumber,
													withdrawal=withdrawal+@withdrawal,withdrawalCount=withdrawalCount+@withdrawalCount,withdrawalNumber=@withdrawalNumber,water=water+@water,
													upnAmount=upnAmount+@upnAmount,downnAmount=downnAmount+@downnAmount,tasknAmount=tasknAmount+@tasknAmount,
													activitynAmount=activitynAmount+@activitynAmount,nResultMoney=nResultMoney+@nResultMoney,nTax=nTax+@nTax,
													tEndTime=$startTime
											where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
								else								
										insert into table_web_clubmemberproxy(nClubId,nPlayerId,recharge,withdrawal,rechargeCount,rechargeNumber,
																													withdrawalCount,withdrawalNumber,water,upnAmount,downnAmount,tasknAmount,
																													activitynAmount,nResultMoney,nTax,tEndTime)
										values(@nClubId,@nPlayerID,@recharge,@withdrawal,@rechargeCount,@rechargeNumber,
													@withdrawalCount,@withdrawalNumber,@water,@upnAmount,@downnAmount,@tasknAmount,
																													@activitynAmount,@nResultMoney,@nTax,$startTime);
								end if;
								
								select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=@nPlayerID limit 0,1;
								if _tempExtenID>0 then 
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set directlyWater=directlyWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,directlyWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$startTime);
											end if;
								end if;
								
								set @isflag=1;
								set @num=1;
								while @isflag=1 and _tempExtenID>0 do 
											set @num=@num+1;
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set teamWater=teamWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,teamWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$startTime);											
											end if;
											if exists(select nExtenID from table_clubmember where nPlayerID=_tempExtenID) then 
													select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=_tempExtenID limit 0,1;
											else 
													set @isflag=0;
													set _tempExtenID=0;
											end if;									
											if @num>200 then 
														set @isflag=0;
														set _tempExtenID=0;
											end if;
								end while;
						
					set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemberProxySumSynData20191129bak_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemberProxySumSynData20191129bak_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_ClubMemberProxySumSynData20191129bak_Pre`(

	in $startTime varchar(20),
	in $endTime varchar(20),
	in $nClubId int
)
begin 
						
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			
			declare _tempExtenID int  default 0;
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			#创建临时表
			drop temporary table if exists temp_table_ClubMemberProxySum;  
			create temporary table temp_table_ClubMemberProxySum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				nPlayerID int DEFAULT 0
			);
	
			set @sqlStr=CONCAT("insert into temp_table_ClubMemberProxySum(nClubId,nPlayerID) 
													select nClubId,nPlayerID 
													from (
																	select log.clubid nClubId,log.nPlayerID 
																	from ",@table_clublogscore," log left join admin_proxy proxy on proxy.nClubId=log.clubid
																	where log.clubid=",$nClubId," and log.CreateTime>='",$startTime,"' and log.CreateTime<='",$endTime,"' and proxy.proxyType=1 and proxy.gameProxyType=2 
																	GROUP BY log.clubid,log.nPlayerID
																)temp where nPlayerID>0");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			select count(1) into @totalCount from temp_table_ClubMemberProxySum;
			if @totalCount >0 then 
						set @startTime=$startTime,@endTime=$endTime;
						set @currId=1;
						while (@currId<=@totalCount) do
								select nClubId,nPlayerID into @nClubId,@nPlayerID from temp_table_ClubMemberProxySum where Id=@currId;	
		
								set @sqlStr1=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @recharge,@rechargeCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=23 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name1;
								
								set @sqlStr2=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @withdrawal,@withdrawalCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=28 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name2;

								
								set @sqlStr3=CONCAT("select IFNULL(SUM(nValidBet),0) into @water from ",@table_clubgamescoredetail," 
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name3 FROM @sqlStr3; 
								EXECUTE stmt_name3 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name3;

								
								set @sqlStr4=CONCAT("select IFNULL(SUM(nAmount),0) into @upnAmount from ",@table_clublogscore," 
																		 where clubid=? and nPlayerID=? and nType=1 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name4 FROM @sqlStr4; 
								EXECUTE stmt_name4 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name4;

								
								set @sqlStr5=CONCAT("select IFNULL(SUM(nAmount),0) into @downnAmount from ",@table_clublogscore,"  
																		 where clubid=? and nPlayerID=? and nType=2 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name5 FROM @sqlStr5; 
								EXECUTE stmt_name5 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name5;

								
								set @sqlStr6=CONCAT("select IFNULL(SUM(nAmount),0) into @tasknAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=24 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name6 FROM @sqlStr6; 
								EXECUTE stmt_name6 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name6;
								
								set @sqlStr7=CONCAT("select IFNULL(SUM(nAmount),0) into @activitynAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=29 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name7 FROM @sqlStr7; 
								EXECUTE stmt_name7 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name7;

								
								set @sqlStr8=CONCAT("select IFNULL(SUM(nResultMoney),0) into @nResultMoney from ",@table_clubgamescoredetail,"  
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name8 FROM @sqlStr8; 
								EXECUTE stmt_name8 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name8;

								
								set @sqlStr9=CONCAT("select IFNULL(SUM(nTax),0) into @nTax from ",@table_clubgamescoredetail,"   
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name9 FROM @sqlStr9; 
								EXECUTE stmt_name9 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name9;

								
								set @rechargeNumber=0;
								set @withdrawalNumber=0;
								set @sqlStr10=CONCAT("select count(1) into @rechargeSum from ",@table_clublogscore,"  
																		 where  clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																						and nType=23 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name10 FROM @sqlStr10; 
								EXECUTE stmt_name10;
								DEALLOCATE PREPARE stmt_name10;

								if @rechargeSum>0 then 
										set @rechargeNumber=1;
								end if;
								set @sqlStr11=CONCAT("select count(1) into @withdrawalSum from ",@table_clublogscore,"   
																			where clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																					  and nType=28 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name11 FROM @sqlStr11; 
								EXECUTE stmt_name11;
								DEALLOCATE PREPARE stmt_name11;
								if @withdrawalSum>0 then 
										set @withdrawalNumber=1;
								end if;
								
								if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
											
											update table_web_clubmemberproxy 
											set recharge=recharge+@recharge,rechargeCount=rechargeCount+@rechargeCount,rechargeNumber=@rechargeNumber,
													withdrawal=withdrawal+@withdrawal,withdrawalCount=withdrawalCount+@withdrawalCount,withdrawalNumber=@withdrawalNumber,water=water+@water,
													upnAmount=upnAmount+@upnAmount,downnAmount=downnAmount+@downnAmount,tasknAmount=tasknAmount+@tasknAmount,
													activitynAmount=activitynAmount+@activitynAmount,nResultMoney=nResultMoney+@nResultMoney,nTax=nTax+@nTax,
													tEndTime=$endTime
											where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
								else								
										insert into table_web_clubmemberproxy(nClubId,nPlayerId,recharge,withdrawal,rechargeCount,rechargeNumber,
																													withdrawalCount,withdrawalNumber,water,upnAmount,downnAmount,tasknAmount,
																													activitynAmount,nResultMoney,nTax,tEndTime)
										values(@nClubId,@nPlayerID,@recharge,@withdrawal,@rechargeCount,@rechargeNumber,
													@withdrawalCount,@withdrawalNumber,@water,@upnAmount,@downnAmount,@tasknAmount,
																													@activitynAmount,@nResultMoney,@nTax,$endTime);
								end if;
								
								select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=@nPlayerID limit 0,1;
								if _tempExtenID>0 then 
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set directlyWater=directlyWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,directlyWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$endTime);
											end if;
								end if;
								
								set @isflag=1;
								set @num=1;
								while @isflag=1 and _tempExtenID>0 do 
											set @num=@num+1;
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set teamWater=teamWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,teamWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$endTime);											
											end if;
											if exists(select nExtenID from table_clubmember where nPlayerID=_tempExtenID) then 
													select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=_tempExtenID limit 0,1;
											else 
													set @isflag=0;
													set _tempExtenID=0;
											end if;									
											if @num>200 then 
														set @isflag=0;
														set _tempExtenID=0;
											end if;
								end while;
						
					set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemberProxySumSynData20191129_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemberProxySumSynData20191129_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_ClubMemberProxySumSynData20191129_Pre`(

	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
						
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			
			declare _tempExtenID int  default 0;
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			#创建临时表
			drop temporary table if exists temp_table_ClubMemberProxySum;  
			create temporary table temp_table_ClubMemberProxySum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				nPlayerID int DEFAULT 0
			);
	
			set @sqlStr=CONCAT("insert into temp_table_ClubMemberProxySum(nClubId,nPlayerID) 
													select nClubId,nPlayerID 
													from (
																	select log.clubid nClubId,log.nPlayerID 
																	from ",@table_clublogscore," log left join admin_proxy proxy on proxy.nClubId=log.clubid
																	where log.CreateTime>='",$startTime,"' and log.CreateTime<='",$endTime,"' and proxy.proxyType=1 and proxy.gameProxyType=2 
																	GROUP BY log.clubid,log.nPlayerID
																)temp where nPlayerID>0");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			select count(1) into @totalCount from temp_table_ClubMemberProxySum;
			if @totalCount >0 then 
						set @startTime=$startTime,@endTime=$endTime;
						set @currId=1;
						while (@currId<=@totalCount) do
								select nClubId,nPlayerID into @nClubId,@nPlayerID from temp_table_ClubMemberProxySum where Id=@currId;	
		
								set @sqlStr1=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @recharge,@rechargeCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=23 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name1;
								
								set @sqlStr2=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @withdrawal,@withdrawalCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=28 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name2;

								
								set @sqlStr3=CONCAT("select IFNULL(SUM(nValidBet),0) into @water from ",@table_clubgamescoredetail," 
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name3 FROM @sqlStr3; 
								EXECUTE stmt_name3 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name3;

								
								set @sqlStr4=CONCAT("select IFNULL(SUM(nAmount),0) into @upnAmount from ",@table_clublogscore," 
																		 where clubid=? and nPlayerID=? and nType=1 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name4 FROM @sqlStr4; 
								EXECUTE stmt_name4 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name4;

								
								set @sqlStr5=CONCAT("select IFNULL(SUM(nAmount),0) into @downnAmount from ",@table_clublogscore,"  
																		 where clubid=? and nPlayerID=? and nType=2 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name5 FROM @sqlStr5; 
								EXECUTE stmt_name5 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name5;

								
								set @sqlStr6=CONCAT("select IFNULL(SUM(nAmount),0) into @tasknAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=24 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name6 FROM @sqlStr6; 
								EXECUTE stmt_name6 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name6;
								
								set @sqlStr7=CONCAT("select IFNULL(SUM(nAmount),0) into @activitynAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=29 and CreateTime>=? and CreateTime<=?");
								PREPARE stmt_name7 FROM @sqlStr7; 
								EXECUTE stmt_name7 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name7;

								
								set @sqlStr8=CONCAT("select IFNULL(SUM(nResultMoney),0) into @nResultMoney from ",@table_clubgamescoredetail,"  
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name8 FROM @sqlStr8; 
								EXECUTE stmt_name8 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name8;

								
								set @sqlStr9=CONCAT("select IFNULL(SUM(nTax),0) into @nTax from ",@table_clubgamescoredetail,"   
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<=?");
								PREPARE stmt_name9 FROM @sqlStr9; 
								EXECUTE stmt_name9 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name9;

								
								set @rechargeNumber=0;
								set @withdrawalNumber=0;
								set @sqlStr10=CONCAT("select count(1) into @rechargeSum from ",@table_clublogscore,"  
																		 where  clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																						and nType=23 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name10 FROM @sqlStr10; 
								EXECUTE stmt_name10;
								DEALLOCATE PREPARE stmt_name10;

								if @rechargeSum>0 then 
										set @rechargeNumber=1;
								end if;
								set @sqlStr11=CONCAT("select count(1) into @withdrawalSum from ",@table_clublogscore,"   
																			where clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																					  and nType=28 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name11 FROM @sqlStr11; 
								EXECUTE stmt_name11;
								DEALLOCATE PREPARE stmt_name11;
								if @withdrawalSum>0 then 
										set @withdrawalNumber=1;
								end if;
								
								if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
											
											update table_web_clubmemberproxy 
											set recharge=recharge+@recharge,rechargeCount=rechargeCount+@rechargeCount,rechargeNumber=@rechargeNumber,
													withdrawal=withdrawal+@withdrawal,withdrawalCount=withdrawalCount+@withdrawalCount,withdrawalNumber=@withdrawalNumber,water=water+@water,
													upnAmount=upnAmount+@upnAmount,downnAmount=downnAmount+@downnAmount,tasknAmount=tasknAmount+@tasknAmount,
													activitynAmount=activitynAmount+@activitynAmount,nResultMoney=nResultMoney+@nResultMoney,nTax=nTax+@nTax,
													tEndTime=$endTime
											where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
								else								
										insert into table_web_clubmemberproxy(nClubId,nPlayerId,recharge,withdrawal,rechargeCount,rechargeNumber,
																													withdrawalCount,withdrawalNumber,water,upnAmount,downnAmount,tasknAmount,
																													activitynAmount,nResultMoney,nTax,tEndTime)
										values(@nClubId,@nPlayerID,@recharge,@withdrawal,@rechargeCount,@rechargeNumber,
													@withdrawalCount,@withdrawalNumber,@water,@upnAmount,@downnAmount,@tasknAmount,
																													@activitynAmount,@nResultMoney,@nTax,$endTime);
								end if;
								
								select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=@nPlayerID limit 0,1;
								if _tempExtenID>0 then 
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set directlyWater=directlyWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,directlyWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$endTime);
											end if;
								end if;
								
								set @isflag=1;
								set @num=1;
								while @isflag=1 and _tempExtenID>0 do 
											set @num=@num+1;
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set teamWater=teamWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,teamWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$endTime);											
											end if;
											if exists(select nExtenID from table_clubmember where nPlayerID=_tempExtenID) then 
													select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=_tempExtenID limit 0,1;
											else 
													set @isflag=0;
													set _tempExtenID=0;
											end if;									
											if @num>200 then 
														set @isflag=0;
														set _tempExtenID=0;
											end if;
								end while;
						
					set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemberProxySumTimer
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemberProxySumTimer`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubMemberProxySumTimer`(
	/*
		创建时间:2019-11-28 
		修改时间:2020-10-29 
		功能描述:	每间隔十分钟执行一次
	*/
	in $minutes int
)
begin 
			#定时器执行时间 2019-12-02 00:05:00      _startTime=2019-12-01 23:50:00   _endTime=2019-12-02 00:00:00			
			#当前时间
			set @currTime=NOW();
			#开始时间
			set @startTime=DATE_FORMAT(date_add(@currTime, interval -15 minute),'%Y-%m-%d %H:%i:00');
			#结束时间
			set @endTime=DATE_FORMAT(date_add(@currTime, interval -5 minute),'%Y-%m-%d %H:%i:00');
			#指定分钟统计app代理的信息--充值、提现、牌局
			call Pro_Web_ClubMemberProxySum(@startTime,@endTime);
			#指定分钟代理线梳理
			call Pro_Web_ClubMemberAppLine(@startTime,@endTime);
			#Admin首页数据汇总
			call Pro_Web_AdminFirstPageSum(@startTime,@endTime);
			#Admin财务管理充值提现分析汇总
			call Pro_Web_AdminDepositSum(@startTime,@endTime);

			#风控系统-运营商盈亏、运营商游戏盈亏预警(最近30天盈亏预警、含当天)
			call Pro_Web_RiskContrProxy(@currTime);
			#风控系统-同IP、无效IP预警
			call Pro_Web_RiskContrProxyIP(@currTime,@startTime,@endTime);
			#风控系统-会员--(最近24小时盈亏预警、历史盈亏预警)
			call Pro_Web_RiskContrUsers(@currTime);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemberProxySum_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemberProxySum_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_ClubMemberProxySum_Pre`(

	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
			
			declare _currdateStart varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
			declare _currdateEnd varchar(20) default CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
			
			declare _tempExtenID int  default 0;
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_currdateStart);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_currdateStart);
			#创建临时表
			drop temporary table if exists temp_table_ClubMemberProxySum;  
			create temporary table temp_table_ClubMemberProxySum(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int DEFAULT 0,
				nPlayerID int DEFAULT 0
			);
			
			set @sqlStr=CONCAT("insert into temp_table_ClubMemberProxySum(nClubId,nPlayerID) 
													select nClubId,nPlayerID 
													from (
																	select log.clubid nClubId,log.nPlayerID 
																	from ",@table_clublogscore," log left join admin_proxy proxy on proxy.nClubId=log.clubid
																	where log.CreateTime>='",$startTime,"' and log.CreateTime<'",$endTime,"' and proxy.proxyType=1 and proxy.gameProxyType=2 
																	GROUP BY log.clubid,log.nPlayerID
																)temp where nPlayerID>0");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
			
			select count(1) into @totalCount from temp_table_ClubMemberProxySum;
			if @totalCount >0 then 
						set @startTime=$startTime,@endTime=$endTime;
						set @currId=1;
						while (@currId<=@totalCount) do
								select nClubId,nPlayerID into @nClubId,@nPlayerID from temp_table_ClubMemberProxySum where Id=@currId;
			
								set @sqlStr1=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @recharge,@rechargeCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=23 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name1 FROM @sqlStr1; 
								EXECUTE stmt_name1 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name1;
								
								set @sqlStr2=CONCAT("select IFNULL(SUM(nAmount),0),count(1) into @withdrawal,@withdrawalCount from ",@table_clublogscore," 
																		 where  clubid=? and nPlayerID=? and nType=28 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name2 FROM @sqlStr2; 
								EXECUTE stmt_name2 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name2;

								
								set @sqlStr3=CONCAT("select IFNULL(SUM(nValidBet),0) into @water from ",@table_clubgamescoredetail," 
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<?");
								PREPARE stmt_name3 FROM @sqlStr3; 
								EXECUTE stmt_name3 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name3;

								
								set @sqlStr4=CONCAT("select IFNULL(SUM(nAmount),0) into @upnAmount from ",@table_clublogscore," 
																		 where clubid=? and nPlayerID=? and nType=1 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name4 FROM @sqlStr4; 
								EXECUTE stmt_name4 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name4;

								
								set @sqlStr5=CONCAT("select IFNULL(SUM(nAmount),0) into @downnAmount from ",@table_clublogscore,"  
																		 where clubid=? and nPlayerID=? and nType=2 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name5 FROM @sqlStr5; 
								EXECUTE stmt_name5 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name5;

								
								set @sqlStr6=CONCAT("select IFNULL(SUM(nAmount),0) into @tasknAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=24 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name6 FROM @sqlStr6; 
								EXECUTE stmt_name6 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name6;
								
								set @sqlStr7=CONCAT("select IFNULL(SUM(nAmount),0) into @activitynAmount from ",@table_clublogscore,"   
																		 where clubid=? and nPlayerID=? and nType=29 and CreateTime>=? and CreateTime<?");
								PREPARE stmt_name7 FROM @sqlStr7; 
								EXECUTE stmt_name7 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name7;

								
								set @sqlStr8=CONCAT("select IFNULL(SUM(nResultMoney),0) into @nResultMoney from ",@table_clubgamescoredetail,"  
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<?");
								PREPARE stmt_name8 FROM @sqlStr8; 
								EXECUTE stmt_name8 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name8;

								
								set @sqlStr9=CONCAT("select IFNULL(SUM(nTax),0) into @nTax from ",@table_clubgamescoredetail,"   
																		 where nClubID=? and nPlayerID=? and tEndTime>=? and tEndTime<?");
								PREPARE stmt_name9 FROM @sqlStr9; 
								EXECUTE stmt_name9 USING  @nClubId,@nPlayerID,@startTime,@endTime;
								DEALLOCATE PREPARE stmt_name9;

								
								set @rechargeNumber=0;
								set @withdrawalNumber=0;
								set @sqlStr10=CONCAT("select count(1) into @rechargeSum from ",@table_clublogscore,"  
																		 where  clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																						and nType=23 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name10 FROM @sqlStr10; 
								EXECUTE stmt_name10;
								DEALLOCATE PREPARE stmt_name10;

								if @rechargeSum>0 then 
										set @rechargeNumber=1;
								end if;
								set @sqlStr11=CONCAT("select count(1) into @withdrawalSum from ",@table_clublogscore,"   
																			where clubid=",@nClubId," and nPlayerID=",@nPlayerID," 
																					  and nType=28 and CreateTime>='",_currdateStart,"' and CreateTime<='",_currdateEnd,"'");
								PREPARE stmt_name11 FROM @sqlStr11; 
								EXECUTE stmt_name11;
								DEALLOCATE PREPARE stmt_name11;

								if @withdrawalSum>0 then 
										set @withdrawalNumber=1;
								end if;
								
								if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 
											
											update table_web_clubmemberproxy 
											set recharge=recharge+@recharge,rechargeCount=rechargeCount+@rechargeCount,rechargeNumber=@rechargeNumber,
													withdrawal=withdrawal+@withdrawal,withdrawalCount=withdrawalCount+@withdrawalCount,withdrawalNumber=@withdrawalNumber,water=water+@water,
													upnAmount=upnAmount+@upnAmount,downnAmount=downnAmount+@downnAmount,tasknAmount=tasknAmount+@tasknAmount,
													activitynAmount=activitynAmount+@activitynAmount,nResultMoney=nResultMoney+@nResultMoney,nTax=nTax+@nTax,
													tEndTime=$endTime
											where nClubId=@nClubId and nPlayerId=@nPlayerID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
								else								
										insert into table_web_clubmemberproxy(nClubId,nPlayerId,recharge,withdrawal,rechargeCount,rechargeNumber,
																													withdrawalCount,withdrawalNumber,water,upnAmount,downnAmount,tasknAmount,
																													activitynAmount,nResultMoney,nTax,tEndTime)
										values(@nClubId,@nPlayerID,@recharge,@withdrawal,@rechargeCount,@rechargeNumber,
													@withdrawalCount,@withdrawalNumber,@water,@upnAmount,@downnAmount,@tasknAmount,
																													@activitynAmount,@nResultMoney,@nTax,$endTime);
								end if;
								
								select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=@nPlayerID limit 0,1; 
								if _tempExtenID>0 then 
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set directlyWater=directlyWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,directlyWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$endTime);
											end if;
								end if;
								
								set @isflag=1;
								set @num=1;
								while @isflag=1 and _tempExtenID>0 do 
											set @num=@num+1;
											
											if exists (select nClubId from table_web_clubmemberproxy where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd) then 								
														
														update table_web_clubmemberproxy set teamWater=teamWater+@water
														where nClubId=@nClubId and nPlayerId=_tempExtenID and tEndTime>=_currdateStart and tEndTime<=_currdateEnd;
											else 	
													insert into table_web_clubmemberproxy(nClubId,nPlayerId,teamWater,tEndTime)
													values(@nClubId,_tempExtenID,@water,$endTime);											
											end if;
											if exists(select nExtenID from table_clubmember where nPlayerID=_tempExtenID) then 
													select nExtenID into _tempExtenID from table_clubmember where nClubId=@nClubId and nPlayerID=_tempExtenID limit 0,1;
											else 
													set @isflag=0;
													set _tempExtenID=0;
											end if;									
											if @num>200 then 
														set @isflag=0;
														set _tempExtenID=0;
											end if;
								end while;
						
			
					set @currId=@currId+1;
					end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMembOpen
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMembOpen`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubMembOpen`(

	in $type int,
	in $nClubId int,
	in $nPlayerId int,
	in $gamePlayerId int,
	in $flagVal int,
	out $returnVal int,
	out $resultMsg varchar(50)

)
returnNode:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;				
				if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
						set $returnVal=-1;
						set $resultMsg='当前俱乐部不存在';
						leave returnNode;	
				end if;
				if not exists(select nPlayerId from table_user where nPlayerId=$gamePlayerId or nPlayerId=$nPlayerId) then
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubmember where nStatus=1 and nClubID=$nClubId and nPlayerID=$nPlayerId) then
						set $returnVal=-1;
						set $resultMsg='该用户不在此俱乐部';
						leave returnNode;	
				end if;
				if exists(select nPlayerID from table_clubmember where nStatus=1 and nLevel=1 and nClubID=$nClubId and nPlayerID=$gamePlayerId) then 
							set @ProxyName='"创始人"';
							set @enterType=1;
				else 
						if exists(select nPlayerID from table_clubmember where nStatus=1 and nLevel=2 and nClubID=$nClubId and nPlayerID=$gamePlayerId) then 
									set @ProxyName='"管理员"';
									set @enterType=2;
						else 
									set @ProxyName='成员';
									set @enterType=3;
									set $returnVal=-1;
									set $resultMsg='尚无此操作权限';
									leave returnNode;	
						end if;
				end if;
				if $flagVal=0 then 
						set @optionName='允许';
				else 
						set @optionName='禁止';
				end if;
				
				start transaction;
				if $type=1 then 
						set @logType=52;
						set @title='"参与牌局"';
						
					 if @enterType=2 then 
								if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=18 and nStatus=1) then 
									set $returnVal=-1;
									set $resultMsg='您的账号没有该俱乐部的参与牌局控制操作权限';
									leave returnNode;
								end if;
					 end if;
						
						if exists(select nClubID from table_club_member_exswitch_config where nClubID=$nClubId and nPlayerID=$nPlayerId and nType=1 and nStatus=$flagVal) then 
								set $returnVal=1;
								set $resultMsg='成功';
								leave returnNode;
						else 
								if exists(select nClubID from table_club_member_exswitch_config where nClubID=$nClubId and nPlayerID=$nPlayerId and nType=1)then 
										update table_club_member_exswitch_config set nStatus=$flagVal where nClubID=$nClubId and nPlayerID=$nPlayerId and nType=1;
								else 
										insert into table_club_member_exswitch_config(nClubID,nPlayerID,nType,nStatus)values($nClubId,$nPlayerId,1,$flagVal);
								end if;
						end if;				
				else 
						set $returnVal=-1;
						set $resultMsg='非法操作';
						leave returnNode;	
				end if;
				
				select szNickName into @szNickName from table_user where nPlayerId=$nPlayerId;
				call Pro_Web_AddEnterPriseLog($nClubId,@logType,$gamePlayerId,$nPlayerId,CONCAT('俱乐部',@ProxyName,'(ID:',$gamePlayerId,')',@optionName,'ID:',$nPlayerId,'(昵称:',@szNickName,')',@title));
			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-1;
					set $resultMsg='存储过程执行异常';
					rollback;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemDisabledManage
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemDisabledManage`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubMemDisabledManage`(
		
	in $nClubID int,
	in $gamePlayerId int,
	in $nPlayerId int,
	in $status int,
	out $returnVal int,
	out $resultMsg varchar(50),
	out $msgId int 
)
returnVal:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				set $msgId=0;
				if not exists(select nPlayerId from table_user  where nPlayerId=$nPlayerId or nPlayerId=$gamePlayerId and nActive=1) then 
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubID) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;
				end if;
				
				if exists(select EnterPriseID from enterprise where GamePlayerId=$gamePlayerId) then
						set @IsProxyAccount=1;
				else 
						set @IsProxyAccount=0;
				end if;
				start transaction;
				if $status=1 then 
							if @IsProxyAccount=0 then 
									set $returnVal=-1;
									set $resultMsg='尚无后台代理账号';
									leave returnVal;
							end if;
							
							set @title='启用管理员后台账号';
							set @msg=CONCAT('用户ID：',$nPlayerId,'的','所在俱乐部Id:',$nClubID,'的管理员后台账号已被激活');
							
							update enterprise set `Status`=$status,UpdateTime=NOW() where GamePlayerId=$nPlayerId;
							
							select AccountName into @AccountName from accountinfo where EnterPriseID=(select EnterPriseID from enterprise where GamePlayerId=$nPlayerId);
							call Pro_Web_AddEnterPriseLog($nClubID,7,$gamePlayerId,$nPlayerId,CONCAT('俱乐部创建者启用(ID:',$nPlayerId,')管理员账号:',	@AccountName));
				elseif $status=2 then 
							if @IsProxyAccount=0 then 
									set $returnVal=-1;
									set $resultMsg='尚无后台代理账号';
									leave returnVal;
							end if;
							
							set @title='禁用管理员后台账号';
							set @msg=CONCAT('用户ID：',$nPlayerId,'的','所在俱乐部Id:',$nClubID,'的管理员后台账号已被禁用');
							
							update enterprise set `Status`=$status,UpdateTime=NOW() where GamePlayerId=$nPlayerId;
							
							select AccountName into @AccountName from accountinfo where EnterPriseID=(select EnterPriseID from enterprise where GamePlayerId=$nPlayerId);
							call Pro_Web_AddEnterPriseLog($nClubID,8,$gamePlayerId,$nPlayerId,CONCAT('俱乐部创建者禁用(ID:',$nPlayerId,')管理员账号:',	@AccountName));
				elseif $status=3 then 
							set @title='取消管理员权限';
							select szClubName,CreatePlayerID into @szClubName,@CreatePlayerID from table_clubinfo where nClubID=$nClubID;
							set @msg=CONCAT('您已被创始人(',@CreatePlayerID,')取消了俱乐部',@szClubName,'管理员的资格');
							if exists(select nClubID from table_clubmember where nClubID=$nClubID and nPlayerID=$nPlayerId and nStatus=1 and nLevel=2) then 
									
									update table_clubmember set nLevel=$status where nClubID=$nClubID and nPlayerID=$nPlayerId;
							end if;
							
							
							delete from table_club_member_authority where nClubID=$nClubID and nPlayerID=$nPlayerId;	
							
							if @IsProxyAccount=1 then 									
									select EnterPriseID into @enterPriceId from enterprise where GamePlayerId=$nPlayerId;
									update enterpricemanage set nStatus=$status where nClubID=$nClubID and nPlayerID=$nPlayerId and EnterPriceId=@enterPriceId;
							end if;							
							
							call Pro_Web_AddEnterPriseLog($nClubID,2,$gamePlayerId,$nPlayerId,CONCAT('俱乐部创建者取消管理员(ID:',$nPlayerId,')'));
				else 
						set $returnVal=-1;
						set $resultMsg='非法操作';
						leave returnVal;
				end if;
					
				 insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) values($nPlayerId,502,@title,@msg);
				 set $msgId=@@identity;
				if errno=0 then
						set $returnVal=1;
						set $resultMsg='成功';
						commit;
				else
						set $returnVal=-99;
						set $resultMsg='1:执行存储过程异常';
						rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemExten
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemExten`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubMemExten`(
		
	in $gamePlayerId int,
	in $nClubId int,
	in $nPlayerId int,
	in $val varchar(100),
	out $returnVal int,
	out $resultMsg varchar(100)
)
returnNode:begin 
				if not exists(select nPlayerId from table_user  where nPlayerId=$nPlayerId or nPlayerId=$gamePlayerId and nActive=1) then 
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubmember  where nStatus=1 and nClubID=$nClubId and nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='用户不在该俱乐部';
						leave returnNode;
				end if;				
				
				if not exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=1 and nStatus=1) then 
						set $returnVal=-1;
						set $resultMsg='尚无此操作权限';
						leave returnNode;
				end if;
				if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$nPlayerId and nExtenDivision=$val and nStatus=1) then 
						set $returnVal=1;
						set $resultMsg='成功';
						leave returnNode;
				end if;
				select nExtenDivision into @nExtenDivision from table_clubmember where nClubID=$nClubId and nPlayerId=$nPlayerId and nStatus=1;	
				if @nExtenDivision<>$val then 
					if @nExtenDivision=0 then 
								set @oldSetName='关闭';
					else 
								set @oldSetName='开启';
					end if;
					if $val=0 then 
								set @newSetName='关闭';
					else 
								set @newSetName='开启';
					end if;
					update table_clubmember set nExtenDivision=$val where nClubID=$nClubId and nPlayerId=$nPlayerId;  
					call Pro_Web_AddEnterPriseLog($nClubId,24,$gamePlayerId,$nPlayerId,CONCAT('(创始人ID:',$gamePlayerId,')修改用户:(ID:',$nPlayerId,'),','的推广业绩奖励开关设置:"',@oldSetName,'"变更为"',@newSetName,'"'));
			end if;
			set $returnVal=1;
			set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubMemManageReset
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubMemManageReset`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubMemManageReset`(

	in $nPlayerId int,
	in $nClubId int,
	in $pwd varchar(100),
	out $returnVal int
)
begin 
				declare _AccountId int default 0;
				set $returnVal=0;
				if exists(select GamePlayerId from enterprise where EnterPriseType=2 and GamePlayerId=$nPlayerId) then 
						select AccountId into _AccountId from enterprise where EnterPriseType=2 and GamePlayerId=$nPlayerId;
						update accountinfo set `Password`=$pwd,UpdateTime=NOW() where AccountId=_AccountId;
						
						select CreatePlayerID into @CreatePlayerID from table_clubinfo where nClubID=$nClubId and nStatus=1;
						
						select AccountName into @AccountName from accountinfo where AccountId=_AccountId;
						call Pro_Web_AddEnterPriseLog($nClubId,9,@CreatePlayerID,$nPlayerId,CONCAT('俱乐部创建者重置管理员(ID:)',$nPlayerId,')账号"',@AccountName,'"的密码'));
						set $returnVal=1;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubOpen
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubOpen`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubOpen`(

	in $type int,
	in $nClubId int,
	in $gamePlayerId int,
	in $flagVal int,
	in $scoreVal bigint,
	out $returnVal int,
	out $resultMsg varchar(50)

)
returnNode:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;				
				if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1 and CreatePlayerID=$gamePlayerId) then
						set $returnVal=-1;
						set $resultMsg='您没有当前的操作权限';
						leave returnNode;	
				end if;
				if not exists(select nPlayerId from table_user where nPlayerId=$gamePlayerId and nActive=1) then
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnNode;
				end if;
				if $flagVal=0 then 
						set @optionName='关闭';
				else 
						set @optionName='开启';
				end if;

				start transaction;
				if $type=5 then 
						set @logType=44;
						set @title='"房间语音"';
						
						if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=3 and nStatus=$flagVal) then 
								set $returnVal=1;
								set $resultMsg='成功';
								leave returnNode;
						else 
								if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=3)then 
										update table_club_exswitch_config set nStatus=$flagVal where nClubID=$nClubId and nType=3;
								else 
										insert into table_club_exswitch_config(nClubID,nType,nStatus)values($nClubId,3,$flagVal);
								end if;
						end if;
				elseif $type=6 then 
						set @logType=45;
						set @title='"俱乐部聊天"';
						
						if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=4 and nStatus=$flagVal) then 
								set $returnVal=1;
								set $resultMsg='成功';
								leave returnNode;
						else 
								if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=4)then 
										update table_club_exswitch_config set nStatus=$flagVal where nClubID=$nClubId and nType=4;
								else 
										insert into table_club_exswitch_config(nClubID,nType,nStatus)values($nClubId,4,$flagVal);
								end if;
						end if;
				elseif $type=7 then 
						
						if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1 and CreatePlayerID=$gamePlayerId and nChannel>0) then
								set $returnVal=-1;
								set $resultMsg='您没有当前的操作权限';
								leave returnNode;	
						end if;
						set @logType=46;
						set @title='"积分兑换钻石"';
						
						select nExchangeDiamond into @nExchangeDiamond from table_clubinfo where nClubID=$nClubId;
						set @contentBody=CONCAT('俱乐部创始者',@optionName,@title,'功能');
						if $flagVal=1 then 
								set @contentBody=CONCAT(@contentBody,',兑换值为',$scoreVal,'积分');
						end if;
						if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=5 and nStatus=$flagVal) then 
								set $returnVal=1;
								set $resultMsg='成功';
								if $scoreVal>=0 and @nExchangeDiamond<>$scoreVal then 
										update table_clubinfo set nExchangeDiamond=$scoreVal where nClubID=$nClubId;
										
										call Pro_Web_AddEnterPriseLog($nClubId,@logType,$gamePlayerId,0,@contentBody);
								end if;								
								leave returnNode;
						else 
								if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=5)then 
										update table_club_exswitch_config set nStatus=$flagVal where nClubID=$nClubId and nType=5;
								else 
										insert into table_club_exswitch_config(nClubID,nType,nStatus)values($nClubId,5,$flagVal);
								end if;
								if $scoreVal>=0 and @nExchangeDiamond<>$scoreVal then 
									 update table_clubinfo set nExchangeDiamond=$scoreVal where nClubID=$nClubId; 
								end if;
								
								call Pro_Web_AddEnterPriseLog($nClubId,@logType,$gamePlayerId,0,@contentBody);
						end if;
				elseif $type=8 then  
						
						if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1 and CreatePlayerID=$gamePlayerId and nChannel>0) then
								set $returnVal=-1;
								set $resultMsg='您没有当前的操作权限';
								leave returnNode;	
						end if;
						set @logType=47;
						set @title='"允许创建俱乐部"';
						
						if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=6 and nStatus=$flagVal) then 
								set $returnVal=1;
								set $resultMsg='成功';
								leave returnNode;
						else 
								if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=6)then 
										update table_club_exswitch_config set nStatus=$flagVal where nClubID=$nClubId and nType=6;
								else 
										insert into table_club_exswitch_config(nClubID,nType,nStatus)values($nClubId,6,$flagVal);
								end if;
						end if;
				elseif $type=9 then 
						
						if not exists(select nPlayerId from table_user where nChannel>0 and nPlayerId=$gamePlayerId) then
								set $returnVal=-1;
								set $resultMsg='您没有当前的操作权限';
								leave returnNode;	
						end if;
						set @logType=51;
						set @title='"允许推荐俱乐部"';
						
						if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=7 and nStatus=$flagVal) then 
								set $returnVal=1;
								set $resultMsg='成功';
								leave returnNode;
						else 
								if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=7)then 
										update table_club_exswitch_config set nStatus=$flagVal where nClubID=$nClubId and nType=7;
								else 
										insert into table_club_exswitch_config(nClubID,nType,nStatus)values($nClubId,7,$flagVal);
								end if;
						end if;
				else 
						set $returnVal=-1;
						set $resultMsg='非法操作';
						leave returnNode;	
				end if;
				
				if $type<>7 then 
						call Pro_Web_AddEnterPriseLog($nClubId,@logType,$gamePlayerId,0,CONCAT('俱乐部创始者',@optionName,@title));
				end if;
			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-1;
					set $resultMsg='存储过程执行异常';
					rollback;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubReport20200727
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubReport20200727`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubReport20200727`(
	
		in $startTime varchar(20),
		in $endTime varchar(20)
)
begin 
			#积分表
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",$startTime);

			set @sqlStr6=CONCAT("update Table_Web_ClubReport report 
														inner join 
														(
																	select nClubId,IFNULL(SUM(firstRecharge),0) firstRecharge,IFNULL(sum(firstRechargeCount),0) firstRechargeCount,'",$startTime,"' tEndTime 
																	from (																			
																					select nClubId,nPlayerID,IFNULL(nAmount,0) firstRecharge,count(1) firstRechargeCount
																					from(																												
																								select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore,"  log 
																																										 where log.nType=23 and log.nPlayerID=temp2.nPlayerID 
																																													and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																								from (								
																												select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																												from
																												(																													
																													select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore,"  a
																													where nType=23 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
																															and not exists(select b.nPlayerID from table_webdata_playerscore  b 
																																						 where b.nRechargeCount>0 and b.nRechargeAmount>0 and b.tEndTime<'",$startTime,"' and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId)
																												)temp1  GROUP BY nClubId,nPlayerID																																	
																										)temp2
																							 )temp3 GROUP BY nClubId,nPlayerID
																				 )temp3 GROUP BY nClubId
														) tempbody on report.nClubId=tempbody.nClubId and report.tEndTime='",$startTime,"' 
																				set report.firstRecharge=tempbody.firstRecharge,report.firstRechargeCount=tempbody.firstRechargeCount");
				
				select @sqlStr6;
				#PREPARE stmt_name6 FROM @sqlStr6; 
				#EXECUTE stmt_name6;
				#DEALLOCATE PREPARE stmt_name6;	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubTaskCofigInfo
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubTaskCofigInfo`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubTaskCofigInfo`(
		
	in $gamePlayerId int,
	in $nClubId int,
	in $nTaskId int,
	in $nSubIndex int,
	in $nParamAmount int,
	in $nAward int
)
returnNode:begin
		if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
				leave returnNode;
		end if;
		
		if exists(select nClubId from table_club_task_info where nClubId=$nClubId and nTaskId=$nTaskId and nSubIndex=$nSubIndex) then 
				update table_club_task_info set nParamAmount=$nParamAmount,nAward=$nAward where nClubId=$nClubId and nTaskId=$nTaskId and nSubIndex=$nSubIndex;
		else 
				insert into table_club_task_info(nClubId,nTaskId,nSubIndex,nParamAmount,nAward)values($nClubId,$nTaskId,$nSubIndex,$nParamAmount,$nAward);
		end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubTaskCofigOpen
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubTaskCofigOpen`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubTaskCofigOpen`(
		
	in $gamePlayerId int,
	in $nClubId int,
	in $nTaskId int,
	in $nStatus int,
	in $tStartTime varchar(20),
	in $tEndTime varchar(20)
)
returnNode:begin
		if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
				leave returnNode;
		end if;			
		if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=1 and nStatus=1) then 
		
				set @ProxyName='创始人';
		else 
				if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=2 and nStatus=1)then 
						set @ProxyName='管理员';
				else 
						set @ProxyName='成员';
						leave returnNode;
				end if;
		end if;
		if $nTaskId=1 then 
				set @logType=53;
				set @logBody=CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改了每日签到任务设置');
		elseif $nTaskId=2 then 
				set @logType=56;
				set @logBody=CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改了累计签到任务设置');
		elseif $nTaskId=3 then 
				set @logType=54;
				set @logBody=CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改了玩牌总局数任务设置');
		elseif $nTaskId=4 then 
					set @logType=55;
					set @logBody=CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改了积分累计下注额任务设置');
		else
					leave returnNode;
		end if;
		
		if exists(select nClubId from table_club_task_switch_config where nClubId=$nClubId and nTaskId=$nTaskId) then 
				update table_club_task_switch_config set nStatus=$nStatus where nClubId=$nClubId and nTaskId=$nTaskId;
		else 
				if $nTaskId<>4 then 
							set $tStartTime=CONCAT(date_sub(CURDATE(),interval 2 day),' 00:00:00');
							set $tEndTime=CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00');
				end if;
				insert into table_club_task_switch_config(nClubId,nTaskId,nStatus,tStartTime,tEndTime)values($nClubId,$nTaskId,$nStatus,$tStartTime,$tEndTime);		
		end if;	
		
		call Pro_Web_AddEnterPriseLog($nClubId,@logType,$gamePlayerId,0,@logBody);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubTaskDefaultCofig
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubTaskDefaultCofig`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubTaskDefaultCofig`(
		
	in $gamePlayerId int,
	in $nClubId int,
	in $nTaskId int,
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnNode:begin
		if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
				set $returnVal=-1;
				set $resultMsg='俱乐部不存在';
				leave returnNode;
		end if;			
		if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=1 and nStatus=1) then 
		
				set @ProxyName='创始人';
		else 
				if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=2 and nStatus=1)then 
						set @ProxyName='管理员';
						if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=19 and nStatus=1) then 
							set $returnVal=-1;
							set $resultMsg='您的账号没有该俱乐部的"允许设置任务"的操作权限';
							leave returnNode;
						end if;
				else 
						set @ProxyName='成员';
						set $returnVal=-1;
						set $resultMsg='您的账号没有该俱乐部的"允许设置任务"的操作权限';
						leave returnNode;
				end if;
		end if;	
		if $nTaskId=1 or $nTaskId=2 then 
				
				delete from table_club_task_switch_config where nClubId=$nClubId  and (nTaskId=1 or nTaskId=2);
				insert into table_club_task_switch_config(nClubId,nTaskId,nStatus,tStartTime,tEndTime)
				select $nClubId nClubId,nTaskId,0 nStatus,tStartTime,tEndTime from table_club_task_switch_config where nClubId=0 and (nTaskId=1 or nTaskId=2);

				
				
				delete from table_club_task_info where nClubId=$nClubId and (nTaskId=1 or nTaskId=2);
				insert into table_club_task_info(nClubID,nTaskID,nSubIndex,nParamAmount,nAward) 
				select $nClubId nClubId,nTaskID,nSubIndex,nParamAmount,nAward from table_club_task_info where nClubId=0 and (nTaskId=1 or nTaskId=2); 

				
				insert into enterpriselog(nClubId,operateType,operatePlayerId,targetPlayerId,remark)
				values($nClubId,53,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改了每日签到任务"默认"设置')),
							($nClubId,56,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改了累计签到任务"默认"设置'));
		elseif $nTaskId=3 or $nTaskId=4 then 				
				
				delete from table_club_task_switch_config where nClubId=$nClubId and nTaskId=$nTaskId;
				insert into table_club_task_switch_config(nClubId,nTaskId,nStatus,tStartTime,tEndTime)
				select $nClubId,$nTaskId,0,tStartTime,tEndTime from table_club_task_switch_config where nClubId=0 and nTaskId=$nTaskId;

				delete from table_club_task_info where nClubId=$nClubId and nTaskId=$nTaskId;
				insert into table_club_task_info(nClubId,nTaskId,nSubIndex,nParamAmount,nAward)
				select $nClubId nClubId,nTaskId,nSubIndex,nParamAmount,nAward from table_club_task_info where nClubId=0 and nTaskId=$nTaskId;

				if $nTaskId=3 then 
						set @logType=54;
						set @logBody=CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改了玩牌总局数任务"默认"设置');
				else 
						set @logType=55;
						set @logBody=CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改了积分累计下注额任务"默认"设置');
				end if;
				
				call Pro_Web_AddEnterPriseLog($nClubId,@logType,$gamePlayerId,0,@logBody);
		else
						set $returnVal=-1;
						set $resultMsg='非法操作';
						leave returnNode;
		end if;
					set $returnVal=1;
					set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubToDayDataSum
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubToDayDataSum`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubToDayDataSum`(
	
	in 	$nClubId int,
	in  $nGameId int,
	out $sixSerFee long,
	out $sixOpenRoomNum long,
	out $sixPlayerNum long,
	out $sixBoardNum long,
	out $baiSerFee long,
	out $baiBankerNum long,
	out $baiPlayerNum long,
	out $baiBoardNum long
)
begin 
		
		set @ToDayBegin=CONCAT(CURDATE(),' 00:00:00');
		set @ToDayEnd=CONCAT(CURDATE(),' 23:59:59');
		
		if $nGameId<=0 then
				
				select IFNULL(sum(nAmount),0) into $sixSerFee 
				from Table_ClubLogPlatformScore 
				where nClubId=$nClubId and CreateTime>=@ToDayBegin and CreateTime<=@ToDayEnd and nType>=90;

				
				select COUNT(nTableID),IFNULL(SUM(nRound),0) into $sixOpenRoomNum,$sixBoardNum  from Table_ClubGameScore where nClubID=$nClubId and tEndTime>=@ToDayBegin and tEndTime<=@ToDayEnd;
				
				
				select count(DISTINCT(nPlayerID)) into $sixPlayerNum  from Table_ClubGameScoreDetail where nClubID=$nClubId  and tEndTime>=@ToDayBegin and tEndTime<=@ToDayEnd;
				

				
				set $baiSerFee=0;
				

				
				set $baiBankerNum=0;
				

				
				set $baiPlayerNum=0;
				

				
				
				set $baiBoardNum=0;
				
		else 
						
				
				select IFNULL(sum(nAmount),0) into $sixSerFee 
				from Table_ClubLogPlatformScore 
				where nClubId=$nClubId and nGameID=$nGameId and CreateTime>=@ToDayBegin and CreateTime<=@ToDayEnd and nType>=90;

				
				
				select Type into @nGameType from sys_code where `Code`=1001008 and SortId=$nGameId;
				
				select COUNT(nTableID),IFNULL(SUM(nRound),0) into $sixOpenRoomNum,$sixBoardNum  
				from Table_ClubGameScore where nClubID=$nClubId and nGameType=@nGameType and tEndTime>=@ToDayBegin and tEndTime<=@ToDayEnd;
				
				
				
				select count(DISTINCT(nPlayerID)) into $sixPlayerNum  
				from Table_ClubGameScoreDetail where nClubID=$nClubId and nGameType=@nGameType  and tEndTime>=@ToDayBegin and tEndTime<=@ToDayEnd;
				

				
				set $baiSerFee=0;
				
				

				
				set $baiBankerNum=0;
				
				

				
				set $baiPlayerNum=0;
				
				

				
				
				set $baiBoardNum=0;
				
		end if;		
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ClubToDaySum
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ClubToDaySum`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ClubToDaySum`(
	
	in 	$nClubId int,
	in  $nGameId int,
	out $diamondNumber long,
	out $yesterdayDiamond long,
	out $todayDiamond long,
	out $yesterdayServiceFee long,
	out $todayServiceFee long,
	out $yesterdayAddNumber long,
	out $todayAddNumber long,
	out $totalWaitScore decimal(18,2),
	out	$serFeeProfit decimal(18,2),
	out	$todaySerFeeReturn long,
	out	$totalSerFeeReturn long,
	out $todayScoreGet long,
	out	$todayScoreExpend	long,
	out	$totalScoreGet long,
	out	$totalScoreExpend	long
)
begin 
		
		set @ToDayBegin=CONCAT(CURDATE(),' 00:00:00');
		set @ToDayEnd=CONCAT(CURDATE(),' 23:59:59');

		
		set @YesterDayBegin=CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 DAY),' 00:00:00');
		set @YesterDayEnd=CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 DAY),' 23:59:59');

		
		select IFNULL(us.nCardCount,0) into $diamondNumber 
		from table_clubinfo info LEFT JOIN table_user us on info.CreatePlayerID = us.nPlayerId 
		where info.nClubID = $nClubId;
		
		select count(1) into $yesterdayAddNumber from table_clubmember where nClubID=$nClubId and nStatus=1 and tJoinTime>=@yesterdayBegin and tJoinTime<=@yesterdayEnd;
		
		select count(1) into $todayAddNumber from table_clubmember where nClubID=$nClubId and nStatus=1 and tJoinTime>=@ToDayBegin and tJoinTime<=@ToDayEnd;

		
		select IFNULL(sum(nAmount),0) into $todayScoreGet from Table_ClubLogFreeScore where clubid=$nClubId and nType<=4 and CreateTime>=@ToDayBegin and CreateTime<=@ToDayEnd;
		
		select IFNULL(sum(nAmount),0) into $todayScoreExpend from Table_ClubLogFreeScore where clubid=$nClubId and nType=100 and CreateTime>=@ToDayBegin and CreateTime<=@ToDayEnd;
		
		select IFNULL(sum(nAmount),0) into $totalScoreGet from Table_ClubLogFreeScore where clubid=$nClubId and nType<=4;
		
		select IFNULL(sum(nAmount),0) into $totalScoreExpend from Table_ClubLogFreeScore where clubid=$nClubId and nType=100;
		if $nGameId<=0 then 
				
				SELECT IFNULL(SUM(nAmount),0) into $yesterdayDiamond 
				from Table_ClubLogDiamond 
				where clubid=$nClubId and nType in(select type from sys_code where `Code`=1001007) and CreateTime>=@YesterDayBegin and CreateTime<=@YesterDayEnd;
				
				
				SELECT IFNULL(SUM(nAmount),0) into $todayDiamond 
				from Table_ClubLogDiamond 
				where clubid=$nClubId and nType in(select type from sys_code where `Code`=1001007) and CreateTime>=@ToDayBegin and CreateTime<=@ToDayEnd;


				
				select IFNULL(sum(nAmount),0) into $yesterdayServiceFee 
				from Table_ClubLogPlatformScore 
				where nClubId=$nClubId and CreateTime>=@yesterdayBegin and CreateTime<=@yesterdayEnd and nType>=90;

				
				select IFNULL(sum(nAmount),0) into $todayServiceFee 
				from Table_ClubLogPlatformScore 
				where nClubId=$nClubId and CreateTime>=@ToDayBegin and CreateTime<=@ToDayEnd and nType>=90;

				
				select CreatePlayerID into @CreatePlayerID from table_clubinfo where nClubID=$nClubId;
				select IFNULL(sum(nAmount),0) into $totalWaitScore from table_web_redemptionlog where nClubId=$nClubId and IsRedemption=0 and nPlayerId<>@CreatePlayerID;

				
				
				select IFNULL(sum(nAmount),0) into @totalSevFee from Table_ClubLogPlatformScore where nClubId=$nClubId and nType>=90;
				
				select IFNULL(SUM(nAmount),0) into @totalGiveRebate from table_web_redemptionlog where nClubId=$nClubId;
				
				select IFNULL(SUM(nAmount),0) into @totalReturnRebate from Table_ClubLogPlatformScore where nClubId=$nClubId and nType=13;
				set $serFeeProfit=@totalSevFee-@totalGiveRebate;

				
				select IFNULL(SUM(nAmount),0) into $todaySerFeeReturn from Table_ClubLogPlatformScore where nClubId=$nClubId and nType=13 and CreateTime>=@ToDayBegin and CreateTime<=@ToDayEnd;
				
				set $totalSerFeeReturn =@totalReturnRebate;
		else 
				
				SELECT IFNULL(SUM(nAmount),0) into $yesterdayDiamond 
				from Table_ClubLogDiamond where clubid=$nClubId  and nGameId=$nGameId 
																				and CreateTime>=@YesterDayBegin and CreateTime<=@YesterDayEnd and nType in(select type from sys_code where `Code`=1001007);
				
				
				SELECT IFNULL(SUM(nAmount),0) into $todayDiamond 
				from Table_ClubLogDiamond where clubid=$nClubId and nGameId=$nGameId  
																				and CreateTime>=@ToDayBegin and CreateTime<=@ToDayEnd and nType in(select type from sys_code where `Code`=1001007);


				
				select IFNULL(sum(nAmount),0) into $yesterdayServiceFee 
				from Table_ClubLogPlatformScore 
				where nClubId=$nClubId  and nGameId=$nGameId and CreateTime>=@yesterdayBegin and CreateTime<=@yesterdayEnd and nType>=90;

				
				select IFNULL(sum(nAmount),0) into $todayServiceFee 
				from Table_ClubLogPlatformScore where nClubId=$nClubId  and nGameId=$nGameId and CreateTime>=@ToDayBegin and CreateTime<=@ToDayEnd and nType>=90;

				

				
				select CreatePlayerID into @CreatePlayerID from table_clubinfo where nClubID=$nClubId;
				select IFNULL(sum(nAmount),0) into $totalWaitScore from table_web_redemptionlog where nClubId=$nClubId and IsRedemption=0 and nPlayerId<>@CreatePlayerID;

				
				
				
				
				
				
				select IFNULL(SUM(nAmount),0) into @totalReturnRebate from Table_ClubLogPlatformScore where nClubId=$nClubId  and nGameId=$nGameId and nType=13;
				
				set $serFeeProfit=0;

				
				select IFNULL(SUM(nAmount),0) into $todaySerFeeReturn from Table_ClubLogPlatformScore where nClubId=$nClubId  and nGameId=$nGameId and nType=13 and CreateTime>=@ToDayBegin and CreateTime<=@ToDayEnd;
				
				set $totalSerFeeReturn =@totalReturnRebate;
		end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ConfirmOrder
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ConfirmOrder`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_ConfirmOrder`(
		
	in $Id int,
	in $szOrder varchar(128),
	in $nClubId int,
	in $optionUserId int,
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 				
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;
				end if;			
				if not exists(select szOrder from table_third_order  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnVal;
				end if;

				if not exists(select szOrder from table_third_order  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId and (nStatus=0 or nStatus=5 or nStatus=6)) then 
						set $returnVal=-1;
						set $resultMsg='订单已处理';
						leave returnVal;
				end if;
				
				select nAmount,nPlayerID into @nAmount,@nPlayerID from table_third_order  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId;
				select nScore into @nClubScore from table_clubinfo where nStatus=1 and nClubID=$nClubId;
				select nScore into @nPlayerSocre from table_clubmember where nClubID=$nClubId and nPlayerID=@nPlayerID and nStatus=1;

				start transaction;
				
				set @scoreType=23;
				
				set @nClubLogScore=(@nClubScore-@nAmount);
				insert into Table_ClubLogPlatformScore (nClubID,nGameID,nTableID,szOrder,nAmount,nScore,nType,szDesc,sourceid,targetid) 
																				values($nClubId,0,0,$szOrder,(@nAmount*-1),@nClubLogScore,@scoreType,'人工确认到账',$optionUserId,@nPlayerID);
								
				set @nPlayerLogScore=(@nPlayerSocre+@nAmount);

				call pr_club_changeLogClubScore3_comman(@nPlayerID,0,0,@nAmount,$szOrder,$optionUserId,@nPlayerLogScore,@scoreType,0,0,'人工确认到账',$nClubId,0);

				update table_clubinfo set nScore=@nClubLogScore where nStatus=1 and nClubID=$nClubId;				
				
				update table_clubmember set nScore=@nPlayerLogScore where nClubID=$nClubId and nPlayerID=@nPlayerID;
				
				select UserName into @UserName from admin_user where UserId=$optionUserId;
				update table_third_order set ConfirmTime=NOW(),nStatus=4,szMark=@UserName where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId;
				if errno=0 then
						set $returnVal=@nPlayerID;
						set $resultMsg='成功';
						commit;
				else
						set $returnVal=-99;
						set $resultMsg='执行过程异常';
						rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ConfirmOrder_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ConfirmOrder_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_ConfirmOrder_Pre`(
		
	in $Id int,
	in $szOrder varchar(128),
	in $nClubId int,
	in $optionUserId int,
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 				
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;
				end if;			
				if not exists(select szOrder from table_third_order  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnVal;
				end if;

				if not exists(select szOrder from table_third_order  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId and (nStatus=0 or nStatus=5 or nStatus=6)) then 
						set $returnVal=-1;
						set $resultMsg='订单已处理';
						leave returnVal;
				end if;
				
				select nAmount,nPlayerID into @nAmount,@nPlayerID from table_third_order  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId;
				select nScore into @nClubScore from table_clubinfo where nStatus=1 and nClubID=$nClubId;
				select nScore into @nPlayerSocre from table_clubmember where nClubID=$nClubId and nPlayerID=@nPlayerID and nStatus=1;

				start transaction;
				
				set @scoreType=23;
				
				set @nClubLogScore=(@nClubScore-@nAmount);
				insert into Table_ClubLogPlatformScore (nClubID,nGameID,nTableID,szOrder,nAmount,nScore,nType,szDesc,sourceid,targetid) 
																				values($nClubId,0,0,$szOrder,(@nAmount*-1),@nClubLogScore,@scoreType,'人工确认到账',$optionUserId,@nPlayerID);
								
				set @nPlayerLogScore=(@nPlayerSocre+@nAmount);

				call pr_club_changeLogClubScore3_comman(@nPlayerID,0,0,@nAmount,$szOrder,$optionUserId,@nPlayerLogScore,@scoreType,0,0,'人工确认到账',$nClubId,0);

				update table_clubinfo set nScore=@nClubLogScore where nStatus=1 and nClubID=$nClubId;				
				
				update table_clubmember set nScore=@nPlayerLogScore where nClubID=$nClubId and nPlayerID=@nPlayerID;
				
				select UserName into @UserName from admin_user where UserId=$optionUserId;
				update table_third_order set ConfirmTime=NOW(),nStatus=4,szMark=@UserName where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId;
				if errno=0 then
						set $returnVal=@nPlayerID;
						set $resultMsg='成功';
						commit;
				else
						set $returnVal=-99;
						set $resultMsg='执行过程异常';
						rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_web_CopyMatchCofig
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_web_CopyMatchCofig`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_web_CopyMatchCofig`(
/*
		新建运营商同步比赛配置
*/
	in $nClubId int
)
BEGIN
			delete from table_match_cfg where nClubId=$nClubId;

			set @currTime=NOW();
			insert into table_match_cfg(nGuid,nClubId,nGameType,nServerId,nMatchName,nValid,nSortId,nConfigJson,tCreateTime,tModifyTime )
			select nGuid,$nClubId,nGameType,nServerId,nMatchName,nValid,nSortId,nConfigJson,@currTime,@currTime
			from table_match_cfg where nClubId=10001;
			
			#更新nGuid
			update table_match_cfg set nGuid=MD5(CONCAT(nGuid,Id)) where nClubId=$nClubId;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_CreateOrder
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_CreateOrder`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_CreateOrder`(
		
	in $Id int,
	in $szOrder varchar(128),
	in $nClubId int,
	in $optionUserId int,
	in $szRemark varchar(128),
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;
				end if;			
				if not exists(select szOrder from table_pyramid_examine  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnVal;
				end if;
				if not exists(select szOrder from table_third_order  where nType=4 and szOrder=$szOrder and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnVal;
				end if;
				
				select nStatus,nPlayerID into @nStatus,@nPlayerID from table_third_order  where nType=4 and szOrder=$szOrder and nClubID=$nClubId;
				if @nStatus=0 or @nStatus=3 or @nStatus=5  then 
						
						set @szOrder=CONCAT(@nPlayerID,unix_timestamp(DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')),CEILING(RAND()*90+10));
						insert into table_pyramid_examine
						(
							nPlayerID,nClubID,szOrder,szIP,tCreateTime,szChannel,szBank,szUserName,nScore,nAmount,
							nSubVal,nCommission,tFinanceActTime,FinanceAccount,nFlag,szOrderInfo,szRemark
						)
						select 
							nPlayerID,nClubID,@szOrder,szIP,NOW(),szChannel,szBank,szUserName,nScore,nAmount,
							nSubVal,nCommission,NOW(),@UserName,3,szOrderInfo,$szRemark
						from table_pyramid_examine where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId;

						
						select UserName into @UserName from admin_user where UserId=$optionUserId;
						update table_pyramid_examine set nFlag=5,tFinanceActTime=NOW(),FinanceAccount=@UserName,szRemark=$szRemark 
						where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId;
						
						set $returnVal=1;
						set $resultMsg='成功';
						leave returnVal;
				else 
						set $returnVal=-1;
						set $resultMsg='订单已被处理';
						leave returnVal;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_DeductDiamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_DeductDiamond`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_DeductDiamond`(
		in $szThirdAccount varchar(64),
		in $nDiamond int,
		in $szRemark varchar(256),
		in $operatUserId int,
		out $returnVal int,
		out $resultMsg varchar(64)
)
returnNode:BEGIN

			declare errno int default 0;
			declare continue handler for sqlexception set errno = 1;
			#公共俱乐部Id
			set @RoomCardClubId=666000;
			if not exists(select mem.nPlayerId,users.szThirdAccount from table_league_club_member mem  
										INNER JOIN table_user users on mem.nPlayerId = users.nPlayerId 
										where mem.nClubId=@RoomCardClubId and users.szThirdAccount=$szThirdAccount limit 0,1) then
						set $returnVal=-1;
						set $resultMsg='会员账号不存在';
						leave returnNode;
			end if;
			#会员Id,会员钻石数
			select mem.nPlayerId,users.nCardCount into @nPlayerId,@nCardCount from table_league_club_member mem  
			INNER JOIN table_user users on mem.nPlayerId = users.nPlayerId 
			where mem.nClubId=@RoomCardClubId and users.szThirdAccount=$szThirdAccount limit 0,1;

			#是否锁定
			if exists(select nPlayerId from table_user_gamelock where nPlayerID=@nPlayerId) then 
					set $returnVal=-1;
					set $resultMsg='会员已锁定';
					leave returnNode;
			end if;
			#余钻验证
			if @nCardCount<$nDiamond then 
						set $returnVal=-1;
						set $resultMsg='钻石不足';
						leave returnNode;
			end if;
			#操作人
			select userName into @userName from admin_user where UserId=$operatUserId;
				
			start transaction;
			#更新个人钻石
			set @newDiamond=@nCardCount-$nDiamond;
			set @currTime=NOW();
			update table_user set nCardCount=@newDiamond where nPlayerId=@nPlayerId;
			#钻石账变
			insert into table_league_diamond_log(nPlayerID,nKindID,nClubID,nDiamond,nPlayerDiamond,nType,CreateTime,szInfo,szRemark)
			values(@nPlayerId,0,0,-($nDiamond),@newDiamond,6,@currTime,@userName,$szRemark);

			#添加日志
			set @logDes=CONCAT('【充扣钻】运营用户:【',@userName,'】 为会员【ID:',@nPlayerId,',会员账号:',$szThirdAccount,'】扣除了"',$nDiamond,'"个钻石;充值后钻石为:"',@newDiamond,'"');
			insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
			values(0,83,$operatUserId,0,$nDiamond,@logDes,@currTime);
			if errno=0 then
					set $returnVal=@nPlayerId;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-99;
					set $resultMsg='执行异常';
					rollback;
			end if;
			
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_DeductRoomCardScore
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_DeductRoomCardScore`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_DeductRoomCardScore`(
		/*
				扣除积分
				2021-12-27
		*/
		in $szThirdAccount varchar(64),
		in $nAmount int,
		in $szMark varchar(128),
		in $operatUserId int,
		out $returnVal int,
		out $resultMsg varchar(64)
)
returnNode:BEGIN

			declare errno int default 0;
			declare continue handler for sqlexception set errno = 1;
			if $nAmount<=0 then 
						set $returnVal=-1;
						set $resultMsg='积分不合法';
						leave returnNode;
			end if;
			if not exists(select nPlayerId from table_user where acctype>=1 and acctype<=111 and szThirdAccount=$szThirdAccount) then
						set $returnVal=-1;
						set $resultMsg='会员账号不存在';
						leave returnNode;
			else 
						select nPlayerId into @nPlayerId from table_user where acctype>=1 and acctype<=111 and szThirdAccount=$szThirdAccount limit 0,1;
			end if;
			#尚未开户
			if not exists(select nPlayerId from table_jscore_user where nPlayerId=@nPlayerId) then
						set $returnVal=-1;
						set $resultMsg='积分不足';
						leave returnNode;
			else 
						#会员积分
						select nScore into @nScore from table_jscore_user  where nPlayerId=@nPlayerId;
			end if;
			#余分验证
			if @nScore<$nAmount then 
						set $returnVal=-1;
						set $resultMsg='积分不足';
						leave returnNode;
			end if;
			#操作人
			select userName into @userName from admin_user where UserId=$operatUserId;
				
			start transaction;
			#账变后积分
			set @newScore=@nScore-$nAmount;
			set @currTime=NOW();
			update table_jscore_user set nScore=nScore-$nAmount where nPlayerId=@nPlayerId;
			#积分账变
			insert into table_jscore_log(nPlayerId,nSourceId,nAmount,nScore,nType,tCreateTime,szMark)
			values(@nPlayerId,$operatUserId,-($nAmount),@newScore,2,@currTime,$szMark);

			#添加日志
			set @logDes=CONCAT('【扣除积分】运营用户:【',@userName,'】 扣除了会员【ID:',@nPlayerId,',账号:',$szThirdAccount,'】"',$nAmount,'"积分;扣除后积分为:"',@newScore,'"');
			insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
			values(0,94,$operatUserId,0,$nAmount,@logDes,@currTime);
			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-99;
					set $resultMsg='执行异常';
					rollback;
			end if;
			
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_DiamondEarlyWarn
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_DiamondEarlyWarn`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_DiamondEarlyWarn`(
		
	in $gamePlayerId int,
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnNode:begin
		if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$gamePlayerId) then 
			set $returnVal=-1;
			set $resultMsg='用户不存在';
			leave returnNode;
		end if;
		select MAX(nWarningAmount) into @nClubMaxAmount from table_clubinfo where CreatePlayerID=$gamePlayerId and nStatus=1;
		select nCardCount into @nCardCount from table_user where nPlayerId=$gamePlayerId;
		if @nClubMaxAmount>=@nCardCount then 
				set @msgType=502;
				set @msgTitle='俱乐部钻石消息预警';
				set @msgBody='您的账户钻石数量已低于预警值,请及时补充钻石,以免影响俱乐部正常游戏。';
				set @beginDate=CONCAT(CURDATE(),' 00:00:00');
				set @endDate=CONCAT(CURDATE(),' 23:59:59');
				if not exists(select nPlayerId from table_user_msg 
									where nPlayerId=$gamePlayerId and nMsgType=@msgType and sMsgTitle=@msgTitle and CreateTime>=@beginDate and CreateTime<=@endDate)then 
						insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) values($gamePlayerId,@msgType,@msgTitle,@msgBody);
				end if;				
				set $returnVal=1;
				set $resultMsg='成功';
		else 
				set $returnVal=0;
				set $resultMsg='钻石充足';
		end if;
		
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_EditOrderInfo
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_EditOrderInfo`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_EditOrderInfo`(
		/*
				修改订单信息【订单状态、备注】
				2021-12-27
		*/
		in $id int,
		in $nStatus int,
		in $szMark varchar(128),
		in $operatUserId int,
		out $returnVal int,
		out $resultMsg varchar(64)
)
returnNode:BEGIN

			declare errno int default 0;
			declare continue handler for sqlexception set errno = 1;
			if not exists(select nPlayerId from table_jscore_shop_exchange where Id=$id) then
						set $returnVal=-1;
						set $resultMsg=CONCAT('订单【ID：',$id ,'】不存在');
						leave returnNode;
			end if;
			if $nStatus<=0 or $nStatus>=3 then 
						set $returnVal=-1;
						set $resultMsg='订单状态不合法';
						leave returnNode;
			end if;
			#订单信息
			select nShopId,nPlayerId,nStatus,nScore,nAmount into @nShopId,@nPlayerId,@nStatus,@ordernScore,@nAmount from table_jscore_shop_exchange where Id=$id;
			#待处理订单
			set @dateTime=NOW(),@optionName='';
			start transaction;
			if @nStatus=0 then 
					#更新订单状态、备注
					update table_jscore_shop_exchange set nStatus=$nStatus,szMark=$szMark,tModifyTime=@dateTime where id=$id;
					if $nStatus=1 then 
							set @optionName='状态为【成功】';
					else 
							set @optionName=CONCAT('状态为【失败】，并退回积分【',@ordernScore,'】');
							select nScore into @currnScore from table_jscore_user where nPlayerId=@nPlayerId;
							#失败退回--账变后积分
							set @totalScore=@currnScore+@ordernScore;
							update table_jscore_user set nScore=nScore+@ordernScore where nPlayerId=@nPlayerId;

							#失败退回--库存
							update table_jscore_shopinfo set nStock=nStock+@nAmount where nShopId=@nShopId;

							#账变记录
							insert into table_jscore_log(nPlayerId,nSourceId,nAmount,nScore,nType,tCreateTime,szMark) 
							values(@nPlayerId,$operatUserId,@ordernScore,@totalScore,4,@dateTime,'人工处理失败并退回');
					end if;
			else 
					#已处理订单只能修改备注信息
					update table_jscore_shop_exchange set szMark=$szMark,tModifyTime=@dateTime where id=$id;
					set @optionName='备注';
			end if;

			#操作人
			select userName into @userName from admin_user where UserId=$operatUserId;
			#添加日志
			set @logDes=CONCAT('【修改订单】运营用户:【',@userName,'】 修改了订单【ID:',$id,'】的”',@optionName,'“');
			insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
			values(0,97,$operatUserId,0,0,@logDes,@dateTime);
			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-99;
					set $resultMsg='执行异常';
					rollback;
			end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_EditProxyUserNext
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_EditProxyUserNext`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_EditProxyUserNext`(
		
		in $userId int,
		in $proxyUserId int,
		in $userNickName varchar(50),
		in $remark varchar(200),
		in $rate int,
		in $isCreate int,
		out $returnVal int,
		out $resultMsg varchar(50)
)
returnNode:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				if $userId<=0 or $proxyUserId<=0 then 
						set $returnVal=-1;
						set $resultMsg='参数不合法';
						leave returnNode;
				end if;
				if $rate<=0 or $rate>=1000 then 
						set $returnVal=-1;
						set $resultMsg='代理占成输入不合法';
						leave returnNode;
				end if;
				if not exists(select UserId from admin_proxy where UserId=$proxyUserId) then
						set $returnVal=-1;
						set $resultMsg='该代理不存在';
						leave returnNode;
				end if;
				
				select Rate into @Rate from admin_proxy where UserId=$userId;
				if $rate<@Rate then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('代理占成必须大于或等于:',TRUNCATE(@Rate/10,1),'%');
						leave returnNode;
				end if;
				
				select MIN(Rate) into @NextRate from admin_proxy where UserPId=$proxyUserId;
				if $rate>=@NextRate then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('代理占成必须小于下级代理的最小占成:',TRUNCATE(@NextRate/10,1),'%');
						leave returnNode;
				end if;
				start transaction;
				
				update admin_user set UserNickName=$userNickName,Remark=$remark where UserId=$proxyUserId;
				update admin_proxy set Rate=$rate,IsCreate=$isCreate where UserId=$proxyUserId;
				
				update admin_proxy set Rate=$rate,IsCreate=$isCreate where UserPId=$proxyUserId and ProxyType=2;
				if errno=0 then
						set $returnVal=1;
						set $resultMsg='成功';
						commit;
				else
						set $returnVal=-99;
						set $resultMsg='执行异常';
							rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_GetAddDirectlyVipList
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_GetAddDirectlyVipList`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_GetAddDirectlyVipList`(
	
	in $nClubId int,
	in $nPlayerId int,
	in $startDate varchar(20),
	in $endDate varchar(20)
)
begin 
			
			select  temp.nClubID,temp.nPlayerID,temp.nExtenID,temp.nExLevel,us.szThirdAccount,
				IFNULL(recharge,0) recharge,IFNULL(withdrawal,0) withdrawal,IFNULL(rechargeCount,0) rechargeCount,
				IFNULL(rechargeNumber,0) rechargeNumber,IFNULL(withdrawalCount,0) withdrawalCount,IFNULL(withdrawalNumber,0) withdrawalNumber,
				IFNULL(water,0) water,IFNULL(directlyWater,0) directlyWater,IFNULL(addDirectlyVipCount,0) addDirectlyVipCount,
				IFNULL(teamWater,0) teamWater
			from (
								select nClubId, nPlayerId,nExLevel, nExtenID,tJoinTime from table_clubmember mem where nclubId=$nClubId and nExtenID=$nPlayerId and tJoinTime>=$startDate and tJoinTime<=$endDate 

					)temp  
						left join  
								(
										select nClubId,nPlayerId,SUM(recharge) recharge,SUM(withdrawal) withdrawal,SUM(rechargeCount) rechargeCount,
														SUM(rechargeNumber) rechargeNumber,SUM(withdrawalCount) withdrawalCount,SUM(withdrawalNumber) withdrawalNumber,
														SUM(water) water,SUM(directlyWater) directlyWater,SUM(addDirectlyVipCount) addDirectlyVipCount,
														SUM(teamWater) teamWater
										from table_web_clubmemberproxy where nClubId=$nClubId and tEndTime>=$startDate and tEndTime<=$endDate group by nClubId,nPlayerId
								 )temp2 on temp.nPlayerID=temp2.nPlayerID and temp.nClubID=temp2.nClubId
						left join table_user us on temp.nPlayerID=us.nPlayerID;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_GetAllNextUserId
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_GetAllNextUserId`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_GetAllNextUserId`(
	/*
		$userId:获取指定用户的所有运营商后台的下级Id
		RETURNS:比如:1,2,3
	*/
				$userId INT,
		out $userIds  TEXT
)
begin
				select UserType into @UserType from admin_user where UserId=$userId;
				if @UserType=2 then #运营商子账号
						select GROUP_CONCAT(temp1.userId) into  $userIds  from 
						(
								select userId, CreateUserId from admin_proxy where UserId=$userId
								union all
								select userId, CreateUserId
								from 
								(
									select userId, CreateUserId,if(find_in_set(CreateUserId, @pids) > 0, @pids:= concat(@pids, ',', userId), 0) as ischild
									from (
											 select userId, CreateUserId from admin_proxy where ProxyType=2 
											) t1,
											(select @pids:= $userId) t2
								 ) t3 where ischild != 0
						)temp1;	
				elseif @UserType=1 or @UserType=3 then #管理员 或者 后台运营商账号
						select GROUP_CONCAT(temp1.userId) into  $userIds  from 
						(
								select userId, userId userPId from admin_user where UserId=$userId
								union all
								select userId, userPId
								from 
								(
									select userId, userPId,if(find_in_set(userPId, @pids) > 0, @pids:= concat(@pids, ',', userId), 0) as ischild
									from (
											 select userId, userPId from admin_usersub mem 
											) t1,
											(select @pids:= $userId) t2
								 ) t3 where ischild != 0
						)temp1;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_GetAppMemCount
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_GetAppMemCount`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_GetAppMemCount`(

	in $startDate varchar(20),
	in $endDate varchar(20),
	in $nClubId int,
	in $nPlayerId int,
	out $directlyVipCount int,
	out $addDirectlyVipCount int,
	out $teamVipCount int,
	out $addTeamCount int
)
begin 
		
		set $teamVipCount=0;
		select count(1) into $teamVipCount from table_clubmemberAppLine where nPlayerID=$nPlayerId;
		
		set $directlyVipCount=0;
		select count(1) into $directlyVipCount from table_clubmember where nClubID=$nClubId and nExtenID=$nPlayerId and bRobot=0;

		
		set $addDirectlyVipCount=0;
		select count(1) into $addDirectlyVipCount from table_clubmember where nClubID=$nClubId and nExtenID=$nPlayerId and bRobot=0 and tJoinTime between $startDate and $endDate;

		
		set $addTeamCount=0;
		select count(1) into $addTeamCount from table_clubmemberAppLine where nPlayerID=$nPlayerId and tJoinTime between $startDate and $endDate;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_GetDirectlyVipList
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_GetDirectlyVipList`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_GetDirectlyVipList`(
	
	in $nClubId int,
	in $nPlayerId int,
	in $startDate varchar(20),
	in $endDate varchar(20)
)
begin 
			
			select  temp.nClubID,temp.nPlayerID,temp.nExtenID,temp.nExLevel,us.szThirdAccount,
				IFNULL(recharge,0) recharge,IFNULL(withdrawal,0) withdrawal,IFNULL(rechargeCount,0) rechargeCount,
				IFNULL(rechargeNumber,0) rechargeNumber,IFNULL(withdrawalCount,0) withdrawalCount,IFNULL(withdrawalNumber,0) withdrawalNumber,
				IFNULL(water,0) water,IFNULL(directlyWater,0) directlyWater,IFNULL(addDirectlyVipCount,0) addDirectlyVipCount,
				IFNULL(teamWater,0) teamWater
			from (
								select nClubId, nPlayerId,nExLevel, nExtenID,tJoinTime from table_clubmember where nClubId=$nClubId and nExtenID=$nPlayerId
					)temp  
						left join  
								(
										select nClubId,nPlayerId,SUM(recharge) recharge,SUM(withdrawal) withdrawal,SUM(rechargeCount) rechargeCount,
														SUM(rechargeNumber) rechargeNumber,SUM(withdrawalCount) withdrawalCount,SUM(withdrawalNumber) withdrawalNumber,
														SUM(water) water,SUM(directlyWater) directlyWater,SUM(addDirectlyVipCount) addDirectlyVipCount,
														SUM(teamWater) teamWater
										from table_web_clubmemberproxy where nClubId=$nClubId and tEndTime>=$startDate and tEndTime<=$endDate group by nClubId,nPlayerId
								 )temp2 on temp.nPlayerID=temp2.nPlayerID and temp.nClubID=temp2.nClubId
						left join table_user us on temp.nPlayerID=us.nPlayerID;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_GetTeamAddList
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_GetTeamAddList`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_GetTeamAddList`(
	
	in $nClubId int,
	in $nPlayerId int,
	in $startDate varchar(20),
	in $endDate varchar(20)
)
begin 
			
			select  temp.nClubID,temp.nPlayerID,temp.nExtenID,temp.nExLevel,us.szThirdAccount,
				IFNULL(recharge,0) recharge,IFNULL(withdrawal,0) withdrawal,IFNULL(rechargeCount,0) rechargeCount,
				IFNULL(rechargeNumber,0) rechargeNumber,IFNULL(withdrawalCount,0) withdrawalCount,IFNULL(withdrawalNumber,0) withdrawalNumber,
				IFNULL(water,0) water,IFNULL(directlyWater,0) directlyWater,IFNULL(addDirectlyVipCount,0) addDirectlyVipCount,
				IFNULL(teamWater,0) teamWater
			from (
								select temptables.nClubId, temptables.nPlayerId,temptables.tJoinTime,mem.nExLevel, mem.nExtenID  from 
								(
										select app.nClubId, app.nNextID nPlayerId,app.tJoinTime 
										from table_clubmemberAppLine app where app.nPlayerId=$nPlayerId and app.tJoinTime>=$startDate and app.tJoinTime<=$endDate
								)temptables LEFT JOIN table_clubmember mem on temptables.nPlayerId=mem.nPlayerID where mem.nClubID=$nClubId

					)temp  
						left join  
								(
										select nClubId,nPlayerId,SUM(recharge) recharge,SUM(withdrawal) withdrawal,SUM(rechargeCount) rechargeCount,
														SUM(rechargeNumber) rechargeNumber,SUM(withdrawalCount) withdrawalCount,SUM(withdrawalNumber) withdrawalNumber,
														SUM(water) water,SUM(directlyWater) directlyWater,SUM(addDirectlyVipCount) addDirectlyVipCount,
														SUM(teamWater) teamWater
										from table_web_clubmemberproxy where nClubId=$nClubId and tEndTime>=$startDate and tEndTime<=$endDate group by nClubId,nPlayerId
								 )temp2 on temp.nPlayerID=temp2.nPlayerID and temp.nClubID=temp2.nClubId
						left join table_user us on temp.nPlayerID=us.nPlayerID;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_GetTeamList
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_GetTeamList`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_GetTeamList`(
	
	in $nClubId int,
	in $nPlayerId int,
	in $startDate varchar(20),
	in $endDate varchar(20)
)
begin 
			
			select  temp.nClubID,temp.nPlayerID,temp.nExtenID,temp.nExLevel,us.szThirdAccount,
				IFNULL(recharge,0) recharge,IFNULL(withdrawal,0) withdrawal,IFNULL(rechargeCount,0) rechargeCount,
				IFNULL(rechargeNumber,0) rechargeNumber,IFNULL(withdrawalCount,0) withdrawalCount,IFNULL(withdrawalNumber,0) withdrawalNumber,
				IFNULL(water,0) water,IFNULL(directlyWater,0) directlyWater,IFNULL(addDirectlyVipCount,0) addDirectlyVipCount,
				IFNULL(teamWater,0) teamWater
			from (
								select tempTables.nClubId, tempTables.nPlayerId ,tempTables.tJoinTime,mem.nExLevel, mem.nExtenID 
								from (
												select app.nClubId, app.nNextID nPlayerId,app.tJoinTime 
												from table_clubmemberAppLine app where app.nPlayerId=$nPlayerId
								)tempTables LEFT JOIN table_clubmember mem on tempTables.nPlayerId=mem.nPlayerID

					)temp  
						left join  
								(
										select nClubId,nPlayerId,SUM(recharge) recharge,SUM(withdrawal) withdrawal,SUM(rechargeCount) rechargeCount,
														SUM(rechargeNumber) rechargeNumber,SUM(withdrawalCount) withdrawalCount,SUM(withdrawalNumber) withdrawalNumber,
														SUM(water) water,SUM(directlyWater) directlyWater,SUM(addDirectlyVipCount) addDirectlyVipCount,
														SUM(teamWater) teamWater
										from table_web_clubmemberproxy where nClubId=$nClubId and tEndTime>=$startDate and tEndTime<=$endDate group by nClubId,nPlayerId
								 )temp2 on temp.nPlayerID=temp2.nPlayerID and temp.nClubID=temp2.nClubId
						left join table_user us on temp.nPlayerID=us.nPlayerID;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_H5ProxyLineSum
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_H5ProxyLineSum`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_H5ProxyLineSum`(

	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
			declare _nClubID,_nPlayCount,_nRound,_dayAddCount,_dayAddCountValid,_nRoundCount,_tempnClubId int default 0;	
			declare _nBetScore,_nValidBet,_winMoney,_nTax,_nResultMoney,_TasknAmount  bigint default 0;
			
			declare done int default false;
			declare cur cursor for select nClubID,nPlayCount,nRound,nBetScore,nValidBet,winMoney,nTax,nResultMoney,dayAddCount,dayAddCountValid,nRoundCount,TasknAmount 
														 from Table_Web_ClubReport where tEndTime>=$startTime and tEndTime<=$endTime and ProxyType=1;
			
			declare continue handler for not found set done = true;

			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubID,_nPlayCount,_nRound,_nBetScore,_nValidBet,_winMoney,_nTax,_nResultMoney,_dayAddCount,_dayAddCountValid,_nRoundCount,_TasknAmount;
			
			if done then					
					leave read_loop;    
			end if;
						set @flag=1;
						set _tempnClubId=_nClubID;						
						while @flag=1 do 
								if not exists (select userId from admin_proxy where nClubId=_tempnClubId and ProxyType=1 and GameProxyType=1) then
										set @flag=0;
								end if;
								if exists(select nClubID from table_web_clubreport_adminh5line where nClubID=_tempnClubId and tEndTime>=$startTime and tEndTime<=$endTime) then
											update table_web_clubreport_adminh5line  
											set nPlayCount=nPlayCount+_nPlayCount,
													nRound=nRound+_nRound,
													nBetScore=nBetScore+_nBetScore,
													nValidBet=nValidBet+_nValidBet,
													winMoney=winMoney+_winMoney,
													nTax=nTax+_nTax,
													nResultMoney=nResultMoney+_nResultMoney,
													dayAddCount=dayAddCount+_dayAddCount,
													dayAddCountValid=dayAddCountValid+_dayAddCountValid,
													nRoundCount=nRoundCount+_nRoundCount,
													TasknAmount=TasknAmount+_TasknAmount
											where nClubID=_tempnClubId and tEndTime>=$startTime and tEndTime<=$endTime;
								else 
											
											insert into table_web_clubreport_adminh5line(nClubID,nPlayCount,nRound,nBetScore,nValidBet,tEndTime,
																winMoney,nTax,nResultMoney,dayAddCount,dayAddCountValid,nRoundCount,TasknAmount)
											values(_tempnClubId,_nPlayCount,_nRound,_nBetScore,_nValidBet,$startTime,
																_winMoney,_nTax,_nResultMoney,_dayAddCount,_dayAddCountValid,_nRoundCount,_TasknAmount);
								end if;										
								
								select UserPId into @UserPId from admin_proxy where nClubId=_tempnClubId and ProxyType=1 and GameProxyType=1 limit 0,1;
								if exists (select nClubId from admin_proxy where UserId=@UserPId and ProxyType=1 and GameProxyType=1) then
											set @flag=1;
											select nClubId into _tempnClubId from admin_proxy where UserId=@UserPId and ProxyType=1 and GameProxyType=1 limit 0,1;
								else 
											set @flag=0;
								end if;
						end while;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_MatchNumber20201127
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_MatchNumber20201127`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_MatchNumber20201127`(
	 in $numDay int 
		/*
				$numDay:统计最近多少天--90
				A:统计第一次玩比赛的会员【第一次玩比赛的时间】在此时间之前没有玩过金币游戏	@nPlayerNum1
				B:统计第一次玩比赛的会员【第一次玩比赛的时间】在此时间之后有玩过金币游戏且在此时间之前没有玩过金币游戏	@nPlayerNum2
				C:统计第一次玩比赛的会员【第一次玩比赛的时间】在此时间之后一直玩比赛游戏		@nPlayerNum3
		*/
		
)
BEGIN 
			#创建临时表---第一次比赛
			drop temporary table if exists temp_table_MatchNumber;  
			create temporary table temp_table_MatchNumber(  
				Id int unsigned  not null  auto_increment primary key,
				nPlayerId int default 0,
				tEndTime varchar(32) default 0
			);
			insert into temp_table_MatchNumber(nPlayerId,tEndTime)
			select nPlayerId,MIN(tEndTime) tEndTime from table_match_game_score_detail 
			where nClubID not in(10004,10136) and tEndTime<='2020-11-27 18:35:00' GROUP BY nPlayerId;

			set @nPlayerNum1=0,@nPlayerNum2=0,@nPlayerNum3=0;
			select count(1) into @totalCount from temp_table_MatchNumber;
			if @totalCount>0 then 
					
					 set @currId=1;
					 while (@currId<=@totalCount) do
									select nPlayerId,tEndTime into @nPlayerId,@tEndTime from temp_table_MatchNumber where Id=@currId;	
								 #A:统计第一次玩比赛的会员【第一次玩比赛的时间】在此时间之前没有玩过金币游戏	@nPlayerNum1
									if not exists(select nPlayerId from table_webdata_playergamedatasort where nPlayerId=@nPlayerId and  tEndTime<=@tEndTime) then 
											set @nPlayerNum1=@nPlayerNum1+1;											
									end if;
									#B:统计第一次玩比赛的会员【第一次玩比赛的时间】在此时间之后有玩过金币游戏且在此时间之前没有玩过金币游戏	@nPlayerNum2
									select count(1) into @countB from 
									(
										select nPlayerId,tEndTime from table_webdata_playergamedatasort where nPlayerId=@nPlayerId and  tEndTime>@tEndTime
									)temp1 where nPlayerId not in(select nPlayerId from table_webdata_playergamedatasort where nPlayerId=@nPlayerId and  tEndTime<=@tEndTime);

									if @countB>0 then 
											set @nPlayerNum2=@nPlayerNum2+1;		
									end if;
									#C:统计第一次玩比赛的会员【第一次玩比赛的时间】在此时间之后一直玩比赛游戏		@nPlayerNum3
									select count(1) into @countC from table_match_game_score_detail where nPlayerId=@nPlayerId and tEndTime>@tEndTime;
									if @countC>0 then 
											set @nPlayerNum3=@nPlayerNum3+1;		
									end if;

									set @currId=@currId+1;
					 end while;
			end if;
			select @nPlayerNum1,@nPlayerNum2,@nPlayerNum3;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ModifyCityPartRatio
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ModifyCityPartRatio`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ModifyCityPartRatio`(
		/*
				修改城市合伙人分成20210511
		*/
		in $currUserId int,
		in $nPlayerId int,
		in $ratioPlayer int,
		in $ratioAgent	int,
		out $returnVal int,
		out $resultMsg varchar(64)
)
returnNode:BEGIN

			declare errno int default 0;
			declare continue handler for sqlexception set errno = 1;
			if $ratioPlayer<1 or $ratioPlayer>10000  then
						set $returnVal=-1;
						set $resultMsg='会员充值分成比例不合法';
						leave returnNode;
			end if;	
			if $ratioAgent<1 or $ratioAgent>10000  then
						set $returnVal=-1;
						set $resultMsg='代理充值分成比例不合法';
						leave returnNode;
			end if;			
			if not exists(select nPlayerId from table_citypartner_info where nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='城市合伙人不存在';
						leave returnNode;
			end if;
			#当前合伙人信息
			select ratio_player,ratio_agent,UpCPID into @ratio_player,@ratio_agent,@UpCPID from table_citypartner_info where nPlayerId=$nPlayerId;
			if @ratio_player=$ratioPlayer and @ratio_agent=$ratioAgent then 
					set $returnVal=1;
					set $resultMsg='操作成功';
					leave returnNode;
			end if;

			if @UpCPID>0 then 
					#获取上级合伙人信息
					select ratio_player,ratio_agent into @UPratio_player,@UPratio_agent from table_citypartner_info where nPlayerId=@UpCPID;
					if $ratioPlayer>=@UPratio_player then 
								set $returnVal=-1;
								set $resultMsg=CONCAT('会员充值分成比例不能高于上级合伙人的会员充值分成比例【',ROUND(@UPratio_player/100,2),'%】');
								leave returnNode;
					end if;
					if $ratioAgent>=@UPratio_agent then 
								set $returnVal=-1;
								set $resultMsg=CONCAT('代理充值分成比例不能高于上级合伙人的代理充值分成比例【',ROUND(@UPratio_agent/100,2),'%】');
								leave returnNode;
					end if;
					#获取下级合伙人的最大分成比例
					if exists(select nPlayerId from table_citypartner_info where UpCPID=$nPlayerId) then 
							select MAX(ratio_player),MAX(ratio_agent) into @maxRatio_player,@maxRatio_agent from table_citypartner_info where UpCPID=$nPlayerId;
							if $ratioPlayer<=@maxRatio_player then 		
										set $returnVal=-1;
										set $resultMsg=CONCAT('会员充值分成比例不能低于下级合伙人的最大会员充值分成比例【',ROUND(@maxRatio_player/100,2),'%】');
										leave returnNode;
							end if;
							if $ratioAgent<=@maxRatio_agent then 		
										set $returnVal=-1;
										set $resultMsg=CONCAT('代理充值分成比例不能低于下级合伙人的最大代理充值分成比例【',ROUND(@maxRatio_agent/100,2),'%】');
										leave returnNode;
							end if;
					end if;
			else 
					if exists(select nPlayerId from table_citypartner_info where UpCPID=$nPlayerId) then 
							#获取下级的最大分成比例
							select MAX(ratio_player),MAX(ratio_agent) into @maxRatio_player,@maxRatio_agent from table_citypartner_info where UpCPID=$nPlayerId;
							if $ratioPlayer<=@maxRatio_player then 		
										set $returnVal=-1;
										set $resultMsg=CONCAT('会员充值分成比例不能低于下级合伙人的最大会员充值分成比例【',ROUND(@maxRatio_player/100,2),'%】');
										leave returnNode;
							end if;
							if $ratioAgent<=@maxRatio_agent then 		
										set $returnVal=-1;
										set $resultMsg=CONCAT('代理充值分成比例不能低于下级合伙人的最大代理充值分成比例【',ROUND(@maxRatio_agent/100,2),'%】');
										leave returnNode;
							end if;
					end if;
					#一级代理分成差判断【一级代理的分成比例+一级合伙人会员分成比例必须<=100% 】
					select ratio into @ratio from table_agent_info where nPlayerId=$nPlayerId; 
					if (@ratio+$ratioPlayer)>10000 then 
									set $returnVal=-1;
									set $resultMsg=CONCAT('会员充值分成比例不能高于【',ROUND((10000-@ratio)/100,2),'%】');
									leave returnNode;
					end if;
			end if;
			#操作人、代理账号
			select UserName into @userName from admin_user where UserId=$currUserId;
			select szThirdAccount into @szThirdAccount from table_user where nPlayerId=$nPlayerId;

			start transaction;
			#更新城市合伙人分成比例
			update table_citypartner_info set ratio_player=$ratioPlayer,ratio_agent=$ratioAgent where nPlayerId=$nPlayerId;
			#添加日志
			set @logDes=CONCAT('【修改分成】运营用户:【',@userName,'】 修改了城市合伙人【ID:',$nPlayerId,
													',账号:',@szThirdAccount,'】的分成比例;会员充值分成比例由"',ROUND(@ratio_player/100,2),
													'%" 变更为 "',ROUND($ratioPlayer/100,2),'%";代理充值分成比例由"',ROUND(@ratio_agent/100,2),'%" 变更为 "',ROUND($ratioAgent/100,2),'%"');
			insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
			values(0,87,$currUserId,0,0,@logDes,NOW());

			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-99;
					set $resultMsg='执行异常';
					rollback;
			end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ModifyProxyRatio
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ModifyProxyRatio`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ModifyProxyRatio`(
		/*
				修改代理分成20210811
		*/
		in $currUserId int,
		in $nPlayerId int,
		in $ratio int,
		out $returnVal int,
		out $resultMsg varchar(64)
)
returnNode:BEGIN

			declare errno int default 0;
			declare continue handler for sqlexception set errno = 1;
			if $ratio<100 or $ratio>10000  then
						set $returnVal=-1;
						set $resultMsg='分成比例不合法';
						leave returnNode;
			end if;			
			if not exists(select nPlayerId from table_agent_info where nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='代理不存在';
						leave returnNode;
			end if;
			#当前代理信息
			select ratio,upAgentId into @ratio,@upAgentId from table_agent_info where nPlayerId=$nPlayerId;
			if @ratio=$ratio then 
					set $returnVal=1;
					set $resultMsg='操作成功';
					leave returnNode;
			end if;

			if @upAgentId>0 then 
					#获取上级代理信息
					select ratio into @upRatio from table_agent_info where nPlayerId=@upAgentId;
					if $ratio>=@upRatio then 
								set $returnVal=-1;
								set $resultMsg=CONCAT('代理分成比例不能高于上级代理的分成比例【',ROUND(@upRatio/100,2),'%】');
								leave returnNode;
					end if;
					#获取下级的最大分成比例
					if exists(select nPlayerId from table_agent_info where upAgentId=$nPlayerId) then 
							select MAX(ratio) into @maxRatio from table_agent_info where upAgentId=$nPlayerId;
							if $ratio<=@maxRatio then 		
										set $returnVal=-1;
										set $resultMsg=CONCAT('分成比例不能低于下级代理的最大分成比例【',ROUND(@maxRatio/100,2),'%】');
										leave returnNode;
							end if;
					end if;
			else 
					if exists(select nPlayerId from table_agent_info where upAgentId=$nPlayerId) then 
							#获取下级的最大分成比例
							select MAX(ratio) into @maxRatio from table_agent_info where upAgentId=$nPlayerId;
							if $ratio<=@maxRatio then 		
										set $returnVal=-1;
										set $resultMsg=CONCAT('代理分成比例不能低于下级代理的最大分成比例【',ROUND(@maxRatio/100,2),'%】');
										leave returnNode;
							end if;
					end if;

					#一级代理的分成比例+一级合伙人会员分成比例必须<=100% 
					if exists(select nPlayerId from table_citypartner_info where nPlayerId=$nPlayerId and UpCPID=0) then 
						select ratio_player into @ratio_player from table_citypartner_info where nPlayerId=$nPlayerId and UpCPID=0;
						if ($ratio+@ratio_player)>10000 then 
										set $returnVal=-1;
										set $resultMsg=CONCAT('代理分成比例不能高于【',ROUND((10000-@ratio_player)/100,2),'%】');
										leave returnNode;
						end if;
					end if;
			end if;
			#操作人、代理账号
			select UserName into @userName from admin_user where UserId=$currUserId;
			select szThirdAccount into @szThirdAccount from table_user where nPlayerId=$nPlayerId;

			start transaction;
			#更新分成比例
			update table_agent_info set ratio=$ratio where nPlayerId=$nPlayerId;
			#添加日志
			set @logDes=CONCAT('【修改分成】运营用户:【',@userName,'】 修改了代理【ID:',$nPlayerId,',账号:',@szThirdAccount,'】的分成比例;比例由"',ROUND(@ratio/100,2),'%" 变更为 "',ROUND($ratio/100,2),'%"');
			insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
			values(0,87,$currUserId,0,0,@logDes,NOW());

			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-99;
					set $resultMsg='执行异常';
					rollback;
			end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ModifyPwd
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ModifyPwd`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ModifyPwd`(
		
							in $optionUserId int,
							in $targetUserId int,
							in $originalPwd varchar(50),
							in $userPassord varchar(50),
							out $returnVal int,
							out $resultMsg varchar(100)
)
returnNode:begin 
		if not exists(select UserId from admin_user where  UserId=$optionUserId) then 
			set $returnVal=-1;
			set $resultMsg='用户不存在';
			leave returnNode;
		end if;
		if not exists(select UserId from admin_user where  UserId=$targetUserId) then 
			set $returnVal=-1;
			set $resultMsg='用户不存在';
			leave returnNode;
		end if;
		if $optionUserId=$targetUserId then 	
				select UserName into @UserName from admin_user where UserId=$optionUserId;
				if not exists(select userId from admin_user where UserId=$optionUserId and UserPassord=$originalPwd ) then
						set $returnVal=-1;
						set $resultMsg='原始密码错误';
						leave returnNode;
				end if;
				set @Des=CONCAT('【修改密码】运营用户:【',@UserName,'】修改了密码');
		else
				
				select UserName into @UserName from admin_user where UserId=$optionUserId;
				select UserName into @targetUserName from admin_user where UserId=$targetUserId;
				set @Des=CONCAT('【修改密码】运营用户:【',@UserName,'】为【',@targetUserName,'】修改密码');
		end if;
		update admin_user set UserPassord=$userPassord where UserId=$targetUserId;
		
		set @nClubId=0;
		if exists(select nClubId from admin_proxy where UserId=$optionUserId) then 
				select nClubId into @nClubId from admin_proxy where UserId=$optionUserId;
		end if;
		insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des) values(@nClubId,99,$optionUserId,$targetUserId,0,@Des);
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_MsgPush
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_MsgPush`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_MsgPush`(
		
	in $nClubID int,
	in $gamePlayerId int,
	in $nPlayerId int,
	in $msgContent varchar(500),
	out $returnVal int,
	out $resultMsg varchar(50),
	out $msgId int

)
returnVal:begin 
				set $msgId=0;
				if $msgContent is null or $msgContent='' then 
						set $returnVal=-1;
						set $resultMsg='消息内容不能为空';
						leave returnVal;
				end if;
				
				if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId and nActive=1) then
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubinfo where nClubID=$nClubID and nstatus=1) then
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;	
				end if;
				if not exists(select nClubID from table_clubmember  where  nStatus=1 and nClubID=$nClubID and nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='该用户不在此俱乐部中';
						leave returnVal;
				end if;
				if exists(select nPlayerID from table_clubmember where nStatus=1 and nLevel=1 and nClubID=$nClubID and nPlayerID=$gamePlayerId) then 
							set @ProxyName='创始人';
				else 
						if exists(select nPlayerID from table_clubmember where nStatus=1 and nLevel=2 and nClubID=$nClubID and nPlayerID=$gamePlayerId) then 
									set @ProxyName='管理员';
									if not exists(select nClubID from table_club_member_authority where nClubID=$nClubID and nPlayerID=$gamePlayerId and nLevel=13 and nStatus=1) then 
											set $returnVal=-1;
											set $resultMsg='您的账号没有该俱乐部的消息推送权限';
											leave returnVal;
									end if;
						else 
									set $returnVal=-1;
									set $resultMsg='您的账号没有该俱乐部的操作权限';
									leave returnVal;
						end if;
				end if;
				select szClubName into @szClubName from table_clubinfo where nClubID=$nClubID;
				insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) values($nPlayerId,502,'消息推送',CONCAT('俱乐部"',@szClubName,'"(ID:',$nClubID,')消息:',$msgContent));
				set $msgId=@@identity;
				
				call Pro_Web_AddEnterPriseLog($nClubID,38,$gamePlayerId,$nPlayerId,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')给用户(ID:',$nPlayerId,')发送了一条消息:"',$msgContent,'"'));
				set $returnVal=1;
				set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_nGoodsDataSyn
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_nGoodsDataSyn`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_nGoodsDataSyn`(
)
begin 

			set @dataTime='2021-11-01 02:00:00',@nGoodsID=1;
			#同步找回房卡用户的背包数量
			drop temporary table if exists temp_table_nGoods;  
			create temporary table temp_table_nGoods(  
				Id int unsigned  not null  auto_increment primary key,
				nPlayerID int DEFAULT 0,
				nGoodsID int DEFAULT 0
			);
			insert into temp_table_nGoods(nPlayerID,nGoodsID)
			select nPlayerID,nGoodsID from table_clubgoodsoperatlog 
			where  CreateTime<@dataTime and nGoodsID>@nGoodsID GROUP BY nPlayerID,nGoodsID;

			select count(1) into @totalCount from temp_table_nGoods;
			if @totalCount >0 then 
						set @currId=1;
						while (@currId<=@totalCount) do
									#获取会员Id、物品Id
									select nPlayerID,nGoodsID into @nPlayerID,@nGoodsID from temp_table_nGoods where Id=@currId;
									#获取最近一条账变记录
									select AfterMbNum,CreateTime into @AfterMbNum,@CreateTime from table_clubgoodsoperatlog 
									where  CreateTime<@dataTime and nPlayerID=@nPlayerID and nGoodsID=@nGoodsID
									ORDER BY Id desc limit 0,1;

									insert into Table_Web_nGoodsTemp(nPlayerID,nGoodsID,AfterMbNum,CreateTime)
									values(@nPlayerID,@nGoodsID,@AfterMbNum,@CreateTime);
									set @currId=@currId+1;
									#避免死循环
									if @currId>=100000 then 
											set @totalCount=0;
									end if;
						end while;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_OpenHome
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_OpenHome`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_OpenHome`(

	in $type int,
	in $nClubId int,
	in $gamePlayerId int,
	in $flagVal int,
	out $returnVal int,
	out $resultMsg varchar(50)

)
returnNode:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnNode;	
				end if;
				if not exists(select nPlayerId from table_user where nPlayerId=$gamePlayerId and nActive=1) then
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnNode;
				end if;
				if exists (select nClubID from table_clubinfo where nClubID=$nClubId and CreatePlayerID=$gamePlayerId) then 
						set @ProxyName='创始人';
				else 
						set @ProxyName='管理员';
						if $type=1 then 		
								if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nStatus=1 and nLevel=6) then 
										set $returnVal=-1;
										set $resultMsg='尚无允许个人开房的操作权限';
										leave returnNode;
								end if;
						elseif $type=2 then	
								if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nStatus=1 and nLevel=9) then 
										set $returnVal=-1;
										set $resultMsg='尚无允许提分离桌的操作权限';
										leave returnNode;
								end if;
						elseif $type=3 then	
								if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nStatus=1 and nLevel=10) then 
										set $returnVal=-1;
										set $resultMsg='尚无允许搓牌的操作权限';
										leave returnNode;
								end if;
						elseif $type=4 then	
								if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nStatus=1 and nLevel=12) then 
										set $returnVal=-1;
										set $resultMsg='尚无申请自动处理操作权限';
										leave returnNode;
								end if;
						else 
								set $returnVal=-1;
								set $resultMsg='非法操作';
								leave returnNode;
						end if;
				end if;
				
				start transaction;
				if $type=1 then 
						set @logType=16;
						set @title='"个人开房"';
						
						if exists(select nClubID from table_clubinfo where nClubID=$nClubId and bMemberCreate=$flagVal) then 
								set $returnVal=1;
								set $resultMsg='成功';
								leave returnNode;
						else 
								update table_clubinfo set bMemberCreate=$flagVal where nClubID=$nClubId;
						end if;
				elseif $type=2 then 
						set @logType=17;
						set @title='"提分离桌"';
						
						if exists(select nClubID from table_clubinfo where nClubID=$nClubId and bAllowTakeOut=$flagVal) then 
								set $returnVal=1;
								set $resultMsg='成功';
								leave returnNode;
						else 
								update table_clubinfo set bAllowTakeOut=$flagVal where nClubID=$nClubId;
						end if;
				elseif $type=3 then 
						set @logType=32;
						set @title='"建房搓牌"';
						
						if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=1 and nStatus=$flagVal) then 
								set $returnVal=1;
								set $resultMsg='成功';
								leave returnNode;
						else 
								if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=1)then 
										update table_club_exswitch_config set nStatus=$flagVal where nClubID=$nClubId and nType=1;
								else 
										insert into table_club_exswitch_config(nClubID,nType,nStatus)values($nClubId,1,$flagVal);
								end if;
						end if;
				elseif $type=4 then  
						set @logType=37;
						set @title='"申请自动处理"';
						
						if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=2 and nStatus=$flagVal) then 
								set $returnVal=1;
								set $resultMsg='成功';
								leave returnNode;
						else 
								if exists(select nClubID from table_club_exswitch_config where nClubID=$nClubId and nType=2)then 
										update table_club_exswitch_config set nStatus=$flagVal where nClubID=$nClubId and nType=2;
								else 
										insert into table_club_exswitch_config(nClubID,nType,nStatus)values($nClubId,2,$flagVal);
								end if;
						end if;
				else 
						set $returnVal=-1;
						set $resultMsg='非法操作';
						leave returnNode;
				end if;
				
				if $flagVal=0 then 
						set @optionName='不允许';
				else 
						set @optionName='允许';
				end if;
				call Pro_Web_AddEnterPriseLog($nClubId,@logType,$gamePlayerId,0,CONCAT(@ProxyName,'(Id:',$gamePlayerId,'),修改俱乐部允许',@title,'设置,状态变更为 "',@optionName,' "'));
			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-1;
					set $resultMsg='存储过程执行异常';
					rollback;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Pyramid_Betting
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Pyramid_Betting`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Pyramid_Betting`(

	in $currdate varchar(19),
	out $result int
)
begin 
			declare _currDate varchar(19) default date_sub($currdate,interval 1 day);			
			
			declare _startDate varchar(19) default CONCAT(_currDate,' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(_currDate,' 23:59:59');

			declare _nClubID,_nPlayerID,_tempID,_tempnExtenID int default 0;	
			declare _nAmount bigint default 0;
			
			declare done int default false;
			declare cur cursor for select nClubID,nPlayerID,nAmount,nExtenID from table_pyramid_bettingday where tEffectiveDate>=_startDate and tEffectiveDate<=_endDate;
			
			declare continue handler for not found set done = true;

			set $result=0;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubID,_nPlayerID,_nAmount,_tempnExtenID;
			
			if done then					
					leave read_loop;    
			end if;
								set _tempID=_nPlayerID;
								if _tempnExtenID>0 then 
										if not exists(select nClubID from table_pyramid_betting where nClubID=_nClubID and nPlayerID=_tempID and tEffectiveDate=_currDate) then 
														
														select IFNULL(szThirdAccount,CONCAT('GU',nPlayerId)) into @szNickName from table_user where nPlayerId=_tempID;

														insert into table_pyramid_betting(nPlayerID,szNickName,nClubID,nExtenID,nAmount,tEffectiveDate)
														values(_tempID,@szNickName,_nClubID,_tempnExtenID,_nAmount,_currDate);
										else 
												update table_pyramid_betting set nAmount=nAmount+_nAmount where nClubID=_nClubID and nPlayerID=_tempID and tEffectiveDate=_currDate;
										end if;
								end if;
								
								set @isflag=1,@numeCount=1;
								while @isflag=1 and _tempID>0 do 
										select nExtenID into @nExtenID from table_clubmember where nClubID=_nClubID and nPlayerId=_tempID limit 0,1;
										if exists(select nClubID from table_pyramid_betting where nClubID=_nClubID and nPlayerID=_tempID and tEffectiveDate=_currDate) then 													
													set _tempID=@nExtenID;
										else 
													if @nExtenID>0 then 																
																select IFNULL(szThirdAccount,CONCAT('GU',nPlayerId)) into @szNickNameSub from table_user where nPlayerId=_tempID;
																insert into table_pyramid_betting(nPlayerID,szNickName,nClubID,nExtenID,nAmount,tEffectiveDate)
																values(_tempID,@szNickNameSub,_nClubID,@nExtenID,0,_currDate);
																set _tempID=@nExtenID;
													else 
															set @isflag=0;
															set _tempID=0;
													end if;
										end if;										
										if @numeCount>=1000 then 
												set @isflag=0;
												set _tempID=0;
										end if;
										set @numeCount=@numeCount+1;
								end while;
			
			end loop;
			
			close cur;
			
			set $result=1;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Pyramid_BettingDay
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Pyramid_BettingDay`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_Pyramid_BettingDay`(

	in $currdate varchar(19)
)
begin 
			declare _currDate varchar(19) default date_sub($currdate,interval 1 day);			
			
			declare _startDate varchar(19) default CONCAT(_currDate,' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(_currDate,' 23:59:59');

			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_startDate);
			
			update table_user set szThirdAccount=CONCAT('GU',nPlayerId) where szThirdAccount is null;

			set @sqlStr=CONCAT("insert into table_pyramid_bettingday(nPlayerID,szNickName,nClubID,nExtenID,nAmount,tEffectiveDate)
													select temp.nPlayerID,u.szThirdAccount,temp.nClubID,m.nExtenID,temp.nAmounts,'",_currDate,"'
													from (
																	select detail.nClubID,detail.nPlayerID,IFNULL(SUM(detail.nValidBet),0) nAmounts
																	from ",@table_clubgamescoredetail,"  detail
																	where  detail.tEndTime>='",_startDate,"' and detail.tEndTime<='",_endDate,"'
																				and exists (select admin_proxy.nClubID from admin_proxy 
																												where admin_proxy.ProxyType=1 and admin_proxy.GameProxyType=2 and admin_proxy.nClubID=detail.nClubID)
																	GROUP BY detail.nClubID,detail.nPlayerID HAVING nAmounts>0
															) temp 	LEFT JOIN table_clubmember m on temp.nClubID=m.nClubID and temp.nPlayerID=m.nPlayerID
																			LEFT JOIN table_user u on temp.nPlayerID=u.nPlayerId
																			where m.nExtenID>0 and m.bRobot=0 and m.nStatus=1 and m.nLevel>1");
				PREPARE stmt_name FROM @sqlStr; 
				EXECUTE stmt_name;
				DEALLOCATE PREPARE stmt_name;	
			
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Pyramid_BettingDay_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Pyramid_BettingDay_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_Pyramid_BettingDay_Pre`(

	in $currdate varchar(19)
)
begin 
			declare _currDate varchar(19) default date_sub($currdate,interval 1 day);			
			
			declare _startDate varchar(19) default CONCAT(_currDate,' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(_currDate,' 23:59:59');

			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_startDate);
			
			update table_user set szThirdAccount=CONCAT('GU',nPlayerId) where szThirdAccount is null;

			set @sqlStr=CONCAT("insert into table_pyramid_bettingday(nPlayerID,szNickName,nClubID,nExtenID,nAmount,tEffectiveDate)
													select temp.nPlayerID,u.szThirdAccount,temp.nClubID,m.nExtenID,temp.nAmounts,'",_currDate,"'
													from (
																	select detail.nClubID,detail.nPlayerID,IFNULL(SUM(detail.nValidBet),0) nAmounts
																	from ",@table_clubgamescoredetail,"  detail
																	where  detail.tEndTime>='",_startDate,"' and detail.tEndTime<='",_endDate,"'
																				and exists (select admin_proxy.nClubID from admin_proxy 
																												where admin_proxy.ProxyType=1 and admin_proxy.GameProxyType=2 and admin_proxy.nClubID=detail.nClubID)
																	GROUP BY detail.nClubID,detail.nPlayerID HAVING nAmounts>0
															) temp 	LEFT JOIN table_clubmember m on temp.nClubID=m.nClubID and temp.nPlayerID=m.nPlayerID
																			LEFT JOIN table_user u on temp.nPlayerID=u.nPlayerId
																			where m.nExtenID>0 and m.bRobot=0 and m.nStatus=1 and m.nLevel>1");
				PREPARE stmt_name FROM @sqlStr; 
				EXECUTE stmt_name;
				DEALLOCATE PREPARE stmt_name;	
			
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Pyramid_Financial
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Pyramid_Financial`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_Pyramid_Financial`(
/*
		创建时间:2020-05-27
		修改时间:2020-05-27 
		功能描述:审核
			$type:1001 客服提交--待财务审核;	1002 客服拒绝
						2001 财务提交--待线下操作;	2002 财务拒绝
			$currUserId:客服、财务后台操作账户
	*/
	in $Id int,
	in $szOrder varchar(128),
	in $szRemark varchar(128),
	in $type int,
	in $currUserId int,
	out $returnVal int, 
	out $resultMsg varchar(64) 
)
begin 
			/*
					1-待客服审核 
					2-待财务审核 
					3-财务已提交，待真实转账完成
					4-最终成功
					5-失败
					6-拒绝
			*/
			declare errno int default 0;
			declare continue handler for sqlexception set errno = 1;
			if exists(select Id from table_pyramid_examine where Id=$Id and szOrder=$szOrder) then 

					select nPlayerID,nFlag,nClubID,nAmount into @nPlayerID, @nFlag,@nClubID,@nAmount from table_pyramid_examine where Id=$Id and szOrder=$szOrder;	
					select UserName into @opertAccount from admin_user where UserId=$currUserId;
					#客服提交--待财务审核
					start transaction;
					if $type=1001 and @nFlag=1 then
							#自动审核值
							select nWarningAmount into @nWarningAmount from table_clubinfo where nClubID=@nClubID;
							#财务自动审核通过
							if @nAmount<=@nWarningAmount then 			
										update table_pyramid_examine 
													set nFlag=3,CustomerAccount=@opertAccount,tCustomerActTime=NOW(),FinanceAccount='system',tFinanceActTime=NOW() 
										where Id=$Id and szOrder=$szOrder;
							else 
										update table_pyramid_examine set nFlag=2,CustomerAccount=@opertAccount,tCustomerActTime=NOW() where Id=$Id and szOrder=$szOrder;
							end if;
							set $returnVal=1;
							set $resultMsg='审核通过';
					#客服拒绝
					elseif $type=1002 and @nFlag=1 then 
									update table_pyramid_examine set nFlag=6,CustomerAccount=@opertAccount,tCustomerActTime=NOW(),szRemark=$szRemark where Id=$Id and szOrder=$szOrder;
									#退回
									select nScore into @userScore from table_clubmember where nClubID=@nClubID and nPlayerID=@nPlayerID;

									update table_clubmember set nScore=@userScore+@nAmount where nClubID=@nClubID and nPlayerID=@nPlayerID;
									/*
									set @szOrder=$szOrder,@currUserId=$currUserId,@userAmount=(@userScore+@nAmount),@nType=27,@szRemark=$szRemark,@CreateTime=NOW();
									set @sqlStr=CONCAT("insert into ",@table_clublogscore,"(nPlayerID,nAmount,szOrder,operateID,nScore,nType,szDesc,clubid,CreateTime)
																			 values(?,?,?,?,?,?,?,?,?)");
									PREPARE stmt_name FROM @sqlStr; 
									EXECUTE stmt_name USING  @nPlayerID,@nAmount,@szOrder,@currUserId,@userAmount,@nType,@szRemark,@nClubID,@CreateTime;
									DEALLOCATE PREPARE stmt_name;	
									*/
									call pr_club_changeLogClubScore3_comman(@nPlayerID,0,0,@nAmount,$szOrder,$currUserId,(@userScore+@nAmount),27,0,0,$szRemark,@nClubID,0);

									set $returnVal=1;
									set $resultMsg='审核不通过';
					#财务提交--待线下操作
					elseif $type=2001 and @nFlag=2 then 
							update table_pyramid_examine set nFlag=3,FinanceAccount=@opertAccount,tFinanceActTime=NOW() where Id=$Id and szOrder=$szOrder;
							set $returnVal=1;
							set $resultMsg='审核通过';
					#财务拒绝
					elseif $type=2002 and @nFlag=2 then 
							update table_pyramid_examine set nFlag=6,FinanceAccount=@opertAccount,tFinanceActTime=NOW(),szRemark=$szRemark where Id=$Id and szOrder=$szOrder;
							#退回
							select nScore into @userScore from table_clubmember where nClubID=@nClubID and nPlayerID=@nPlayerID;
							
							update table_clubmember set nScore=@userScore+@nAmount where nClubID=@nClubID and nPlayerID=@nPlayerID;
							/*
							set @szOrder=$szOrder,@currUserId=$currUserId,@userAmount=(@userScore+@nAmount),@nType=27,@szRemark=$szRemark,@CreateTime=NOW();
							set @sqlStr=CONCAT("insert into ",@table_clublogscore,"(nPlayerID,nAmount,szOrder,operateID,nScore,nType,szDesc,clubid,CreateTime)
																	values(?,?,?,?,?,?,?,?,?)");
							PREPARE stmt_name FROM @sqlStr; 
							EXECUTE stmt_name USING  @nPlayerID,@nAmount,@szOrder,@currUserId,@userAmount,@nType,@szRemark,@nClubID,@CreateTime;
							DEALLOCATE PREPARE stmt_name;	
							*/	
							call pr_club_changeLogClubScore3_comman(@nPlayerID,0,0,@nAmount,$szOrder,$currUserId,(@userScore+@nAmount),27,0,0,$szRemark,@nClubID,0);
							set $returnVal=1;
							set $resultMsg='审核不通过';
					else 
							set $returnVal=0;
							set $resultMsg='订单已被处理';
					end if;
					if errno=0 then
						commit;
					else
							set $returnVal=0;
							set $resultMsg='执行异常';
							rollback;
					end if;
			else 
					set $returnVal=0;
					set $resultMsg='订单不存在';
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Pyramid_Financial_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Pyramid_Financial_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_Pyramid_Financial_Pre`(
/*
		创建时间:2020-05-27
		修改时间:2020-05-27 
		功能描述:审核
			$type:1001 客服提交--待财务审核;	1002 客服拒绝
						2001 财务提交--待线下操作;	2002 财务拒绝
			$currUserId:客服、财务后台操作账户
	*/
	in $Id int,
	in $szOrder varchar(128),
	in $szRemark varchar(128),
	in $type int,
	in $currUserId int,
	out $returnVal int, 
	out $resultMsg varchar(64) 
)
begin 
			/*
					1-待客服审核 
					2-待财务审核 
					3-财务已提交，待真实转账完成
					4-最终成功
					5-失败
					6-拒绝
			*/
			declare errno int default 0;
			declare continue handler for sqlexception set errno = 1;
			if exists(select Id from table_pyramid_examine where Id=$Id and szOrder=$szOrder) then 

					select nPlayerID,nFlag,nClubID,nAmount into @nPlayerID, @nFlag,@nClubID,@nAmount from table_pyramid_examine where Id=$Id and szOrder=$szOrder;	
					select UserName into @opertAccount from admin_user where UserId=$currUserId;
					#客服提交--待财务审核
					start transaction;
					if $type=1001 and @nFlag=1 then
							#自动审核值
							select nWarningAmount into @nWarningAmount from table_clubinfo where nClubID=@nClubID;
							#财务自动审核通过
							if @nAmount<=@nWarningAmount then 			
										update table_pyramid_examine 
													set nFlag=3,CustomerAccount=@opertAccount,tCustomerActTime=NOW(),FinanceAccount='system',tFinanceActTime=NOW() 
										where Id=$Id and szOrder=$szOrder;
							else 
										update table_pyramid_examine set nFlag=2,CustomerAccount=@opertAccount,tCustomerActTime=NOW() where Id=$Id and szOrder=$szOrder;
							end if;
							set $returnVal=1;
							set $resultMsg='审核通过';
					#客服拒绝
					elseif $type=1002 and @nFlag=1 then 
									update table_pyramid_examine set nFlag=6,CustomerAccount=@opertAccount,tCustomerActTime=NOW(),szRemark=$szRemark where Id=$Id and szOrder=$szOrder;
									#退回
									select nScore into @userScore from table_clubmember where nClubID=@nClubID and nPlayerID=@nPlayerID;

									update table_clubmember set nScore=@userScore+@nAmount where nClubID=@nClubID and nPlayerID=@nPlayerID;
									/*
									set @szOrder=$szOrder,@currUserId=$currUserId,@userAmount=(@userScore+@nAmount),@nType=27,@szRemark=$szRemark,@CreateTime=NOW();
									set @sqlStr=CONCAT("insert into ",@table_clublogscore,"(nPlayerID,nAmount,szOrder,operateID,nScore,nType,szDesc,clubid,CreateTime)
																			 values(?,?,?,?,?,?,?,?,?)");
									PREPARE stmt_name FROM @sqlStr; 
									EXECUTE stmt_name USING  @nPlayerID,@nAmount,@szOrder,@currUserId,@userAmount,@nType,@szRemark,@nClubID,@CreateTime;
									DEALLOCATE PREPARE stmt_name;	
									*/
									call pr_club_changeLogClubScore3_comman(@nPlayerID,0,0,@nAmount,$szOrder,$currUserId,(@userScore+@nAmount),27,0,0,$szRemark,@nClubID,0);

									set $returnVal=1;
									set $resultMsg='审核不通过';
					#财务提交--待线下操作
					elseif $type=2001 and @nFlag=2 then 
							update table_pyramid_examine set nFlag=3,FinanceAccount=@opertAccount,tFinanceActTime=NOW() where Id=$Id and szOrder=$szOrder;
							set $returnVal=1;
							set $resultMsg='审核通过';
					#财务拒绝
					elseif $type=2002 and @nFlag=2 then 
							update table_pyramid_examine set nFlag=6,FinanceAccount=@opertAccount,tFinanceActTime=NOW(),szRemark=$szRemark where Id=$Id and szOrder=$szOrder;
							#退回
							select nScore into @userScore from table_clubmember where nClubID=@nClubID and nPlayerID=@nPlayerID;
							
							update table_clubmember set nScore=@userScore+@nAmount where nClubID=@nClubID and nPlayerID=@nPlayerID;
							/*
							set @szOrder=$szOrder,@currUserId=$currUserId,@userAmount=(@userScore+@nAmount),@nType=27,@szRemark=$szRemark,@CreateTime=NOW();
							set @sqlStr=CONCAT("insert into ",@table_clublogscore,"(nPlayerID,nAmount,szOrder,operateID,nScore,nType,szDesc,clubid,CreateTime)
																	values(?,?,?,?,?,?,?,?,?)");
							PREPARE stmt_name FROM @sqlStr; 
							EXECUTE stmt_name USING  @nPlayerID,@nAmount,@szOrder,@currUserId,@userAmount,@nType,@szRemark,@nClubID,@CreateTime;
							DEALLOCATE PREPARE stmt_name;	
							*/	
							call pr_club_changeLogClubScore3_comman(@nPlayerID,0,0,@nAmount,$szOrder,$currUserId,(@userScore+@nAmount),27,0,0,$szRemark,@nClubID,0);
							set $returnVal=1;
							set $resultMsg='审核不通过';
					else 
							set $returnVal=0;
							set $resultMsg='订单已被处理';
					end if;
					if errno=0 then
						commit;
					else
							set $returnVal=0;
							set $resultMsg='执行异常';
							rollback;
					end if;
			else 
					set $returnVal=0;
					set $resultMsg='订单不存在';
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Pyramid_Rebate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Pyramid_Rebate`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Pyramid_Rebate`(

	in $currdate varchar(19),
	out $result int 
)
begin 
			declare _startDate varchar(19) default date_sub($currdate,interval 1 day);
			declare _nPlayerID,_nClubID,_nExtenID,_tempnExtenID int default 0;
			declare _nAmount bigint default 0;
			
			declare done int default false;
			declare cur cursor for select nPlayerID,nClubID,nExtenID,nAmount from table_pyramid_betting where tEffectiveDate=_startDate;
			
			declare continue handler for not found set done = true;
			set $result=0;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nPlayerID,_nClubID,_nExtenID,_nAmount;
			
			if done then					
					leave read_loop;    
			end if;	
						
						select IFNULL(sum(nAmount),0) into @totalnAmount from table_pyramid_betting  where nClubID=_nClubID and nExtenID=_nPlayerID and tEffectiveDate=_startDate; 
						
						
						
						select IFNULL(SUM(nAmount),0) into @totalNexnAmount from table_pyramid_betting  bet
						where bet.nclubId=_nClubID and bet.tEffectiveDate=_startDate
						and EXISTS
						(
											select nClubId, nPlayerId, nExtenID
											from 
											(
												select nClubId, nPlayerId, nExtenID,if(find_in_set(nExtenID, @pids) > 0, @pids:= concat(@pids, ',', nPlayerId), 0) as ischild
												from (
														 select nClubId, nPlayerId, nExtenID from table_clubmember mem where nclubId=_nClubID  order by nExtenID, nPlayerId
														) t1,
														(select @pids:= _nPlayerID) t2
											 ) t3 where ischild != 0 and nExtenID<>_nPlayerID and bet.nPlayerId=nPlayerId
						);
						
						
						
						if @totalNexnAmount >=0 then 
								insert into table_pyramid_rebateday(nPlayerID,nClubID,nExtenID,tEffectiveDate,tCreateTime,DirectlySubAchievement
																										 ,AnotherSubAchievement,WeekTotalRebate,WeekMyRebate,ClaimFlag)
								values(_nPlayerID,_nClubID,_nExtenID,_startDate,$currdate,@totalnAmount,@totalNexnAmount,0,0,0);
						end if;
					 
			
			end loop;
			
			close cur;
			set $result=1;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Pyramid_RebateVal
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Pyramid_RebateVal`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Pyramid_RebateVal`(
		
	in $totalnAmount bigint,
	out $returnVal bigint 
)
begin 
				if $totalnAmount<=0 then 								
						set @returnScore=0;
				else 
						set @numVal=$totalnAmount/1000/10000;						
						if @numVal>=0.001 and @numVal<5.0 then 								
									set @returnScore=@numVal*60*1000;

						elseif @numVal>=5.0 and @numVal<10.0 then
									set @returnScore=@numVal*65*1000;

						elseif @numVal>=10.0 and @numVal<15.0 then
									set @returnScore=@numVal*70*1000;

						elseif @numVal>=15.0 and @numVal<30.0 then
									set @returnScore=@numVal*75*1000;

						elseif @numVal>=30.0 and @numVal<50.0 then
									set @returnScore=@numVal*80*1000;

						elseif @numVal>=50.0 and @numVal<70.0 then
									set @returnScore=@numVal*85*1000;

						elseif @numVal>=70.0 and @numVal<100.0 then
									set @returnScore=@numVal*90*1000;

						elseif @numVal>=100.0 and @numVal<200.0 then
									set @returnScore=@numVal*100*1000;

						elseif @numVal>=200.0 and @numVal<300.0 then
									set @returnScore=@numVal*110*1000;

						elseif @numVal>=300.0 and @numVal<400.0 then
									set @returnScore=@numVal*120*1000;

						elseif @numVal>=400.0 and @numVal<500.0 then
									set @returnScore=@numVal*130*1000;

						elseif @numVal>=500.0 and @numVal<600.0 then
									set @returnScore=@numVal*140*1000;

						elseif @numVal>=600.0 and @numVal<700.0 then
									set @returnScore=@numVal*150*1000;

						elseif @numVal>=700.0 and @numVal<800.0 then
									set @returnScore=@numVal*160*1000;

						elseif @numVal>=800.0 and @numVal<900.0 then
									set @returnScore=@numVal*170*1000;

						elseif @numVal>=900.0 and @numVal<1000.0 then
									set @returnScore=@numVal*180*1000;

						elseif @numVal>=1000.0 and @numVal<1500.0 then
									set @returnScore=@numVal*190*1000;

						elseif @numVal>=1500.0 and @numVal<2000.0 then
									set @returnScore=@numVal*200*1000;

						elseif @numVal>=2000.0 and @numVal<2500.0 then
									set @returnScore=@numVal*210*1000;

						elseif @numVal>=2500.0 and @numVal<3000.0 then
									set @returnScore=@numVal*220*1000;


						elseif @numVal>=3000.0 and @numVal<3500.0 then
									set @returnScore=@numVal*230*1000;

						elseif @numVal>=3500.0 and @numVal<4000.0 then
									set @returnScore=@numVal*240*1000;

						elseif @numVal>=4000.0 and @numVal<5000.0 then
									set @returnScore=@numVal*250*1000;

						elseif @numVal>=5000.0 and @numVal<10000.0 then
									set @returnScore=@numVal*260*1000;

						elseif @numVal>=10000.0 then
									set @returnScore=@numVal*270*1000;
						else 
									set @returnScore=0;
						end if;														
				end if;
				set $returnVal=TRUNCATE(@returnScore,0);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Pyramid_Rebate_WeekMyRebate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Pyramid_Rebate_WeekMyRebate`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Pyramid_Rebate_WeekMyRebate`(
/*
		创建时间:2019-09-03 
		修改时间:2020-07-07 
		功能描述:每日自得返利
	*/
	in $runDate varchar(19)
)
begin 
			declare _tEffectiveDate varchar(19) default date_sub($runDate,interval 1 day);
			declare _nClubID,_nPlayerID,_nExtenID int default 0;
			declare _weekTotalRebate bigint default 0;
			#创建结束标志变量  
			declare done int default false;
			#获取每日每个用户结算记录
			declare cur cursor for select nClubID,nPlayerID,nExtenID,weekTotalRebate from table_pyramid_rebate where tEffectiveDate=_tEffectiveDate and WeekTotalRebate>0;
			#指定游标循环结束时的返回值  
			declare continue handler for not found set done = true;
			#打开游标  
			open cur;  
			#开始循环游标里的数据  
			read_loop:loop  
			#根据游标当前指向的一条数据  
			fetch cur into _nClubID,_nPlayerID,_nExtenID,_weekTotalRebate;
			#判断游标的循环是否结束  
			if done then					
					leave read_loop;    #跳出游标循环
			end if;
							#获取所有直属下级的的全得返利
							select IFNULL(sum(weekTotalRebate) ,0) into @totalWeekTotalRebate 
							from table_pyramid_rebate 
							where nClubID=_nClubID and nExtenID=_nPlayerID and tEffectiveDate=_tEffectiveDate;
							#自得返利
							set @selfRebate=0;
							if _weekTotalRebate>=@totalWeekTotalRebate then
									set @selfRebate=(_weekTotalRebate-@totalWeekTotalRebate);									
							end if;
							update table_pyramid_rebate set WeekMyRebate=@selfRebate,ClaimFlag=2 where nClubID=_nClubID and nPlayerID=_nPlayerID and tEffectiveDate=_tEffectiveDate;
							if @selfRebate>0 then 
									#成员积分
									select nScore into @memScore from table_clubmember where nClubID=_nClubID and nPlayerID=_nPlayerID limit 0,1;
									#账变后积分
									set @behindScore=(@selfRebate+@memScore);
									
									#insert into table_clublogscore(nPlayerID,nAmount,nScore,nType,szDesc,clubid,CreateTime)
									#values(_nPlayerID,@selfRebate,@behindScore,26,'代理返利',_nClubID,CONCAT(_tEffectiveDate,' 23:50:50'));
								
									set @tableName=CONCAT('table_clublogscore',DATE_FORMAT(_tEffectiveDate,'%Y%m%d'));
									set @tEffectiveDate=CONCAT(_tEffectiveDate,' 23:50:50');
									set @sqlStr1=CONCAT('insert into ',@tableName,'(nPlayerID,nAmount,nScore,nType,szDesc,clubid,CreateTime) 
																			values(',_nPlayerID,',',@selfRebate,',',@behindScore,',',26,',"','代理返利','",',_nClubID,',"',@tEffectiveDate,'")');
									PREPARE stmt_name1 FROM @sqlStr1; 
									EXECUTE stmt_name1;
									DEALLOCATE PREPARE stmt_name1;

									#更新成员积分
									update table_clubmember set nScore=nScore+@selfRebate where nClubID=_nClubID and nPlayerID=_nPlayerID;
							end if;
			#结束游标循环  
			end loop;
			#关闭游标 
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Pyramid_Rebate_WeekMyRebate_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Pyramid_Rebate_WeekMyRebate_Pre`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Pyramid_Rebate_WeekMyRebate_Pre`(
/*
		创建时间:2019-09-03 
		修改时间:2020-07-07 
		功能描述:每日自得返利
	*/
	in $runDate varchar(19)
)
begin 
			declare _tEffectiveDate varchar(19) default date_sub($runDate,interval 1 day);
			declare _nClubID,_nPlayerID,_nExtenID int default 0;
			declare _weekTotalRebate bigint default 0;
			#创建结束标志变量  
			declare done int default false;
			#获取每日每个用户结算记录
			declare cur cursor for select nClubID,nPlayerID,nExtenID,weekTotalRebate from table_pyramid_rebate where tEffectiveDate=_tEffectiveDate and WeekTotalRebate>0;
			#指定游标循环结束时的返回值  
			declare continue handler for not found set done = true;
			#打开游标  
			open cur;  
			#开始循环游标里的数据  
			read_loop:loop  
			#根据游标当前指向的一条数据  
			fetch cur into _nClubID,_nPlayerID,_nExtenID,_weekTotalRebate;
			#判断游标的循环是否结束  
			if done then					
					leave read_loop;    #跳出游标循环
			end if;
							#获取所有直属下级的的全得返利
							select IFNULL(sum(weekTotalRebate) ,0) into @totalWeekTotalRebate 
							from table_pyramid_rebate 
							where nClubID=_nClubID and nExtenID=_nPlayerID and tEffectiveDate=_tEffectiveDate;
							#自得返利
							set @selfRebate=0;
							if _weekTotalRebate>=@totalWeekTotalRebate then
									set @selfRebate=(_weekTotalRebate-@totalWeekTotalRebate);									
							end if;
							update table_pyramid_rebate set WeekMyRebate=@selfRebate,ClaimFlag=2 where nClubID=_nClubID and nPlayerID=_nPlayerID and tEffectiveDate=_tEffectiveDate;
							if @selfRebate>0 then 
									#成员积分
									select nScore into @memScore from table_clubmember where nClubID=_nClubID and nPlayerID=_nPlayerID limit 0,1;
									#账变后积分
									set @behindScore=(@selfRebate+@memScore);
									
									#insert into table_clublogscore(nPlayerID,nAmount,nScore,nType,szDesc,clubid,CreateTime)
									#values(_nPlayerID,@selfRebate,@behindScore,26,'代理返利',_nClubID,CONCAT(_tEffectiveDate,' 23:50:50'));
								
									set @tableName=CONCAT('table_clublogscore',DATE_FORMAT(_tEffectiveDate,'%Y%m%d'));
									set @tEffectiveDate=CONCAT(_tEffectiveDate,' 23:50:50');
									set @sqlStr1=CONCAT('insert into ',@tableName,'(nPlayerID,nAmount,nScore,nType,szDesc,clubid,CreateTime) 
																			values(',_nPlayerID,',',@selfRebate,',',@behindScore,',',26,',"','代理返利','",',_nClubID,',"',@tEffectiveDate,'")');
									PREPARE stmt_name1 FROM @sqlStr1; 
									EXECUTE stmt_name1;
									DEALLOCATE PREPARE stmt_name1;

									#更新成员积分
									update table_clubmember set nScore=nScore+@selfRebate where nClubID=_nClubID and nPlayerID=_nPlayerID;
							end if;
			#结束游标循环  
			end loop;
			#关闭游标 
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Pyramid_Rebate_WeekSumTimer
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Pyramid_Rebate_WeekSumTimer`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Pyramid_Rebate_WeekSumTimer`(
	
)
begin 
			
			declare _currDate varchar(19) default CURDATE();
			call Pro_Web_Pyramid_BettingDay(_currDate);							
			call Pro_Web_Pyramid_Betting(_currDate,@bettingNum);	
			if @bettingNum>0 then 					
					call Pro_Web_Pyramid_Rebate(_currDate,@rebateNum);
					if @rebateNum>0 then
								call Pro_Web_Pyramid_Rebate_WeekTotalRebate(_currDate,@dayRebate);
								if @dayRebate>0 then
										call Pro_Web_Pyramid_Rebate_WeekMyRebate(_currDate);					
								end if;
					end if;
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Pyramid_Rebate_WeekTotalRebate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Pyramid_Rebate_WeekTotalRebate`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Pyramid_Rebate_WeekTotalRebate`(

	in $runDate varchar(19),
	out $result int
)
begin 
			declare _tEffectiveDate varchar(19) default date_sub($runDate,interval 1 day);
			declare _nPlayerID,_nClubID,_nExtenID int default 0;	
			declare _DirectlySubAchievement,_AnotherSubAchievement bigint default 0;
			
			declare done int default false;
			declare cur cursor for select nPlayerID,nClubID,nExtenID,DirectlySubAchievement,AnotherSubAchievement 
														 from table_pyramid_rebateday where tEffectiveDate=_tEffectiveDate;
			
			declare continue handler for not found set done = true;

			set $result=0;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nPlayerID,_nClubID,_nExtenID,_DirectlySubAchievement,_AnotherSubAchievement;
			
			if done then					
					leave read_loop;    
			end if;
						
						call Pro_Web_Pyramid_RebateVal((_DirectlySubAchievement+_AnotherSubAchievement),@dayRebate);						
						if @dayRebate>0 then 
								
								insert into table_pyramid_rebate(nPlayerID,nClubID,nExtenID,tEffectiveDate,tCreateTime,DirectlySubAchievement,
																									AnotherSubAchievement,WeekTotalRebate,WeekMyRebate,ClaimFlag)
								values(_nPlayerID,_nClubID,_nExtenID,_tEffectiveDate,$runDate,_DirectlySubAchievement,_AnotherSubAchievement,@dayRebate,0,0);
						end if;
			
			end loop;
			
			close cur;
			set $result=1;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ReceiveReward
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ReceiveReward`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_ReceiveReward`(
	in $nClubId int,
	in $gamePlayerId int,
	out $returnVal int,
	out $resultMsg varchar(50)

)
returnNode:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				if not exists(select nPlayerId from table_user  where nPlayerId=$gamePlayerId and nActive=1) then 
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubmember  where nStatus=1 and nClubID=$nClubId and nPlayerId=$gamePlayerId) then 
						set $returnVal=-1;
						set $resultMsg='用户不在该俱乐部';
						leave returnNode;
				end if;
				if not exists(select Id from table_web_redemptionlog where nClubId=$nClubId and nPlayerId=$gamePlayerId and  IsRedemption=0 and nAmount>0)then 
						set $returnVal=-1;
						set $resultMsg='尚无可领取的奖励';
						leave returnNode;
				else 
						select nScore into @clubScore from table_clubinfo where nClubID=$nClubId;
						select CEIL(SUM(nAmount)) into @nAmount from table_web_redemptionlog where nClubId=$nClubId and nPlayerId=$gamePlayerId and  IsRedemption=0 and nAmount>0;
						if @nAmount>@clubScore then 
								set $returnVal=-1;
								set $resultMsg='俱乐部积分账户不足';
								leave returnNode;
						else 

								start transaction;
								#用户积分
								select nScore into @nPlayerScore from table_clubmember where nClubID=$nClubId and nPlayerID=$gamePlayerId and nStatus=1;

								#更新领奖状态为已领取
								update table_web_redemptionlog set IsRedemption=1,ModifyDate=NOW() where nClubId=$nClubId and nPlayerId=$gamePlayerId and  IsRedemption=0 and nAmount>0;

								#更新俱乐部总积分账户
								update table_clubinfo set nScore=@clubScore-@nAmount where nStatus=1 and nClubID=$nClubId;

								#更新俱乐部成员积分账户
								update table_clubmember set nScore=@nPlayerScore+@nAmount where nClubID=$nClubId and nPlayerID=$gamePlayerId and nStatus=1;
								
								/*
								#用户俱乐部积分变更Log表
								set @gamePlayerId=$gamePlayerId,@userAmount=(@nPlayerScore+@nAmount),@nType=14,@szDesc='推广分成奖励',@nClubId=$nClubId;
								set @sqlStr=CONCAT("insert into ",@table_clublogscore,"(nPlayerID,nAmount,nScore,nType,szDesc,clubid) 
																		 values(?,?,?,?,?,?)");
								PREPARE stmt_name FROM @sqlStr; 
								EXECUTE stmt_name USING  @gamePlayerId,@nAmount,@userAmount,@nType,@szDesc,@nClubId;
								DEALLOCATE PREPARE stmt_name;
								*/
								call pr_club_changeLogClubScore3_comman($gamePlayerId,0,0,@nAmount,'',0,(@nPlayerScore+@nAmount),14,0,0,'推广分成奖励',$nClubId,0);

								#俱乐部积分变更Log表
								insert into Table_ClubLogPlatformScore(nClubID,nAmount,nScore,nType,szDesc,sourceid,targetid) 
								values($nClubId,@nAmount,(@clubScore-@nAmount),11,'推广分成奖励',$gamePlayerId,0);

								#代理操作日志
								call Pro_Web_AddEnterPriseLog($nClubId,35,$gamePlayerId,0,CONCAT('用户(Id:',$gamePlayerId,'),领取了推广收益奖励,数额:',@nAmount));
								if errno=0 then
										set $returnVal=1;
										set $resultMsg='成功';
										commit;
								else
										set $returnVal=-99;
										set $resultMsg='执行存储过程异常';
										rollback;
								end if;
								set $returnVal=1;
								set $resultMsg='成功';
						end if;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ReceiveReward_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ReceiveReward_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_ReceiveReward_Pre`(
	in $nClubId int,
	in $gamePlayerId int,
	out $returnVal int,
	out $resultMsg varchar(50)

)
returnNode:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				if not exists(select nPlayerId from table_user  where nPlayerId=$gamePlayerId and nActive=1) then 
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubmember  where nStatus=1 and nClubID=$nClubId and nPlayerId=$gamePlayerId) then 
						set $returnVal=-1;
						set $resultMsg='用户不在该俱乐部';
						leave returnNode;
				end if;
				if not exists(select Id from table_web_redemptionlog where nClubId=$nClubId and nPlayerId=$gamePlayerId and  IsRedemption=0 and nAmount>0)then 
						set $returnVal=-1;
						set $resultMsg='尚无可领取的奖励';
						leave returnNode;
				else 
						select nScore into @clubScore from table_clubinfo where nClubID=$nClubId;
						select CEIL(SUM(nAmount)) into @nAmount from table_web_redemptionlog where nClubId=$nClubId and nPlayerId=$gamePlayerId and  IsRedemption=0 and nAmount>0;
						if @nAmount>@clubScore then 
								set $returnVal=-1;
								set $resultMsg='俱乐部积分账户不足';
								leave returnNode;
						else 

								start transaction;
								#用户积分
								select nScore into @nPlayerScore from table_clubmember where nClubID=$nClubId and nPlayerID=$gamePlayerId and nStatus=1;

								#更新领奖状态为已领取
								update table_web_redemptionlog set IsRedemption=1,ModifyDate=NOW() where nClubId=$nClubId and nPlayerId=$gamePlayerId and  IsRedemption=0 and nAmount>0;

								#更新俱乐部总积分账户
								update table_clubinfo set nScore=@clubScore-@nAmount where nStatus=1 and nClubID=$nClubId;

								#更新俱乐部成员积分账户
								update table_clubmember set nScore=@nPlayerScore+@nAmount where nClubID=$nClubId and nPlayerID=$gamePlayerId and nStatus=1;
								
								/*
								#用户俱乐部积分变更Log表
								set @gamePlayerId=$gamePlayerId,@userAmount=(@nPlayerScore+@nAmount),@nType=14,@szDesc='推广分成奖励',@nClubId=$nClubId;
								set @sqlStr=CONCAT("insert into ",@table_clublogscore,"(nPlayerID,nAmount,nScore,nType,szDesc,clubid) 
																		 values(?,?,?,?,?,?)");
								PREPARE stmt_name FROM @sqlStr; 
								EXECUTE stmt_name USING  @gamePlayerId,@nAmount,@userAmount,@nType,@szDesc,@nClubId;
								DEALLOCATE PREPARE stmt_name;
								*/
								call pr_club_changeLogClubScore3_comman($gamePlayerId,0,0,@nAmount,'',0,(@nPlayerScore+@nAmount),14,0,0,'推广分成奖励',$nClubId,0);

								#俱乐部积分变更Log表
								insert into Table_ClubLogPlatformScore(nClubID,nAmount,nScore,nType,szDesc,sourceid,targetid) 
								values($nClubId,@nAmount,(@clubScore-@nAmount),11,'推广分成奖励',$gamePlayerId,0);

								#代理操作日志
								call Pro_Web_AddEnterPriseLog($nClubId,35,$gamePlayerId,0,CONCAT('用户(Id:',$gamePlayerId,'),领取了推广收益奖励,数额:',@nAmount));
								if errno=0 then
										set $returnVal=1;
										set $resultMsg='成功';
										commit;
								else
										set $returnVal=-99;
										set $resultMsg='执行存储过程异常';
										rollback;
								end if;
								set $returnVal=1;
								set $resultMsg='成功';
						end if;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_RecommendAward
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_RecommendAward`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_RecommendAward`(

	in $nClubId int,
	in $gamePlayerId int,
	in $numberVal int,
	out $returnVal int,
	out $resultMsg varchar(50)

)
returnNode:begin 
				if $numberVal>1000 or $numberVal<0 then 
						set $returnVal=-1;
						set $resultMsg='推荐奖励值设置范围为0-1000';
						leave returnNode;	
				end if;
				if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnNode;	
				end if;
				if not exists(select nPlayerId from table_user where nPlayerId=$gamePlayerId and nActive=1) then
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnNode;
				end if;
				if not exists (select nClubID from table_clubinfo where nClubID=$nClubId and CreatePlayerID=$gamePlayerId) then 
						set $returnVal=-1;
						set $resultMsg='尚无此操作权限';
						leave returnNode;
				end if;
				if exists (select nClubID from table_clubinfo where nClubID=$nClubId and nRecommendAward=$numberVal) then 
						set $returnVal=1;
						set $resultMsg='成功';
						leave returnNode;
				end if;
				select nRecommendAward into @oldnRecommendAward from table_clubinfo where nClubID=$nClubId;
				update table_clubinfo set nRecommendAward=$numberVal where nClubID=$nClubId; 
				
				call Pro_Web_AddEnterPriseLog($nClubId,40,$gamePlayerId,0,CONCAT('(创始人Id:',$gamePlayerId,'),修改了俱乐部的推荐奖励值,"',@oldnRecommendAward,'" 变更为 "',$numberVal,'"'));
				set $returnVal=1;
				set $resultMsg='成功';			
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_RemoveBind
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_RemoveBind`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_RemoveBind`(
		
	in $type int,
	in $adminUserId int,
	in $nClubId int,
	in $nPlayerId int,
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				if not exists(select nClubID from table_clubinfo  where nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;
				end if;
				if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubmember  where  nClubID=$nClubId and nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='该用户不在此俱乐部中';
						leave returnVal;
				end if;	
				if $type=0 then 
						set @bodyTitle='解绑手机';
						set @logType=18;
						select phone into @userInfo from table_user where nPlayerId=$nPlayerId;
						if @userInfo is null then 
								set $returnVal=1;
								set $resultMsg='解绑成功';
								leave returnVal;
						else  
								update table_user set phone=default where nPlayerId=$nPlayerId;
						end if;						
				elseif $type=1 then 
						set @bodyTitle='解绑支付宝';
						set @logType=19;
					  select bankno into @userInfo from table_payment_info where nClubID=$nClubId and nPlayerID=$nPlayerId and nType=1 ORDER BY ID desc limit 0,1;
						if @userInfo is null then 
								set $returnVal=1;
								set $resultMsg='解绑成功';
								leave returnVal;
						else  
								delete from table_payment_info where nClubID=$nClubId and nPlayerID=$nPlayerId and nType=1;
						end if;
				elseif $type=2 then 
						set @bodyTitle='解绑银行卡';
						set @logType=20;
						select bankno into @userInfo from table_payment_info where nClubID=$nClubId and nPlayerID=$nPlayerId and nType=2 ORDER BY ID desc limit 0,1;
						if @userInfo is null then 
								set $returnVal=1;
								set $resultMsg='解绑成功';
								leave returnVal;
						else  
								delete from table_payment_info where nClubID=$nClubId and nPlayerID=$nPlayerId and nType=2;	
						end if;
				else 
						set $returnVal=-1;
						set $resultMsg='解绑信息不存在';
						leave returnVal;
				end if;
				
				select UserName into @UserName from admin_user where UserId=$adminUserId;
				
				select szThirdAccount into @szThirdAccount from table_user where nPlayerId=$nPlayerId;
				set @adminLog=CONCAT('【',@bodyTitle,'操作】：用户【',@UserName,'】为【',@szThirdAccount,'（',$nPlayerId,'）】',@bodyTitle,'：',@userInfo);
				insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des) values($nClubId,@logType,$adminUserId,$nPlayerId,0,@adminLog);
				set $returnVal=1;
				set $resultMsg='解绑成功';
				leave returnVal;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ReportData
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ReportData`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ReportData`(
	
)
begin 
				set @yesterday=date_sub(CURDATE(),interval 1 day);
				set @startTime=CONCAT(@yesterday,' 00:00:00');
				set @endTime=CONCAT(@yesterday,' 23:59:59');
				
				
				call Pro_Web_StatisticsWinLoseMonitor(@startTime,@endTime);
				
				call Pro_Web_StatisticsJiFenReport(@startTime,@endTime);
				
				call Pro_Web_H5ProxyLineSum(@startTime,@endTime);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ReportData20200723
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ReportData20200723`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ReportData20200723`(
	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
				#代理后台-风控管理-玩家输赢监控
				call Pro_Web_StatisticsWinLoseMonitor($startTime,$endTime);
				#运营数据-游戏报表、俱乐部报表
				call Pro_Web_StatisticsJiFenReport($startTime,$endTime);
				#H5代理线汇总
				call Pro_Web_H5ProxyLineSum($startTime,$endTime);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ResetPwd
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ResetPwd`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ResetPwd`(
		
	in $operateUserId int,
	in $nClubId int,
	in $nPlayerId int,
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				if not exists(select nClubId from admin_proxy where ProxyType=1 and gameProxyType=2 and nClubId=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该运营商【运营商ID',$nClubId,'】不存在');
						leave returnVal;
				end if;
				if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该会员【会员ID',$nPlayerId,'】不存在');
						leave returnVal;
				end if;				
				if not exists(select nClubID from table_clubmember  where  nClubID=$nClubId and nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该会员【会员ID',$nPlayerId,'】不属于此运营商【运营商ID',$nClubId,'】');
						leave returnVal;
				end if;	
				if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId and LENGTH(szThirdPass)>0) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('非账号密码登录会员【会员ID',$nPlayerId,'】不能重置密码');
						leave returnVal;
				end if;		
						select UserName into @UserName from admin_user where UserId=$operateUserId;
						
						set @defaultPwd=111111;
						update table_user set szThirdPass=UPPER(MD5(@defaultPwd)) where nPlayerId=$nPlayerId;
						
						
						select szThirdAccount into @szThirdAccount from table_user where nPlayerId=$nPlayerId;
						set @adminLog=CONCAT('【修改密码】运营用户:【',@UserName,'】重置了会员【会员账号:',@szThirdAccount,'（会员ID:',$nPlayerId,'）】的密码');
						
						set @logType=99;
						insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des) values($nClubId,@logType,$operateUserId,$nPlayerId,0,@adminLog);
						set $returnVal=1;
						set $resultMsg='重置密码成功';
						leave returnVal;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_returnRebate20191216
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_returnRebate20191216`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_returnRebate20191216`(

)
begin 			
			declare _nClubId,_nPlayerId int  default 0;
			declare _returnRebate bigint default 0;
			
			declare done int default false;
			
			declare cur cursor for 	select nClubId,nPlayerId,SUM(WeekMyRebate) returnRebate 
															from table_pyramid_rebate 
															where ClaimFlag=1
															GROUP BY nClubId,nPlayerId;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId,_nPlayerId,_returnRebate;
			
			if done then					
					leave read_loop;    
			end if;
						if _returnRebate>0 then 
									
									select nScore into @memScore from table_clubmember where nClubID=_nClubId and nPlayerID=_nPlayerId and nStatus=1 limit 0,1;
									
									set @behindScore=(_returnRebate+@memScore);
									
									insert into table_clublogscore(nPlayerID,nAmount,nScore,nType,szDesc,clubid,CreateTime)
									values(_nPlayerId,_returnRebate,@behindScore,26,'代理返利',_nClubId,'2019-12-15 23:50:50');

									
									update table_clubmember set nScore=nScore+_returnRebate where nClubID=_nClubID and nPlayerID=_nPlayerID;

									
									update table_pyramid_rebate set ClaimFlag=2 where nClubID=_nClubID and nPlayerID=_nPlayerID and ClaimFlag=1;
						else  	
									update table_pyramid_rebate set ClaimFlag=2 where nClubID=_nClubID and nPlayerID=_nPlayerID and ClaimFlag=1;
						end if;
						
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_RiskContrProxy
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_RiskContrProxy`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_RiskContrProxy`(
	/*
		创建日期:2020-10-29
		修改日期:2021-01-06
		日志类型:（1 运营商、2 游戏、3 会员、4 注册活跃用户、5 同IP预警、6 无效IP预警）
		功能描述:风控系统_运营商盈亏监控、运营商游戏盈亏监控-10分钟执行一次【近30天的盈亏】
	*/
	in $currTime varchar(20)
)
begin
			#最近30天-结束时间、开始时间
			set @endDate=DATE_FORMAT(date_add($currTime, interval -5 minute),'%Y-%m-%d %H:%i:00');
			set @startDate=DATE_FORMAT(date_add(@endDate, interval -30 day),'%Y-%m-%d %H:00:00');
			

			#近10分钟开始时间、结束时间、今日开始时间
			set @startDateMin=DATE_FORMAT(date_add(@endDate, interval -10 minute),'%Y-%m-%d %H:%i:00');
			set @endDateMin=@endDate;
			set @startDateToDay=DATE_FORMAT(@endDate,'%Y-%m-%d 00:00:00');
			set  @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",@startDateMin);



			#-----------------------运营商盈亏监控-------------------------------begin
			#创建临时表
			drop temporary table if exists temp_table_riskcontr_proxy;  
			create temporary table temp_table_riskcontr_proxy(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int default 0
			);
			#插入临时表
			set @sqlStr=CONCAT("  insert into temp_table_riskcontr_proxy(nClubId)
														select nClubId
														from
														( 
															select nClubId from ",@table_clubgamescoredetail," 
															where tEndTime>='",@startDateMin,"' and tEndTime<'",@endDateMin,"' and (nGameType>=80 or nGameType<61) 
														  union all
														  select nClubId from table_match_game_score_detail 
														  where tEndTime>='",@startDateMin,"' and tEndTime<'",@endDateMin,"'
														)temp1 GROUP BY nClubId
												");
			prepare stmt_name from @sqlStr; 
			execute stmt_name;
			deallocate prepare stmt_name;	

			select count(1) into @totalCount from temp_table_riskcontr_proxy;
			if @totalCount>0 then 
					set @currId=1;
					while (@currId<=@totalCount) do
								select nClubId into @nClubId from temp_table_riskcontr_proxy where Id=@currId;

								set @sqlStr1=CONCAT(" select IFNULL(SUM(nResultMoney+nReward-nFee),0) totalnResultMoney into @nResultMoney
																		  from
																		  (
																				 select nClubId,nResultMoney,0 nFee,0 nReward
																				 from ",@table_clubgamescoredetail,"  
																				 where nClubId=",@nClubId," and tEndTime>='",@startDateToDay,"' and tEndTime<'",@endDateMin,"' and (nGameType>=80 or nGameType<61) 
																				 union all
																				 select nClubId,nResultMoney,0 nFee,0 nReward
																				 from table_webdata_playergamedatasort 
																				 where nClubId=",@nClubId," and tEndTime>='",@startDate,"' and tEndTime<'",@endDate,"' and (nGameType>=80 or nGameType<61) 
																				 union all
																				 select nClubId,0 nResultMoney,nFeeTotal nFee,nRewardTotal nReward
																				 from table_match_game_list 
																				 where nClubId=",@nClubId," and tEndTime>='",@startDate,"' and tEndTime<'",@endDateMin,"'
																		  )temp1
															    ");
								prepare stmt_name1 from @sqlStr1; 
								execute stmt_name1;
								deallocate prepare stmt_name1;	

								if @nResultMoney>0 then 
												set @gameProxyType=0;
												select GameProxyType into @gameProxyType from admin_proxy where ProxyType=1 and nClubId=@nClubId limit 0,1;
												#@openVal是否开启 1 开启  0 关闭;
												set @openVal=0;
												#获取指定运营商的预警配置参数
												if exists(select gameProxyType from table_webriskcontr_proxy where nClubId=@nClubId and gameProxyType=@gameProxyType) then 
															select nOneLevelVal,nTwoLevelVal,nThreeLevelVal,nValid into @nOneLevelVal,@nTwoLevelVal,@nThreeLevelVal,@nValid
															from table_webriskcontr_proxy where nClubId=@nClubId and gameProxyType=@gameProxyType;
															if @nValid=1 then 
																	set @openVal=1;
															else  
																	set @openVal=0;
															end if;
												else 
														#获取默认公共配置
														if exists(select gameProxyType from table_webriskcontr_proxy where nClubId=0 and gameProxyType=@gameProxyType) then 
																	select nOneLevelVal,nTwoLevelVal,nThreeLevelVal,nValid into @nOneLevelVal,@nTwoLevelVal,@nThreeLevelVal,@nValid
																	from table_webriskcontr_proxy where nClubId=0 and gameProxyType=@gameProxyType;
																	if @nValid=1 then 
																			set @openVal=1;
																	else  
																			set @openVal=0;
																	end if;
														else 
																set @openVal=0;
														end if;
												end if;												
												
												if @openVal=1 then 
														#@nLevel预警级别,@nParamVal预警参数值
														set @nLevel=0,@nParamVal=0;
														if @nResultMoney>=@nThreeLevelVal then 
																set @nLevel=3;
																set @nParamVal=@nThreeLevelVal;
														elseif @nResultMoney>=@nTwoLevelVal then 
																set @nLevel=2;
																set @nParamVal=@nTwoLevelVal;
														elseif @nResultMoney>=@nOneLevelVal then 
																set @nLevel=1;
																set @nParamVal=@nOneLevelVal;
														else 
																set @nLevel=0;
																set @nParamVal=0;
														end if;
														if @nLevel>0 then 
																	set @nContentDes=CONCAT('亏损"',truncate(@nResultMoney/1000,2),'",触发',@nLevel,'级预警');
																	insert into table_webriskcontr_warninglog
																	(
																		nClubId,gameProxyType,nGameType,nPlayerId,nLogType,nLevel,nParamVal,nWarningVal,nContentDes,tCreateTime
																	)
																	values(@nClubId,@gameProxyType,0,0,1,@nLevel,@nParamVal,@nResultMoney,@nContentDes,$currTime);
														end if;
												end if;
								end if;
								set @currId=@currId+1;
					end while;
			end if;

			#-----------------------运营商盈亏监控-------------------------------end


			#-----------------------运营商游戏盈亏监控-------------------------------begin
			#创建临时表
			drop temporary table if exists temp_table_riskcontr_proxygame;  
			create temporary table temp_table_riskcontr_proxygame(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int default 0,
				nGameType int default 0
			);
			#插入临时表
			set @sqlStr3=CONCAT(" insert into temp_table_riskcontr_proxygame(nClubId,nGameType)
													  select temp.nClubId,temp.nGameType
													  from(
																				select nClubId,nGameType from ",@table_clubgamescoredetail," 
																				where tEndTime>='",@startDateMin,"' and tEndTime<'",@endDateMin,"' and (nGameType>=80 or nGameType<61) 
																				union all
																				select nClubId,nGameType from table_match_game_score_detail 
																				where tEndTime>='",@startDateMin,"' and tEndTime<'",@endDateMin,"'
															 )temp  GROUP BY temp.nClubId,temp.nGameType
												");
			prepare stmt_name3 from @sqlStr3; 
			execute stmt_name3;
			deallocate prepare stmt_name3;	

			select count(1) into @totalGameCount from temp_table_riskcontr_proxygame;
			if @totalGameCount>0 then 
					set @currGameId=1;
					while (@currGameId<=@totalGameCount) do
								select nClubId,nGameType into @nClubId,@nGameType from temp_table_riskcontr_proxygame where Id=@currGameId;
								
								set @sqlStr4=CONCAT(" select IFNULL(SUM(nResultMoney+nReward-nFee),0) totalnResultMoney into @nResultMoney
																		  from
																		  (
																				 select nClubId,nResultMoney,0 nFee,0 nReward
																				 from ",@table_clubgamescoredetail,"  
																				 where nClubId=",@nClubId," and tEndTime>='",@startDateToDay,"' and tEndTime<'",@endDateMin,"' and nGameType=",@nGameType," 
																				 union all
																				 select nClubId,nResultMoney,0 nFee,0 nReward
																				 from table_webdata_playergamedatasort 
																				 where nClubId=",@nClubId," and tEndTime>='",@startDate,"' and tEndTime<'",@endDate,"' and nGameType=",@nGameType," 
																				 union all
																				 select nClubId,0 nResultMoney,nFeeTotal nFee,nRewardTotal nReward
																				 from table_match_game_list 
																				 where nClubId=",@nClubId," and tEndTime>='",@startDate,"' and tEndTime<'",@endDateMin,"' and nGameType=",@nGameType," 
																		  )temp1
															    ");
								prepare stmt_name4 from @sqlStr4; 
								execute stmt_name4;
								deallocate prepare stmt_name4;

								if @nResultMoney>0 then 
												set @gameProxyType=0;
												select GameProxyType into @gameProxyType from admin_proxy where ProxyType=1 and nClubId=@nClubId limit 0,1;

												#是否熔断 0关闭;1 开启
												set @nFusing=0;

												#@openVal是否开启 1 开启  0 关闭;
												set @openVal=0;
												#获取指定运营商的预警配置参数
												if exists(select gameProxyType from table_webriskcontr_proxygame where nClubId=@nClubId and gameProxyType=@gameProxyType and nGameType=@nGameType) then 
															select nOneLevelVal,nTwoLevelVal,nThreeLevelVal,nValid,nFusing into @nOneLevelVal,@nTwoLevelVal,@nThreeLevelVal,@nValid,@nFusing
															from table_webriskcontr_proxygame where nClubId=@nClubId and gameProxyType=@gameProxyType and nGameType=@nGameType;
															if @nValid=1 then 
																	set @openVal=1;
															else  
																	set @openVal=0;
															end if;
												else 
														#获取游戏默认公共配置
														if exists(select gameProxyType from table_webriskcontr_proxygame where nClubId=0 and gameProxyType=@gameProxyType and nGameType=@nGameType) then 
																	select nOneLevelVal,nTwoLevelVal,nThreeLevelVal,nValid,nFusing into @nOneLevelVal,@nTwoLevelVal,@nThreeLevelVal,@nValid,@nFusing
																	from table_webriskcontr_proxygame where nClubId=0 and gameProxyType=@gameProxyType and nGameType=@nGameType;
																	if @nValid=1 then 
																			set @openVal=1;
																	else  
																			set @openVal=0;
																	end if;
														else 
																	#获取运营商游戏默认公共配置
																	if exists(select gameProxyType from table_webriskcontr_proxygame where nClubId=0 and gameProxyType=@gameProxyType and nGameType=0) then 
																			select nOneLevelVal,nTwoLevelVal,nThreeLevelVal,nValid,nFusing into @nOneLevelVal,@nTwoLevelVal,@nThreeLevelVal,@nValid,@nFusing
																			from table_webriskcontr_proxygame where nClubId=0 and gameProxyType=@gameProxyType and nGameType=0;
																			if @nValid=1 then 
																					set @openVal=1;
																			else  
																					set @openVal=0;
																			end if;
																	else 
																			set @openVal=0;
																	end if;
														end if;


												end if;												
												
												if @openVal=1 then 
														#@nLevel预警级别,@nParamVal预警参数值
														set @nLevel=0,@nParamVal=0;
														if @nResultMoney>=@nThreeLevelVal then 
																set @nLevel=3;
																set @nParamVal=@nThreeLevelVal;
														elseif @nResultMoney>=@nTwoLevelVal then 
																set @nLevel=2;
																set @nParamVal=@nTwoLevelVal;
														elseif @nResultMoney>=@nOneLevelVal then 
																set @nLevel=1;
																set @nParamVal=@nOneLevelVal;
														else 
																set @nLevel=0;
																set @nParamVal=0;
														end if;
														if @nLevel>0 then 
																	set @nGameTypeName='';
																	if @gameProxyType=1 then 
																				select TypeName into @nGameTypeName from sys_code where `Code`=1001018 and Type=@nGameType;
																	elseif @gameProxyType=2 then 
																				select TypeName into @nGameTypeName from sys_code where `Code`=1001008 and Type=@nGameType;
																	else 
																				set @nGameTypeName='未知';
																	end if;
																	if @nGameType>=80 and @nGameType<=100 then 
																				set @nGameTypeName=CONCAT(@nGameTypeName,'-比赛');
																	end if;
																	set @nContentDes=CONCAT('【',@nGameTypeName,'】游戏亏损"',truncate(@nResultMoney/1000,2),'",触发',@nLevel,'级预警');
																	insert into table_webriskcontr_warninglog
																	(
																		nClubId,gameProxyType,nGameType,nPlayerId,nLogType,nLevel,nParamVal,nWarningVal,nFusing,nContentDes,tCreateTime
																	)
																	values(@nClubId,@gameProxyType,@nGameType,0,2,@nLevel,@nParamVal,@nResultMoney,@nFusing,@nContentDes,$currTime);
														end if;
												end if;
								end if;
								set @currGameId=@currGameId+1;
					end while;
			end if;

			#-----------------------运营商游戏盈亏监控-------------------------------end

			#-----------------------日志整理-------------------------------begin

			#日志类型:（1 运营商、2 游戏、3 会员、4 注册活跃用户、5 同IP预警、6 无效IP预警）
			set @startDateLog=DATE_FORMAT(date_add(@endDate, interval -10 minute),'%Y-%m-%d 00:00:00');
			set @endDateLog=DATE_FORMAT(@startDateLog,'%Y-%m-%d 23:59:59');
			#创建临时表---运营商盈亏
			set @nLogType=1;
			drop temporary table if exists temp_table_log2;  
			create temporary table temp_table_log2(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int default 0,
				nLevel int default 0,
				numVal int default 0
			);
			insert into temp_table_log2(nClubId,nLevel,numVal)
			select nClubId,nLevel,count(1) numVal from table_webriskcontr_warninglog 
			where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nLogType=@nLogType
			GROUP BY nClubId,nLevel;
			
			select count(1) into @totalCount2 from temp_table_log2;			
			if @totalCount2>0 then 
					set @currId2=1;					
					while (@currId2<=@totalCount2) do
								select nClubId,nLevel,numVal into @nClubId,@nLevel,@numVal from temp_table_log2 where Id=@currId2;
								if exists(select nClubId from Table_WebRiskContr_WarningLogStati 
													where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nClubId=@nClubId and nLevel=@nLevel and nLogType=@nLogType) then 
										update Table_WebRiskContr_WarningLogStati set numVal=@numVal 
										where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nClubId=@nClubId and nLevel=@nLevel  and nLogType=@nLogType;
								else 
										set @nGuid=MD5(CONCAT(replace(uuid(),'-',''),@nClubId));
										insert into Table_WebRiskContr_WarningLogStati(nGuid,nClubId,nLogType,nLevel,numVal,tCreateTime)
										values(@nGuid,@nClubId,@nLogType,@nLevel,@numVal,@startDateLog);
								end if;
								set @currId2=@currId2+1;
					end while;
			end if;


			#创建临时表---运营商游戏盈亏
			set @nLogType=2;
			drop temporary table if exists temp_table_log3;  
			create temporary table temp_table_log3(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int default 0,
				nGameType int default 0,
				nLevel int default 0,
				numVal int default 0
			);
			insert into temp_table_log3(nClubId,nGameType,nLevel,numVal)
			select nClubId,nGameType,nLevel,count(1) numVal from table_webriskcontr_warninglog 
			where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nLogType=@nLogType
			GROUP BY nClubId,nGameType,nLevel;
			
			select count(1) into @totalCount3 from temp_table_log3;			
			if @totalCount3>0 then 
					set @currId3=1;					
					while (@currId3<=@totalCount3) do
								select nClubId,nGameType,nLevel,numVal into @nClubId,@nGameType,@nLevel,@numVal from temp_table_log3 where Id=@currId3;
								if exists(select nClubId from Table_WebRiskContr_WarningLogStati 
													where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nClubId=@nClubId and nGameType=@nGameType and nLevel=@nLevel and nLogType=@nLogType) then 
										update Table_WebRiskContr_WarningLogStati set numVal=@numVal 
										where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nClubId=@nClubId and nGameType=@nGameType and nLevel=@nLevel  and nLogType=@nLogType;
								else 
										set @nGuid=MD5(CONCAT(replace(uuid(),'-',''),@nClubId));
										insert into Table_WebRiskContr_WarningLogStati(nGuid,nClubId,nGameType,nLogType,nLevel,numVal,tCreateTime)
										values(@nGuid,@nClubId,@nGameType,@nLogType,@nLevel,@numVal,@startDateLog);
								end if;
								set @currId3=@currId3+1;
					end while;
			end if;
			#-----------------------日志整理-------------------------------end
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_RiskContrProxyIP
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_RiskContrProxyIP`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_RiskContrProxyIP`(
	/*
		创建日期:2020-10-29
		修改日期:2021-01-30
		日志类型:（1 运营商、2 游戏、3 会员、4 注册活跃用户、5 同IP预警、6 无效IP预警）
		功能描述:风控系统_运营商同IP、无效IP-10分钟执行一次
	*/
	in $currTime varchar(20),
	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin
			#-----------------------运营商同IP预警-------------------------------begin
			#同IP当天开始时间
			set @proxylikeIPStartDate=DATE_FORMAT($startTime,'%Y-%m-%d 00:00:00');
			#创建临时表
			drop temporary table if exists temp_table_riskcontr_proxylikeIP;  
			create temporary table temp_table_riskcontr_proxylikeIP(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int default 0,
				gameProxyType int default 0,
				ipAddress varchar(64) default ''
			);
			#插入临时表
			insert into temp_table_riskcontr_proxylikeIP(nClubId,gameProxyType,ipAddress)
			select temp.nClubId,proxy.GameProxyType,temp.loginIp from 
			(
					select nClubId,loginIp,count(loginIp) ipCounts from table_web_loginlog 
					where szTime>=$startTime and szTime<$endTime and nClubId in(select nClubId from admin_proxy where ProxyType=1) and LENGTH(loginIp)>0 and LENGTH(loginIp)<64
					GROUP BY nClubId,loginIp
					HAVING ipCounts>1
			)temp left join admin_proxy proxy on temp.nClubId=proxy.nClubId
			where proxy.ProxyType=1;

			select count(1) into @totalProxyIPCount from temp_table_riskcontr_proxylikeIP;
			if @totalProxyIPCount>0 then 
				set @currId_IP=1;
				while (@currId_IP<=@totalProxyIPCount) do
						select nClubId,gameProxyType,ipAddress into @nClubId,@gameProxyType,@ipAddress from temp_table_riskcontr_proxylikeIP where Id=@currId_IP;
						#获取同IP的用户数(去重)
						select count(1) nPlayerIdCount into @nPlayerIdCount
						from(
									select nClubId,nPlayerId from table_web_loginlog 
									where nClubId=@nClubId and szTime>=@proxylikeIPStartDate and szTime<$endTime and loginIp=@ipAddress
									GROUP BY nClubId,nPlayerId
								)temp;
						
						if @nPlayerIdCount>1 then 
									#@openVal是否开启 1 开启  0 关闭;
									set @openVal=0;
									#获取指定运营商的预警配置参数
									if exists(select gameProxyType from table_webriskcontr_proxy where nClubId=@nClubId and gameProxyType=@gameProxyType) then 
												select nSameIP,nValid into @nSameIP,@nValid from table_webriskcontr_proxy where nClubId=@nClubId and gameProxyType=@gameProxyType;
												if @nValid=1 and @nSameIP=1 then 
														set @openVal=1;
												else  
														set @openVal=0;
												end if;
									else 
											#获取默认公共配置
											if exists(select gameProxyType from table_webriskcontr_proxy where nClubId=0 and gameProxyType=@gameProxyType) then 
														select nSameIP,nValid into @nSameIP,@nValid from table_webriskcontr_proxy where nClubId=0 and gameProxyType=@gameProxyType;
														if @nValid=1 and @nSameIP=1 then 
																set @openVal=1;
														else  
																set @openVal=0;
														end if;
											else  
														set @openVal=0;
											end if;
									end if;	
									
									if @openVal=1 then 
												set @nContentDes=CONCAT('触发同IP预警,IP"',@ipAddress,'"');
												insert into table_webriskcontr_warninglog
												(
													nClubId,gameProxyType,nGameType,nPlayerId,nLogType,nLevel,nParamVal,nWarningVal,nContentDes,tCreateTime,nRemark
												)
												values(@nClubId,@gameProxyType,0,0,5,0,0,0,@nContentDes,$currTime,@ipAddress);
									end if;
						end if;
						set @currId_IP=@currId_IP+1;
				end while;
			end if;
			#-----------------------运营商同IP预警-------------------------------end


			#-----------------------运营商无效IP预警-------------------------------begin
			#创建临时表
			drop temporary table if exists temp_table_riskcontr_proxyinvalidIP;  
			create temporary table temp_table_riskcontr_proxyinvalidIP(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int default 0,
				gameProxyType int default 0,
				ipAddress varchar(64) default ''
			);
			#插入临时表
			insert into temp_table_riskcontr_proxyinvalidIP(nClubId,gameProxyType,ipAddress)
			select temp.nClubId,proxy.GameProxyType,temp.loginIp from 
			(
					select nClubId,loginIp from table_web_loginlog 
					where szTime>=$startTime and szTime<$endTime and nClubId in(select nClubId from admin_proxy where ProxyType=1) and LENGTH(loginIp)<7
					GROUP BY nClubId,loginIp
			)temp left join admin_proxy proxy on temp.nClubId=proxy.nClubId
			where proxy.ProxyType=1;

			select count(1) into @totalinvalidIPCount from temp_table_riskcontr_proxyinvalidIP;
			if @totalinvalidIPCount>0 then 
				set @currId_invalidIP=1;
				while (@currId_invalidIP<=@totalinvalidIPCount) do
						select nClubId,gameProxyType,ipAddress into @nClubId,@gameProxyType,@ipAddress from temp_table_riskcontr_proxyinvalidIP where Id=@currId_invalidIP;
						#获取同IP的用户数(去重)
						select count(1) nPlayerIdCount into @nPlayerIdCount
						from(
									select nClubId,nPlayerId from table_web_loginlog 
									where nClubId=@nClubId and szTime>=$startTime and szTime<$endTime and loginIp=@ipAddress
									GROUP BY nClubId,nPlayerId
								)temp;
						
						if @nPlayerIdCount>0 then 
									#@openVal是否开启 1 开启  0 关闭;
									set @openVal=0;
									#获取指定运营商的预警配置参数
									if exists(select gameProxyType from table_webriskcontr_proxy where nClubId=@nClubId and gameProxyType=@gameProxyType) then 
												select nInvalidIP,nValid into @nInvalidIP,@nValid from table_webriskcontr_proxy where nClubId=@nClubId and gameProxyType=@gameProxyType;
												if @nValid=1 and @nInvalidIP=1 then 
														set @openVal=1;
												else  
														set @openVal=0;
												end if;
									else 
											#获取默认公共配置
											if exists(select gameProxyType from table_webriskcontr_proxy where nClubId=0 and gameProxyType=@gameProxyType) then 
														select nInvalidIP,nValid into @nInvalidIP,@nValid from table_webriskcontr_proxy where nClubId=0 and gameProxyType=@gameProxyType;
														if @nValid=1 and @nInvalidIP=1 then 
																set @openVal=1;
														else  
																set @openVal=0;
														end if;
											else  
														set @openVal=0;
											end if;
									end if;	
									
									if @openVal=1 then 
												set @nContentDes=CONCAT('使用无效IP"',@ipAddress,'"登录');
												insert into table_webriskcontr_warninglog
												(
													nClubId,gameProxyType,nGameType,nPlayerId,nLogType,nLevel,nParamVal,nWarningVal,nContentDes,tCreateTime,nRemark
												)
												values(@nClubId,@gameProxyType,0,0,6,0,0,0,@nContentDes,$currTime,@ipAddress);
									end if;
						end if;
						set @currId_invalidIP=@currId_invalidIP+1;
				end while;
			end if;
			#-----------------------运营商无效IP预警-------------------------------end



			#-----------------------日志整理-------------------------------begin

			#日志类型:（1 运营商、2 游戏、3 会员、4 注册活跃用户、5 同IP预警、6 无效IP预警）
			set @startDateLog=DATE_FORMAT($startTime,'%Y-%m-%d 00:00:00');
			set @endDateLog=DATE_FORMAT(@startDateLog,'%Y-%m-%d 23:59:59');
			#创建临时表---同IP
			set @nLogType=5;
			drop temporary table if exists temp_table_log4;  
			create temporary table temp_table_log4(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int default 0,
				IP varchar(64) default '',
				nLevel int default 0,
				numVal int default 0
			);
			insert into temp_table_log4(nClubId,nLevel,IP,numVal)
			select nClubId,nLevel,nRemark,count(1) numVal from table_webriskcontr_warninglog 
			where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nLogType=@nLogType
			GROUP BY nClubId,nLevel,nRemark;
			
			select count(1) into @totalCount4 from temp_table_log4;			
			if @totalCount4>0 then 
					set @currId4=1;
					
					while (@currId4<=@totalCount4) do
								select nClubId,IP,nLevel,numVal into @nClubId,@IP,@nLevel,@numVal from temp_table_log4 where Id=@currId4;
								if exists(select nClubId from Table_WebRiskContr_WarningLogStati 
													where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nClubId=@nClubId and nLevel=@nLevel and IP=@IP and nLogType=@nLogType) then 
										update Table_WebRiskContr_WarningLogStati set numVal=@numVal 
										where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nClubId=@nClubId and nLevel=@nLevel and IP=@IP  and nLogType=@nLogType;
								else 
										set @nGuid=MD5(CONCAT(replace(uuid(),'-',''),@nClubId));
										insert into Table_WebRiskContr_WarningLogStati(nGuid,nClubId,nLogType,nLevel,IP,numVal,tCreateTime)
										values(@nGuid,@nClubId,@nLogType,@nLevel,@IP,@numVal,@startDateLog);
								end if;
								set @currId4=@currId4+1;
					end while;
			end if;



			#创建临时表---无效IP
			set @nLogType=6;
			drop temporary table if exists temp_table_log5;  
			create temporary table temp_table_log5(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int default 0,
				IP varchar(64) default '',
				nLevel int default 0,
				numVal int default 0
			);
			insert into temp_table_log5(nClubId,nLevel,IP,numVal)
			select nClubId,nLevel,nRemark,count(1) numVal from table_webriskcontr_warninglog 
			where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nLogType=@nLogType
			GROUP BY nClubId,nLevel,nRemark;
			
			select count(1) into @totalCount5 from temp_table_log5;			
			if @totalCount5>0 then 
					set @currId5=1;
					
					while (@currId5<=@totalCount5) do
								select nClubId,IP,nLevel,numVal into @nClubId,@IP,@nLevel,@numVal from temp_table_log5 where Id=@currId5;
								if exists(select nClubId from Table_WebRiskContr_WarningLogStati 
													where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nClubId=@nClubId and nLevel=@nLevel and IP=@IP and nLogType=@nLogType) then 
										update Table_WebRiskContr_WarningLogStati set numVal=@numVal 
										where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nClubId=@nClubId and nLevel=@nLevel and IP=@IP  and nLogType=@nLogType;
								else 
										set @nGuid=MD5(CONCAT(replace(uuid(),'-',''),@nClubId));
										insert into Table_WebRiskContr_WarningLogStati(nGuid,nClubId,nLogType,nLevel,IP,numVal,tCreateTime)
										values(@nGuid,@nClubId,@nLogType,@nLevel,@IP,@numVal,@startDateLog);
								end if;
								set @currId5=@currId5+1;
					end while;
			end if;
			#-----------------------日志整理-------------------------------end
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_RiskContrUsers
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_RiskContrUsers`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_RiskContrUsers`(
	/*
		创建日期:2020-10-29
		修改日期:2021-01-06
		日志类型:（1 运营商、2 游戏、3 会员、4 注册活跃用户、5 同IP预警、6 无效IP预警）
		功能描述:风控系统_会员-10分钟执行一次(最近24小时盈亏预警、历史盈亏预警)
	*/
	in $currTime varchar(20)
)
begin		
			#最近24小时-结束时间、开始时间
			set @endDate=DATE_FORMAT(date_add($currTime, interval -5 minute),'%Y-%m-%d %H:%i:00');
			set @startDate=DATE_FORMAT(date_add(@endDate, interval -1 day),'%Y-%m-%d %H:%i:00');

			#获取战绩明细表--今日表、昨日表
			set  @table_clubgamescoredetailToDay=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",@endDate);
			set  @table_clubgamescoredetailYesterDay=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",@startDate);
			

			#近10分钟开始时间、结束时间、今日开始时间
			set @startDateMin=DATE_FORMAT(date_add(@endDate, interval -10 minute),'%Y-%m-%d %H:%i:00');
			set @endDateMin=@endDate;
			set @startDateToDay=DATE_FORMAT(@endDate,'%Y-%m-%d 00:00:00');
			set  @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",@startDateMin);

			#-----------------------会员-------------------------------begin
			#创建临时表
			drop temporary table if exists temp_table_riskcontr_users;  
			create temporary table temp_table_riskcontr_users(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int default 0,
				gameProxyType int default 0,
				nPlayerId int default 0
			);
			#插入临时表
			set @sqlStr=CONCAT(" insert into temp_table_riskcontr_users(nClubId,gameProxyType,nPlayerId)
													 select temp.nClubId,proxy.GameProxyType,temp.nPlayerId 
													 from(
																	select nClubId,nPlayerId
																	from
																	(
																				select nClubId,nPlayerId
																				from ",@table_clubgamescoredetail," 
																				where tEndTime>='",@startDateMin,"' and tEndTime<'",@endDateMin,"' and (nGameType>=80 or nGameType<61) 
																				union all
																				select nClubId,nPlayerId
																				from table_match_game_score_detail
																				where tEndTime>='",@startDateMin,"' and tEndTime<'",@endDateMin,"' 
																	 )temp1 
																	 GROUP BY nClubId,nPlayerId 
															 )temp left join admin_proxy proxy on temp.nClubId=proxy.nClubId
													 where proxy.ProxyType=1");
			prepare stmt_name from @sqlStr; 
			execute stmt_name;
			deallocate prepare stmt_name;	

			select count(1) into @totalCount from temp_table_riskcontr_users;
			if @totalCount>0 then 
					set @currId=1;
					while (@currId<=@totalCount) do
								select nClubId,gameProxyType,nPlayerId into @nClubId,@gameProxyType,@nPlayerId from temp_table_riskcontr_users where Id=@currId;
								
								#获取该会员最近24小时的盈亏
								set @sqlStr1=CONCAT(" select IFNULL(SUM(nResultMoney+nReward-nFee),0) into @nResultMoneyHour 
																			from(
																							select nClubId,nPlayerId,nResultMoney,0 nFee,0 nReward 
																							from ",@table_clubgamescoredetailYesterDay," 
																							where nClubId=",@nClubId," and nPlayerId=",@nPlayerId," and tEndTime>='",@startDate,"' and tEndTime<'",@endDate,"'  and (nGameType>=80 or nGameType<61)
																							union all 
																							select nClubId,nPlayerId,nResultMoney,0 nFee,0 nReward  
																							from ",@table_clubgamescoredetailToDay," 
																							where nClubId=",@nClubId," and nPlayerId=",@nPlayerId," and tEndTime>='",@startDateToDay,"' and tEndTime<'",@endDate,"'  and (nGameType>=80 or nGameType<61)
																							union all 
																							select nClubId,nPlayerId,0 nResultMoney,nFee,nReward 
																							from table_match_game_score
																							where nClubId=",@nClubId," and nPlayerId=",@nPlayerId," and tEndTime>='",@startDate,"' and tEndTime<'",@endDate,"'
																					)tem1
																		");								
								prepare stmt_name1 from @sqlStr1; 
								execute stmt_name1;
								deallocate prepare stmt_name1;

								#获取该会员历史的盈亏
								set @sqlStr2=CONCAT(" select IFNULL(SUM(nResultMoney+nReward-nFee),0) into @nResultMoneyHist 
																			from(
																							select nClubId,nPlayerId,nResultMoney,0 nFee,0 nReward  
																							from table_webdata_playergamedatasort 
																							where nClubId=",@nClubId," and nPlayerId=",@nPlayerId,"  and (nGameType>=80 or nGameType<61) 
																							union all 
																							select nClubId,nPlayerId,nResultMoney,0 nFee,0 nReward  
																							from ",@table_clubgamescoredetailToDay," 
																							where nClubId=",@nClubId," and nPlayerId=",@nPlayerId," and tEndTime>='",@startDateToDay,"' and tEndTime<'",@endDate,"' and (nGameType>=80 or nGameType<61) 
																							union all 
																							select nClubId,nPlayerId,0 nResultMoney,nFee,nReward 
																							from table_match_game_score
																							where nClubId=",@nClubId," and nPlayerId=",@nPlayerId," and tEndTime<'",@endDate,"'  
																					)tem1
																		");
								prepare stmt_name2 from @sqlStr2; 
								execute stmt_name2;
								deallocate prepare stmt_name2;

								
								#@openVal是否开启 1 开启  0 关闭;
								set @openVal=0;
								#获取指定运营商的预警配置参数
								if exists(select gameProxyType from table_webriskcontr_users where gameProxyType=@gameProxyType) then 
											select nOneLevelVal,nTwoLevelVal,nThreeLevelVal,nOneLevelValHist,nTwoLevelValHist,nThreeLevelValHist,nValid 
											into @nOneLevelVal,@nTwoLevelVal,@nThreeLevelVal,@nOneLevelValHist,@nTwoLevelValHist,@nThreeLevelValHist,@nValid
											from table_webriskcontr_users where gameProxyType=@gameProxyType;
											if @nValid=1 then 
													set @openVal=1;
											else  
													set @openVal=0;
											end if;
								end if;												
								
								if @openVal=1 and @nResultMoneyHour>0 then 
										#@nLevel预警级别,@nParamVal预警参数值
										set @nLevel=0,@nParamVal=0;
										if @nResultMoneyHour>=@nThreeLevelVal then 
												set @nLevel=3;
												set @nParamVal=@nThreeLevelVal;
										elseif @nResultMoneyHour>=@nTwoLevelVal then 
												set @nLevel=2;
												set @nParamVal=@nTwoLevelVal;
										elseif @nResultMoneyHour>=@nOneLevelVal then 
												set @nLevel=1;
												set @nParamVal=@nOneLevelVal;
										else 
												set @nLevel=0;
												set @nParamVal=0;
										end if;
										if @nLevel>0 then 
													set @nContentDes=CONCAT('会员【ID:',@nPlayerId,'】在"',@startDate,'" 至 "',@endDate,'"时间段(24小时)盈利"',truncate(@nResultMoneyHour/1000,2),'",触发',@nLevel,'级预警');
													insert into table_webriskcontr_warninglog
													(
														nClubId,gameProxyType,nGameType,nPlayerId,nLogType,nLevel,nParamVal,nWarningVal,nContentDes,tCreateTime
													)
													values(@nClubId,@gameProxyType,0,@nPlayerId,3,@nLevel,@nParamVal,@nResultMoneyHour,@nContentDes,$currTime);
										end if;
								end if;
								if @openVal=1 and @nResultMoneyHist>0 then 
										#@nLevel预警级别,@nParamVal预警参数值
										set @nLevel=0,@nParamVal=0;
										if @nResultMoneyHist>=@nThreeLevelValHist then 
												set @nLevel=3;
												set @nParamVal=@nThreeLevelValHist;
										elseif @nResultMoneyHist>=@nTwoLevelValHist then 
												set @nLevel=2;
												set @nParamVal=@nTwoLevelValHist;
										elseif @nResultMoneyHist>=@nOneLevelValHist then 
												set @nLevel=1;
												set @nParamVal=@nOneLevelValHist;
										else 
												set @nLevel=0;
												set @nParamVal=0;
										end if;
										if @nLevel>0 then 
													set @nContentDes=CONCAT('会员【ID:',@nPlayerId,'】历史盈利"',truncate(@nResultMoneyHist/1000,2),'",触发',@nLevel,'级预警');
													insert into table_webriskcontr_warninglog
													(
														nClubId,gameProxyType,nGameType,nPlayerId,nLogType,nLevel,nParamVal,nWarningVal,nContentDes,tCreateTime
													)
													values(@nClubId,@gameProxyType,0,@nPlayerId,3,@nLevel,@nParamVal,@nResultMoneyHist,@nContentDes,$currTime);
										end if;
								end if;
								set @currId=@currId+1;
					end while;
			end if;

			#-----------------------会员-------------------------------end


			#-----------------------日志整理-------------------------------begin

			#日志类型:（1 运营商、2 游戏、3 会员、4 注册活跃用户、5 同IP预警、6 无效IP预警）
			set @startDateLog=DATE_FORMAT(date_add(@endDate, interval -10 minute),'%Y-%m-%d 00:00:00');
			set @endDateLog=DATE_FORMAT(@startDateLog,'%Y-%m-%d 23:59:59');
			#创建临时表---会员
			set @nLogType=3;
			drop temporary table if exists temp_table_log6;  
			create temporary table temp_table_log6(  
				Id int unsigned  not null  auto_increment primary key,
				nClubId int default 0,
				nPlayerId int default 0,
				nLevel int default 0,
				numVal int default 0
			);
			insert into temp_table_log6(nClubId,nPlayerId,nLevel,numVal)
			select nClubId,nPlayerId,nLevel,count(1) numVal from table_webriskcontr_warninglog 
			where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nLogType=@nLogType
			GROUP BY nClubId,nPlayerId,nLevel;
			
			select count(1) into @totalCount6 from temp_table_log6;			
			if @totalCount6>0 then 
					set @currId6=1;
					
					while (@currId6<=@totalCount6) do
								select nClubId,nPlayerId,nLevel,numVal into @nClubId,@nPlayerId,@nLevel,@numVal from temp_table_log6 where Id=@currId6;
								if exists(select nClubId from Table_WebRiskContr_WarningLogStati 
													where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nClubId=@nClubId and nPlayerId=@nPlayerId and nLevel=@nLevel and nLogType=@nLogType) then 
										update Table_WebRiskContr_WarningLogStati set numVal=@numVal 
										where tCreateTime>=@startDateLog and  tCreateTime<=@endDateLog and nClubId=@nClubId and nPlayerId=@nPlayerId and nLevel=@nLevel and nLogType=@nLogType;
								else 
										set @nGuid=MD5(CONCAT(replace(uuid(),'-',''),@nClubId));
										insert into Table_WebRiskContr_WarningLogStati(nGuid,nClubId,nPlayerId,nLogType,nLevel,numVal,tCreateTime)
										values(@nGuid,@nClubId,@nPlayerId,@nLogType,@nLevel,@numVal,@startDateLog);
								end if;
								set @currId6=@currId6+1;
					end while;
			end if;
			#-----------------------日志整理-------------------------------end
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_RiskContrUsersReg
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_RiskContrUsersReg`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_RiskContrUsersReg`(
	/*
		2020-10-29
		日志类型（1 运营商、2 游戏、3 会员、4 注册活跃用户、5 同IP预警、6 无效IP预警）
		功能描述:风控系统_注册活跃会员-每小时执行一次(注册且玩过牌)
		 12:10执行（t>=2020-10-29 11:00:00 and t<2020-10-29 12:00:00）、13.10 执行（t>=2020-10-29 12:00:00 and t<2020-10-29 13:00:00）
	*/
	in $currTime varchar(20)
)
begin	
			#最近1小时-结束时间、开始时间
			set @endDate=DATE_FORMAT(date_add($currTime, interval -10 minute),'%Y-%m-%d %H:00:00');
			set @startDate=DATE_FORMAT(date_add(@endDate, interval -1 hour),'%Y-%m-%d %H:00:00');


			#同比1小时-结束时间、开始时间(前一天的小时段)
			set @endDate_T=DATE_FORMAT(date_add(@endDate, interval -1 day),'%Y-%m-%d %H:00:00');
			set @startDate_T=DATE_FORMAT(date_add(@startDate, interval -1 day),'%Y-%m-%d %H:00:00');

			#环比1小时-结束时间、开始时间(最近1小时的上一个小时段)
			set @endDate_H=DATE_FORMAT(date_add(@endDate, interval -1 hour),'%Y-%m-%d %H:00:00');
			set @startDate_H=DATE_FORMAT(date_add(@startDate, interval -1 hour),'%Y-%m-%d %H:00:00');

			#获取战绩明细表--最近一小时表
			set  @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",@startDate);
			set  @table_clubgamescoredetail_T=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",@startDate_T);
			set  @table_clubgamescoredetail_H=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",@startDate_H);

			#-----------------------注册活跃会员-------------------------------begin
			#创建临时表
			drop temporary table if exists temp_table_riskcontr_usersreg;  
			create temporary table temp_table_riskcontr_usersreg(  
				Id int unsigned  not null  auto_increment primary key,
				gameProxyType int default 0,
				nPlayerIdCount int default 0
			);
			#初始化数据 H5、App会员数
			insert into temp_table_riskcontr_usersreg(gameProxyType,nPlayerIdCount) values(1,0),(2,0);

			#更新临时表--最近一小时的 H5、App会员数(注册且玩游戏)
			set @sqlStr=CONCAT(" update temp_table_riskcontr_usersreg reg join 
													 (
																 select proxy.GameProxyType,count(tempbody.nPlayerId) nPlayerIdCount  
																 from (
																				select users.nChannel nClubId,users.nPlayerId from table_user users
																				where szCreateTime>='",@startDate,"' and szCreateTime<'",@endDate,"'
																							and exists(
																														select temp1.nClubId,temp1.nPlayerId from 
																														(
																																select nClubId,nPlayerId from ",@table_clubgamescoredetail," 
																																where tEndTime>='",@startDate,"' and tEndTime<'",@endDate,"'
																																union
																																select nClubId,nPlayerId from table_match_game_score_detail  
																																where tEndTime>='",@startDate,"' and tEndTime<='",@endDate,"'
																														)temp1 where users.nChannel=temp1.nClubId and users.nPlayerId=temp1.nPlayerId
																												 )
																		)tempbody left join admin_proxy proxy on tempbody.nClubId=proxy.nClubId
																		 where proxy.ProxyType=1 GROUP BY proxy.GameProxyType 
														)temp0 on temp0.GameProxyType=reg.GameProxyType set reg.nPlayerIdCount=temp0.nPlayerIdCount"
													);
			prepare stmt_name from @sqlStr; 
			execute stmt_name;
			deallocate prepare stmt_name;	

			select count(1) into @totalCount from temp_table_riskcontr_usersreg;
			if @totalCount>0 then 
					set @currId=1;
					while (@currId<=@totalCount) do
								select gameProxyType,nPlayerIdCount into @gameProxyType,@nPlayerIdCount from temp_table_riskcontr_usersreg where Id=@currId;
								
								if exists(select gameProxyType from table_webriskcontr_usersreg where gameProxyType=@gameProxyType and nValid=1) then
										# nMoMAdd环比增加预警参数、nMoMReduce环比减少预警参数、nYoYAdd同比增加预警参数、nYoYReduce同比减少预警参数
										select nMoMAdd,nMoMReduce,nYoYAdd,nYoYReduce into @nMoMAdd,@nMoMReduce,@nYoYAdd,@nYoYReduce 
										from table_webriskcontr_usersreg where gameProxyType=@gameProxyType and nValid=1;
								

										/* 
												同比
												同比增长数：今日最近一小时的 注册活跃用户数，同比（昨日1０点0分 至 昨日1０点59分 和 今日1０点0分 至今日1０点59分 对比   今日>昨日 为上升；反之 为下降
										 */
										set @sqlStr1=CONCAT(" select count(tempbody.nPlayerId) into @nPlayerIdCount_T  
																					from (
																										select users.nChannel nClubId,users.nPlayerId
																										from table_user users
																										where szCreateTime>='",@startDate_T,"' and szCreateTime<'",@endDate_T,"'
																													and exists(
																																				select temp1.nClubId,temp1.nPlayerId from 
																																				(
																																						select nClubId,nPlayerId from ",@table_clubgamescoredetail_T," 
																																						where tEndTime>='",@startDate_T,"' and tEndTime<'",@endDate_T,"'
																																						union
																																						select nClubId,nPlayerId from table_match_game_score_detail  
																																						where tEndTime>='",@startDate_T,"' and tEndTime<='",@endDate_T,"'
																																				)temp1 where users.nChannel=temp1.nClubId and users.nPlayerId=temp1.nPlayerId
																																		)
																						)tempbody left join admin_proxy proxy on tempbody.nClubId=proxy.nClubId
																							where proxy.ProxyType=1 and proxy.GameProxyType=",@gameProxyType,"
																				");								
										prepare stmt_name1 from @sqlStr1; 
										execute stmt_name1;
										deallocate prepare stmt_name1;

										/* 
												环比
												环比增长数：今日最近一小时的 注册活跃用户数，环比（如:当前小时为10点;今日1０点0分 至今日1０点59分 和 今日09点0分 至今日09点59分 对比   今日>昨日 为上升；反之 为下降
										 */
										set @sqlStr2=CONCAT(" select count(tempbody.nPlayerId) into @nPlayerIdCount_H  
																					from (
																										select users.nChannel nClubId,users.nPlayerId
																										from table_user users
																										where szCreateTime>='",@startDate_H,"' and szCreateTime<'",@endDate_H,"'
																													and exists(
																																				select temp1.nClubId,temp1.nPlayerId from 
																																				(
																																						select nClubId,nPlayerId from ",@table_clubgamescoredetail_H," 
																																						where tEndTime>='",@startDate_H,"' and tEndTime<'",@endDate_H,"'
																																						union
																																						select nClubId,nPlayerId from table_match_game_score_detail  
																																						where tEndTime>='",@startDate_H,"' and tEndTime<='",@endDate_H,"'
																																				)temp1 where users.nChannel=temp1.nClubId and users.nPlayerId=temp1.nPlayerId
																																		)
																						)tempbody left join admin_proxy proxy on tempbody.nClubId=proxy.nClubId
																							where proxy.ProxyType=1 and proxy.GameProxyType=",@gameProxyType,"
																				");								
										prepare stmt_name2 from @sqlStr2; 
										execute stmt_name2;
										deallocate prepare stmt_name2;


										set @proxyTypeName='';
										if @gameProxyType=1 then 
												set @proxyTypeName='H5';
										elseif @gameProxyType=2 then 
												set @proxyTypeName='App';
										else 
												set @proxyTypeName='未知';															
										end if;
										#同比增长(正数 @flag=1)、同比减少(负数 @flag=2)
										set @flag=0,@title='',@paramVal=0,@nPlayerIdCountABS=0;
										set @TBVal=@nPlayerIdCount-@nPlayerIdCount_T;
										if @TBVal>=@nYoYAdd then 
												set @flag=1;
												set @title='同比增长';
												set @paramVal=@nYoYAdd;	
												set @nPlayerIdCountABS=@TBVal;	
										elseif ABS(@TBVal)>=@nYoYReduce then 
												set @flag=2;
												set @title='同比减少';
												set @paramVal=@nYoYReduce;
												set @nPlayerIdCountABS=ABS(@TBVal);	
										else 
												set @flag=0;
										end if;
										if @flag>0 then 
													set @nContentDes=CONCAT(@proxyTypeName,'运营商在“'
																									,DATE_FORMAT(@startDate_T,'%Y-%m-%d %H'),'时” 与 “',DATE_FORMAT(@endDate_H,'%Y-%m-%d %H'),'时"【',@title,'】“',@nPlayerIdCountABS
																									,'"人,触发“',@title,'”预警,预警参数为“',@paramVal,'"');
													insert into table_webriskcontr_warninglog
													(
														nClubId,gameProxyType,nGameType,nPlayerId,nLogType,nLevel,nParamVal,nWarningVal,nContentDes,tCreateTime
													)
													values(0,@gameProxyType,0,0,4,0,@paramVal,@nPlayerIdCountABS,@nContentDes,$currTime);
										end if;

										#环比增长(正数 @flag=1)、环比减少(负数 @flag=2)
										set @flag=0,@title='',@paramVal=0,@nPlayerIdCountABS=0;
										set @TBVal=@nPlayerIdCount-@nPlayerIdCount_H;
										if @TBVal>=@nMoMAdd then 
												set @flag=1;
												set @title='环比增长';
												set @paramVal=@nMoMAdd;	
												set @nPlayerIdCountABS=@TBVal;	
										elseif ABS(@TBVal)>=@nMoMReduce then 
												set @flag=2;
												set @title='环比减少';
												set @paramVal=@nMoMReduce;
												set @nPlayerIdCountABS=ABS(@TBVal);	
										else 
												set @flag=0;
										end if;
										if @flag>0 then 
													set @nContentDes=CONCAT(@proxyTypeName,'运营商在“'
																									,DATE_FORMAT(@startDate_H,'%Y-%m-%d %H'),'时” 与 “',DATE_FORMAT(@endDate_H,'%Y-%m-%d %H'),'时"【',@title,'】“',@nPlayerIdCountABS
																									,'"人,触发“',@title,'”预警,预警参数为“',@paramVal,'"');
													insert into table_webriskcontr_warninglog
													(
														nClubId,gameProxyType,nGameType,nPlayerId,nLogType,nLevel,nParamVal,nWarningVal,nContentDes,tCreateTime
													)
													values(0,@gameProxyType,0,0,4,0,@paramVal,@nPlayerIdCountABS,@nContentDes,$currTime);
										end if;

								end if;							
								set @currId=@currId+1;
					end while;
			end if;
			#-----------------------注册活跃会员-------------------------------end
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_RoundSum
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_RoundSum`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_RoundSum`(
	

)
begin 
		
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');
			#战绩
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_startDate);

			set @sqlStr=CONCAT("select IFNULL(MIN(ID),0),IFNULL(MAX(ID),0) into @minId,@maxId  
													from ",@table_clubgamescoredetail," 
													where bRobot=0 and tEndTime>='",_startDate,"' and tEndTime<='",_endDate,"'");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			if @minId>0 and @maxId>0 then 
						set @sqlStr1=CONCAT("insert into table_web_round(nClubID,nGameType,nTableID,nRound,tEndTime)
																select temp.nClubID,temp.nGameType,0,temp.nRound,'",_startDate,"' from
																(
																	 select nClubID,nGameType,count(DISTINCT(szToken)) nRound,tEndTime 
																	 from ",@table_clubgamescoredetail," 
																	 where  bRobot=0 and ID>=",@minId," and ID<=",@maxId," and tEndTime>='",_startDate,"' and tEndTime<='",_endDate,"' 
																	 GROUP BY nClubId,nGameType
																) temp");
						PREPARE stmt_name1 FROM @sqlStr1; 
						EXECUTE stmt_name1;
						DEALLOCATE PREPARE stmt_name1;	
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_RoundSum_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_RoundSum_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_RoundSum_Pre`(
	

)
begin 
		
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');
			#战绩
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_startDate);

			set @sqlStr=CONCAT("select IFNULL(MIN(ID),0),IFNULL(MAX(ID),0) into @minId,@maxId  
													from ",@table_clubgamescoredetail," 
													where bRobot=0 and tEndTime>='",_startDate,"' and tEndTime<='",_endDate,"'");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

			if @minId>0 and @maxId>0 then 
						set @sqlStr1=CONCAT("insert into table_web_round(nClubID,nGameType,nTableID,nRound,tEndTime)
																select temp.nClubID,temp.nGameType,0,temp.nRound,'",_startDate,"' from
																(
																	 select nClubID,nGameType,count(DISTINCT(szToken)) nRound,tEndTime 
																	 from ",@table_clubgamescoredetail," 
																	 where  bRobot=0 and ID>=",@minId," and ID<=",@maxId," and tEndTime>='",_startDate,"' and tEndTime<='",_endDate,"' 
																	 GROUP BY nClubId,nGameType
																) temp");
						PREPARE stmt_name1 FROM @sqlStr1; 
						EXECUTE stmt_name1;
						DEALLOCATE PREPARE stmt_name1;	
			end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_RunData20191123
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_RunData20191123`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_RunData20191123`(
	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
		#积分表
		set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",$startTime);

		set @sqlStr=CONCAT("update table_web_clubreport report inner join (
																select nClubId,IFNULL(SUM(firstRecharge),0) firstRecharge,IFNULL(SUM(firstRechargeCount),0) firstRechargeCount,'",$startTime,"' tEndTime
																from(
																						
																			select nClubId,nPlayerID,IFNULL(nAmount,0) firstRecharge,count(1) firstRechargeCount 
																			from(
																										
																										select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																												 where log.nType=23 and log.nPlayerID=temp2.nPlayerID 
																																															and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																										from (								
																																					select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																																					from
																																					(																																						
																																						select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																																						where nType=23 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
																																								and not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																															 where b.nType=23 and b.CreateTime<'",$startTime,"' and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid)
																																					)temp1  GROUP BY nClubId,nPlayerID
																																			
																												)temp2
																					 )temp3 GROUP BY nClubId,nPlayerID
																	)temp3 GROUP BY nClubId
													)tempBody on report.nClubId=tempBody.nClubId and report.tEndTime=tempBody.tEndTime
																		set report.firstRecharge=tempBody.firstRecharge,report.firstRechargeCount=tempBody.firstRechargeCount");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
		

			
				set @sqlStr1=CONCAT("update table_web_clubreport_AdminApp report inner join (
														select IFNULL(SUM(firstRecharge),0) firstRecharge,sum(firstRechargeCount) firstRechargeCount,'",$startTime,"' tEndTime 
														from (
																
																		select nClubId,nPlayerID,IFNULL(nAmount,0) firstRecharge,count(1) firstRechargeCount
																		from(
																									
																									select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																											 where log.nType=23 and log.nPlayerID=temp2.nPlayerID 
																																														and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																									from (								
																																				select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																																				from
																																				(																																					
																																					select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																																					where nType=23 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
																																							and not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																														 where b.nType=23 and b.CreateTime<'",$startTime,"' and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid)
																																				)temp1  GROUP BY nClubId,nPlayerID
																																		
																											)temp2
																				 )temp3 GROUP BY nClubId,nPlayerID
																	)temp4
											)tempBody on report.tEndTime=tempBody.tEndTime
																set report.firstRecharge=tempBody.firstRecharge,report.firstRechargeCount=tempBody.firstRechargeCount");
			PREPARE stmt_name1 FROM @sqlStr1; 
			EXECUTE stmt_name1;
			DEALLOCATE PREPARE stmt_name1;	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_RunData20191123_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_RunData20191123_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_RunData20191123_Pre`(
	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
		#积分表
		set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",$startTime);

		set @sqlStr=CONCAT("update table_web_clubreport report inner join (
																select nClubId,IFNULL(SUM(firstRecharge),0) firstRecharge,IFNULL(SUM(firstRechargeCount),0) firstRechargeCount,'",$startTime,"' tEndTime
																from(
																						
																			select nClubId,nPlayerID,IFNULL(nAmount,0) firstRecharge,count(1) firstRechargeCount 
																			from(
																										
																										select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																												 where log.nType=23 and log.nPlayerID=temp2.nPlayerID 
																																															and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																										from (								
																																					select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																																					from
																																					(																																						
																																						select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																																						where nType=23 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
																																								and not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																															 where b.nType=23 and b.CreateTime<'",$startTime,"' and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid)
																																					)temp1  GROUP BY nClubId,nPlayerID
																																			
																												)temp2
																					 )temp3 GROUP BY nClubId,nPlayerID
																	)temp3 GROUP BY nClubId
													)tempBody on report.nClubId=tempBody.nClubId and report.tEndTime=tempBody.tEndTime
																		set report.firstRecharge=tempBody.firstRecharge,report.firstRechargeCount=tempBody.firstRechargeCount");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
		

			
				set @sqlStr1=CONCAT("update table_web_clubreport_AdminApp report inner join (
														select IFNULL(SUM(firstRecharge),0) firstRecharge,sum(firstRechargeCount) firstRechargeCount,'",$startTime,"' tEndTime 
														from (
																
																		select nClubId,nPlayerID,IFNULL(nAmount,0) firstRecharge,count(1) firstRechargeCount
																		from(
																									
																									select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore," log 
																																											 where log.nType=23 and log.nPlayerID=temp2.nPlayerID 
																																														and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																									from (								
																																				select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																																				from
																																				(																																					
																																					select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore," a
																																					where nType=23 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
																																							and not exists(select b.nPlayerID from ",@table_clublogscore," b 
																																														 where b.nType=23 and b.CreateTime<'",$startTime,"' and a.nPlayerID=b.nPlayerID  and a.clubid=b.clubid)
																																				)temp1  GROUP BY nClubId,nPlayerID
																																		
																											)temp2
																				 )temp3 GROUP BY nClubId,nPlayerID
																	)temp4
											)tempBody on report.tEndTime=tempBody.tEndTime
																set report.firstRecharge=tempBody.firstRecharge,report.firstRechargeCount=tempBody.firstRechargeCount");
			PREPARE stmt_name1 FROM @sqlStr1; 
			EXECUTE stmt_name1;
			DEALLOCATE PREPARE stmt_name1;	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_ServiceFeeRebate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_ServiceFeeRebate`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_ServiceFeeRebate`(
    
	IN $nClubId INT,
	IN $nPlayerId INT,
	IN $nAmount INT
)
BEGIN 

				
				SELECT nDirectlyRate,nExtensionRate,nSubExtensionRate INTO @nDirectlyRate,@nExtensionRate,@nSubExtensionRate FROM table_clubinfo WHERE nClubID=$nClubId;
				
				SET @nDirectlyPlayerId=0;
				IF EXISTS(SELECT nClubID FROM table_clubmember WHERE nClubID=$nClubId AND nPlayerID=$nPlayerId AND nExtenID>0 ORDER BY tJoinTime DESC LIMIT 0,1) THEN 
						SELECT nExtenID INTO @nDirectlyPlayerId FROM table_clubmember WHERE nClubID=$nClubId AND nPlayerID=$nPlayerId AND nExtenID>0 ORDER BY tJoinTime DESC LIMIT 0,1;
						
						IF NOT EXISTS(SELECT nClubID FROM table_clubmember WHERE nClubID=$nClubId AND nPlayerID=@nDirectlyPlayerId AND nStatus=1 AND nLevel=1) THEN 							
								
								SET @nDirectlynAmount=TRUNCATE(((@nDirectlyRate/1000)*$nAmount),3);
								IF @nDirectlynAmount>0 THEN 
										
										INSERT INTO table_Statistics_Earnings(nType,nClubId,nPlayerId,nTargetId,nRate,nAmount,nScore) 
										VALUES(1,$nClubId,@nDirectlyPlayerId,$nPlayerId,@nDirectlyRate,@nDirectlynAmount,$nAmount);
										
										CALL pr_2019_award_rebate(@nDirectlyPlayerId,$nPlayerId);
										
										
										IF EXISTS (SELECT nClubId FROM table_web_redemptionlog WHERE nClubId=$nClubId AND nPlayerId=@nDirectlyPlayerId AND IsRedemption=0) THEN 
												UPDATE table_web_redemptionlog SET nAmount=nAmount+@nDirectlynAmount,ModifyDate=NOW() 
												WHERE nClubId=$nClubId AND nPlayerId=@nDirectlyPlayerId AND IsRedemption=0 limit 1;
										ELSE 
												
												INSERT INTO table_web_redemptionlog(nClubId,nPlayerId,nAmount,IsRedemption,ModifyDate)
												VALUES($nClubId,@nDirectlyPlayerId,@nDirectlynAmount,0,NOW());
										END IF;
								END IF;
						ELSE 
								SET @nDirectlyPlayerId=0;
						END IF;
						
				END IF;
				
				SET @nExtensionPlayerId=0;
				IF @nDirectlyPlayerId>0 THEN 
						IF EXISTS(SELECT nClubID FROM table_clubmember WHERE nClubID=$nClubId AND nPlayerID=@nDirectlyPlayerId AND nExtenID>0 ORDER BY tJoinTime DESC LIMIT 0,1) THEN 
								SELECT nExtenID INTO @nExtensionPlayerId FROM table_clubmember WHERE nClubID=$nClubId AND nPlayerID=@nDirectlyPlayerId AND nExtenID>0 ORDER BY tJoinTime DESC LIMIT 0,1;
									
									IF NOT EXISTS(SELECT nClubID FROM table_clubmember WHERE nClubID=$nClubId AND nPlayerID=@nExtensionPlayerId AND nStatus=1 AND nLevel=1) THEN
										SET @nExtensionnAmount=TRUNCATE(((@nExtensionRate/1000)*$nAmount),3);
										IF @nExtensionnAmount>0 THEN 
												
												INSERT INTO table_Statistics_Earnings(nType,nClubId,nPlayerId,nTargetId,nRate,nAmount,nScore) 
												VALUES(2,$nClubId,@nExtensionPlayerId,$nPlayerId,@nExtensionRate,@nExtensionnAmount,$nAmount);
												
												CALL pr_2019_award_rebate(@nExtensionPlayerId,$nPlayerId);
												
												
												IF EXISTS (SELECT nClubId FROM table_web_redemptionlog WHERE nClubId=$nClubId AND nPlayerId=@nExtensionPlayerId AND IsRedemption=0) THEN 
														UPDATE table_web_redemptionlog SET nAmount=nAmount+@nExtensionnAmount,ModifyDate=NOW() 
														WHERE nClubId=$nClubId AND nPlayerId=@nExtensionPlayerId AND IsRedemption=0 limit 1;
												ELSE 
														
														INSERT INTO table_web_redemptionlog(nClubId,nPlayerId,nAmount,IsRedemption,ModifyDate)
														VALUES($nClubId,@nExtensionPlayerId,@nExtensionnAmount,0,NOW());
												END IF;						
										END IF;
								ELSE  
										SET @nExtensionPlayerId=0;
								END IF;
						END IF;
				END IF;
				
					
			
			SET @nSubExtensionPlayerId=0;
			IF @nDirectlyPlayerId>0 AND @nExtensionPlayerId>0 THEN
					IF EXISTS(SELECT nClubID FROM table_clubmember WHERE nClubID=$nClubId AND nPlayerID=@nExtensionPlayerId AND nExtenID>0 ORDER BY tJoinTime DESC LIMIT 0,1) THEN
							SELECT nExtenID INTO @nSubExtensionPlayerId FROM table_clubmember WHERE nClubID=$nClubId AND nPlayerID=@nExtensionPlayerId AND nExtenID>0 ORDER BY tJoinTime DESC LIMIT 0,1;
							
							IF NOT EXISTS(SELECT nClubID FROM table_clubmember WHERE nClubID=$nClubId AND nPlayerID=@nSubExtensionPlayerId AND nStatus=1 AND nLevel=1) THEN
									SET @nSubExtensionnAmount=TRUNCATE(((@nSubExtensionRate/1000)*$nAmount),3);
									IF @nSubExtensionnAmount>0 THEN 
											
											INSERT INTO table_Statistics_Earnings(nType,nClubId,nPlayerId,nTargetId,nRate,nAmount,nScore) 
											VALUES(3,$nClubId,@nSubExtensionPlayerId,$nPlayerId,@nSubExtensionRate,@nSubExtensionnAmount,$nAmount);
											
											CALL pr_2019_award_rebate(@nSubExtensionPlayerId,$nPlayerId);
											
											
											IF EXISTS (SELECT nClubId FROM table_web_redemptionlog WHERE nClubId=$nClubId AND nPlayerId=@nSubExtensionPlayerId AND IsRedemption=0) THEN 
													UPDATE table_web_redemptionlog SET nAmount=nAmount+@nSubExtensionnAmount,ModifyDate=NOW() 
													WHERE nClubId=$nClubId AND nPlayerId=@nSubExtensionPlayerId AND IsRedemption=0 limit 1;
											ELSE 
													
													INSERT INTO table_web_redemptionlog(nClubId,nPlayerId,nAmount,IsRedemption,ModifyDate)
													VALUES($nClubId,@nSubExtensionPlayerId,@nSubExtensionnAmount,0,NOW());
											END IF;	
									END IF;
							ELSE 
									SET @nSubExtensionPlayerId=0;
							END IF;
					END IF;
			END IF;
			
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_SetAuth
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_SetAuth`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_SetAuth`(
	
	in $nClubId int,
	in $nPlayerId int,
	in $openAuthIds varchar(100),
	in $gamePlayerId int,
	out $returnVal int,
	out $resultMsg varchar(50),
	out $msgId int
)
returnNode:begin 				
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				set $msgId=0;
				if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId and nActive=1) then
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1 and CreatePlayerID=$gamePlayerId) then
						set $returnVal=-1;
						set $resultMsg='尚无此操作权限';
						leave returnNode;	
				end if;
				if ($openAuthIds is null) or $openAuthIds='' then 
						set $returnVal=-1;
						set $resultMsg='请为当前设置的管理员开通操作权限';
						leave returnNode;	
				end if;
				
				
				if exists (select nClubID from table_clubmember where nStatus=1 and nClubID=$nClubId and nLevel=2 and nPlayerId=$nPlayerId) then 						
						start transaction;
						
						delete from table_club_member_authority where nClubID=$nClubId and nPlayerID=$nPlayerId;
						
						insert into table_club_member_authority(nClubID,nPlayerID,nLevel,nStatus) select $nClubId,$nPlayerId,type,2 from sys_code where `Code`=1001005 and SortId>0;
						set @strSqlCount=CONCAT('update table_club_member_authority set nStatus=1 where nClubID=',$nClubId,' and nPlayerID=',$nPlayerId,' and nLevel in(',$openAuthIds,')');
						prepare sqlStr from @strSqlCount;
						execute sqlStr;
						
						call Pro_Web_AddEnterPriseLog($nClubId,3,$gamePlayerId,$nPlayerId,CONCAT('创始人(Id:',$gamePlayerId,')修改管理员用户(Id:',$nPlayerId,')俱乐部权限'));
						if errno=0 then
								set $returnVal=1;
								set $resultMsg='成功';
								commit;
						else
								set $returnVal=-99;
								set $resultMsg='执行存储过程异常';
								rollback;
						end if;						
				else 
				
							select count(1) into @totalCount from table_clubmember where nStatus=1 and nClubID=$nClubId and nLevel=2;
							if(@totalCount>=5) then 
									set $returnVal=-1;
									set $resultMsg='管理员设置已达上限';
									leave returnNode;
							end if;

							start transaction;	
							delete from table_club_member_authority where nClubID=$nClubId and nPlayerID=$nPlayerId;
							insert into table_club_member_authority(nClubID,nPlayerID,nLevel,nStatus) 
							select $nClubId,$nPlayerId,type,2 from sys_code where `Code`=1001005 and SortId>0;
							
							call Pro_Web_AddEnterPriseLog($nClubId,1,$gamePlayerId,$nPlayerId,CONCAT('俱乐部创建者设置用户(ID:',$nPlayerId,')为管理员'));

							set @strSqlCount=CONCAT('update table_club_member_authority set nStatus=1,tModifyTime=NOW() where nClubID=',$nClubId,' and nPlayerID=',$nPlayerId,' and nLevel in(',$openAuthIds,')');
								prepare sqlStr from @strSqlCount;
								execute sqlStr;
								
								update table_clubmember set nLevel=2 where nClubID=$nClubId and nPlayerID=$nPlayerId and nStatus=1;
							
								
								select szClubName into @szClubName from table_clubinfo where nClubID=$nClubId;
								insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) 
								values($nPlayerId,502,'管理员设置',CONCAT('您已被创始人(',$gamePlayerId,')设置为俱乐部',@szClubName,'的管理员'));
								set $msgId=@@identity;
								if errno=0 then
										set $returnVal=1;
										set $resultMsg='成功';
										commit;
								else
										set $returnVal=-99;
										set $resultMsg='执行存储过程异常';
										rollback;
								end if;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_SetCityPartner
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_SetCityPartner`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_SetCityPartner`(
	/*
		设置城市合伙人
		$currUserId 后台操作人Id		
		$nPlayerId 被设置为城市合伙人的1级代理会员Id
		$upCPID 父级合伙人Id 0 表示当前被设置合伙人为1级合伙人
		$ratioPlayer 			普通会员分成比例 10000=100%
		$ratioAgent 代理分成分成比例 10000=100%
	*/
	in $currUserId int,
	in $nPlayerId int,
	in $upCPID	int,
	in $ratioPlayer int,
	in $ratioAgent int,
	out $returnVal int,
	out $resultMsg varchar(64)
)
returnNode:BEGIN
					#房卡用户
					set @nClubId=666000;
					#最低分成、最高分成、最高合伙人等级
					set @minRatio=100,@maxRatio=10000,@maxLevel=3;
					#合伙人等级、会员充值分成比例、代理充值分成比例
					set @nLevel=1,@ratioPlayer=0,@ratioAgent=0;

					#会员充值分成比例区间必须在1%——100%之间【含1%和100%】
					if $ratioPlayer<@minRatio or $ratioPlayer>@maxRatio then 
							set $returnVal=-1;
							set $resultMsg='会员充值分成比例区间必须在1%——100%之间';
							leave returnNode;
					end if;
					#代理充值分成比例区间必须在1%——100%之间【含1%和100%】
					if $ratioAgent<@minRatio or $ratioAgent>@maxRatio then 
							set $returnVal=-1;
							set $resultMsg='代理充值分成比例区间必须在1%——100%之间';
							leave returnNode;
					end if;
					if not exists(select mem.nPlayerId from table_league_club_member mem 
															inner join table_user users on mem.nPlayerID=users.nPlayerId 
															where mem.nClubId=@nClubId and users.nPlayerId=$nPlayerId) then
										set $returnVal=-1;
										set $resultMsg='会员不存在';
										leave returnNode;
					end if;
					if not exists(select nPlayerId from table_agent_info where nPlayerID=$nPlayerId and nLevel=1 and UpAgentID=0) then 
							set $returnVal=-1;
							set $resultMsg='当前会员必须为一级代理';
							leave returnNode;
					end if;
					if exists(select nPlayerId from table_citypartner_info where nPlayerID=$nPlayerId) then 
							set $returnVal=-1;
							set $resultMsg='当前会员已是城市合伙人身份';
							leave returnNode;
					end if;
					if $upCPID>0 then 
									if not exists(select nPlayerId from table_citypartner_info where nPlayerID=$upCPID) then 
											set $returnVal=-1;
											set $resultMsg='上级城市合伙人不存在';
											leave returnNode;
									else 
											select nLevel,ratio_player,ratio_agent into @upLevel,@ratioPlayer,@ratioAgent from table_citypartner_info where nPlayerID=$upCPID;
											if @upLevel>=@maxLevel then 
													set $returnVal=-1;
													set $resultMsg=CONCAT('上级城市合伙人等级已达上限【',@maxLevel,'级】');
													leave returnNode;
											end if;
											set @nLevel=@upLevel+1;						
									end if;
					else 
							select ratio into @currAgentRatio from table_agent_info where nPlayerID=$nPlayerId;
							set @ratioPlayer=@maxRatio-@currAgentRatio;
							set @ratioAgent=@maxRatio;
					end if;
					if $ratioPlayer>=@ratioPlayer then 
							if $upCPID>0 then 
										set $returnVal=-1;
										set $resultMsg=CONCAT('会员充值分成比例不能高于"',ROUND(@ratioPlayer/100,2),'%"');
										leave returnNode;
							end if;
					end if;
					if $ratioAgent>=@ratioAgent then
							if $upCPID>0 then  
									set $returnVal=-1;
									set $resultMsg=CONCAT('代理充值分成比例不能高于"',ROUND(@ratioAgent/100,2),'%"');
									leave returnNode;	
							end if;						
					end if;

					#插入城市合伙人信息表
					set @createTime=NOW();
					insert into table_citypartner_info(nPlayerID,UpCPID,nLevel,ratio_player,ratio_agent,CreateTime) values($nPlayerId,$upCPID,@nLevel,$ratioPlayer,$ratioAgent,@createTime);
					#更新用户代理标识【111城市合伙人】
					update table_user set acctype=111 where nPlayerId=$nPlayerId;

					#城市合伙人层级关系表
					if @nLevel>1 then 
							set @maxWhile=0,@breakWhile=1000;
							set @upCPID=$upCPID;
							while @upCPID>0 do 
									if not exists(select nPlayerID from table_citypartner_tree where nPlayerID=@upCPID and DownCPID=$nPlayerId) then 
											insert into table_citypartner_tree(nPlayerID,DownCPID,CreateTime)
											values(@upCPID,$nPlayerId,@createTime);
									end if;

									select UpCPID into @upUpCPID from table_citypartner_info where nPlayerID=@upCPID; 
									set @upCPID=@upUpCPID;
									set @maxWhile=@maxWhile+1;
									if @maxWhile>@breakWhile then 
											set @upCPID=0;
									end if;
							end while;
					end if;
					#插入日志
					#操作人
					select userName into @userName from admin_user where UserId=$currUserId;
					select szThirdAccount into @szThirdAccount from table_user where nPlayerId=$nPlayerId;

					set @logDes=CONCAT('【设置城市合伙人】运营用户:【',@userName,'】 设置了会员【ID:',$nPlayerId,',账号:',@szThirdAccount,'】为',@nLevel,'级城市合伙人');
					insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
					values(0,89,$currUserId,0,0,@logDes,NOW());

					set $returnVal=1;
					set $resultMsg='成功';
					leave returnNode;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsEarnings
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsEarnings`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_StatisticsEarnings`(
		
)
begin 
			
			declare _endDate varchar(19) default NOW();
			
			declare _startDate varchar(19) default date_sub(_endDate,interval 2 HOUR);
			declare _nClubID,_nPlayerId,_nAmount int default 0;
			
			declare done int default false;
			
			declare cur cursor for select t.nClubID,t.sourceid nPlayerId, SUM(t.nAmount)nAmount from
																	(
																		select core1.nClubID,core1.nAmount,core1.sourceid,core1.CreateTime from Table_ClubLogPlatformScore core1 
																		LEFT JOIN table_clubmember mem on core1.nClubID=mem.nClubID and core1.sourceid=mem.nPlayerID 
																		where mem.nStatus=1 and mem.nLevel>1 and core1.nType>=90 and core1.CreateTime>=_startDate and core1.CreateTime<=_endDate 
																		
																	)t GROUP BY t.nClubID,t.sourceid; 
			
			declare continue handler for not found set done = true;   
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubID,_nPlayerId,_nAmount;
			
			if done then  
					leave read_loop;    
			end if;
					
					select nDirectlyRate,nExtensionRate,nSubExtensionRate into @nDirectlyRate,@nExtensionRate,@nSubExtensionRate from table_clubinfo where nClubID=_nClubID;
					
					set @nDirectlyPlayerId=0;
					if exists(select nClubID from table_clubmember where nClubID=_nClubID and nPlayerID=_nPlayerId and nExtenID>0 order by tJoinTime desc limit 0,1) then 
							select nExtenID into @nDirectlyPlayerId from table_clubmember where nClubID=_nClubID and nPlayerID=_nPlayerId and nExtenID>0 order by tJoinTime desc limit 0,1;
							
							if not exists(select nClubID from table_clubmember where nClubID=_nClubID and nPlayerID=@nDirectlyPlayerId and nStatus=1 and nLevel=1) then 							
									
									set @nDirectlynAmount=ceil((@nDirectlyRate/1000)*_nAmount);
									if @nDirectlynAmount>0 then 
											insert into table_Statistics_Earnings(nType,nClubId,nPlayerId,nTargetId,nRate,nAmount,nScore) 
											values(1,_nClubID,@nDirectlyPlayerId,_nPlayerId,@nDirectlyRate,@nDirectlynAmount,_nAmount);
									end if;
							else 
									set @nDirectlyPlayerId=0;
							end if;
							
					end if;
					
					set @nExtensionPlayerId=0;
					if @nDirectlyPlayerId>0 then 
							if exists(select nClubID from table_clubmember where nClubID=_nClubID and nPlayerID=@nDirectlyPlayerId and nExtenID>0 order by tJoinTime desc limit 0,1) then 
									select nExtenID into @nExtensionPlayerId from table_clubmember where nClubID=_nClubID and nPlayerID=@nDirectlyPlayerId and nExtenID>0 order by tJoinTime desc limit 0,1;
									if not exists(select nClubID from table_clubmember where nClubID=_nClubID and nPlayerID=@nExtensionPlayerId and nStatus=1 and nLevel=1) then
											set @nExtensionnAmount=ceil((@nExtensionRate/1000)*_nAmount);
											if @nExtensionnAmount>0 then 
													insert into table_Statistics_Earnings(nType,nClubId,nPlayerId,nTargetId,nRate,nAmount,nScore) 
													values(2,_nClubID,@nExtensionPlayerId,_nPlayerId,@nExtensionRate,@nExtensionnAmount,_nAmount);
											end if;
									else  
											set @nExtensionPlayerId=0;
									end if;
							end if;
					end if;
					
						
				
				set @nSubExtensionPlayerId=0;
				if @nDirectlyPlayerId>0 and @nExtensionPlayerId>0 then
						if exists(select nClubID from table_clubmember where nClubID=_nClubID and nPlayerID=@nExtensionPlayerId and nExtenID>0 order by tJoinTime desc limit 0,1) then
								select nExtenID into @nSubExtensionPlayerId from table_clubmember where nClubID=_nClubID and nPlayerID=@nExtensionPlayerId and nExtenID>0 order by tJoinTime desc limit 0,1;
								if not exists(select nClubID from table_clubmember where nClubID=_nClubID and nPlayerID=@nSubExtensionPlayerId and nStatus=1 and nLevel=1) then
										set @nSubExtensionnAmount=ceil((@nSubExtensionRate/1000)*_nAmount);
										if @nSubExtensionnAmount>0 then 
												insert into table_Statistics_Earnings(nType,nClubId,nPlayerId,nTargetId,nRate,nAmount,nScore) 
												values(3,_nClubID,@nSubExtensionPlayerId,_nPlayerId,@nSubExtensionRate,@nSubExtensionnAmount,_nAmount);
										end if;
								else 
										set @nSubExtensionPlayerId=0;
								end if;
						end if;
				end if;
				
			
			end loop;
			
			close cur;			
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsHundredReport
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsHundredReport`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_StatisticsHundredReport`(
	

)
begin 
		
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');
			
			insert into Table_Web_HundredReport(nClubID,nGameType,nGameID,nTableID,nPlayerID,szThirdAccount,nAmount,nResult,nResultMoney,nBetScore,nDiamond,tEndTime)
			select nClubID,nGameType,nGameID,nTableID,Temptables.nPlayerID,us.szThirdAccount,nTax,nResult,nResultMoney,nBetScore,nDiamond,_startDate from
			(
						select nClubID,nGameType,nGameID,nTableID, nPlayerID,nTax,nResult,nResultMoney,nBetScore,
									(select IFNULL(SUM(nAmount),0) 
									 from table_club_hundred_log_dudiamond 
									 where nClubID=temp.nClubID and nGameID=temp.nGameID and nTableID=temp.nTableID and CreateTime>=_startDate and CreateTime<=_endDate
									) nDiamond
						from 
						(
									select nClubID,nGameType,nGameID,nTableID,nPlayerID,SUM(nTax) nTax,SUM(nResult) nResult,SUM(nResultMoney) nResultMoney,sum(nBetScore) nBetScore
									from Table_ClubGameScoreDetail 
									
									where bRobot=0 and tEndTime>=_startDate and tEndTime<=_endDate
									GROUP BY nClubID,nGameType,nGameID,nTableID,nPlayerID
						) temp
			) Temptables left join table_user us on us.nPlayerId=Temptables.nPlayerID;
			
			
			insert into Table_Web_HundredBet(nClubID,nGameID,nGameType,nTableID,nHundredType,nRound,
																				nPos1_BetScore,nPos2_BetScore,nPos3_BetScore,nPos4_BetScore,nPos5_BetScore,
																				nTotalbet,tEndTime)
			select nClubID,nGameID,nGameType,nTableID,nHundredType,nRound,nPos1_BetScore,nPos2_BetScore,nPos3_BetScore,nPos4_BetScore,nPos5_BetScore,nTotalbet, _startDate from 
			(
					select nClubID,nGameID,nGameType,nTableID,nHundredType,COUNT(nRound) nRound,
								SUM(nPos1_BetScore) nPos1_BetScore,SUM(nPos2_BetScore) nPos2_BetScore,
								SUM(nPos3_BetScore) nPos3_BetScore,SUM(nPos4_BetScore) nPos4_BetScore,SUM(nPos5_BetScore) nPos5_BetScore,SUM(nTotalbet) nTotalbet
					from table_club_hundred_game_score2 
					
					where tEndTime>=_startDate and tEndTime<=_endDate
					group by nClubID,nGameID,nGameType,nTableID,nHundredType
			)temp;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsJiFenReport
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsJiFenReport`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_StatisticsJiFenReport`(
	
		in $startTime varchar(20),
		in $endTime varchar(20)
)
begin 
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",$startTime);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",$startTime);

			set @sqlStr=CONCAT("insert into Table_Web_GameReport(nClubID,nGameType,nPlayCount,nRound,nRoundCount,nBetScore,nValidBet,winMoney,nTax,nResultMoney,tEndTime)
													select nClubID,nGameType,nPlayCount,nRound,nRoundCount,nBetScore,nValidBet,winMoney,nTax,nResultMoney,'",$startTime,"' from
													(
																select '",$startTime,"',nClubID,nGameType,count(DISTINCT(nPlayerID)) nPlayCount,
																			count(DISTINCT(sztoken)) nRound,count(sztoken) nRoundCount,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,
																			sum(case when nResultMoney>0 then nResultMoney else 0 end) winMoney,
																			SUM(nTax) nTax,
																			sum(nResultMoney) nResultMoney
																from ",@table_clubgamescoredetail,"
																where tEndTime>='",$startTime,"' and tEndTime<='",$endTime,"' 
																GROUP BY nClubID,nGameType
													) Temptables");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
			
			set @sqlStr1=CONCAT("insert into Table_Web_ClubReport(nClubID,nPlayCount,nRound,nRoundCount,nBetScore,nValidBet,winMoney,nTax,nResultMoney,tEndTime,dayAddCount,dayAddCountValid)
													select temp.nClubID,sum(temp.nPlayCount) nPlayCount,SUM(temp.nRound) nRound,SUM(temp.nRoundCount) nRoundCount,SUM(temp.nBetScore) nBetScore,SUM(temp.nValidBet) nValidBet,
																 SUM(temp.winMoney) winMoney,SUM(temp.nTax) nTax,SUM(temp.nResultMoney) nResultMoney,'",$startTime,"',SUM(temp.dayAddCount) dayAddCount,
																 SUM(temp.dayAddCountValid) dayAddCountValid
													from (
																			select temp2.nClubID,temp2.nPlayCount,temp2.nRound,temp2.nRoundCount,temp2.nBetScore,temp2.nValidBet,temp2.winMoney,temp2.nTax,temp2.nResultMoney,temp2.dayAddCount,0 dayAddCountValid 
																			from 
																			(
																					select nClubID,0 nPlayCount,0 nRound,0 nRoundCount,0 nBetScore,0 nValidBet,0 winMoney,0 nTax,0 nResultMoney,count(1) dayAddCount
																					from table_clubmember mem1 where mem1.bRobot=0 and mem1.nLevel>1 and mem1.tJoinTime>='",$startTime,"' and mem1.tJoinTime<='",$endTime,"' 
																					GROUP BY nClubID
																			)temp2
																			union all 
																			select temp3.nClubID,temp3.nPlayCount,temp3.nRound,temp3.nRoundCount,temp3.nBetScore,temp3.nValidBet,temp3.winMoney,temp3.nTax,temp3.nResultMoney,0 dayAddCount
																							,(select count(1) from table_clubmember mem2 where mem2.bRobot=0 and mem2.nLevel>1 and mem2.nClubID=temp3.nClubID and mem2.tJoinTime>='",$startTime,"' and mem2.tJoinTime<='",$endTime,"'  
																																		and exists (SELECT log.nPlayerID FROM ",@table_clubgamescoredetail," log 
																																								where log.nClubID=mem2.nClubID and log.nPlayerID=mem2.nPlayerId 
																																											and log.tEndTime >= '",$startTime,"' AND log.tEndTime <='",$endTime,"' 
																																								)
																								) dayAddCountValid
																			from (
																												select '",$startTime,"',nClubID,count(DISTINCT(nPlayerID)) nPlayCount,
																															count(DISTINCT(sztoken)) nRound,count(sztoken) nRoundCount,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,
																															sum(case when nResultMoney>0 then nResultMoney else 0 end) winMoney,
																															SUM(nTax) nTax,sum(nResultMoney) nResultMoney
																												from ",@table_clubgamescoredetail," 
																												where tEndTime>='",$startTime,"' and tEndTime<='",$endTime,"'  
																												GROUP BY nClubID
																					)temp3
															)temp GROUP BY temp.nClubID");
			PREPARE stmt_name1 FROM @sqlStr1; 
			EXECUTE stmt_name1;
			DEALLOCATE PREPARE stmt_name1;	
				
			set @sqlStr2=CONCAT("update Table_Web_GameReport report inner join (
														select IFNULL(SUM(nAmount),0) tasknAmount,FLOOR(nGameId/100) nGameType ,clubid from ",@table_clublogscore," 
														where nType=24 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
														GROUP BY clubid,nGameType
												)temp on report.nClubID=temp.clubid and report.nGameType=temp.nGameType 
																 and report.tEndTime='",$startTime,"' set report.tasknAmount=temp.tasknAmount");
			PREPARE stmt_name2 FROM @sqlStr2; 
			EXECUTE stmt_name2;
			DEALLOCATE PREPARE stmt_name2;	
				
				
			update Table_Web_GameReport report join 
			(
					select nClubId,ProxyType,GameProxyType from admin_proxy where ProxyType=1
			)temp on report.nClubId=temp.nClubId set report.ProxyType=temp.GameProxyType where report.tEndTime=$startTime;


			
			set @sqlStr3=CONCAT("update Table_Web_ClubReport report inner join (
														select IFNULL(SUM(nAmount),0) tasknAmount,clubid from ",@table_clublogscore," 
														where nType=24 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
														GROUP BY clubid
												)temp on report.nClubID=temp.clubid and report.tEndTime='",$startTime,"' 
															set report.tasknAmount=temp.tasknAmount");
			PREPARE stmt_name3 FROM @sqlStr3; 
			EXECUTE stmt_name3;
			DEALLOCATE PREPARE stmt_name3;	

			
			set @sqlStr4=CONCAT("update Table_Web_ClubReport report inner join 
														(
															select IFNULL(SUM(nAmount),0) recharge,count(1) rechargeCount,clubid from ",@table_clublogscore," 
															where nType=23 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
															GROUP BY clubid
														)temp on report.nClubID=temp.clubid and report.tEndTime='",$startTime,"' 
																	set report.recharge=temp.recharge,report.rechargeCount=temp.rechargeCount");
			PREPARE stmt_name4 FROM @sqlStr4; 
			EXECUTE stmt_name4;
			DEALLOCATE PREPARE stmt_name4;	
				
				
			set @sqlStr5=CONCAT("update Table_Web_ClubReport report inner join 
														(
															select nClubId,count(1) rechargeNumber 
															from (
																	select clubid nClubId,nPlayerID from ",@table_clublogscore,"  
																	where nType=23 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
																	GROUP BY nClubId,nPlayerID
															)temps 
															GROUP BY nClubId
														) temp on report.nClubId=temp.nClubId and report.tEndTime='",$startTime,"' set report.rechargeNumber=temp.rechargeNumber");
			PREPARE stmt_name5 FROM @sqlStr5; 
			EXECUTE stmt_name5;
			DEALLOCATE PREPARE stmt_name5;	

				
			set @sqlStr6=CONCAT("update Table_Web_ClubReport report 
														inner join 
														(
																	select nClubId,IFNULL(SUM(firstRecharge),0) firstRecharge,IFNULL(sum(firstRechargeCount),0) firstRechargeCount,'",$startTime,"' tEndTime 
																	from (																			
																					select nClubId,nPlayerID,IFNULL(nAmount,0) firstRecharge,count(1) firstRechargeCount
																					from(																												
																								select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore,"  log 
																																										 where log.nType=23 and log.nPlayerID=temp2.nPlayerID 
																																													and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																								from (								
																												select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																												from
																												(																													
																													select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore,"  a
																													where nType=23 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
																															and not exists(select b.nPlayerID from table_webdata_playerscore  b 
																																						 where b.nRechargeCount>0 and b.nRechargeAmount>0 and b.tEndTime<'",$startTime,"' and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId)
																												)temp1  GROUP BY nClubId,nPlayerID																																	
																										)temp2
																							 )temp3 GROUP BY nClubId,nPlayerID
																				 )temp3 GROUP BY nClubId
														) tempbody on report.nClubId=tempbody.nClubId and report.tEndTime='",$startTime,"' 
																				set report.firstRecharge=tempbody.firstRecharge,report.firstRechargeCount=tempbody.firstRechargeCount");
			PREPARE stmt_name6 FROM @sqlStr6; 
			EXECUTE stmt_name6;
			DEALLOCATE PREPARE stmt_name6;	
			
				
			set @sqlStr7=CONCAT("update Table_Web_ClubReport report inner join (
														select IFNULL(SUM(nAmount),0) withdrawal,count(1) withdrawalCount,clubid from ",@table_clublogscore,"  
														where nType=28 and  CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
														GROUP BY clubid
											)temp on report.nClubID=temp.clubid and report.tEndTime='",$startTime,"' 
														set report.withdrawal=temp.withdrawal,report.withdrawalCount=temp.withdrawalCount");
			PREPARE stmt_name7 FROM @sqlStr7; 
			EXECUTE stmt_name7;
			DEALLOCATE PREPARE stmt_name7;	
				
			set @sqlStr8=CONCAT("update Table_Web_ClubReport report 
														inner join 
														(
															select nClubId,count(1) withdrawalNumber 
															from (
																	select clubid nClubId,nPlayerID from ",@table_clublogscore," 
																	where nType=28 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"' 
																	GROUP BY nClubId,nPlayerID
															)temps 
															GROUP BY nClubId
														) temp on report.nClubId=temp.nClubId and report.tEndTime='",$startTime,"' 
																		set report.withdrawalNumber=temp.withdrawalNumber");
			PREPARE stmt_name8 FROM @sqlStr8; 
			EXECUTE stmt_name8;
			DEALLOCATE PREPARE stmt_name8;	

				
			set @sqlStr9=CONCAT("update Table_Web_ClubReport report inner join (
														select IFNULL(SUM(nAmount),0) getRebate,clubid from ",@table_clublogscore,"  
														where nType=26 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
														GROUP BY clubid
											)temp on report.nClubID=temp.clubid and report.tEndTime='",$startTime,"' 
														set report.getRebate=temp.getRebate");
			PREPARE stmt_name9 FROM @sqlStr9; 
			EXECUTE stmt_name9;
			DEALLOCATE PREPARE stmt_name9;	
				
				
				update Table_Web_ClubReport report join 
				(
						select nClubId,ProxyType,GameProxyType from admin_proxy where ProxyType=1
				)temp on report.nClubId=temp.nClubId set report.ProxyType=temp.GameProxyType where report.tEndTime=$startTime;
				
				
				insert into table_web_clubreport_AdminH5(nPlayCount,nRound,nBetScore,nValidBet,winMoney,nTax,nResultMoney,tEndTime,dayAddCount,dayAddCountValid,nRoundCount,TasknAmount)
				select SUM(nPlayCount),SUM(nRound),SUM(nBetScore),SUM(nValidBet),SUM(winMoney),SUM(nTax),SUM(nResultMoney),DATE_FORMAT(tEndTime,'%Y-%m-%d') days,SUM(dayAddCount),
							 SUM(dayAddCountValid),SUM(nRoundCount),SUM(tasknAmount)
				from Table_Web_ClubReport report  
				where report.ProxyType=1 and report.nClubID<>10001 and tEndTime>=$startTime and tEndTime<=$endTime	
				GROUP BY days;

				
				insert into table_web_clubreport_AdminApp
										(nPlayCount,nRound,nBetScore,nValidBet,winMoney,nTax,nResultMoney,tEndTime,dayAddCount,
										 dayAddCountValid,nRoundCount,TasknAmount,recharge,withdrawal,getRebate,
										 rechargeCount,rechargeNumber,withdrawalCount,withdrawalNumber,firstRechargeCount,firstRecharge)
				select SUM(nPlayCount),SUM(nRound),SUM(nBetScore),SUM(nValidBet),SUM(winMoney),SUM(nTax),SUM(nResultMoney),DATE_FORMAT(tEndTime,'%Y-%m-%d') days,SUM(dayAddCount),
							 SUM(dayAddCountValid),SUM(nRoundCount),SUM(tasknAmount),SUM(recharge),SUM(withdrawal),SUM(getRebate),
							 SUM(rechargeCount),SUM(rechargeNumber),SUM(withdrawalCount),SUM(withdrawalNumber),SUM(firstRechargeCount),SUM(firstRecharge)
				from Table_Web_ClubReport report  
				where report.ProxyType=2  and report.nClubID<>10001 and tEndTime>=$startTime and tEndTime<=$endTime		
				GROUP BY days ;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsJiFenReport_02
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsJiFenReport_02`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_StatisticsJiFenReport_02`(
in $currdate varchar(20)
)
begin 
			set @CurdateComon=$currdate;
		
			set @startTime=CONCAT(date_sub(@CurdateComon,interval 1 day),' 00:00:00');
			set @tEndTime=CONCAT(date_sub(@CurdateComon,interval 1 day),' 23:59:59');
			#战绩
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",@startTime);

			set @sqlStr=CONCAT("insert into Table_Web_ClubReport_02(nClubID,nPlayCount,nRound,nBetScore,nValidBet,winMoney,nTax,nResultMoney,tEndTime,dayAddCount,dayAddCountValid)
			select temp.nClubID,sum(temp.nPlayCount) nPlayCount,SUM(temp.nRound) nRound,SUM(temp.nBetScore) nBetScore,SUM(temp.nValidBet) nValidBet,
						 SUM(temp.winMoney) winMoney,SUM(temp.nTax) nTax,SUM(temp.nResultMoney) nResultMoney,'",@startTime,"',SUM(temp.dayAddCount) dayAddCount,
						 SUM(temp.dayAddCountValid) dayAddCountValid
			from (
									select temp2.nClubID,temp2.nPlayCount,temp2.nRound,temp2.nBetScore,temp2.nValidBet,temp2.winMoney,temp2.nTax,temp2.nResultMoney,temp2.dayAddCount,0 dayAddCountValid 
									from 
									(
											select nClubID,0 nPlayCount,0 nRound,0 nBetScore,0 nValidBet,0 winMoney,0 nTax,0 nResultMoney,count(1) dayAddCount
											from table_clubmember mem1 where mem1.bRobot=0 and mem1.tJoinTime>='",@startTime,"' and mem1.tJoinTime<='",@tEndTime,"'
											GROUP BY nClubID
									)temp2
									union all 
									select temp3.nClubID,temp3.nPlayCount,temp3.nRound,temp3.nBetScore,temp3.nValidBet,temp3.winMoney,temp3.nTax,temp3.nResultMoney,0 dayAddCount
													,(select count(1) from table_clubmember mem2 where mem2.bRobot=0 and mem2.nClubID=temp3.nClubID and mem2.tJoinTime>='",@startTime,"' and mem2.tJoinTime<='",@tEndTime,"' 
																								and exists (SELECT log.nPlayerID FROM ",@table_clubgamescoredetail," log 
																														where log.bRobot=0 and log.nClubID=mem2.nClubID and log.nPlayerID=mem2.nPlayerId 
																																	and log.tEndTime >= '",@startTime,"' AND log.tEndTime <='",@tEndTime,"'
																														)
													  ) dayAddCountValid
									from (
																		select '",@startTime,"',nClubID,count(DISTINCT(nPlayerID)) nPlayCount,
																					count(DISTINCT(sztoken)) nRound,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,
																					sum(case when nResultMoney>0 then nResultMoney else 0 end) winMoney,
																					SUM(nTax) nTax,sum(nResultMoney) nResultMoney
																		from ",@table_clubgamescoredetail," 
																		where bRobot=0 and tEndTime>='",@startTime,"' and tEndTime<='",@tEndTime,"' 
																		GROUP BY nClubID
											)temp3
					)temp GROUP BY temp.nClubID");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsJiFenReport_02_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsJiFenReport_02_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_StatisticsJiFenReport_02_Pre`(
in $currdate varchar(20)
)
begin 
			set @CurdateComon=$currdate;
		
			set @startTime=CONCAT(date_sub(@CurdateComon,interval 1 day),' 00:00:00');
			set @tEndTime=CONCAT(date_sub(@CurdateComon,interval 1 day),' 23:59:59');
			#战绩
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",@startTime);

			set @sqlStr=CONCAT("insert into Table_Web_ClubReport_02(nClubID,nPlayCount,nRound,nBetScore,nValidBet,winMoney,nTax,nResultMoney,tEndTime,dayAddCount,dayAddCountValid)
			select temp.nClubID,sum(temp.nPlayCount) nPlayCount,SUM(temp.nRound) nRound,SUM(temp.nBetScore) nBetScore,SUM(temp.nValidBet) nValidBet,
						 SUM(temp.winMoney) winMoney,SUM(temp.nTax) nTax,SUM(temp.nResultMoney) nResultMoney,'",@startTime,"',SUM(temp.dayAddCount) dayAddCount,
						 SUM(temp.dayAddCountValid) dayAddCountValid
			from (
									select temp2.nClubID,temp2.nPlayCount,temp2.nRound,temp2.nBetScore,temp2.nValidBet,temp2.winMoney,temp2.nTax,temp2.nResultMoney,temp2.dayAddCount,0 dayAddCountValid 
									from 
									(
											select nClubID,0 nPlayCount,0 nRound,0 nBetScore,0 nValidBet,0 winMoney,0 nTax,0 nResultMoney,count(1) dayAddCount
											from table_clubmember mem1 where mem1.bRobot=0 and mem1.tJoinTime>='",@startTime,"' and mem1.tJoinTime<='",@tEndTime,"'
											GROUP BY nClubID
									)temp2
									union all 
									select temp3.nClubID,temp3.nPlayCount,temp3.nRound,temp3.nBetScore,temp3.nValidBet,temp3.winMoney,temp3.nTax,temp3.nResultMoney,0 dayAddCount
													,(select count(1) from table_clubmember mem2 where mem2.bRobot=0 and mem2.nClubID=temp3.nClubID and mem2.tJoinTime>='",@startTime,"' and mem2.tJoinTime<='",@tEndTime,"' 
																								and exists (SELECT log.nPlayerID FROM ",@table_clubgamescoredetail," log 
																														where log.bRobot=0 and log.nClubID=mem2.nClubID and log.nPlayerID=mem2.nPlayerId 
																																	and log.tEndTime >= '",@startTime,"' AND log.tEndTime <='",@tEndTime,"'
																														)
													  ) dayAddCountValid
									from (
																		select '",@startTime,"',nClubID,count(DISTINCT(nPlayerID)) nPlayCount,
																					count(DISTINCT(sztoken)) nRound,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,
																					sum(case when nResultMoney>0 then nResultMoney else 0 end) winMoney,
																					SUM(nTax) nTax,sum(nResultMoney) nResultMoney
																		from ",@table_clubgamescoredetail," 
																		where bRobot=0 and tEndTime>='",@startTime,"' and tEndTime<='",@tEndTime,"' 
																		GROUP BY nClubID
											)temp3
					)temp GROUP BY temp.nClubID");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsJiFenReport_history
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsJiFenReport_history`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_Web_StatisticsJiFenReport_history`(
in $currdate varchar(20)
)
begin 
			set @CurdateComon=$currdate;
		
			set @startTime=CONCAT(date_sub(@CurdateComon,interval 1 day),' 00:00:00');
			set @tEndTime=CONCAT(date_sub(@CurdateComon,interval 1 day),' 23:59:59');
				
			insert into Table_Web_ClubReport_02(nClubID,nPlayCount,nRound,nBetScore,nValidBet,winMoney,nTax,nResultMoney,tEndTime,dayAddCount,dayAddCountValid)
			select temp.nClubID,sum(temp.nPlayCount) nPlayCount,SUM(temp.nRound) nRound,SUM(temp.nBetScore) nBetScore,SUM(temp.nValidBet) nValidBet,
						 SUM(temp.winMoney) winMoney,SUM(temp.nTax) nTax,SUM(temp.nResultMoney) nResultMoney,@startTime,SUM(temp.dayAddCount) dayAddCount,
						 SUM(temp.dayAddCountValid) dayAddCountValid
			from (
									select temp2.nClubID,temp2.nPlayCount,temp2.nRound,temp2.nBetScore,temp2.nValidBet,temp2.winMoney,temp2.nTax,temp2.nResultMoney,temp2.dayAddCount,0 dayAddCountValid 
									from 
									(
											select nClubID,0 nPlayCount,0 nRound,0 nBetScore,0 nValidBet,0 winMoney,0 nTax,0 nResultMoney,count(1) dayAddCount
											from table_clubmember mem1 where mem1.bRobot=0 and mem1.tJoinTime>=@startTime and mem1.tJoinTime<=@tEndTime
											GROUP BY nClubID
									)temp2
									union all 
									select temp3.nClubID,temp3.nPlayCount,temp3.nRound,temp3.nBetScore,temp3.nValidBet,temp3.winMoney,temp3.nTax,temp3.nResultMoney,0 dayAddCount
													,(select count(1) from table_clubmember mem2 where mem2.bRobot=0 and mem2.nClubID=temp3.nClubID and mem2.tJoinTime>=@startTime and mem2.tJoinTime<=@tEndTime 
																								and exists (SELECT log.nPlayerID FROM table_clubgamescoredetail_history log 
																														where log.bRobot=0 and log.nClubID=mem2.nClubID and log.nPlayerID=mem2.nPlayerId 
																																	and log.tEndTime >= @startTime AND log.tEndTime <=@tEndTime
																														)
													  ) dayAddCountValid
									from (
																		select @startTime,nClubID,count(DISTINCT(nPlayerID)) nPlayCount,
																					count(DISTINCT(sztoken)) nRound,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,
																					sum(case when nResultMoney>0 then nResultMoney else 0 end) winMoney,
																					SUM(nTax) nTax,sum(nResultMoney) nResultMoney
																		from table_clubgamescoredetail 
																		where bRobot=0 and tEndTime>=@startTime and tEndTime<=@tEndTime 
																		GROUP BY nClubID
											)temp3
					)temp GROUP BY temp.nClubID;

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsJiFenReport_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsJiFenReport_Pre`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_StatisticsJiFenReport_Pre`(
	
		in $startTime varchar(20),
		in $endTime varchar(20)
)
begin 
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",$startTime);
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",$startTime);

			set @sqlStr=CONCAT("insert into Table_Web_GameReport(nClubID,nGameType,nPlayCount,nRound,nRoundCount,nBetScore,nValidBet,winMoney,nTax,nResultMoney,tEndTime)
													select nClubID,nGameType,nPlayCount,nRound,nRoundCount,nBetScore,nValidBet,winMoney,nTax,nResultMoney,'",$startTime,"' from
													(
																select '",$startTime,"',nClubID,nGameType,count(DISTINCT(nPlayerID)) nPlayCount,
																			count(DISTINCT(sztoken)) nRound,count(sztoken) nRoundCount,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,
																			sum(case when nResultMoney>0 then nResultMoney else 0 end) winMoney,
																			SUM(nTax) nTax,
																			sum(nResultMoney) nResultMoney
																from ",@table_clubgamescoredetail,"
																where tEndTime>='",$startTime,"' and tEndTime<='",$endTime,"' 
																GROUP BY nClubID,nGameType
													) Temptables");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
			
			set @sqlStr1=CONCAT("insert into Table_Web_ClubReport(nClubID,nPlayCount,nRound,nRoundCount,nBetScore,nValidBet,winMoney,nTax,nResultMoney,tEndTime,dayAddCount,dayAddCountValid)
													select temp.nClubID,sum(temp.nPlayCount) nPlayCount,SUM(temp.nRound) nRound,SUM(temp.nRoundCount) nRoundCount,SUM(temp.nBetScore) nBetScore,SUM(temp.nValidBet) nValidBet,
																 SUM(temp.winMoney) winMoney,SUM(temp.nTax) nTax,SUM(temp.nResultMoney) nResultMoney,'",$startTime,"',SUM(temp.dayAddCount) dayAddCount,
																 SUM(temp.dayAddCountValid) dayAddCountValid
													from (
																			select temp2.nClubID,temp2.nPlayCount,temp2.nRound,temp2.nRoundCount,temp2.nBetScore,temp2.nValidBet,temp2.winMoney,temp2.nTax,temp2.nResultMoney,temp2.dayAddCount,0 dayAddCountValid 
																			from 
																			(
																					select nClubID,0 nPlayCount,0 nRound,0 nRoundCount,0 nBetScore,0 nValidBet,0 winMoney,0 nTax,0 nResultMoney,count(1) dayAddCount
																					from table_clubmember mem1 where mem1.bRobot=0 and mem1.nLevel>1 and mem1.tJoinTime>='",$startTime,"' and mem1.tJoinTime<='",$endTime,"' 
																					GROUP BY nClubID
																			)temp2
																			union all 
																			select temp3.nClubID,temp3.nPlayCount,temp3.nRound,temp3.nRoundCount,temp3.nBetScore,temp3.nValidBet,temp3.winMoney,temp3.nTax,temp3.nResultMoney,0 dayAddCount
																							,(select count(1) from table_clubmember mem2 where mem2.bRobot=0 and mem2.nLevel>1 and mem2.nClubID=temp3.nClubID and mem2.tJoinTime>='",$startTime,"' and mem2.tJoinTime<='",$endTime,"'  
																																		and exists (SELECT log.nPlayerID FROM ",@table_clubgamescoredetail," log 
																																								where log.nClubID=mem2.nClubID and log.nPlayerID=mem2.nPlayerId 
																																											and log.tEndTime >= '",$startTime,"' AND log.tEndTime <='",$endTime,"' 
																																								)
																								) dayAddCountValid
																			from (
																												select '",$startTime,"',nClubID,count(DISTINCT(nPlayerID)) nPlayCount,
																															count(DISTINCT(sztoken)) nRound,count(sztoken) nRoundCount,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,
																															sum(case when nResultMoney>0 then nResultMoney else 0 end) winMoney,
																															SUM(nTax) nTax,sum(nResultMoney) nResultMoney
																												from ",@table_clubgamescoredetail," 
																												where tEndTime>='",$startTime,"' and tEndTime<='",$endTime,"'  
																												GROUP BY nClubID
																					)temp3
															)temp GROUP BY temp.nClubID");
			PREPARE stmt_name1 FROM @sqlStr1; 
			EXECUTE stmt_name1;
			DEALLOCATE PREPARE stmt_name1;	
				
			set @sqlStr2=CONCAT("update Table_Web_GameReport report inner join (
														select IFNULL(SUM(nAmount),0) tasknAmount,FLOOR(nGameId/100) nGameType ,clubid from ",@table_clublogscore," 
														where nType=24 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
														GROUP BY clubid,nGameType
												)temp on report.nClubID=temp.clubid and report.nGameType=temp.nGameType 
																 and report.tEndTime='",$startTime,"' set report.tasknAmount=temp.tasknAmount");
			PREPARE stmt_name2 FROM @sqlStr2; 
			EXECUTE stmt_name2;
			DEALLOCATE PREPARE stmt_name2;	
				
				
			update Table_Web_GameReport report join 
			(
					select nClubId,ProxyType,GameProxyType from admin_proxy where ProxyType=1
			)temp on report.nClubId=temp.nClubId set report.ProxyType=temp.GameProxyType where report.tEndTime=$startTime;


			
			set @sqlStr3=CONCAT("update Table_Web_ClubReport report inner join (
														select IFNULL(SUM(nAmount),0) tasknAmount,clubid from ",@table_clublogscore," 
														where nType=24 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
														GROUP BY clubid
												)temp on report.nClubID=temp.clubid and report.tEndTime='",$startTime,"' 
															set report.tasknAmount=temp.tasknAmount");
			PREPARE stmt_name3 FROM @sqlStr3; 
			EXECUTE stmt_name3;
			DEALLOCATE PREPARE stmt_name3;	

			
			set @sqlStr4=CONCAT("update Table_Web_ClubReport report inner join 
														(
															select IFNULL(SUM(nAmount),0) recharge,count(1) rechargeCount,clubid from ",@table_clublogscore," 
															where nType=23 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
															GROUP BY clubid
														)temp on report.nClubID=temp.clubid and report.tEndTime='",$startTime,"' 
																	set report.recharge=temp.recharge,report.rechargeCount=temp.rechargeCount");
			PREPARE stmt_name4 FROM @sqlStr4; 
			EXECUTE stmt_name4;
			DEALLOCATE PREPARE stmt_name4;	
				
				
			set @sqlStr5=CONCAT("update Table_Web_ClubReport report inner join 
														(
															select nClubId,count(1) rechargeNumber 
															from (
																	select clubid nClubId,nPlayerID from ",@table_clublogscore,"  
																	where nType=23 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
																	GROUP BY nClubId,nPlayerID
															)temps 
															GROUP BY nClubId
														) temp on report.nClubId=temp.nClubId and report.tEndTime='",$startTime,"' set report.rechargeNumber=temp.rechargeNumber");
			PREPARE stmt_name5 FROM @sqlStr5; 
			EXECUTE stmt_name5;
			DEALLOCATE PREPARE stmt_name5;	

				
			set @sqlStr6=CONCAT("update Table_Web_ClubReport report 
														inner join 
														(
																	select nClubId,IFNULL(SUM(firstRecharge),0) firstRecharge,IFNULL(sum(firstRechargeCount),0) firstRechargeCount,'",$startTime,"' tEndTime 
																	from (																			
																					select nClubId,nPlayerID,IFNULL(nAmount,0) firstRecharge,count(1) firstRechargeCount
																					from(																												
																								select nClubId,nPlayerID,CreateTime,(select log.nAmount from ",@table_clublogscore,"  log 
																																										 where log.nType=23 and log.nPlayerID=temp2.nPlayerID 
																																													and log.clubid=temp2.nClubId and log.CreateTime=temp2.CreateTime limit 0,1) nAmount
																								from (								
																												select nClubId,nPlayerID,MIN(CreateTime) CreateTime 
																												from
																												(																													
																													select a.clubid nClubId,a.nPlayerID,a.CreateTime,a.nAmount from ",@table_clublogscore,"  a
																													where nType=23 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
																															and not exists(select b.nPlayerID from table_webdata_playerscore  b 
																																						 where b.nRechargeCount>0 and b.nRechargeAmount>0 and b.tEndTime<'",$startTime,"' and a.nPlayerID=b.nPlayerID  and a.clubid=b.nClubId)
																												)temp1  GROUP BY nClubId,nPlayerID																																	
																										)temp2
																							 )temp3 GROUP BY nClubId,nPlayerID
																				 )temp3 GROUP BY nClubId
														) tempbody on report.nClubId=tempbody.nClubId and report.tEndTime='",$startTime,"' 
																				set report.firstRecharge=tempbody.firstRecharge,report.firstRechargeCount=tempbody.firstRechargeCount");
			PREPARE stmt_name6 FROM @sqlStr6; 
			EXECUTE stmt_name6;
			DEALLOCATE PREPARE stmt_name6;	
			
				
			set @sqlStr7=CONCAT("update Table_Web_ClubReport report inner join (
														select IFNULL(SUM(nAmount),0) withdrawal,count(1) withdrawalCount,clubid from ",@table_clublogscore,"  
														where nType=28 and  CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
														GROUP BY clubid
											)temp on report.nClubID=temp.clubid and report.tEndTime='",$startTime,"' 
														set report.withdrawal=temp.withdrawal,report.withdrawalCount=temp.withdrawalCount");
			PREPARE stmt_name7 FROM @sqlStr7; 
			EXECUTE stmt_name7;
			DEALLOCATE PREPARE stmt_name7;	
				
			set @sqlStr8=CONCAT("update Table_Web_ClubReport report 
														inner join 
														(
															select nClubId,count(1) withdrawalNumber 
															from (
																	select clubid nClubId,nPlayerID from ",@table_clublogscore," 
																	where nType=28 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"' 
																	GROUP BY nClubId,nPlayerID
															)temps 
															GROUP BY nClubId
														) temp on report.nClubId=temp.nClubId and report.tEndTime='",$startTime,"' 
																		set report.withdrawalNumber=temp.withdrawalNumber");
			PREPARE stmt_name8 FROM @sqlStr8; 
			EXECUTE stmt_name8;
			DEALLOCATE PREPARE stmt_name8;	

				
			set @sqlStr9=CONCAT("update Table_Web_ClubReport report inner join (
														select IFNULL(SUM(nAmount),0) getRebate,clubid from ",@table_clublogscore,"  
														where nType=26 and CreateTime>='",$startTime,"' and CreateTime<='",$endTime,"'
														GROUP BY clubid
											)temp on report.nClubID=temp.clubid and report.tEndTime='",$startTime,"' 
														set report.getRebate=temp.getRebate");
			PREPARE stmt_name9 FROM @sqlStr9; 
			EXECUTE stmt_name9;
			DEALLOCATE PREPARE stmt_name9;	
				
				
				update Table_Web_ClubReport report join 
				(
						select nClubId,ProxyType,GameProxyType from admin_proxy where ProxyType=1
				)temp on report.nClubId=temp.nClubId set report.ProxyType=temp.GameProxyType where report.tEndTime=$startTime;
				
				
				insert into table_web_clubreport_AdminH5(nPlayCount,nRound,nBetScore,nValidBet,winMoney,nTax,nResultMoney,tEndTime,dayAddCount,dayAddCountValid,nRoundCount,TasknAmount)
				select SUM(nPlayCount),SUM(nRound),SUM(nBetScore),SUM(nValidBet),SUM(winMoney),SUM(nTax),SUM(nResultMoney),DATE_FORMAT(tEndTime,'%Y-%m-%d') days,SUM(dayAddCount),
							 SUM(dayAddCountValid),SUM(nRoundCount),SUM(tasknAmount)
				from Table_Web_ClubReport report  
				where report.ProxyType=1 and report.nClubID<>10001 and tEndTime>=$startTime and tEndTime<=$endTime	
				GROUP BY days;

				
				insert into table_web_clubreport_AdminApp
										(nPlayCount,nRound,nBetScore,nValidBet,winMoney,nTax,nResultMoney,tEndTime,dayAddCount,
										 dayAddCountValid,nRoundCount,TasknAmount,recharge,withdrawal,getRebate,
										 rechargeCount,rechargeNumber,withdrawalCount,withdrawalNumber,firstRechargeCount,firstRecharge)
				select SUM(nPlayCount),SUM(nRound),SUM(nBetScore),SUM(nValidBet),SUM(winMoney),SUM(nTax),SUM(nResultMoney),DATE_FORMAT(tEndTime,'%Y-%m-%d') days,SUM(dayAddCount),
							 SUM(dayAddCountValid),SUM(nRoundCount),SUM(tasknAmount),SUM(recharge),SUM(withdrawal),SUM(getRebate),
							 SUM(rechargeCount),SUM(rechargeNumber),SUM(withdrawalCount),SUM(withdrawalNumber),SUM(firstRechargeCount),SUM(firstRecharge)
				from Table_Web_ClubReport report  
				where report.ProxyType=2  and report.nClubID<>10001 and tEndTime>=$startTime and tEndTime<=$endTime		
				GROUP BY days ;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsRedemption
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsRedemption`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_StatisticsRedemption`(
		
)
begin 
			declare _beginTime varchar(20) default CONCAT(date_sub(CURDATE(),INTERVAL 1 day),' 00:00:00');
			declare _endTime varchar(20) default CONCAT(date_sub(CURDATE(),INTERVAL 1 day),' 23:59:59');			
			declare _nClubID,_nPlayerId,_nAmount int default 0;
			
			declare done int default false;
			declare cur cursor for select nClubId,nPlayerId,SUM(nAmount) nAmount from table_statistics_earnings where CreateTime>=_beginTime and CreateTime<=_endTime 
														 GROUP BY nClubId,nPlayerId;
			
			declare continue handler for not found set done = true;   
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubID,_nPlayerId,_nAmount;
			
			if done then  
					leave read_loop;    
			end if;
					
					if exists (select nClubId from table_web_redemptionlog where nClubId=_nClubID and nPlayerId=_nPlayerId and IsRedemption=0) then 
							update table_web_redemptionlog set nAmount=nAmount+_nAmount,ModifyDate=NOW() where nClubId=_nClubID and nPlayerId=_nPlayerId and IsRedemption=0;
					else 
							
							insert into table_web_redemptionlog(nClubId,nPlayerId,nAmount,IsRedemption,ModifyDate)
							values(_nClubID,_nPlayerId,_nAmount,0,NOW());
					end if;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsRoundSum
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsRoundSum`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_StatisticsRoundSum`(
	

)
begin 
		
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');
			insert into Table_Web_Round(nClubID,nGameType,nTableID,nRound,tEndTime)
			select nClubID,nGameType,nTableID,nRound,_startDate 
			from (
						select nClubID,nGameType,nTableID,nRound from table_clubgamescore where tEndTime>=_startDate and tEndTime<=_endDate
						
						union all 
						select nClubID,nGameType,nTableID,count(nRound) nRound from table_club_hundred_game_score2 
						where tEndTime>=_startDate and tEndTime<=_endDate
						GROUP BY nClubID,nGameType,nTableID
					)temp;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsUserDataQuery
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsUserDataQuery`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_StatisticsUserDataQuery`(
	

)
begin 
		
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');
			#战绩
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_startDate);

			set @sqlStr=CONCAT("insert into Table_Web_UserDataQuery(nClubID,nPlayerID,nGameType,nTableID,nBaseScore,nBetScore,nResult,nResultMoney,nTax,nPlayerScore,tEndTime)
													select nClubID,nPlayerID,nGameType,nTableID,nBaseScore,nBetScore,nResultMoney as nResult,nResultMoney,nTax,nPlayerScore,tEndTime 
													from ",@table_clubgamescoredetail," where bRobot=0 and  tEndTime>='",_startDate,"' and tEndTime<='",_endDate,"'");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsUserDataQuery_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsUserDataQuery_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_StatisticsUserDataQuery_Pre`(
	

)
begin 
		
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');
			#战绩
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",_startDate);

			set @sqlStr=CONCAT("insert into Table_Web_UserDataQuery(nClubID,nPlayerID,nGameType,nTableID,nBaseScore,nBetScore,nResult,nResultMoney,nTax,nPlayerScore,tEndTime)
													select nClubID,nPlayerID,nGameType,nTableID,nBaseScore,nBetScore,nResultMoney as nResult,nResultMoney,nTax,nPlayerScore,tEndTime 
													from ",@table_clubgamescoredetail," where bRobot=0 and  tEndTime>='",_startDate,"' and tEndTime<='",_endDate,"'");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsUserScoreChange
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsUserScoreChange`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_StatisticsUserScoreChange`(
	

)
begin 
		
			declare _startDate varchar(19) default CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(CURDATE(),interval 1 day),' 23:59:59');

			#积分表
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_startDate);

			set @sqlStr=CONCAT("insert into Table_Web_UserScoreChange(nClubID,nPlayerID,nGameID,nTableID,nType,nAmount,nScore,CreateTime)
													select clubid,nPlayerID,0,nTableID,nType,nAmount,nScore,CreateTime from ",@table_clublogscore,"
													where nType<90 and CreateTime>='",_startDate,"' and CreateTime<='",_endDate,"' and bRobot=0");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsUserScoreChange_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsUserScoreChange_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_StatisticsUserScoreChange_Pre`(
	

)
begin 
		
			declare _startDate varchar(19) default CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(CURDATE(),interval 1 day),' 23:59:59');

			#积分表
			set @table_clublogscore=Fun_Web_GetNewTableNameByDate("table_clublogscore",_startDate);

			set @sqlStr=CONCAT("insert into Table_Web_UserScoreChange(nClubID,nPlayerID,nGameID,nTableID,nType,nAmount,nScore,CreateTime)
													select clubid,nPlayerID,0,nTableID,nType,nAmount,nScore,CreateTime from ",@table_clublogscore,"
													where nType<90 and CreateTime>='",_startDate,"' and CreateTime<='",_endDate,"' and bRobot=0");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsWinLoseMonitor
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsWinLoseMonitor`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_StatisticsWinLoseMonitor`(
	
	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",$startTime);

			set @sqlStr=CONCAT("insert into Table_Web_WinLoseMonitor(nClubID,nPlayerId,szThirdAccount,nGameType,nRound,nBetScore,nValidBet,nTax,nResultMoney,tEndTime)
													select temp.nClubID,temp.nPlayerId,users.szThirdAccount,temp.nGameType,temp.nRound,temp.nBetScore,temp.nValidBet,nTax, temp.nResultMoney,'",$startTime,"' from 
													(
															select 
																		nClubID,nPlayerId,nGameType,count(nRound) nRound,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,SUM(nTax) nTax, SUM(nResultMoney) nResultMoney
															from ",@table_clubgamescoredetail," where tEndTime between '",$startTime,"' and '",$endTime,"'
															GROUP BY nClubID,nGameType,nPlayerId
													)temp left join table_user users on temp.nPlayerId=users.nPlayerId and users.bRobot=0");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_StatisticsWinLoseMonitor_Pre
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_StatisticsWinLoseMonitor_Pre`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` PROCEDURE `Pro_Web_StatisticsWinLoseMonitor_Pre`(
	
	in $startTime varchar(20),
	in $endTime varchar(20)
)
begin 
			#战绩、积分表
			set @table_clubgamescoredetail=Fun_Web_GetNewTableNameByDate("table_clubgamescoredetail",$startTime);

			set @sqlStr=CONCAT("insert into Table_Web_WinLoseMonitor(nClubID,nPlayerId,szThirdAccount,nGameType,nRound,nBetScore,nValidBet,nTax,nResultMoney,tEndTime)
													select temp.nClubID,temp.nPlayerId,users.szThirdAccount,temp.nGameType,temp.nRound,temp.nBetScore,temp.nValidBet,nTax, temp.nResultMoney,'",$startTime,"' from 
													(
															select 
																		nClubID,nPlayerId,nGameType,count(nRound) nRound,SUM(nBetScore) nBetScore,SUM(nValidBet) nValidBet,SUM(nTax) nTax, SUM(nResultMoney) nResultMoney
															from ",@table_clubgamescoredetail," where tEndTime between '",$startTime,"' and '",$endTime,"'
															GROUP BY nClubID,nGameType,nPlayerId
													)temp left join table_user users on temp.nPlayerId=users.nPlayerId and users.bRobot=0");
			PREPARE stmt_name FROM @sqlStr; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_ClubHundDataGroup
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_ClubHundDataGroup`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_ClubHundDataGroup`(
		
)
begin 
			
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');
			insert into Table_Statistics_ClubHundSum(nClubId,nGameId,nHundredType,CreateTime)
			select temp.nClubID,temp.nGameID,temp.nHundredType,_startDate 
			from(
						select score.nClubID,score.nGameID,score.nHundredType from table_club_hundred_game_score2 score
						where score.tEndTime>=_startDate and score.tEndTime<=_endDate 
						GROUP BY  score.nClubID,score.nGameID,score.nHundredType
					) temp;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_ClubHundDataSum
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_ClubHundDataSum`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_ClubHundDataSum`(
		
)
begin 
			
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');
			declare _nClubId,_nGameId,_nHundredType int default 0;
			
			declare done int default false;
			declare cur cursor for select nClubId,nGameId,nHundredType from Table_Statistics_ClubHundSum where CreateTime>=_startDate and CreateTime<=_endDate;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId,_nGameId,_nHundredType;
			
			if done then					
					leave read_loop;    
			end if;

					
					select count(DISTINCT(score.nBankID)) into @Number1 from table_club_hundred_game_score2 score 
					where score.nClubId=_nClubId and score.nGameId=_nGameId and score.nHundredType=_nHundredType and score.tEndTime>=_startDate and score.tEndTime<=_endDate;

					
					select count(score.nRound),sum(score.nTotalbet) into @Number2,@Number5 from table_club_hundred_game_score2 score 
					where score.nClubId=_nClubId and score.nGameId=_nGameId and score.nHundredType=_nHundredType and score.tEndTime>=_startDate and score.tEndTime<=_endDate;

					
					select count(nPlayerID) into @Number3 from 
					(
							select score.nBankID nPlayerID from table_club_hundred_game_score2 score 
							where score.nClubId=_nClubId and score.nGameId=_nGameId and score.nHundredType=_nHundredType and score.tEndTime>=_startDate and score.tEndTime<=_endDate
							union
							select detail.nPlayerID nPlayerID from table_club_hundred_game_score_detail2 detail
							where detail.nClubId=_nClubId and detail.nGameId=_nGameId and detail.nHundredType=_nHundredType and detail.tEndTime>=_startDate and detail.tEndTime<=_endDate
					)temp;

					
					select IFNULL(SUM(nWinScore),0) into @Number6 from table_club_hundred_game_score_detail2 
					where nClubID=_nClubId and nGameID=_nGameId and nHundredType=_nHundredType  and nWinScore<0 and tEndTime>=_startDate and tEndTime<=_endDate;

					
					select IFNULL(SUM(nWinScore),0) into @Number7 from table_club_hundred_game_score_detail2 
					where nClubID=_nClubId and nGameID=_nGameId and nHundredType=_nHundredType  and nWinScore>0 and tEndTime>=_startDate and tEndTime<=_endDate;
					
					
					select IFNULL(SUM(score.nBankResult),0) into @Number8 from table_club_hundred_game_score2 score 
					where score.nClubId=_nClubId and score.nGameId=_nGameId and score.nHundredType=_nHundredType 
					and score.nBankResult<0 and score.tEndTime>=_startDate and score.tEndTime<=_endDate;
					
					
					select IFNULL(SUM(score.nBankResult),0) into @Number9 from table_club_hundred_game_score2 score 
					where score.nClubId=_nClubId and score.nGameId=_nGameId and score.nHundredType=_nHundredType and score.nBankResult>0 
								and score.tEndTime>=_startDate and score.tEndTime<=_endDate;
					
					
					select IFNULL(SUM(nAmount),0) into @Number15 from table_club_hundred_log_charge 
					where nClubID=_nClubId and nGameID=_nGameId and nHundredType=_nHundredType and nType>=10000 and CreateTime>=_startDate and CreateTime<=_endDate;

					
					select IFNULL(SUM(nAmount),0) into @Number16 from table_club_hundred_log_charge 
					where nClubID=_nClubId and nGameID=_nGameId and nHundredType=_nHundredType and nType=9000 and CreateTime>=_startDate and CreateTime<=_endDate;

					
					set @Number18=@Number15-@Number16;

					
					update Table_Statistics_ClubHundSum 
					set Number1=@Number1,Number2=@Number2,Number3=@Number3,Number5=@Number5,Number6=@Number6,
							Number7=@Number7,Number8=@Number8,Number9=@Number9,Number15=@Number15,Number16=@Number16,Number18=@Number18
					where nClubId=_nClubId and nGameId=_nGameId and nHundredType=_nHundredType and CreateTime>=_startDate and CreateTime<=_endDate;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_ClubHundredLose
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_ClubHundredLose`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_ClubHundredLose`(
		
)
begin 
			
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');
			
			insert into table_statistics_clubhundred(nClubId,nType,nPlayerId,nGameType,nHundredType,nAmount,CreateTime)
			select nClubId,2,nPlayerId,nGameType,nHundredType,nAmount,_startDate 
			from 
			(
						select nClubId,nPlayerId,nGameType,nHundredType,IFNULL(SUM(nTotalBetScore),0) nAmount 
						from table_club_hundred_game_score_detail2 where tEndTime>=_startDate and tEndTime<=_endDate 
						group by nClubId,nPlayerId,nGameType,nHundredType
			 )temp;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_ClubHundredWin
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_ClubHundredWin`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_ClubHundredWin`(
		
)
begin 
			
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');
			
			insert into table_statistics_clubhundred(nClubId,nType,nPlayerId,nGameType,nHundredType,nAmount,CreateTime)
			select nClubID,1,nPlayerID,nGameType,nHundredType,IFNULL(SUM(nAmount),0),_startDate from
			(

				select nClubID,nGameType,nHundredType, nBankID nPlayerID,nBankResult nAmount 
				from table_club_hundred_game_score2 where tEndTime>=_startDate and tEndTime<=_endDate 
				union all
				select nClubID,nGameType,nHundredType, nPlayerID,nWinScore nAmount 
				from table_club_hundred_game_score_detail2 where tEndTime>=_startDate and tEndTime<=_endDate
			)temp group by temp.nClubID,temp.nGameType,temp.nHundredType,temp.nPlayerID;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_ClubService
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_ClubService`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_ClubService`(
		
)
begin 
		
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');

			
			insert into table_statistics_clubservice(nType,nClubId,nTaxRate,nRoyaltyRate,CreateTime,nScore)
			select 1,big.nClubID, IFNULL(info.nTaxRateNormal,0), IFNULL(info.nTaxTRateNormal,0),_startDate,
                                (select IFNULL(SUM(ClubLog.nAmount),0)  
																 from Table_ClubLogPlatformScore ClubLog 
                                 where ClubLog.nType=5 and ClubLog.nClubID=big.nClubID and (ClubLog.CreateTime between _startDate and _endDate))
                        from Table_ClubGameScore big LEFT JOIN table_clubinfo info on big.nClubID=info.nClubID
                        where big.tEndTime between _startDate and _endDate
			GROUP BY date_format(big.tEndTime,'%Y-%m-%d'),big.nClubID;
			
			insert into table_statistics_clubservice(nType,nClubId,nTaxRate,nRoyaltyRate,CreateTime,nScore)
			select 2,big.nClubID,IFNULL(info.nTaxRateBig,0),IFNULL(info.nTaxTRateBig,0),_startDate,
																(select IFNULL(SUM(ClubLog.nAmount),0) 
																 from Table_ClubLogPlatformScore ClubLog 
																 where ClubLog.nType=7 and ClubLog.nClubID=big.nClubID and (ClubLog.CreateTime between _startDate and _endDate))
                        from Table_ClubBigGameScore big LEFT JOIN table_clubinfo info on big.nClubID=info.nClubID
                       where big.tEndTime between _startDate and _endDate
			GROUP BY date_format(big.tEndTime,'%Y-%m-%d'),big.nClubID;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_ExtensionDisburse
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_ExtensionDisburse`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_ExtensionDisburse`(
	
	in $nClubId int,
	in $gamePlayerId long,
	in $startDate varchar(20),
	in $endDate varchar(20),
	out $DirectlyAmount long,
	out $ExtensionAmount long,
	out $SubExtensionAmount long,
	out $TargetAmount long,
	out $returnVal int
)
returnNode:begin 
		set $DirectlyAmount=0;
		set $ExtensionAmount=0;
		set $SubExtensionAmount=0;
		set $TargetAmount=0;
		set $returnVal=1;
		if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
				set $returnVal=-1;
				leave returnNode;
		end if;
		if not exists(select nPlayerId from table_user where nPlayerId=$gamePlayerId and nActive=1) then
				set $returnVal=-1;
				leave returnNode;
		end if;
		if not exists(select nClubID from table_clubmember where nLevel<=2  and nstatus=1 and nClubID=$nClubId and nPlayerID=$gamePlayerId) then
				set $returnVal=-1;
				leave returnNode;
		end if;
		select IFNULL(sum(nAmount),0) into $DirectlyAmount from table_statistics_earnings where nClubId=$nClubId and nType=1 and CreateTime>=$startDate and CreateTime<=$endDate;
		select IFNULL(sum(nAmount),0) into $ExtensionAmount from table_statistics_earnings where nClubId=$nClubId and nType=2 and CreateTime>=$startDate and CreateTime<=$endDate;
		select IFNULL(sum(nAmount),0) into $SubExtensionAmount from table_statistics_earnings where nClubId=$nClubId and nType=3 and CreateTime>=$startDate and CreateTime<=$endDate;
		select IFNULL(sum(nAmount),0) into $TargetAmount from table_statistics_earnings where nClubId=$nClubId and nType=4 and CreateTime>=$startDate and CreateTime<=$endDate;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_ReturnServerFee
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_ReturnServerFee`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_ReturnServerFee`(
		
)
begin 
			
			declare _startDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(date_sub(curdate(),interval 1 day),' 23:59:59');
			declare _nClubID,_nPlayerId,_nAmount int default 0;
			
			declare done int default false;
			
			declare cur cursor for select t.nClubID,t.sourceid nPlayerId, SUM(t.nAmount)nAmount from
															(
																select core1.nClubID,core1.nAmount,core1.sourceid from Table_ClubLogPlatformScore core1
																LEFT JOIN table_clubmember mem on core1.nClubID=mem.nClubID and core1.sourceid=mem.nPlayerId 
																where mem.nStatus=1 and mem.nFreeServiceFee=1 and core1.nType>=90 
																and core1.CreateTime>=_startDate and core1.CreateTime<_endDate 
															)t GROUP BY t.nClubID,t.sourceid;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubID,_nPlayerId,_nAmount;
			
			if done then					
					leave read_loop;    
			end if;
						select nScore into @clubScore from table_clubinfo where nClubID=_nClubID;
						
						if @clubScore>_nAmount then 
									
								select nScore into @nPlayerScore from table_clubmember where nClubID=_nClubID and nPlayerID=_nPlayerId and nStatus=1;

								
								update table_clubinfo set nScore=@clubScore-_nAmount where nClubID=_nClubID;

								
								update table_clubmember set nScore=@nPlayerScore+_nAmount where nClubID=_nClubID and nPlayerID=_nPlayerId and nStatus=1;
								
								
								insert into Table_ClubLogScore(nPlayerID,nAmount,nScore,nType,szDesc,clubid) 
								values(_nPlayerId,_nAmount,(@nPlayerScore+_nAmount),16,'返还服务费',_nClubID);
								
								insert into Table_ClubLogPlatformScore(nClubID,nAmount,nScore,nType,szDesc,sourceid,targetid) 
								values(_nClubID,_nAmount,(@clubScore-_nAmount),13,'返还服务费',_nPlayerId,0);
						else 
						
								insert into table_club_arrears(nPlayerID,nClubID,nAmount,nStatus)values(_nPlayerId,_nClubID,_nAmount,0);
						end if;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_Target
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_Target`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_Target`(

)
begin 
		
			declare _startDate varchar(19) default CONCAT(date_sub(CURDATE(),interval 7 day),' 00:00:00');
			
			declare _endDate varchar(19) default CONCAT(CURDATE(),' 00:00:00');
			
			delete from table_web_target;
			
			
			if exists(select Id from table_clubmember where nstatus=1 and nlevel=1 and nextenid>0) then 
					update table_clubmember set nextenid=0 where nstatus=1 and nlevel=1 and nextenid>0; 
			end if;
			insert into table_web_target(nClubId,nPlayerId,nAmount,nExtenID,nExtenDivision)
			select t.nClubID,t.sourceid nPlayerId, SUM(t.nAmount)nAmount,0,0 from
			(
				select core1.nClubID,core1.nAmount,core1.sourceid from Table_ClubLogPlatformScore core1 
				left JOIN table_clubinfo info on core1.nClubID=info.nClubID
				where info.nStatus=1 and core1.nClubID in(select auth.nClubID from table_club_info_notauthority auth where auth.nStatus=1 and auth.nLevel=17) 
							and core1.nType>=90
							and core1.CreateTime>=_startDate and core1.CreateTime<_endDate 
			)t GROUP BY t.nClubID,t.sourceid;
			
			update table_web_target 
			set nExtenID=(select mem1.nExtenID from table_clubmember mem1 
										where table_web_target.nClubId=mem1.nClubId and table_web_target.nPlayerId=mem1.nPlayerId 
										order by mem1.tJoinTime  desc limit 0,1
										),
					nExtenDivision=(select mem2.nExtenDivision from table_clubmember mem2 
										where table_web_target.nClubId=mem2.nClubId and table_web_target.nPlayerId=mem2.nPlayerId 
										order by mem2.tJoinTime  desc limit 0,1);
		
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_Target1
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_Target1`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_Target1`(
		
)
begin 
			
			declare _tmpnPlayerId,_temnExtenID,_isContinue int default 0;
			declare _nClubID,_nPlayerId,_nAmount,_nExtenID int default 0;	
			
			declare done int default false;
			declare cur cursor for select nClubId,nPlayerId,nAmount,nExtenID from table_web_target;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubID,_nPlayerId,_nAmount,_nExtenID;
			
			if done then					
					leave read_loop;    
			end if;
							set _tmpnPlayerId=_nPlayerId;
							set _temnExtenID=_nExtenID;
							set _isContinue=1;
							while _isContinue=1  do
									
									if _temnExtenID>0 then 											
											if exists(select Id from table_web_target where nClubId=_nClubID and nPlayerId=_temnExtenID) then 
														update table_web_target set totalnAmount=totalnAmount+_nAmount where nClubId=_nClubID and nPlayerId=_temnExtenID;
														select nPlayerId,nExtenID into @nPlayerId,@nExtenID from table_clubmember where nClubId=_nClubID and nPlayerId=_temnExtenID order by tJoinTime desc limit 0,1;
														set _tmpnPlayerId=@nPlayerId;
														set _temnExtenID=@nExtenID;
														set _isContinue=1;
														
											else
														insert into table_web_target(nClubId,nPlayerId,nAmount,nExtenID,nExtenDivision)values(_nClubID,_temnExtenID,0,0,0);														
														select nExtenID,nExtenDivision into @nExtenID,@nExtenDivision from table_clubmember where nClubId=_nClubID and nPlayerId=_temnExtenID order by tJoinTime desc limit 0,1;
														update table_web_target set nExtenID=@nExtenID,nExtenDivision=@nExtenDivision,totalnAmount=_nAmount where nClubId=_nClubID and nPlayerId=_temnExtenID;
														set _tmpnPlayerId=_temnExtenID;
														set _temnExtenID=@nExtenID;
														set _isContinue=1;
											end if;											
									else 
											
											set _isContinue=0;
									end if;
							end while;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_Target2
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_Target2`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_Target2`(
		
)
begin 
			declare _nClubId,_nPlayerId,_nExtenID,_totalnAmount,_isContinue,_temnnExtenID,_nExtenRate int default 0;
			
			declare done int default false;
			declare cur cursor for select nClubId,nPlayerId,nExtenID,totalnAmount from table_web_target where nExtenDivision=1 and totalnAmount>0;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId,_nPlayerId,_nExtenID,_totalnAmount;
			
			if done then					
					leave read_loop;    
			end if;
						set _isContinue=1;
						set _temnnExtenID=_nExtenID;
						while _isContinue=1  do 
								
								if _temnnExtenID=0 then 
										set _isContinue=0;
								else
										if exists(select Id from table_web_target where nClubId=_nClubId and nPlayerId=_temnnExtenID and nExtenDivision=1 and totalnAmount>0) then 	
													
													set _nExtenRate=70;
													if exists(select nclubId  from table_club_exten_config where nclubId=_nClubId) then 
															select nExtenRate into _nExtenRate from table_club_exten_config 
															where nclubId=_nClubId and nAmountLow<=_totalnAmount and _totalnAmount<nAmountHigh limit 0,1;
													else 
															select nExtenRate into _nExtenRate from table_club_exten_config 
															where nclubId=0 and nAmountLow<=_totalnAmount and _totalnAmount<nAmountHigh limit 0,1;
													end if;
													if _nExtenRate<=0 then 
															set _nExtenRate=70;
													end if;
													
													
													update table_web_target set upServiceFee=upServiceFee+ceil(_nExtenRate/1000*_totalnAmount) where nClubId=_nClubId and nPlayerId=_temnnExtenID and nExtenID>0;
													update table_web_target set rate=_nExtenRate where nClubId=_nClubId and nPlayerId=_nPlayerId;
													set _isContinue=0;
											else 
													select nExtenID into @nExtenID from table_web_target where nClubId=_nClubId and nPlayerId=_temnnExtenID;
													if @nExtenID=0 then 
															set _isContinue=0;
													else 
															set _temnnExtenID=@nExtenID;
															set _isContinue=1;	
													end if;
										end if;	
								end if;				
						end while;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_Target3
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_Target3`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_Target3`(
		
)
begin 
			
			
			declare _nClubId,_nPlayerId,_totalnAmount,_rate,_upServiceFee int default 0;
			
			declare done int default false;
			declare cur cursor for select nClubId,nPlayerId,totalnAmount,rate,upServiceFee from table_web_target where nExtenDivision=1 and totalnAmount>0 and nExtenID>0;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nClubId,_nPlayerId,_totalnAmount,_rate,_upServiceFee;
			
			if done then					
					leave read_loop;    
			end if;
						set @selfEarnings=ceil(_rate/1000*_totalnAmount-_upServiceFee);
						if @selfEarnings>0 then 
								
								update table_web_target set selfEarnings=@selfEarnings where nClubId=_nClubId and nPlayerId=_nPlayerId;
										insert into table_Statistics_Earnings(nType,nClubId,nPlayerId,nTargetId,nRate,nAmount,nScore) 
								values(4,_nClubId,_nPlayerId,0,_rate,@selfEarnings,_totalnAmount);
								
								if exists (select nClubId from table_web_redemptionlog where nClubId=_nClubId and nPlayerId=_nPlayerId and IsRedemption=0) then 
										update table_web_redemptionlog set nAmount=nAmount+@selfEarnings,ModifyDate=NOW() where nClubId=_nClubId and nPlayerId=_nPlayerId and IsRedemption=0;
								else 
										
										insert into table_web_redemptionlog(nClubId,nPlayerId,nAmount,IsRedemption,ModifyDate)
										values(_nClubId,_nPlayerId,@selfEarnings,0,NOW());
								end if;
						end if;
			
			end loop;
			
			close cur;
		
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_Statistics_WaitReturnServerFee
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_Statistics_WaitReturnServerFee`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_Statistics_WaitReturnServerFee`(
		
)
begin 
			declare _nPlayerId,_nClubID,_nAmount int default 0;
			
			declare done int default false;
			
			declare cur cursor for select arre.nPlayerID,arre.nClubID,sum(arre.nAmount) nAmount 
																		from table_club_arrears arre left join table_clubmember mem on arre.nClubID=mem.nClubID and arre.nPlayerId=mem.nPlayerId 
																		where arre.nStatus=0 and mem.nStatus=1  
																		GROUP BY arre.nClubID,arre.nPlayerID;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _nPlayerId,_nClubID,_nAmount;
			
			if done then					
					leave read_loop;    
			end if;
						select nScore into @clubScore from table_clubinfo where nClubID=_nClubID;
						
						if @clubScore>_nAmount then 
									
								select nScore into @nPlayerScore from table_clubmember where nClubID=_nClubID and nPlayerID=_nPlayerId and nStatus=1;

								
								update table_clubinfo set nScore=@clubScore-_nAmount where nClubID=_nClubID;

								
								update table_clubmember set nScore=@nPlayerScore+_nAmount where nClubID=_nClubID and nPlayerID=_nPlayerId and nStatus=1;
								
								
								insert into Table_ClubLogScore(nPlayerID,nAmount,nScore,nType,szDesc,clubid) 
								values(_nPlayerId,_nAmount,(@nPlayerScore+_nAmount),16,'返还服务费',_nClubID);
								
								insert into Table_ClubLogPlatformScore(nClubID,nAmount,nScore,nType,szDesc,sourceid,targetid) 
								values(_nClubID,_nAmount,(@clubScore-_nAmount),13,'返还服务费',_nPlayerId,0);
								
								
								update table_club_arrears set nStatus=1,DoneTime=NOW() where nPlayerID=_nPlayerId and nClubID=_nClubID and nStatus=0;
						end if;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_SuccessOrder
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_SuccessOrder`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_SuccessOrder`(
		/*
		创建时间:2019-11-22
		修改时间:2020-10-18
		功能描述:完成出款
		参数描述:·$Id					订单表主键Id
							$szOrder 		订单号
							$nClubId 		俱乐部Id
							$optionUserId 		后台操作人UserId
							$szRemark 		撤回备注
	*/
	in $Id int,
	in $szOrder varchar(128),
	in $nClubId int,
	in $optionUserId int,
	in $szRemark varchar(128),
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;
				end if;			
				if not exists(select szOrder from table_pyramid_examine  where Id=$Id  and szOrder=$szOrder and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnVal;
				end if;
				if not exists(select szOrder from table_third_order  where nType=4 and szOrder=$szOrder and nClubID=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnVal;
				end if;
				#操作人
				select UserName into @UserName from admin_user where UserId=$optionUserId;
				#获取提现订单状态
				select nFlag,nPlayerID into @nFlag,@nPlayerID from table_pyramid_examine  where ID=$Id and szOrder=$szOrder and nClubID=$nClubId;
				if @nFlag=7 or @nFlag=8 then #  7付款中   8超时							
							#nType 1-兑入;2-兑出;3-客户直充;4-客户提现
							#nStatus 0-处理中;1-成功 (兑入,兑出,客户直充,提现成功时);2-失败;;3-提交成功（客户提现中间过程）;4-手动确认成功（充值异常时的处理）;5-超时;6-超时到账
							update table_third_order set nStatus=1,ConfirmTime=NOW(),szMark=$szRemark where szOrder=$szOrder and nClubID=$nClubId;
							
							#写入记录
							 SELECT nSubVal,nAmount INTO @nSub,@commission FROM table_third_order WHERE szorder = $szOrder;
               SELECT nScore INTO @uscore FROM table_clubmember WHERE nPlayerID =@nPlayerID AND nClubID=$nClubId;
               #最终完成写用户积分变动28的记录--2020-10-18修改
               #CALL pr_club_changeLogClubScore3(0,@nPlayerID,$nClubId,-@commission,@uscore,28,$szOrder,'客户提现');
								call pr_club_changeLogClubScore3_comman(@nPlayerID,0,0,-@commission,$szOrder,$optionUserId,@uscore,28,0,0,'客户提现',$nClubId,0);
							#nFlag 1-待客服审核;;2-待财务审核;3-财务已提交，待真实转账完成;4-最终成功;5-失败;6-拒绝;7-付款中（后台程序已标记）;8-超时;9-超时到达
							update table_pyramid_examine set nFlag=4,szRemark=$szRemark,FinanceAccount=@UserName,tFinanceActTime=NOW() 
							where ID=$Id and szOrder=$szOrder and nClubID=$nClubId;

							set $returnVal=1;
							set $resultMsg='成功';
							leave returnVal;
				elseif @nFlag=9 then #9 超时到达
							update table_third_order set nStatus=1,ConfirmTime=NOW(),szMark=$szRemark where szOrder=$szOrder and nClubID=$nClubId;

							#nFlag 1-待客服审核;;2-待财务审核;3-财务已提交，待真实转账完成;4-最终成功;5-失败;6-拒绝;7-付款中（后台程序已标记）;8-超时;9-超时到达
							update table_pyramid_examine set nFlag=4,szRemark=$szRemark,FinanceAccount=@UserName,tFinanceActTime=NOW() 
							where ID=$Id and szOrder=$szOrder and nClubID=$nClubId and nFlag=9;	
							set $returnVal=1;
							set $resultMsg='成功';
							leave returnVal;
				else 
						set $returnVal=-1;
						set $resultMsg='订单已被处理';
						leave returnVal;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_web_SynMatchCofig
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_web_SynMatchCofig`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_web_SynMatchCofig`(
		/*
			历史运营商同步比赛配置场次配置
		*/
)
BEGIN

		#同步历史运营商比赛配置
		set @currTime=NOW();
		delete from table_match_cfg where nClubId<>10001 and nServerId>8005;

		insert into table_match_cfg(nGuid,nClubId,nGameType,nServerId,nMatchName,nValid,nSortId,nConfigJson,tCreateTime,tModifyTime)
		select cfg.nGuid,proxy.nClubId,cfg.nGameType,cfg.nServerId,cfg.nMatchName,cfg.nValid,cfg.nSortId,cfg.nConfigJson,@currTime,@currTime 
		from table_match_cfg cfg,admin_proxy proxy
		where cfg.nClubId=10001 and proxy.ProxyType=1 and proxy.nClubId<>10001 and cfg.nServerId>8005;

		#更新nGuid
		update table_match_cfg set nGuid=MD5(CONCAT(nGuid,Id)) where nClubId<>10001 and nServerId>8005;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_SysAnalysisDataStati
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_SysAnalysisDataStati`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_SysAnalysisDataStati`(
/*
		创建时间:2020-08-28
		修改时间:2021-04-14
		功能描述:Admin后台更新时--数据同步
	*/
	in $startDate varchar(20),#开始时间--2019-04-01
	in $endDate varchar(20)		#结束时间--2019-05-01
)
begin 
			declare _tempData varchar(20) default $startDate;
			while _tempData<$endDate do 
						#call Pro_WebData_Fee(CONCAT(_tempData,' 00:00:00'),CONCAT(_tempData,' 23:59:59'));
							call Pro_WebData_RoomCardRoundStati(_tempData);
						#插入俱乐部排行榜表
							insert into Table_WebData_RoomCardSortClub(nClubId,openRoomNum,roundNum,tEndTime)
							select nClubId,IFNULL(SUM(openRoomNum),0),IFNULL(SUM(roundNum),0),CONCAT(_tempData,' 00:00:00') 
							from Table_WebData_RoomCardRoundStatiClub where tEndTime>=CONCAT(_tempData,' 00:00:00') and tEndTime<=CONCAT(_tempData,' 23:59:59')
							GROUP BY nClubId;
							
							#更新 俱乐部排行榜消耗钻石数【3俱乐部内消耗+11俱乐部房退钻】
							update Table_WebData_RoomCardSortClub report join 
							(
										select nClubId,IFNULL(SUM(nDiamond),0) expendDiamondNum from table_league_diamond_log 
										where nType in(3,11) and CreateTime>=CONCAT(_tempData,' 00:00:00') and CreateTime<=CONCAT(_tempData,' 23:59:59')
										GROUP BY nClubId
							)temp on report.nClubId=temp.nClubId set report.expendDiamondNum=temp.expendDiamondNum
							where report.tEndTime>=CONCAT(_tempData,' 00:00:00') and report.tEndTime<=CONCAT(_tempData,' 23:59:59');

						set _tempData=date_sub(_tempData,interval -1 day);
			end while;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_SysAnalysisDataStati_test
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_SysAnalysisDataStati_test`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pro_Web_SysAnalysisDataStati_test`(
/*
		创建时间:2020-08-28
		修改时间:2020-08-28
		功能描述:Admin后台更新时--用户行为分析：新会员留存、游戏玩家转化、新增付费充值转化-数据同步
	*/
	in $startDate varchar(20),#开始时间--2019-04-01
	in $endDate varchar(20)		#结束时间--2019-05-01
)
begin 
			declare _tempData varchar(20) default $startDate;
			while _tempData<=$endDate do 
						call Pro_WebData_Analysis_DataStati_test(_tempData);
						set _tempData=date_sub(_tempData,interval -1 day);
			end while;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_SysAppSubLevel
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_SysAppSubLevel`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_SysAppSubLevel`(

)
begin 
			declare _userId,_createUserId,_tempUserId int default 0;	
			
			declare done int default false;
			declare cur cursor for select userId,createUserId from admin_proxy where ProxyType=2 and GameProxyType=2;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _userId,_createUserId;
			
			if done then					
					leave read_loop;    
			end if;
						set @isflag=1;
						set @num=0;
						set @nLevel=2;
						set _tempUserId=_createUserId;
						while @isflag=1 do 
								select ProxyType,CreateUserId into @ProxyType,@tempUserId from admin_proxy where UserId=_tempUserId;
								#运营商创建的子账号
								if @ProxyType=1 then 
											update admin_proxy set nLevel=@nLevel where UserId=_userId; 
											set @isflag=0;
								else 
											set _tempUserId=@tempUserId;
											set @nLevel=@nLevel+1;
								end if;

								#防止死循环
								set @num=@num+1;
								if @num>50 then 
											set @isflag=0;											
								end if;
						end while;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_SysH5SubLevel
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_SysH5SubLevel`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_SysH5SubLevel`(

)
begin 
			declare _userId,_createUserId,_tempUserId int default 0;	
			
			declare done int default false;
			declare cur cursor for select userId,createUserId from admin_proxy where ProxyType=2 and GameProxyType=1;
			
			declare continue handler for not found set done = true;
			
			open cur;  
			
			read_loop:loop  
			
			fetch cur into _userId,_createUserId;
			
			if done then					
					leave read_loop;    
			end if;
						set @isflag=1;
						set @num=0;
						set @nLevel=2;
						set _tempUserId=_createUserId;
						while @isflag=1 do 
								select ProxyType,CreateUserId into @ProxyType,@tempUserId from admin_proxy where UserId=_tempUserId;
								#运营商创建的子账号
								if @ProxyType=1 then 
											update admin_proxy set nLevel=@nLevel where UserId=_userId; 
											set @isflag=0;
								else 
											set _tempUserId=@tempUserId;
											set @nLevel=@nLevel+1;
								end if;

								#防止死循环
								set @num=@num+1;
								if @num>50 then 
											set @isflag=0;											
								end if;
						end while;
			
			end loop;
			
			close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_TiXianRefuse
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_TiXianRefuse`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_TiXianRefuse`(
		/*
				提现拒绝20210402
		*/
		in $szToken varchar(64),
		in $currUserId int,
		in $szRemark varchar(256),
		out $returnVal int,
		out $resultMsg varchar(64)
)
returnNode:BEGIN

			declare errno int default 0;
			declare continue handler for sqlexception set errno = 1;

			if not exists(select nPlayerId from table_agent_apply where szToken=$szToken) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnNode;
			end if;
			select nPlayerId,nStatus into @nPlayerId,@nStatus from table_agent_apply where szToken=$szToken;
			if @nStatus=0 then  
						set @approvalTime=NOW();
						#操作人
						select userName into @userName from admin_user where UserId=$currUserId;
						start transaction;
						#更新提现记录表
						update table_agent_apply set nStatus=2,approvalTime=@approvalTime,
									backInfo=@userName,Remarks=$szRemark 
						where szToken=$szToken and nPlayerId=@nPlayerId;
						
						select szThirdAccount into @szThirdAccount from table_user where nPlayerId=@nPlayerId;
						#添加日志
						set @logDes=CONCAT('【提现拒绝】运营用户:【',@userName,'】 拒绝了代理【ID:',@nPlayerId,',账号:',@szThirdAccount,'】的提现申请,订单号为:"',$szToken,'"');
						insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
						values(0,86,$currUserId,0,0,@logDes,@approvalTime);
			else 
						set $returnVal=-1;
						set $resultMsg='订单已处理';
						leave returnNode;
			end if;


			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-99;
					set $resultMsg='执行异常';
					rollback;
			end if;
			
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_TiXianSuccess
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_TiXianSuccess`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_TiXianSuccess`(
		/*
				提现通过20210402
		*/
		in $szToken varchar(64),
		in $currUserId int,
		in $szRemark varchar(256),
		out $returnVal int,
		out $resultMsg varchar(64)
)
returnNode:BEGIN

			declare errno int default 0;
			declare continue handler for sqlexception set errno = 1;

			if not exists(select nPlayerId from table_agent_apply where szToken=$szToken) then 
						set $returnVal=-1;
						set $resultMsg='订单不存在';
						leave returnNode;
			end if;
			set @totalnAmount=0;#账户余额
			select nPlayerId,nStatus,nAmount,nType into @nPlayerId,@nStatus,@nAmount,@nType from table_agent_apply where szToken=$szToken;
			if @nType=1 then 
					if not exists(select nPlayerId from table_agent_info where nPlayerId=@nPlayerId) then 
							set $returnVal=-1;
							set $resultMsg='代理不存在';
							leave returnNode;
					else 
							select nAmount into @totalnAmount from table_agent_info where nPlayerId=@nPlayerId;
					end if;
			elseif @nType=2 then 
					if not exists(select nPlayerId from table_citypartner_info where nPlayerId=@nPlayerId) then 
							set $returnVal=-1;
							set $resultMsg='城市合伙人不存在';
							leave returnNode;
					else 
							select nAmount into @totalnAmount from table_citypartner_info where nPlayerId=@nPlayerId;
					end if;
			else 
					set $returnVal=-1;
					set $resultMsg='提现类型不存在';
					leave returnNode;
			end if;
			if @nStatus=0 then
						if @totalnAmount<@nAmount then 
								set $returnVal=-1;
								set $resultMsg='提现余额不足';
								leave returnNode;
						else 
								set @approvalTime=NOW();
								#操作人
								select userName into @userName from admin_user where UserId=$currUserId;
								start transaction;
								#更新提现记录表
								update table_agent_apply set nStatus=1,approvalTime=@approvalTime,
											afterPayBalance=@totalnAmount-@nAmount,backInfo=@userName,Remarks=$szRemark 
								where szToken=$szToken and nPlayerId=@nPlayerId;

								set @nTypeDes='代理';
								if @nType=1 then 
										#更新代理账户
										update table_agent_info set nAmount=nAmount-@nAmount where nPlayerId=@nPlayerId;
								else 
									  #更新城市合伙人账户
										update table_citypartner_info set nAmount=nAmount-@nAmount where nPlayerId=@nPlayerId;
										set @nTypeDes='城市合伙人';
								end if;
								select szThirdAccount into @szThirdAccount from table_user where nPlayerId=@nPlayerId;
								#添加日志
								set @logDes=CONCAT('【提现成功】运营用户:【',@userName,'】 通过了',@nTypeDes,'【ID:',@nPlayerId,',账号:',@szThirdAccount,'】的提现申请,订单号为:"',$szToken,'"');
								insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des,CreateTime)
								values(0,86,$currUserId,0,0,@logDes,@approvalTime);
						end if;
			else 
						set $returnVal=-1;
						set $resultMsg='订单已处理';
						leave returnNode;
			end if;


			if errno=0 then
					set $returnVal=1;
					set $resultMsg='成功';
					commit;
			else
					set $returnVal=-99;
					set $resultMsg='执行异常';
					rollback;
			end if;
			
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_UnBindBankNo
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_UnBindBankNo`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_UnBindBankNo`(
		
	in $operateUserId int,
	in $nClubId int,
	in $nPlayerId int,
	in $szMark varchar(128),
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				if LENGTH($szMark)>60 then 
						set $returnVal=-1;
						set $resultMsg='备注超出限制(60个字符)';
						leave returnVal;
				end if;
				if not exists(select nClubId from admin_proxy where ProxyType=1 and gameProxyType=2 and nClubId=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该运营商【运营商ID',$nClubId,'】不存在');
						leave returnVal;
				end if;
				if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该会员【会员ID',$nPlayerId,'】不存在');
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubmember  where  nClubID=$nClubId and nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该会员【会员ID',$nPlayerId,'】不属于此运营商【运营商ID',$nClubId,'】');
						leave returnVal;
				end if;
				if exists(select bankno from table_payment_info where nClubID=$nClubId and nPlayerID=$nPlayerId and nType=2 and nStatus=1) then
						select bankno into @bankno from table_payment_info 
						where nClubID=$nClubId and nPlayerID=$nPlayerId and nType=2 and nStatus=1 ORDER BY ID desc limit 0,1;
						
						
						select UserName into @UserName from admin_user where UserId=$operateUserId;
						
						update table_payment_info set nStatus=0,disableTime=NOW(),customerAccount=@UserName,szMark=$szMark
						where nClubID=$nClubId and nPlayerID=$nPlayerId and nType=2 and nStatus=1;
						
						
						select szThirdAccount into @szThirdAccount from table_user where nPlayerId=$nPlayerId;
						set @adminLog=CONCAT('【解绑银行卡】运营用户:【',@UserName,'】解绑了会员【会员账号:',@szThirdAccount,'(会员ID:',$nPlayerId,')】的银行卡：',@bankno);
						
						set @logType=20;
						insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des) values($nClubId,@logType,$operateUserId,$nPlayerId,0,@adminLog);
						set $returnVal=1;
						set $resultMsg='解绑成功';
						leave returnVal;
				else 
						set $returnVal=-1;
						set $resultMsg='该会员尚无可解绑的银行卡号';
						leave returnVal;
				end if;	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_UnBindOpenId
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_UnBindOpenId`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_UnBindOpenId`(
		
	in $operateUserId int,
	in $nClubId int,
	in $nPlayerId int,
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				if not exists(select nClubId from admin_proxy where ProxyType=1 and gameProxyType=2 and nClubId=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该运营商【运营商ID',$nClubId,'】不存在');
						leave returnVal;
				end if;
				if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该会员【会员ID',$nPlayerId,'】不存在');
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubmember  where  nClubID=$nClubId and nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该会员【会员ID',$nPlayerId,'】不属于此运营商【运营商ID',$nClubId,'】');
						leave returnVal;
				end if;					
				select szOpenId into @szOpenId from table_user where nPlayerId=$nPlayerId;
				if @szOpenId is null then 
						set $returnVal=-1;
						set $resultMsg='该会员的设备码为空';
						leave returnVal;
				else  
						update table_user set szOpenId=default where nPlayerId=$nPlayerId;
				end if;
				
				select UserName into @UserName from admin_user where UserId=$operateUserId;
				
				select szThirdAccount into @szThirdAccount from table_user where nPlayerId=$nPlayerId;
				set @adminLog=CONCAT('【解绑设备码】运营用户:【',@UserName,'】解绑了会员【会员账号:',@szThirdAccount,'(会员ID:',$nPlayerId,')】的设备码:',@szOpenId);
				
				set @logType=48;
				insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des) values($nClubId,@logType,$operateUserId,$nPlayerId,0,@adminLog);
				set $returnVal=1;
				set $resultMsg='解绑成功';
				leave returnVal;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_UnBindPhone
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_UnBindPhone`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_UnBindPhone`(
		
	in $operateUserId int,
	in $nClubId int,
	in $nPlayerId int,
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				if not exists(select nClubId from admin_proxy where ProxyType=1 and gameProxyType=2 and nClubId=$nClubId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该运营商【运营商ID',$nClubId,'】不存在');
						leave returnVal;
				end if;
				if not exists(select nPlayerId from table_user where nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该会员【会员ID',$nPlayerId,'】不存在');
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubmember  where  nClubID=$nClubId and nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg=CONCAT('该会员【会员ID',$nPlayerId,'】不属于此运营商【运营商ID',$nClubId,'】');
						leave returnVal;
				end if;					
				select phone into @userInfo from table_user where nPlayerId=$nPlayerId;
				if @userInfo is null then 
						set $returnVal=-1;
						set $resultMsg='该会员的手机号码为空';
						leave returnVal;
				else  
						update table_user set phone=default,szOpenId=default,phounbindtime=NOW() where nPlayerId=$nPlayerId;
				end if;
				
				select UserName into @UserName from admin_user where UserId=$operateUserId;
				
				select szThirdAccount into @szThirdAccount from table_user where nPlayerId=$nPlayerId;
				set @adminLog=CONCAT('【解绑手机】运营用户:【',@UserName,'】解绑了会员【会员账号:',@szThirdAccount,'(会员ID:',$nPlayerId,')】的手机号码:',@userInfo);
				
				set @logType=18;
				insert into Admin_Log(nClubId,Type,UserId,TargetId,Amount,Des) values($nClubId,@logType,$operateUserId,$nPlayerId,0,@adminLog);
				set $returnVal=1;
				set $resultMsg='解绑成功';
				leave returnVal;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_UpdateClubMsg
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_UpdateClubMsg`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_UpdateClubMsg`(
	
	in $nClubId int,
	in $gamePlayerId int,
	in $szNoteMsg varchar(256),
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnNode:begin
		
		if not exists(select nClubId from table_clubinfo where nStatus=1 and  nClubId=$nClubId) then 
			set $returnVal=-1;
			set $resultMsg='俱乐部不存在';
			leave returnNode;
		end if;
		if exists(select nClubId from table_clubinfo where nStatus=1 and nClubId=$nClubId and szNoteMsg=$szNoteMsg) then 
			set $returnVal=1;
			set $resultMsg='成功';
			leave returnNode;
		end if;
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId and CreatePlayerID=$gamePlayerId) then 
				set $returnVal=-1;
				set $resultMsg='尚无修改俱乐部公告权限';
				leave returnNode;	
		end if;
			
			
			update table_clubinfo set szNoteMsg=$szNoteMsg where nClubId=$nClubId;
			
			call Pro_Web_AddEnterPriseLog($nClubId,30,$gamePlayerId,0,CONCAT('创始人(ID:',$gamePlayerId,')修改俱乐部公告为:"',$szNoteMsg,'"'));
			set $returnVal=1;
			set $resultMsg='成功';
			leave returnNode;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_UpdateClubUserRate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_UpdateClubUserRate`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_UpdateClubUserRate`(

	in $nClubId int,
	in $gamePlayerId int,
	in $nDirectlyRate int,
	in $nExtensionRate int,
	in $nSubExtensionRate int,
	out $returnVal int,
	out $resultMsg varchar(50)

)
returnNode:begin 
				if ($nDirectlyRate+$nExtensionRate+$nSubExtensionRate)>1000 then 
						set $returnVal=-1;
						set $resultMsg='用户收益比例错误';
						leave returnNode;	
				end if;
				if not exists(select nClubID from table_clubinfo where nClubID=$nClubId and nstatus=1) then
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnNode;	
				end if;
				if not exists(select nPlayerId from table_user where nPlayerId=$gamePlayerId and nActive=1) then
						set $returnVal=-1;
						set $resultMsg='用户不存在';
						leave returnNode;
				end if;
				if exists (select nClubID from table_club_info_notauthority where nClubID=$nClubId and nStatus=1 and nLevel=16) then 
						set $returnVal=-1;
						set $resultMsg='尚无此操作权限';
						leave returnNode;
				end if;
				if not exists (select nClubID from table_clubinfo where nClubID=$nClubId and CreatePlayerID=$gamePlayerId) then 
						set $returnVal=-1;
						set $resultMsg='尚无此操作权限';
						leave returnNode;
				end if;
				if exists (select nClubID from table_clubinfo where nClubID=$nClubId and nDirectlyRate=$nDirectlyRate and nExtensionRate=$nExtensionRate and nSubExtensionRate=$nSubExtensionRate) then 
						set $returnVal=1;
						set $resultMsg='成功';
						leave returnNode;
				end if;
				update table_clubinfo set nDirectlyRate=$nDirectlyRate,nExtensionRate=$nExtensionRate,nSubExtensionRate=$nSubExtensionRate where nClubID=$nClubId; 
				
				call Pro_Web_AddEnterPriseLog($nClubId,34,$gamePlayerId,0,CONCAT('(创始人Id:',$gamePlayerId,'),修改了俱乐部用户收益比例'));
				set $returnVal=1;
				set $resultMsg='成功';			
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_UpdateExtenDesc
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_UpdateExtenDesc`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_UpdateExtenDesc`(
	
	in $EnterPriseId varchar(36),
	in $Remark varchar(64),
	out $returnVal int,
	out $resultMsg varchar(50),
	out $nClubId int,
	out $oldRemark varchar(64)
)
returnNode:begin 
		if not exists(select EnterPriseID from enterprise where EnterPriseType=3 and EnterPriseID=$EnterPriseId) then 
				set $returnVal=-1;
				set $resultMsg='该推广代理不存在';
				leave returnNode;
		end if;
		
		select GroupNo,Remark into @nClubId,@szExtenDesc from enterprise where EnterPriseType=3 and EnterPriseID=$EnterPriseId;
		
		
		update enterprise set Remark=$Remark,UpdateTime=NOW() where EnterPriseType=3 and EnterPriseID=$EnterPriseId;
		
		update table_clubmember set szExtenDesc=$Remark where nClubID=@nClubId and szExtenDesc=@szExtenDesc;
		
		
		
		
		select CreatePlayerID into @CreatePlayerID from table_clubinfo where nClubID=@nClubId;
		select AccountName into @AccountName from accountinfo where EnterPriseID=$EnterPriseId;
		call Pro_Web_AddEnterPriseLog(@nClubId,25,@CreatePlayerID,0,CONCAT('(创始人ID:',@CreatePlayerID,')修改推广员代理(账号: ',@AccountName,') 的推广备注;',
			'推广备注由:"',@szExtenDesc,'"变更为','"',$Remark,'"'));
		set $returnVal=1;
		set $resultMsg='成功';
		set $nClubId=@nClubId;
		set $oldRemark=@szExtenDesc;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_UpdateUserPwd
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_UpdateUserPwd`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_UpdateUserPwd`(
		
							in $userName varchar(32),
							in $oldUserPwd varchar(32),
							in $newUserPwd varchar(32),
							out $returnVal int,
							out $resultMsg varchar(100)
)
returnNode:begin 
		if not exists(select AccountId from accountinfo where  AccountName=$userName) then 
			set $returnVal=-1;
			set $resultMsg='账号不存在';
			leave returnNode;
		end if;		
		select EnterPriseID,`Password` into @EnterPriseID,@oldUserPwd from accountinfo where  AccountName=$userName;
		if $newUserPwd=@oldUserPwd then 
				set $returnVal=1;
				set $resultMsg='成功';
				leave returnNode;
		end if;
		if $oldUserPwd<>@oldUserPwd then 
				set $returnVal=-1;
				set $resultMsg='原密码错误';
				leave returnNode;
		end if;
		select GamePlayerId into @GamePlayerId  from enterprise where EnterPriseID=@EnterPriseID;
		update accountinfo set `Password`=$newUserPwd where  AccountName=$userName; 
		
		insert into enterpriselog(nClubId,operateType,operatePlayerId,targetPlayerId,remark)
		select nClubID,9,@GamePlayerId,0,CONCAT('用户(账号:"',$userName,'")修改密码成功') 
		from table_clubinfo where nStatus=1 and CreatePlayerID=@GamePlayerId;
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_UpdateWarningAmount
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_UpdateWarningAmount`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_UpdateWarningAmount`(
		

	in $nClubId int,
	in $gamePlayerId int,
	in $nAmount int,
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnNode:begin
		if $nAmount<=0 then 
			set $returnVal=-1;
			set $resultMsg='钻石预警值不能设置为0';
			leave returnNode;
		end if;
		if not exists(select nClubId from table_clubinfo where nStatus=1 and nClubId=$nClubId) then 
			set $returnVal=-1;
			set $resultMsg='俱乐部不存在';
			leave returnNode;
		end if;
		if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$gamePlayerId) then 
			set $returnVal=-1;
			set $resultMsg='用户不存在';
			leave returnNode;
		end if;
		if not exists(select nClubID from table_clubinfo where nStatus=1 and nClubID=$nClubId and CreatePlayerID=$gamePlayerId) then 
					set $returnVal=-1;
					set $resultMsg='尚无修改钻石预警值的操作权限';
					leave returnNode;
		end if;
		if exists(select nClubID from table_clubinfo where nClubID=$nClubId and nWarningAmount=$nAmount) then 
					set $returnVal=1;
					set $resultMsg='成功';
					leave returnNode;
		end if;
		select nWarningAmount into @nWarningAmount from table_clubinfo where nClubID=$nClubId;
		
		update table_clubinfo set nWarningAmount=$nAmount where nClubID=$nClubId;
		
		call Pro_Web_AddEnterPriseLog($nClubId,41,$gamePlayerId,0,CONCAT('创始人(ID:',$gamePlayerId,')修改俱乐部(ID:',$nClubId,')的钻石预警值:"',@nWarningAmount,'" 变更为"',$nAmount,'"'));
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pro_Web_UserLogin
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pro_Web_UserLogin`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pro_Web_UserLogin`(
		
							in $userName varchar(32),
							in $userPwd varchar(32),
							in $clientIPAddress varchar(20),
							out $gamePlayerId int,
							out $returnVal int,
							out $resultMsg varchar(100)
)
returnNode:begin 
		set $gamePlayerId=0;
		if $userName='' or $userPwd='' then 
			set $returnVal=-1;
			set $resultMsg='账号密码不能为空';
			leave returnNode;
		end if;
		if $clientIPAddress='' or LENGTH($clientIPAddress)<6 then 
			set $returnVal=-1;
			set $resultMsg='该账号尚未绑定游戏Id';
			leave returnNode;
		end if;
		if not exists(select AccountId from accountinfo where  AccountName=$userName and `Password`=$userPwd) then 
			set $returnVal=-1;
			set $resultMsg='账号或密码错误';
			leave returnNode;
		else 
				select EnterPriseID,`Status` into @EnterPriseID,@UserStatus from accountinfo where AccountName=$userName and `Password`=$userPwd;
				if @UserStatus!=1 then 
						set $returnVal=-1;
						set $resultMsg='账号已注销';
						leave returnNode;
				end if;
		end if;	
		if not exists(select EnterPriseID from enterprise where EnterPriseID=@EnterPriseID) then  
				set $returnVal=-1;
				set $resultMsg='账号不存在';
				leave returnNode;
		else 
				select IFNULL(GamePlayerId,0),IpAuthentication,`Status` into $gamePlayerId,@IpAuthentication,@EnterStatus from enterprise where EnterPriseID=@EnterPriseID;
				if @EnterStatus!=1 then 
						set $returnVal=-1;
						set $resultMsg='账号已禁用';
						leave returnNode;
				end if;
				if $gamePlayerId<=0 then 
						set $returnVal=-1;
						set $resultMsg='该账号尚未绑定游戏Id';
						leave returnNode;
				end if;
				if $gamePlayerId=666 then 
						set $returnVal=-1;
						set $resultMsg='运营账号不能登录手机管理后台';
						leave returnNode;
				end if;				
				if LENGTH(@IpAuthentication)<=0 or LENGTH(@IpAuthentication)<LENGTH($clientIPAddress) then 
						set $returnVal=-1;
						set $resultMsg='此设备尚未授权登录';
						leave returnNode;
				end if;
				if LOCATE($clientIPAddress,@IpAuthentication)<=0 then 
						set $returnVal=-1;
						set $resultMsg='此设备尚未授权登录';
						leave returnNode;
				end if;
				
				insert into enterpriselog(nClubId,operateType,operatePlayerId,targetPlayerId,remark)
				select nClubID,99,$gamePlayerId,0,CONCAT('用户(账号:"',$userName,'",登录IP:"',$clientIPAddress,'")登录成功') 
				from table_clubinfo where nStatus=1 and CreatePlayerID=$gamePlayerId;

				set $returnVal=1;
				set $resultMsg='成功';
		end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_Addmsg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_Addmsg`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_Addmsg`(IN `$intPlayerId` int,IN `$intMsgType` int,IN `$szMsgTitle` varchar(128),IN `$szMsgBody` varchar(1024),OUT `$ReturnVal` int,OUT `$nMsgId` int)
BEGIN
	insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) 
               values($intPlayerId,$intMsgType,$szMsgTitle ,$szMsgBody );
	select max(nMsgId) into $nMsgId from table_user_msg where nPlayerId=$intPlayerId ;
	set $ReturnVal=1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_AddOrSubPlayerDiamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_AddOrSubPlayerDiamond`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_AddOrSubPlayerDiamond`(
		in $intPlayerId int,
		in $intCount int,
		out $WarningMoney int
)
BEGIN
			declare _tmpDiamondCount1,_tmpDiamondCount2 int default 0;
			select nCardCount into _tmpDiamondCount1 from table_user where nPlayerId= $intPlayerId;
			if $intCount>0
			then
					set _tmpDiamondCount2 = _tmpDiamondCount1 + $intCount;
					update table_user set  nCardCount = _tmpDiamondCount2 where nPlayerId=$intPlayerId;
			else
					if _tmpDiamondCount1>=ABS($intCount)
					then
							set _tmpDiamondCount2 = _tmpDiamondCount1 - ABS($intCount);
							update table_user set  nCardCount = _tmpDiamondCount2 where nPlayerId=$intPlayerId;
					end if;	
			end if;
			set $WarningMoney=1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_AddOrSubPlayerJinBi
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_AddOrSubPlayerJinBi`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_AddOrSubPlayerJinBi`(
		IN $intPlayerId INT,
		IN $intCount INT
)
BEGIN
		DECLARE _tmpJinBiCount1,_tmpJinBiCount2 int DEFAULT 0;
		SELECT nJinBi INTO _tmpJinBiCount1 FROM table_user where nPlayerId= $intPlayerId;
		IF $intCount>0
			THEN
					SET _tmpJinBiCount2 = _tmpJinBiCount1 + $intCount;
					UPDATE table_user SET  nJinBi = _tmpJinBiCount2 where nPlayerId=$intPlayerId;
		ELSE
				IF _tmpJinBiCount1>=ABS($intCount)
				THEN
						SET _tmpJinBiCount2 = _tmpJinBiCount1 - ABS($intCount);
						UPDATE table_user set  nJinBi = _tmpJinBiCount2 where nPlayerId=$intPlayerId;
				END IF;
		END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ADDRoboteUser
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ADDRoboteUser`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `Pr_ADDRoboteUser`(
        IN  $nClubID    INT,
        IN  $nCounts    INT
)
BEGIN
	DECLARE _tmpTotal INT DEFAULT 0; 
	
	WHILE _tmpTotal < $nCounts DO     
                SET _tmpTotal = _tmpTotal + 1;
                INSERT INTO table_user(nCardCount,nJinBi,szCreateTime,nActive,szPass,szNickname,preLoginTime,preLoginIp,onlineSta,reser1) 
                VALUES(0,2000,NOW(),1,'123123','robot2021',NOW(),'127.0.0.1',1,1);
                
                INSERT INTO `table_league_club_member` (
                          `nClubID`,
                          `nPlayerID`,
                          `szNickName`,
                          `szBackName`,
                          `szWXAccount`,
                          `nLevel`,
                          `partner`,
                          `nStatus`,
                          `tJoinTime`,
                          `tExitTime`,
                          `nScore`,
                          `nLeCard`,
                          `nExtenID`,
                          `tFreezeTime`,
                          `nFreezeReason`,
                          `BigWinner`,
                          `szBan`
                        ) 
                        VALUES
                          (
                            $nClubID,
                            @@IDENTITY,
                            'robot',
                            'robot',
                            'wx',
                            3,
                            0,
                            1,
                            NOW(),
                            NULL,
                            0,
                            100,
                            0,
                            0,
                            0,
                            0,
                            NULL
                          ) ;
                          
	END WHILE;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_add_user_msg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_add_user_msg`;
DELIMITER ;;
CREATE DEFINER=`llj_user`@`%` PROCEDURE `pr_add_user_msg`(
	 in $owerid int 
	,in $type int
	,IN $msg varchar(256)
	,out $MsgId_ bigint
)
RT:BEGIN
INSERT INTO table_user_msg( nPlayerId,nMsgType,sMsgTitle,sMsgBody,nIsReward)  values 
($owerid,$type,$msg,$msg,0);
SELECT IFNULL(max(nmsgId),0) into $MsgId_ from table_user_msg where nPlayerId=$owerid;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_binding
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_binding`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_binding`(
IN  $nPlayerID      INT,   #用户ID
IN  $nAgentID       INT,   #要绑定的代理ID
OUT $nVal           INT    # 1-成功 0-用户不存在 2-代理不存在
)
RT:BEGIN
/*
绑定上级代理
*/
 
DECLARE _acctype   INT;
DECLARE _reser1    INT;
 
#检测用户是否存在
IF NOT EXISTS(SELECT 1 FROM Table_User WHERE nPlayerId=$nPlayerID ) THEN
    SET $nVal= 0;
    LEAVE RT;
END IF;  
 
#检测代理是否存在
IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nAgentID) THEN
    SET $nVal= 2;
    LEAVE RT;
END IF;  
 
SELECT acctype,`reser1` INTO _acctype,_reser1 FROM Table_User WHERE nPlayerId = $nPlayerID;
  
#设置用户的推荐码为代理ID，更新绑定时间
UPDATE Table_User SET extendCode = $nAgentID , BindingTime = NOW() WHERE nPlayerId = $nPlayerID;
 
#第一次绑定升商城等级为3
IF _reser1=1 THEN
        UPDATE Table_User SET reser1 = 3 WHERE nPlayerId = $nPlayerID;
END IF;
 
SET $nVal = 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_get_agentinfo
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_get_agentinfo`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_get_agentinfo`(
IN   $nPlayerID      INT,            #代理ID
OUT  $nVal           INT,            #返回值
OUT  $nTime1         INT,            #代理提现时间
OUT  $nTime2         INT             #城市合伙人提现时间
)
RT:BEGIN
/*
获取代理信息
*/
DECLARE _time1     TIMESTAMP; #代理申请
DECLARE _time2     TIMESTAMP; #城市合伙人申请
DECLARE _t         TIMESTAMP;
DECLARE _limittime INT;
SET $nTime1 = 0;
SET $nTime2 = 0;
 
#检测代理用户是否存在
IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nPlayerID) THEN
    SET $nVal = 0;
    LEAVE RT;
END IF; 
 
#2天限制
SET _limittime = 172800;
 
#测试用时间
#SET _limittime = 120;
 
SELECT a.aliAccount,a.aliName,a.nAmount,a.nLevel,a.ratio,IFNULL(b.nAmount,0) AS cp_amount, 
(SELECT IFNULL(SUM(nAmount),0) FROM table_agent_apply WHERE nPlayerId = $nPlayerID AND nType=1 AND nStatus=1) AS agent_rebate,
(SELECT IFNULL(SUM(nAmount),0) FROM table_agent_apply WHERE nPlayerId = $nPlayerID AND nType=2 AND nStatus=1) AS cp_rebate
FROM table_agent_info a left join `table_citypartner_info` b ON a.nPlayerId = b.nPlayerId WHERE a.nPlayerId = $nPlayerID;
 
#如果不存在代理申请待审核
IF NOT EXISTS (SELECT 1 FROM `table_agent_apply` WHERE `nPlayerID`= $nPlayerID AND nType=1 AND nStatus=0) THEN
 
    #查找最后的通过申请
    SELECT `ApprovalTime` INTO _time1 FROM `table_agent_apply` WHERE `nPlayerID`= $nPlayerID AND nType=1 AND nStatus=1 ORDEr BY ID DESC LIMIT 1;
    
    #如果没有最后通过的申请
    IF _time1 IS NULL THEN
        SET $nTime1 = 1;   #表示可以提现
    ELSE
        #计算时间是否超过时间限制
        IF TIMESTAMPDIFF(SECOND,_time1,NOW()) > _limittime THEN
           SET $nTime1 = 1;   #表示可以提现
        ELSE
           #计算还有多久才可以提现
           SET _t = DATE_ADD(_time1, INTERVAL _limittime SECOND);
           SET $nTime1 = TIMESTAMPDIFF(SECOND,NOW(),_t);
        END IF;
        
    END IF;
END IF;
 
#如果不存在城市合伙人申请待审核
IF NOT EXISTS (SELECT 1 FROM `table_agent_apply` WHERE `nPlayerID`= $nPlayerID AND nType=2 AND nStatus=0) THEN
        
    #查找最后的通过申请
    SELECT `ApprovalTime` INTO _time2 FROM `table_agent_apply` WHERE `nPlayerID`= $nPlayerID AND nType=2 AND nStatus=1 ORDER BY ID DESC LIMIT 1;
    #如果没有最后通过的申请
    IF _time2 IS NULL THEN
        SET $nTime2 = 1;   #表示可以提现
    ELSE
        #计算时间是否超过时间限制
        IF TIMESTAMPDIFF(SECOND,_time2,NOW()) > _limittime THEN
           SET $nTime2 = 1;   #表示可以提现
        ELSE
           #计算还有多久才可以提现
           SET _t = DATE_ADD(_time2, INTERVAL _limittime SECOND);
           SET $nTime2 = TIMESTAMPDIFF(SECOND,NOW(),_t);
        END IF;    
    END IF;
    
END IF;
 
SET $nVal = 1;
 	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_get_downline
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_get_downline`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_get_downline`(
IN   $nPlayerID      INT,            #代理ID
IN   $nTime          TINYINT,        #时间类型 1-近1天 2-近3天 3-近7天 4-近15天 5-近1个月
IN   $nPage          INT,            #第几页
OUT  $nTotal         INT             #总数据量
)
RT:BEGIN
/*
获取下线列表
*/
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _start  VARCHAR(32);
DECLARE _day    INT;
  
SET _count = 5;
SET _day   = 1;
  
IF $nPage <= 0 THEN
        SET $nPage = 1;
END IF;
  
SET _page = ($nPage-1)*_count;
SET $nTotal = 0;
 
#检测代理用户是否存在
IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nPlayerID) THEN
    LEAVE RT;
END IF;  
IF $nTime = 1 THEN
 SET _day = 0;
ELSEIF  $nTime = 2 THEN
 SET _day = 2;
ELSEIF  $nTime = 3 THEN
 SET _day = 6;
ELSEIF  $nTime = 4 THEN
 SET _day = 14;
ELSEIF  $nTime = 5 THEN
 SET _day = 29;
END IF;
 
SET _start = DATE_FORMAT( DATE_SUB(NOW(), INTERVAL _day DAY),"%Y-%m-%d 00:00:00" );
            
#从视角代理查下面成员，得到昵称，类型，ID，直属的充值额，直属返现，下级代理会员数，下级成员充值额，下级成员返利，分成比例
SELECT A.szNickName,A.acctype, t2.nplayerid, t2.cjin,t2.zhifan, COUNT(u1.nplayerid) downcount,IFNULL(B.nRecharge,0) down_recharge,
       
       #IFNULL(SELECT SUM(nAmount) FROM `table_agent_commission` WHERE nPlayerID=$nPlayerID AND `nSourceID` IN (SELECT `nSourceID` FROM `table_agent_commission` WHERE nPlayerID = t2.nplayerid),0 ) down_com,
       IFNULL((SELECT SUM(nAmount) FROM `table_agent_commission` WHERE nPlayerID=$nPlayerID AND `nSubAgentID` = t2.nplayerid AND `CreateTime`> _start),0) down_com,
       IFNULL(C.ratio,0) ratio,IFNULL(C.UpAgentID,0) UpAgentID
FROM table_user u1 RIGHT JOIN
(
            SELECT nplayerid,IFNULL(temp1.cjin,0) AS cjin, IFNULL(temp1.zhifan,0) AS zhifan FROM
            (
                    SELECT DISTINCT(nplayerid) FROM 
                    (
                    SELECT nplayerid FROM table_user WHERE extendcode = $nPlayerID AND `nActive` = 1 
                    UNION
                    SELECT nplayerid FROM `table_agent_info` WHERE upagentid = $nPlayerID
                    ) tid ORDER BY nplayerid LIMIT _page, _count
            )id1
            LEFT JOIN 
            (
                SELECT com1.nSourceID, IFNULL(SUM(com1.`nRecharge`),0) AS cjin ,IFNULL(SUM(com1.nAmount),0) AS zhifan
                FROM `table_agent_commission` com1 
                WHERE com1.`nPlayerID` = $nPlayerID AND ntype = 0 AND com1.`CreateTime` > _start
                GROUP BY com1.nSourceID
            )temp1 ON id1.`nplayerid` = temp1.nSourceID
)t2 ON u1.extendcode = t2.nplayerid
LEFT JOIN 
(
  SELECT nplayerid,szNickName,acctype FROM table_user WHERE acctype>=1
)A ON t2.nplayerid=A.nplayerid
LEFT JOIN 
(
  SELECT nplayerid,SUM(nRecharge) nRecharge FROM  table_agent_commission WHERE Createtime > _start
  GROUP BY nplayerid
)B ON t2.nplayerid=B.nplayerid
Left JOIN
(
#分成比例
#IFNULL( ( SELECT `ratio` FROM `table_agent_info` WHERE `nPlayerID` = t2.nplayerid), 0) ratio
  SELECT nplayerid, `UpAgentID`,`ratio` FROM  table_agent_info
  GROUP BY nplayerid
)C ON t2.nplayerid=C.nplayerid
 GROUP BY t2.nplayerid;
 
 
#总数量
SELECT COUNT(nPlayerId) INTO $nTotal FROM
(
    SELECT DISTINCT(nplayerid) FROM 
    (
            SELECT nplayerid FROM table_user WHERE extendcode = $nPlayerID AND `nActive` = 1 
            UNION
            SELECT nplayerid FROM `table_agent_info` WHERE upagentid = $nPlayerID
    ) tid1
 )tid2;
 
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_get_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_get_info`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_get_info`(
IN  $nPlayerID      INT,   #代理ID
OUT $nCount         INT,   #下级人数
OUT $nAct           INT    #近期活跃人数
)
RT:BEGIN
/*
获得代理的下级人数和近期活跃人数(7日内游戏)
*/
#检测代理用户是否存在
IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nPlayerID) THEN
    SET $nCount = 0;
    SET $nAct = 0;
    LEAVE RT;
END IF;
 
SELECT COUNT(nPlayerID) INTO $nCount FROM table_user where extendCode = $nPlayerID AND `nActive` = 1;
 
SELECT COUNT(DISTINCT(nplayerid)) INTO $nAct FROM `table_league_club_game_score_total` WHERE nplayerid IN 
(SELECT nplayerid FROM table_user WHERE extendCode = $nPlayerID) AND tCreateTime >= DATE_SUB(NOW(), INTERVAL 7 DAY);
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_get_ratiorank
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_get_ratiorank`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_get_ratiorank`(
IN   $nPlayerID      INT,            #代理ID
OUT  $nLow           INT,            #最低分成额   10000 = 100%
OUT  $nHigh          INT,            #最高分成额
OUT  $nVal           INT             #返回值
)
RT:BEGIN
/*
获取设置下级代理的分成额范围
*/
DECLARE _ra      INT;
DECLARE _downra  INT;
 
#检测代理用户是否存在
IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nPlayerID) THEN
    SET $nVal = 0;
    LEAVE RT;
END IF;  
#自己的分成额 
SELECT ratio INTO _ra FROM table_agent_info WHERE nPlayerId = $nPlayerID;
 
#下级里面最低的分成额
#select IFNULL(MIN(ratio),0) INTO _downra FROM table_agent_info WHERE `UpAgentID` = $nPlayerID;
 
SET $nHigh = _ra - 100;
#SET $nLow = _downra + 100;
SET $nLow = 1;
SET $nVal = 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_get_username
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_get_username`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_get_username`(
IN   $nPlayerID      INT,            #代理ID
OUT  $szName         vARCHAR(64),    #昵称
OUT  $nVal           INT             #返回值
)
RT:BEGIN
/*
获取用户的昵称
*/
#检测代理用户是否存在
IF NOT EXISTS(SELECT 1 FROM `table_user` WHERE nPlayerId = $nPlayerID AND `nActive` = 1) THEN
    SET $nVal = 0;
    LEAVE RT;
END IF;  
 
SELECT `szNickName` into $szName FROM table_user WHERE nPlayerId = $nPlayerID;
SET $nVal = 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_get_withdraw_record
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_get_withdraw_record`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_get_withdraw_record`(
IN   $nPlayerID      INT,            #代理ID
IN   $nPage          INT,            #第几页
OUT  $nTotal         INT             #总数据量
)
RT:BEGIN
/*
获取提现记录
*/
 
DECLARE _page   INT;
DECLARE _count  INT;
SET _count = 5;
 
IF $nPage <= 0 THEN
        SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
SET $nTotal = 0;
 
#检测代理是否存在
IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nPlayerID) THEN
    LEAVE RT;
END IF;
   
SELECT nPlayerID,nAmount,1 as nChannel,nStatus,UNIX_TIMESTAMP(ApplyTime) AS ApplyTime,nType FROM table_agent_apply 
WHERE nPlayerID = $nPlayerID AND ApplyTime >= DATE_SUB(NOW(), INTERVAL 45 DAY) ORDER BY ID DESC LIMIT _page, _count;
 
SELECT COUNT(ID) INTO $nTotal FROM table_agent_apply WHERE nPlayerID = $nPlayerID AND ApplyTime >= DATE_SUB(NOW(), INTERVAL 45 DAY);
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_pay_complete
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_pay_complete`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_pay_complete`(
IN $nPlayerID       INT
)
RT:BEGIN
/*
某个玩家充值完成，需要检测分成
*/
DECLARE done      INT DEFAULT FALSE;
DECLARE _id       BIGINT DEFAULT 0;
DECLARE _fee      INT DEFAULT 0;
DECLARE _playid   INT DEFAULT 0;
DECLARE _time     VARCHAR(32);
DECLARE _rval     INT DEFAULT 0;
DECLARE _rmsg     VARCHAR(64);
DECLARE cur CURSOR FOR SELECT id, nPlayerid, total_fee, create_date from `table_pay_log` WHERE nPlayerId = $nPlayerID AND create_date >= DATE_SUB(NOW(), INTERVAL 10 MINUTE) AND nCommFlag = 0;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
OPEN cur;  
    
    read_loop:LOOP  
    
    FETCH cur INTO _id,_playid,_fee,_time;
    
    IF done THEN                    
        LEAVE read_loop; 
    END IF;
    
    CALL  Pro_Web_AgentCommission(_playid,_fee*10,_time,_rval,_rmsg);
    #select _rval,_rmsg;
    
    #IF _rval = 1 THEN
    #分成计算成功
    UPDATE table_pay_log SET nCommFlag = 1 WHERE id = _id;       
    #END IF;
    
    END LOOP;
                    
CLOSE cur;    
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_pay_complete_20210627
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_pay_complete_20210627`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_agent_pay_complete_20210627`(
IN $nPlayerID       INT
)
RT:BEGIN
/*
某个玩家充值完成，需要检测分成
*/
DECLARE done      INT DEFAULT FALSE;
DECLARE _id       BIGINT DEFAULT 0;
DECLARE _fee      INT DEFAULT 0;
DECLARE _playid   INT DEFAULT 0;
DECLARE _time     VARCHAR(32);
DECLARE _rval     INT DEFAULT 0;
DECLARE _rmsg     VARCHAR(64);
DECLARE cur CURSOR FOR SELECT id, nPlayerid, total_fee, create_date from `table_pay_log` WHERE nPlayerId = $nPlayerID  AND nCommFlag = 0;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
OPEN cur;  
    
    read_loop:LOOP  
    
    FETCH cur INTO _id,_playid,_fee,_time;
    
    IF done THEN                    
        LEAVE read_loop; 
    END IF;
    
    CALL  Pro_Web_AgentCommission(_playid,_fee*10,_time,_rval,_rmsg);
    #select _rval,_rmsg;
    
    #IF _rval = 1 THEN
    #分成计算成功
    UPDATE table_pay_log SET nCommFlag = 1 WHERE id = _id;       
    #END IF;
    
    END LOOP;
                    
CLOSE cur;    
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_set_alipay
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_set_alipay`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_set_alipay`(
IN  $nPlayerID      INT,            #代理ID
IN  $szAliAccount   VARCHAR(128),   #支付宝账号   
IN  $szAliName      VARCHAR(128),   #支付宝姓名
OUT $nVal           INT             #返回值  1-成功 0-失败
)
RT:BEGIN
/*
设置支付宝信息
*/
#检测代理用户是否存在
IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nPlayerID) THEN
    SET $nVal = 0;
    LEAVE RT;
END IF;  
update table_agent_info SET `aliAccount` = $szAliAccount,`aliName` = $szAliName WHERE `nPlayerID` = $nPlayerID;
SET $nVal = 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_set_downagent
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_set_downagent`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_set_downagent`(
IN   $nPlayerID      INT,            #代理ID
IN   $nDownID        INT,            #下线ID
IN   $nRatio         INT,            #分成比例  10000 = 100%
OUT  $nVal           INT,            #返回值
OUT  $msg            VARCHAR(64)     #返回信息
)
RT:BEGIN
/*
设置下线为代理
*/
CALL Pro_Web_AddAgent(0,$nDownID,$nPlayerID,$nRatio,$nVal,$msg);
-- #检测代理用户是否存在
-- IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nPlayerID) THEN
--     SET $nVal = 0;
--     LEAVE RT;
-- END IF;
-- #检测下级是否已经是代理
-- IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nDownID) THEN
--     SET $nVal = 3;
--     LEAVE RT;
-- END IF;
-- SELECT `nLevel` INTO _level FROM `table_agent_info` WHERE `nPlayerID` = $nPlayerID;
-- select min(`ratio`) into _ra from table_agent_info WHERE `UpAgentID` = $nPlayerID;
-- #设置的分成比例不能比下线代理最低的还低，否则会出现负数
-- IF _ra >= $nRatio THEN
--     SET $nVal = 4;
--     LEAVE RT;
-- END IF;
-- #第3级代理不能再创建下级
-- IF _level >= 3 THEN
--     SET $nVal = 2;
--     LEAVE RT;
-- END IF;
-- #设置下级的代理标记 
-- UPDATE table_user SET acctype = 11 WHERE nPlayerId = $nDownID;
-- insert into `table_agent_info` (
--   `nPlayerID`,
--   `UpAgentID`,
--   `nLevel`,
--   `nAmount`,
--   `ratio`,
--   `CreateTime`
-- ) 
-- values
--   (
--     $nDownID,
--     $nPlayerID,
--     _level+1,
--     0,
--     $nRatio,
--     NOW()
--   ) ;
-- SET $nVal = 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_update_alipay
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_update_alipay`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_update_alipay`(
IN  $nPlayerID      INT,            #代理ID
IN  $szAliAccount   VARCHAR(128),   #支付宝账号   
OUT $nVal           INT             #返回值
)
RT:BEGIN
/*
更新支付宝信息
*/
#检测代理用户是否存在
IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nPlayerID) THEN
    SET $nVal = 0;
    LEAVE RT;
END IF;  
UPDATE table_agent_info SET `aliAccount` = $szAliAccount WHERE `nPlayerID` = $nPlayerID;
SET $nVal = 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_agent_withdraw
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_agent_withdraw`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_agent_withdraw`(
IN   $nPlayerID      INT,            #代理ID
IN   $nAmount        BIGINT,         #提现金额
IN   $nType          INT,            #申请类型 1-代理提现 2-城市合伙人提现
OUT  $nVal           INT             #返回值
)
RT:BEGIN
/*
代理提现
*/
 
DECLARE _balance  BIGINT;
DECLARE _tempamount  BIGINT;
DECLARE _token   VARCHAR(128);
DECLARE _account VARCHAR(128);
DECLARE _name    VARCHAR(128);
DECLARE _time     TIMESTAMP;
DECLARE _limittime  INT;
 
IF $nType<>2 THEN
        SET $nType = 1;
END IF;
 
#2天限制
SET _limittime = 172800;
 
#测试用时间
#SET _limittime = 120;
 
IF $nType = 1 THEN
        #检测代理用户是否存在
        IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$nPlayerID) THEN
            SET $nVal = 0;
            LEAVE RT;
        END IF;  
         
        #如果已经有提现申请，则不能申请
        IF EXISTS(SELECT 1 FROM table_agent_apply WHERE nPlayerID=$nPlayerID AND nType=1 AND nStatus=0) THEN
            SET $nVal = 3;
            LEAVE RT;
        END IF;
                 
        #检测金额是否足够提现(读取支付宝账号信息等)
        SELECT `nAmount`,`aliAccount`,`aliName` INTO _balance,_account,_name FROM `table_agent_info` WHERE `nPlayerID` = $nPlayerID;
        
        #检测距离上次提现成功是否超过限制时间
        SELECT `ApprovalTime` INTO _time FROM `table_agent_apply` WHERE `nPlayerID`= $nPlayerID AND nType=1 AND nStatus=1 ORDER BY ID DESC LIMIT 1;
        select _time;
        IF _time IS NOT NULL THEN
                IF TIMESTAMPDIFF(SECOND,_time,NOW()) < _limittime THEN
                    SET $nVal = 5;
                    LEAVE RT;                
                END IF;
        END IF;
        
ELSE
        #检测城市合伙人是否存在
        IF NOT EXISTS(SELECT 1 FROM `table_citypartner_info` WHERE nPlayerId=$nPlayerID) THEN
            SET $nVal = 0;
            LEAVE RT;
        END IF;  
         
        #如果已经有提现申请，则不能申请
        IF EXISTS(SELECT 1 FROM table_agent_apply WHERE nPlayerID=$nPlayerID AND nType=2 AND nStatus=0) THEN
            SET $nVal = 3;
            LEAVE RT;
        END IF;
        
        #读取支付宝账号信息等
        SELECT `aliAccount`,`aliName` INTO _account,_name FROM `table_agent_info` WHERE `nPlayerID` = $nPlayerID;
        
        #检测金额是否足够提现
        SELECT `nAmount` INTO _balance FROM `table_citypartner_info` WHERE `nPlayerID` = $nPlayerID;
        
        #检测距离上次提现成功是否超过限制时间
        SELECT `ApprovalTime` INTO _time FROM `table_agent_apply` WHERE `nPlayerID`= $nPlayerID AND nType=2 AND nStatus=1 ORDER BY ID DESC LIMIT 1;
        
        IF _time IS NOT NULL THEN
                IF TIMESTAMPDIFF(SECOND,_time,NOW()) < _limittime THEN
                    SET $nVal = 5;
                    LEAVE RT;                
                END IF;
        END IF;
              
END IF;
 
IF _balance < $nAmount THEN
    SET $nVal = 2;
    LEAVE RT;
END IF;
 
IF $nAmount <= 0 THEN
    SET $nVal = 4;
    LEAVE RT;
END IF;
 
SET _tempamount = $nAmount/1000;
 
#100的整数倍检测
IF MOD(_tempamount,100) > 0 THEN
    SET $nVal = 4;
    LEAVE RT;
END IF;
 
SET _token = CONCAT($nPlayerID,"-",UNIX_TIMESTAMP(NOW()),"-",ROUND(RAND()*(99999-10000)+10000));
 
#插入申请表
insert into `table_agent_apply` (
  `nPlayerID`,
  `nAmount`,
  `AfterPayBalance`,
  `ApplyTime`,
  `ApprovalTime`,
  `nStatus`,
  `szToken`,
  nType,
  `aliAccount`,
  `aliName`
) 
values
  (
    $nPlayerID,
    $nAmount,
    0,
    NOW(),
    NOW(),
    0,
    _token,
    $nType,
    _account,
    _name
  ) ;
   
SET $nVal = 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_ApiAddGoodsByAccount
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_ApiAddGoodsByAccount`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_ApiAddGoodsByAccount`(
    in $nClubID INT,
    in $nGoodsID INT,
    in $nNum     INT,
    in $szAccount  VARCHAR(64),
    in $szOrder  VARCHAR(64),
    in $szMark  VARCHAR(64),
    OUT $nIntOut INT
)
returnVal:BEGIN
    declare nIntPlayerID  INT;

IF $nNum <= 0 then
    SET $nIntOut = 4;
    LEAVE returnVal;
END IF;

IF NOT EXISTS(SELECT * FROM Table_User WHERE szThirdAccount = $szAccount AND nChannel = $nClubID) then
    SET $nIntOut = 0;
    LEAVE returnVal;
END IF;

IF NOT EXISTS(SELECT * FROM table_clubgoodsinfor WHERE nGoodsID = $nGoodsID) then
    SET $nIntOut = 2;
    LEAVE returnVal;
END IF;

IF EXISTS(SELECT * FROM table_clubGoodsOperatLog WHERE orderID = $szOrder and nClubID = $nClubID) then
    SET $nIntOut = 3;
    LEAVE returnVal;
END IF;


SELECT nplayerid into nIntPlayerID FROM Table_User WHERE szThirdAccount = $szAccount AND nChannel = $nClubID;

IF EXISTS(SELECT * FROM table_clubgoods WHERE nPlayerID = nIntPlayerID AND nClubID = $nClubID and nGoodsID = $nGoodsID) THEN
    UPDATE table_clubgoods SET num = @num := num + $nNum, lastOpTime=now() WHERE nPlayerID=nIntPlayerID AND nClubID=$nClubID  and nGoodsID = $nGoodsID;
ELSE
    INSERT INTO table_clubgoods(nplayerid,nClubID,nGoodsID,num,lastOpTime)
    VALUES (nIntPlayerID, $nClubID, $nGoodsID, $nNum,now());
    set @num = $nNum;
END IF;

INSERT INTO table_clubGoodsOperatLog 
    (orderID,nClubID,nPlayerID,nGoodsID,num,AfterMbNum,CreateTime,nState,nOperatType,OpratAccount,nGameType,nServerID,ReMark)
VALUES
    ($szOrder,$nClubID,nIntPlayerID,$nGoodsID,$nNum,@num,now(),1,1,nIntPlayerID,0,0,$szMark);   

SET $nIntOut = 1;
LEAVE returnVal;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_ApiCheckAddGoodsByOrder
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_ApiCheckAddGoodsByOrder`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_ApiCheckAddGoodsByOrder`(
    in $nClubID INT,
    in $szOrder  VARCHAR(64),
    OUT $nIntOut INT
)
returnVal:BEGIN
    IF EXISTS(SELECT * FROM table_clubGoodsOperatLog WHERE orderID = $szOrder AND nClubID = $nClubID ) THEN
        set $nIntOut = 1;
        LEAVE returnVal;
    ELSE
        set $nIntOut = 0;
        LEAVE returnVal;
    END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_ApiGetUserGoodsListByAccount
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_ApiGetUserGoodsListByAccount`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_ApiGetUserGoodsListByAccount`(
    in $nClubID INT,
    in $szAccount  VARCHAR(64),
    OUT $nIntOut INT
)
returnVal:BEGIN   
IF EXISTS(SELECT * FROM Table_User WHERE szThirdAccount = $szAccount AND nChannel = $nClubID) THEN

 	select goods.nGoodsID as GoodsId, goods.num as GoodsNum from table_clubgoods goods INNER JOIN Table_User users 
		on goods.nplayerid=users.nPlayerId WHERE users.szThirdAccount = $szAccount AND users.nChannel = $nClubID;
		
    SET $nIntOut = 1;
    LEAVE returnVal;
ELSE 
    SET $nIntOut = 0;
    LEAVE returnVal;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_auto_create_daydate_data
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_auto_create_daydate_data`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `pr_auto_create_daydate_data`(
	IN $startTime VARCHAR(30),
	IN $endTime VARCHAR(30)
)
begin
	
	declare i int;
	set i=1;
	

	SELECT (DATEDIFF($endTime,$startTime)) +1 into @intervals;
	set @startTime=$startTime;
		
	
	while(i<=@intervals) do
		
		insert into table_league_daydate(`ymd`) values(@startTime);
				
		set i=i+1;
		SET @startTime=DATE_ADD(@startTime,INTERVAL 1 DAY) ;
		
	end while;
	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_auto_create_table_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_auto_create_table_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `pr_auto_create_table_shard`(
	IN $startTime VARCHAR(30),
	IN $endTime VARCHAR(30),
	in $isDropTable int
)
begin
	
	declare i int;
	set i=1;
	set @oldDate='1970-01-01';
	
	if $startTime='next_month' and $endTime='next_month' then
	
		select date_add(curdate()-day(curdate())+1, interval 1 month) into @startTime;
		select last_day(date_add(curdate(), interval 1 month)) into @endTime;
		SELECT (DATEDIFF(@endTime,@startTime)) +1 into @intervals;
		
	ELSE
		
		SELECT (DATEDIFF($endTime,$startTime)) +1 into @intervals;
		set @startTime=$startTime;
		
	END IF;
	
	
	while(i<=@intervals) do
		
		select DATEDIFF(@startTime, @oldDate) * 100000000 into @interDay;
		
		SET @dateTable=date_format(@startTime,'%Y%m%d');
		
		if $isDropTable = 1 then
			set @sqlStrScoreDrop=concat("drop table if exists table_clublogscore",@dateTable,";");
			PREPARE stmt_name_score_drop FROM @sqlStrScoreDrop;
			EXECUTE stmt_name_score_drop;
			DEALLOCATE PREPARE stmt_name_score_drop;
		end if;
		
		set @sqlStrScoreCreate=concat("CREATE TABLE table_clublogscore",@dateTable," (
		  `ID` bigint(20) unsigned NOT NULL  AUTO_INCREMENT COMMENT '索引',
		  `nPlayerID` int(11) NOT NULL COMMENT '玩家ID',
		  `nGameID` int(11) NOT NULL DEFAULT '0' COMMENT '游戏ID',
		  `nTableID` int(11) NOT NULL DEFAULT '0' COMMENT '桌号ID',
		  `nAmount` bigint(20) NOT NULL COMMENT '改变数量',
		  `szOrder` varchar(128) DEFAULT NULL COMMENT '现金网上下分时的订单号',
		  `operateID` int(11) DEFAULT NULL COMMENT '后台上下分时，对应操作者ID',
		  `nScore` bigint(20) NOT NULL COMMENT '剩余数量',
		  `nType` int(11) NOT NULL COMMENT '类型：1-系统赠送，2-系统扣除，3-俱乐部赠送，4-捐赠，5-游戏获得，6-游戏消耗，7-扣税，8-道具消耗，9-开房消耗，10-百人场消耗，11-百人场获得，12-百人场扣税',
		  `nSubType` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT '后台上分子类型 1注册送金、2首充送金、3首登送金、4连续登陆送金，5投注送金、6银行卡充值返利、7天天投注送豪礼、8邀请好友送彩金、 9代理彩金奖上奖、10新人见面礼、11红包大闯关、0其他',
		  `nTaxRate` int(11) NOT NULL DEFAULT '0' COMMENT '税率整数，需除以1000（对应扣费时的税率）',
		  `szDesc` varchar(256) NOT NULL COMMENT '备注',
		  `clubid` int(11) DEFAULT '0' COMMENT '捐赠给哪个俱乐部或者其他',
		  `CreateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发生时间',
		  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
		  PRIMARY KEY (`ID`),
		  KEY `idx_nPlayerID_clubid_CreateTime` (`nPlayerID`,`clubid`,`CreateTime`),
		  KEY `idx_clubid_nType_CreateTime` (`clubid`,`nType`,`CreateTime`),
		  KEY `idx_CreateTime` (`CreateTime`),
		  KEY `idx_nType_CreateTime` (`nType`,`CreateTime`)
		) ENGINE=InnoDB AUTO_INCREMENT=",@interDay," DEFAULT CHARSET=utf8mb4 COMMENT='玩家俱乐部积分变更Log表';");
		PREPARE stmt_name_score_create FROM @sqlStrScoreCreate;
		EXECUTE stmt_name_score_create;
		DEALLOCATE PREPARE stmt_name_score_create;
	
		if $isDropTable = 1 then
			set @sqlStrDetailDrop=concat("drop table if exists table_clubgamescoredetail",@dateTable,";");
			PREPARE stmt_name_detail_drop FROM @sqlStrDetailDrop;
			EXECUTE stmt_name_detail_drop;
			DEALLOCATE PREPARE stmt_name_detail_drop;
		end if;
		
		set @sqlStrDetailCreate=concat("CREATE TABLE table_clubgamescoredetail",@dateTable," (
		  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
		  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
		  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
		  `nChairID` int(11) DEFAULT '0' COMMENT '座位号',
		  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round',
		  `nRound` int(11) NOT NULL COMMENT '当前局数',
		  `nBaseScore` int(11) NOT NULL COMMENT '底分',
		  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
		  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
		  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
		  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
		  `bRobot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '机器人标志 0-不是 1-是 (默认0)',
		  `szCardData` varchar(256) DEFAULT NULL COMMENT '牌型详情',
		  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
		  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
		  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
		  `nResultMoney` int(11) DEFAULT '0' COMMENT '成绩中积分部分',
		  `nPlayerScore` bigint(20) DEFAULT '0' COMMENT '剩余分数(扣税后)',
		  `nTax` int(11) DEFAULT '0' COMMENT '扣税额',
		  `nGameType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '1代表牛牛，2代表三公...',
		  `nServerID` int(11) DEFAULT '0' COMMENT '新手场,初，中，高等',
		  `nCardData` varchar(256) NOT NULL DEFAULT '' COMMENT '玩家的手牌',
		  `nBankID` int(11) NOT NULL DEFAULT '0' COMMENT '庄家id',
		  `szExtChar` text COMMENT '扩展字串（Json）用于差异化',
		  `CardData` text COMMENT '牌局详情',
		  PRIMARY KEY (`ID`),
		  KEY `idx_szToken` (`szToken`(28)),
		  KEY `idx_tEndTime` (`tEndTime`),
		  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
		  KEY `idx_nPlayerID_nGameType_tEndTime` (`nPlayerID`,`nGameType`,`tEndTime`),
		  KEY `idx_nPlayerID_nClubID_tEndTime` (`nPlayerID`,`nClubID`,`tEndTime`),
		  KEY `idx_nGameType_tEndTime` (`nGameType`,`tEndTime`)
		) ENGINE=InnoDB AUTO_INCREMENT=",@interDay," DEFAULT CHARSET=utf8mb4 COMMENT='俱乐部6人房模式牌局明细表（每小局结束时写入）';");
		PREPARE stmt_name_detail_create FROM @sqlStrDetailCreate;
		EXECUTE stmt_name_detail_create;
		DEALLOCATE PREPARE stmt_name_detail_create;
	
	
		if $isDropTable = 1 then
			set @sqlStrThirdDrop=concat("drop table if exists table_third_score_detail",@dateTable,";");
			PREPARE stmt_name_third_drop FROM @sqlStrThirdDrop;
			EXECUTE stmt_name_third_drop;
			DEALLOCATE PREPARE stmt_name_third_drop;
		end if;
		
		set @sqlStrThirdCreate=concat("CREATE TABLE table_third_score_detail",@dateTable," (
		  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引',
		  `DataType` int(11) NOT NULL COMMENT '数据类型:1-战绩,2-任务完成记录,3-返利',
		  `SubDataType` int(11) NOT NULL COMMENT '当为任务完成记录时是做为任务ID',
		  `nClubID` int(11) NOT NULL COMMENT '俱乐部ID',
		  `nTableID` int(11) NOT NULL COMMENT '桌子ID',
		  `nChairID` int(11) DEFAULT '0' COMMENT '椅子ID',
		  `szToken` varchar(64) DEFAULT NULL COMMENT 'clubid-roomid-time-round-chair (把椅子ID加上去) 为空时生成：俱乐部ID-时间秒数-3位随机数',
		  `Accounts` varchar(50) DEFAULT NULL COMMENT '玩家账号(从member表中获得)',
		  `nPlayCount` tinyint(4) NOT NULL COMMENT '本局参与人数',
		  `tStartTime` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '开始时间',
		  `tEndTime` timestamp(3) NULL DEFAULT '0000-00-00 00:00:00.000' COMMENT '结束时间',
		  `nPlayerID` int(11) DEFAULT '0' COMMENT '玩家ID',
		  `nEnterScore` bigint(20) DEFAULT '0' COMMENT '带入分数:为进房时的分数',
		  `nBetScore` int(11) DEFAULT '0' COMMENT '下注',
		  `nValidBet` int(11) DEFAULT '0' COMMENT '有效投注',
		  `nResultMoney` int(11) DEFAULT '0' COMMENT '盈利,',
		  `nTax` int(11) DEFAULT '0' COMMENT '扣税额, 任务的资讯积分',
		  `nGameType` tinyint(4) NOT NULL COMMENT '游戏ID',
		  `nServerID` int(11) DEFAULT '0' COMMENT '服务器ID',
		  `CardData` text COMMENT '牌局详情:对局类游戏时记录公共牌信息，每个人的牌信息，方便后台显示。任务的Mask',
		  `LineCode` varchar(64) NOT NULL DEFAULT '' COMMENT '玩家站点信息，用于内部区分',
		  PRIMARY KEY (`ID`),
		  KEY `idx_nClubID_tEndTime` (`nClubID`,`tEndTime`),
		  KEY `idx_szToken` (`szToken`)
		) ENGINE=InnoDB AUTO_INCREMENT=",@interDay," DEFAULT CHARSET=utf8mb4 COMMENT='针对第三方的积分战绩明细表（包含战绩和任务完成数据）';");
		PREPARE stmt_name_game_create FROM @sqlStrThirdCreate;
		EXECUTE stmt_name_game_create;
		DEALLOCATE PREPARE stmt_name_game_create;
		
			
		set i=i+1;
		SET @startTime=DATE_ADD(@startTime,INTERVAL 1 DAY) ;
		
	end while;
	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_auto_drop_table_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_auto_drop_table_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_auto_drop_table_shard`(
	IN $startTime VARCHAR(30),
	IN $endTime VARCHAR(30),
	out $returnVal int
)
returnVal:begin
	
	declare i int;
	set i=1;
	
	SELECT (DATEDIFF($endTime,$startTime)) +1 into @intervals;
	set @startTime=$startTime;
	
	select date_format($startTime,'%Y%m%d') into @beginTime;
	select date_format($endTime,'%Y%m%d') into @stopTime;
	select DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 93 DAY),'%Y%m%d') into @lastTime;

	if (@beginTime > @lastTime)  or (@stopTime > @lastTime) then
		set $returnVal=0;
		leave returnVal;
	end if;

	while(i<=@intervals) do

		SET @dateTable=date_format(@startTime,'%Y%m%d');
		
		set @sqlStrScoreDrop=concat("drop table if exists table_clublogscore",@dateTable,";");
		PREPARE stmt_name_score_drop FROM @sqlStrScoreDrop;
		EXECUTE stmt_name_score_drop;
		DEALLOCATE PREPARE stmt_name_score_drop;
	
		set @sqlStrDetailDrop=concat("drop table if exists table_clubgamescoredetail",@dateTable,";");
		PREPARE stmt_name_detail_drop FROM @sqlStrDetailDrop;
		EXECUTE stmt_name_detail_drop;
		DEALLOCATE PREPARE stmt_name_detail_drop;
	
		set @sqlStrThirdDrop=concat("drop table if exists table_third_score_detail",@dateTable,";");
		PREPARE stmt_name_third_drop FROM @sqlStrThirdDrop;
		EXECUTE stmt_name_third_drop;
		DEALLOCATE PREPARE stmt_name_third_drop;
	
		set i=i+1;
		SET @startTime=DATE_ADD(@startTime,INTERVAL 1 DAY);
		
	end while;
	
	set $returnVal=1;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_bg_get_player_contribution
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_bg_get_player_contribution`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_bg_get_player_contribution`(
	IN $intPlayerId INT,
	IN $clubid	    INT,
	IN $page        INT,
	OUT $totalpage  INT
)
rt:BEGIN

    DECLARE _tmp_page  BIGINT;
    DECLARE _a         INT;
    DECLARE _b         INT;
    
    
    SELECT COUNT(*) INTO _tmp_page FROM (SELECT nTargetId  FROM table_Statistics_Earnings WHERE nclubid = $clubid AND nplayerid = $intPlayerId GROUP BY nTargetId) tt;
    
    SET _a = _tmp_page DIV 10;
    SET _b = _tmp_page MOD 10;
    
    IF _b > 0 THEN
        SET _a = _a + 1;
    END IF;
    
    SET $totalpage = _a;
    IF $page < 0 THEN
        SET $page = 0;
    END IF;
    
    IF $page >= $totalpage THEN
        SET $page = 0;
    END IF;
    
    SET _tmp_page = $page * 10;
    
    SELECT a.nTargetId,
    IFNULL((SELECT SUM(namount) FROM `table_Statistics_Earnings` WHERE  table_Statistics_Earnings.nPlayerID=$intPlayerId and table_Statistics_Earnings.`nTargetId` = a.nTargetId AND TO_DAYS(CreateTime) = TO_DAYS(NOW()) ),0) AS day_amount,
    IFNULL((SELECT SUM(namount) FROM `table_Statistics_Earnings` WHERE  table_Statistics_Earnings.nPlayerID=$intPlayerId AND table_Statistics_Earnings.`nTargetId` = a.nTargetId AND YEARWEEK(DATE_FORMAT(CreateTime,'%Y-%m-%d')) = YEARWEEK(NOW()) ),0) AS week_amount,
    IFNULL((SELECT SUM(namount) FROM `table_Statistics_Earnings` WHERE  table_Statistics_Earnings.nPlayerID=$intPlayerId AND table_Statistics_Earnings.`nTargetId` = a.nTargetId ),0) AS all_amount
    FROM table_Statistics_Earnings a WHERE nclubid = $clubid AND nplayerid = $intPlayerId GROUP BY nTargetId LIMIT _tmp_page,10;
       
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_bg_get_player_subordinate_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_bg_get_player_subordinate_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_bg_get_player_subordinate_temp`(
	IN $intPlayerId INT,
	IN $clubid	    INT,
	IN $page        INT,
	OUT $totalpage  INT
)
rt:BEGIN

    DECLARE _tmp_page  BIGINT;
    DECLARE _a         INT;
    DECLARE _b         INT;
    
    
    SELECT COUNT(id) INTO _tmp_page FROM table_clubmember WHERE nClubID = $clubid AND nExtenID = $intPlayerId;
    
    SET _a = _tmp_page DIV 10;
    SET _b = _tmp_page MOD 10;
    
    IF _b > 0 THEN
        SET _a = _a + 1;
    END IF;
    
    SET $totalpage = _a;
    
    IF $page < 0 THEN
        SET $page = 0;
    END IF;
    
    IF $page >= $totalpage THEN
        SET $page = 0;
    END IF;
    
    SET _tmp_page = $page * 10;
    
    SELECT nplayerid,
    IFNULL((SELECT COUNT(id) FROM  `table_clubgamescoredetail` WHERE nClubID = $clubid AND nplayerid = table_clubmember.`nPlayerID` AND TO_DAYS(tEndTime) = TO_DAYS(NOW()) ),0) AS play_day_round,
    IFNULL((SELECT COUNT(id) FROM  `table_clubgamescoredetail` WHERE nClubID = $clubid AND nplayerid = table_clubmember.`nPlayerID` AND YEARWEEK( DATE_FORMAT(  tEndTime,'%Y-%m-%d' ) ) = YEARWEEK(NOW()) ),0) AS play_week_round,
    IFNULL((SELECT COUNT(id) FROM  `table_clubgamescoredetail` WHERE nClubID = $clubid AND nplayerid = table_clubmember.`nPlayerID`),0) AS play_all_round,
    (SELECT UNIX_TIMESTAMP(`preLoginTime`) FROM `table_user` WHERE nplayerid = table_clubmember.`nPlayerID`) AS login_time
    FROM table_clubmember WHERE nclubid = $clubid AND nExtenID = $intPlayerId ORDER BY login_time DESC LIMIT _tmp_page,10;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_bg_get_rebate_amount
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_bg_get_rebate_amount`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_bg_get_rebate_amount`(
	IN $intPlayerId INT,
	IN $clubid	    INT,
	OUT $nRebate    INT     
)
BEGIN

    
    SELECT IFNULL(SUM(nAmount),0) INTO $nRebate FROM table_web_redemptionlog WHERE nClubID = $clubid AND nPlayerID = $intPlayerId AND IsRedemption = 0;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_bg_get_rebate_record
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_bg_get_rebate_record`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_bg_get_rebate_record`(
	IN $intPlayerId INT,
	IN $clubid	    INT,
	IN $page        INT,
	OUT $totalpage  INT
)
rt:BEGIN

    DECLARE _tmp_page  BIGINT;
    DECLARE _a         INT;
    DECLARE _b         INT;
    
    
    SELECT COUNT(id) INTO _tmp_page FROM table_web_redemptionlog WHERE nClubID = $clubid AND nPlayerID = $intPlayerId AND IsRedemption = 1;
    
    SET _a = _tmp_page DIV 10;
    SET _b = _tmp_page MOD 10;
    
    IF _b > 0 THEN
        SET _a = _a + 1;
    END IF;
    
    SET $totalpage = _a;
    
    IF $page < 0 THEN
        SET $page = 0;
    END IF;
    
    IF $page >= $totalpage THEN
        SET $page = 0;
    END IF;
    
    SET _tmp_page = $page * 10;
    
    SELECT `nAmount`,UNIX_TIMESTAMP(ModifyDate) AS mdate FROM table_web_redemptionlog WHERE nClubID = $clubid AND nPlayerID = $intPlayerId AND IsRedemption = 1 ORDER BY id DESC LIMIT _tmp_page,10;
       
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_bg_subordinateinfo
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_bg_subordinateinfo`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_bg_subordinateinfo`(
	IN $intPlayerId INT,
	IN $clubid	    INT,
	OUT $nCount     INT,    
	OUT $nRebate    INT     
)
BEGIN

    SELECT IFNULL(COUNT(id),0) INTO $nCount FROM table_clubmember WHERE nExtenID = $intPlayerId AND nClubID = $clubid;
    
    SELECT IFNULL(SUM(nAmount),0) INTO $nRebate FROM table_web_redemptionlog WHERE nClubID = $clubid AND nPlayerID = $intPlayerId;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_binding_task
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_binding_task`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_binding_task`(
				IN $nPlayerID   INT,
				IN $nClubID     INT,
				OUT $rval       INT,
				OUT $msg        VARCHAR(64)
)
RT:BEGIN

DECLARE _validBet BIGINT;
DECLARE _targetBet BIGINT;
DECLARE _awardScore BIGINT;
DECLARE _BINDINGTASK INT;
SET _BINDINGTASK = 6;
SELECT IFNULL(`nValidBet`,0) INTO _validBet FROM `table_club_task_player_data` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID;
SET $rval    = 0;
SET $msg     = "";
IF EXISTS (SELECT 1 FROM table_club_task_complete WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID AND nTaskID = _BINDINGTASK) THEN

        SET $rval    = 0;
        SET $msg = "已经获得过绑定奖励";
        LEAVE RT;
ELSE
        
        IF EXISTS (SELECT 1 FROM table_club_task_clubdata WHERE nClubID = $nClubID AND `nTaskID` = _BINDINGTASK AND `nStatus` = 1) THEN
                
                SET _awardScore = 3000;
        
                CALL pr_task_player_complete(0,$nPlayerID,$nClubID,_BINDINGTASK,_awardScore,0,0,29,'','注册奖励','','',0);
                CALL pr_task_player_add_recdata($nPlayerID,$nClubID,_BINDINGTASK,_awardScore,_validBet,1,1);
                SET $rval = 1;
                SET $msg  = "完成绑定奖励";
                LEAVE RT;        
        ELSE
                SET $rval = 0;
                SET $msg  = "该俱乐部没有开通绑定奖励";
                LEAVE RT;        
        END IF;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_call_league_statistics_partner_sub_timer
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_call_league_statistics_partner_sub_timer`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_call_league_statistics_partner_sub_timer`()
BEGIN 
 
        #定时器执行时间 2019-12-02 00:05:00      _startTime=2019-12-01 23:50:00   _endTime=2019-12-02 00:00:00			
        
        #当前时间
        SET @currTime=NOW();
        
        #开始时间
        SET @startTime=DATE_FORMAT(DATE_ADD(@currTime, INTERVAL -15 MINUTE),'%Y-%m-%d %H:%i:00');
        
        #结束时间
        SET @endTime=DATE_FORMAT(DATE_ADD(@currTime, INTERVAL -5 MINUTE),'%Y-%m-%d %H:%i:00');
        
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,-2147483648,0);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,10*1000,1);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,20*1000,2);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,60*1000,3);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,80*1000,4);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,100*1000,5);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,120*1000,6);
         
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_call_league_statistics_partner_timer
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_call_league_statistics_partner_timer`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_call_league_statistics_partner_timer`()
begin 
 
        #定时器执行时间 2019-12-02 00:05:00      _startTime=2019-12-01 23:50:00   _endTime=2019-12-02 00:00:00			
        
        #当前时间
        set @currTime=NOW();
        
        #开始时间
        set @startTime=DATE_FORMAT(date_add(@currTime, interval -15 minute),'%Y-%m-%d %H:%i:00');
        
        #结束时间
        set @endTime=DATE_FORMAT(date_add(@currTime, interval -5 minute),'%Y-%m-%d %H:%i:00');
               
        CALL pr_league_stc_partner_time(@startTime,@endTime,-2147483648,0);
        CALL pr_league_stc_partner_time(@startTime,@endTime,10*1000,1);
        CALL pr_league_stc_partner_time(@startTime,@endTime,20*1000,2);
        CALL pr_league_stc_partner_time(@startTime,@endTime,60*1000,3);
        CALL pr_league_stc_partner_time(@startTime,@endTime,80*1000,4);
        CALL pr_league_stc_partner_time(@startTime,@endTime,100*1000,5);
        CALL pr_league_stc_partner_time(@startTime,@endTime,120*1000,6);
         
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_call_league_statistics_rank_20210107
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_call_league_statistics_rank_20210107`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_call_league_statistics_rank_20210107`(
	in $minutes int
)
begin 
			#定时器执行时间 2019-12-02 00:05:00      _startTime=2019-12-01 23:50:00   _endTime=2019-12-02 00:00:00			
			#当前时间
			set @currTime=NOW();
			#开始时间
			set @startTime=DATE_FORMAT(date_add(@currTime, interval -15 minute),'%Y-%m-%d %H:%i:00');
			#结束时间
			set @endTime=DATE_FORMAT(date_add(@currTime, interval -5 minute),'%Y-%m-%d %H:%i:00');
			
			call pr_league_statistics_rank_20210107(@startTime,@endTime);

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_call_league_statistics_rank_timer
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_call_league_statistics_rank_timer`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_call_league_statistics_rank_timer`()
begin 
 
        #定时器执行时间 2019-12-02 00:05:00      _startTime=2019-12-01 23:50:00   _endTime=2019-12-02 00:00:00			
        
        #当前时间
        set @currTime=NOW();
        
        #开始时间
        set @startTime=DATE_FORMAT(date_add(@currTime, interval -15 minute),'%Y-%m-%d %H:%i:00');
        
        #结束时间
        set @endTime=DATE_FORMAT(date_add(@currTime, interval -5 minute),'%Y-%m-%d %H:%i:00');
        
        call pr_league_statistics_rank(@startTime,@endTime);
         
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ChangeUserInfoReq
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ChangeUserInfoReq`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `Pr_ChangeUserInfoReq`(
	IN $nPlayerID INT,
	IN $szHeadPicUrl varchar(512),
	IN $nSex INT
)
BEGIN
   update table_user set szHeadPicUrl = $szHeadPicUrl,nSex = $nSex where nPlayerId = $nPlayerID;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_checkPhone
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_checkPhone`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_checkPhone`(
IN $phone          varchar(15),
OUT $returnVal     INT
)
returnVal:BEGIN
IF  EXISTS(SELECT 1 FROM table_user WHERE  phone =$phone) THEN
 SET $returnVal=1;
LEAVE returnVal;
else
 SET $returnVal=0;
LEAVE returnVal;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_CheckPlayerDiamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_CheckPlayerDiamond`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_CheckPlayerDiamond`(
	in $intPlayerId int,
	out $returnVal int
	
)
begin 
	DECLARE _diamond int default 0 ;
	SELECT nCardCount into _diamond from table_user where nPlayerId = $intPlayerId;
	if _diamond >= 500 then 
		set $returnVal = 1;
	else
		set $returnVal = 0;
	end if; 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClearLogHistoryData
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClearLogHistoryData`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_ClearLogHistoryData`()
BEGIN
declare _15DiffDate varchar(30) default date_sub(CONCAT(CURDATE(),' 00:00:00'),INTERVAL 15 DAY);
declare _30DiffDate varchar(30) default date_sub(CONCAT(CURDATE(),' 00:00:00'),INTERVAL 30 DAY);

		DELETE FROM table_clubgamescoredetail_history   WHERE tEndTime  < _30DiffDate;
		DELETE FROM table_clublogscore_history        	WHERE CreateTime  < _30DiffDate;
		DELETE FROM table_clublogplatformscore_history  WHERE CreateTime  < _30DiffDate;
		DELETE FROM table_clublogdiamond_history     	WHERE CreateTime  < _30DiffDate;
		
	
		INSERT into table_clubgamescoredetail_history SELECT * from table_clubgamescoredetail where tEndTime < _15DiffDate;
		DELETE FROM table_clubgamescoredetail WHERE tEndTime < _15DiffDate;
		
	
		INSERT into table_clublogscore_history SELECT * from table_clublogscore where CreateTime < _15DiffDate;
		DELETE FROM table_clublogscore WHERE CreateTime < _15DiffDate;  
	
		
		INSERT into table_clublogplatformscore_history SELECT * from table_clublogplatformscore where CreateTime < _15DiffDate ;
		DELETE FROM table_clublogplatformscore WHERE CreateTime < _15DiffDate;
		
		INSERT into table_clublogdiamond_history SELECT * from table_clublogdiamond where CreateTime < _15DiffDate ;
		DELETE FROM table_clublogdiamond WHERE CreateTime < _15DiffDate;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClearOldData
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClearOldData`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_ClearOldData`()
BEGIN
declare _3dDiffDate varchar(30) default date_sub(CONCAT(CURDATE(),' 00:00:00'),INTERVAL 3 DAY);

	
		DELETE FROM table_user_msg WHERE CreateTime < _3dDiffDate;
		

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClearOldData2
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClearOldData2`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_ClearOldData2`()
BEGIN
	declare _3mDiffDate varchar(30) default date_sub(CONCAT(CURDATE(),' 00:00:00'),INTERVAL 30 DAY);
	declare _3dDiffDate varchar(30) default date_sub(CONCAT(CURDATE(),' 00:00:00'),INTERVAL 3 DAY);
	declare _15dDiffDate varchar(30) default date_sub(CONCAT(CURDATE(),' 00:00:00'),INTERVAL 15 DAY);

	DELETE FROM table_clubloggold            WHERE CreateTime  < _3mDiffDate;
	DELETE FROM Table_Web_DayTotal_his         WHERE szTime      < _3mDiffDate;
	DELETE FROM Table_Web_LoginLog_his         WHERE szTime      < _3mDiffDate;
	DELETE FROM Table_Web_ZhanJi_his           WHERE szTime      < _3mDiffDate;
	DELETE FROM Table_Web_UserZHangJi_his      WHERE szStartTime < _3mDiffDate;
	DELETE FROM Table_Web_UserTableZhangJi_his WHERE szStartTime < _3mDiffDate;

	INSERT into Table_Web_DayTotal_his SELECT * from Table_Web_DayTotal where szTime < _3dDiffDate ;
	DELETE FROM Table_Web_DayTotal WHERE szTime < _3dDiffDate;

	INSERT into Table_Web_LoginLog_his SELECT * from Table_Web_LoginLog where szTime < _3dDiffDate ;
	DELETE FROM Table_Web_LoginLog WHERE szTime < _3dDiffDate;

	INSERT into table_web_zhanji_his SELECT * from table_web_zhanji where szTime < _3dDiffDate ;
	DELETE FROM Table_Web_ZhanJi WHERE szTime < _3dDiffDate;

	INSERT into Table_Web_UserZhangJi_his SELECT * from Table_Web_UserZhangJi where szStartTime < _3dDiffDate;
	DELETE FROM Table_Web_UserZHangJi WHERE szStartTime < _3dDiffDate;

	INSERT into Table_Web_UserTableZhangJi_his SELECT * from Table_Web_UserTableZhangJi where szStartTime < _3dDiffDate;
	DELETE FROM Table_Web_UserTableZhangJi WHERE szStartTime < _3dDiffDate;

	DELETE FROM table_user_msg WHERE CreateTime < _15dDiffDate;
	DELETE FROM table_user_rewards  WHERE NOT EXISTS (SELECT 1 FROM table_user_msg a WHERE A.nMsgId = table_user_rewards.nMsgId );
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClearUseOnline
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClearUseOnline`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_ClearUseOnline`(
)
BEGIN
	update Table_User set onlineSta=0 where  onlineSta = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClubDonateScore
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClubDonateScore`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_ClubDonateScore`(
		
	in $type int,
	in $gamePlayerId int,
	in $nClubID int,
	in $nPlayerId int,
	in $nScore bigint,
	in $remark varchar(200),
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubID and bIsPublic<>1) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;
				end if;
				if not exists(select nPlayerId from table_user where nActive=1 and nPlayerId=$nPlayerId or nPlayerId=$gamePlayerId) then 
						set $returnVal=-1;
						set $resultMsg='玩家用户不存在';
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubmember  where  nStatus=1 and nClubID=$nClubID and nPlayerID=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='该用户不在此俱乐部中';
						leave returnVal;
				end if;
				if $nScore<=0 then 
						set $returnVal=-1;
						set $resultMsg='1:赠送积分必须大于0';
						leave returnVal;
				end if;
				if exists(select nPlayerID from table_clubmember where nStatus=1 and nLevel=1 and nClubID=$nClubID and nPlayerID=$gamePlayerId) then 
							set @ProxyName='部长';
							set @enterType=1;
				else 
						if exists(select nPlayerID from table_clubmember where nStatus=1 and nLevel=2 and nClubID=$nClubID and nPlayerID=$gamePlayerId) then 
									set @ProxyName='管理员';
									set @enterType=2;
						else 
									set @ProxyName='成员';
									set @enterType=3;
									set $returnVal=-1;
									set $resultMsg='您的账号没有该俱乐部的操作权限';
									leave returnVal;
						end if;
				end if;
				select nScore into @totalClubScore from table_clubinfo where nStatus=1 and nClubID=$nClubID and bIsPublic<>1;
				select nScore into @playerSocre from table_clubmember where nClubID=$nClubID and nPlayerID=$nPlayerId and nStatus=1;
				
				if $type=1 then 
							if @totalClubScore<=0 or @totalClubScore<$nScore then 
									set $returnVal=-1;
									set $resultMsg='俱乐部积分不足';
									leave returnVal;
							end if;
							if @enterType=2 then 	
									
									if not exists(select nClubID from table_club_member_authority where nClubID=$nClubID and nPlayerID=$gamePlayerId and nLevel=1 and nStatus=1) then 
										set $returnVal=-1;
										set $resultMsg='您的账号没有该俱乐部的赠送积分权限';
										leave returnVal;
									end if;
							end if;
				else 
				
						 if @playerSocre<=0 or @playerSocre<$nScore then  
									set $returnVal=-1;
									set $resultMsg='用户积分不足';
									leave returnVal;
						 end if;
						 if @enterType=2 then 	
									
									if not exists(select nClubID from table_club_member_authority where nClubID=$nClubID and nPlayerID=$gamePlayerId and nLevel=5 and nStatus=1) then 
										set $returnVal=-1;
										set $resultMsg='您的账号没有该俱乐部的扣除积分权限';
										leave returnVal;
									end if;
						 end if;
				end if;
				start transaction;
				
				if $type=1 then 
					 set @title='赠送';
					 set @ClubLogPlatformnType=9;
					 set @nPlayernType=3;
					 set @nClubLogScore=(@totalClubScore-$nScore);
					 set @nPlayerScore=(@playerSocre+$nScore);
					 
						call Pro_Web_AddEnterPriseLog($nClubID,4,$gamePlayerId,$nPlayerId,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')赠送玩家ID:',$nPlayerId,',',$nScore,'积分'));
				else 
					 set @title='扣除';
					 set @ClubLogPlatformnType=10;
					 set @nPlayernType=13;
					 set @nClubLogScore=(@totalClubScore+$nScore);
					 set @nPlayerScore=(@playerSocre-$nScore);
						
						call Pro_Web_AddEnterPriseLog($nClubID,5,$gamePlayerId,$nPlayerId,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')扣除玩家ID:',$nPlayerId,',',$nScore,'积分'));
				end if;
				insert into Table_ClubLogPlatformScore(nClubID,nAmount,nScore,nType,szDesc,sourceid,targetid) values($nClubID,$nScore,@nClubLogScore,@ClubLogPlatformnType,$remark,$gamePlayerId,$nPlayerId);
				
				update table_clubinfo set nScore=@nClubLogScore where nStatus=1 and nClubID=$nClubID and bIsPublic<>1;
				
				
				insert into Table_ClubLogScore(nPlayerID,nAmount,nScore,nType,szDesc,clubid) values($nPlayerId,$nScore,@nPlayerScore,@nPlayernType,$remark,$nClubID);
				update table_clubmember set nScore=@nPlayerScore where nClubID=$nClubID and nPlayerID=$nPlayerId and nStatus=1;
				
				 insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) 
				values($nPlayerId,502,CONCAT(@ProxyName,@title,'俱乐部成员积分'),CONCAT('俱乐部ID:',$nClubID,';',@title,'玩家ID:',$nPlayerId,';',@title,'数量:',$nScore));
				if errno=0 then
						set $returnVal=1;
						set $resultMsg='成功';
						commit;
				else
						set $returnVal=-99;
						set $resultMsg='执行存储过程异常';
						rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClubInfo_RoyaltyRate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClubInfo_RoyaltyRate`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pr_ClubInfo_RoyaltyRate`(
	
in $type int,
in $royaltyRate int,
in $totalRoyaltyRate int,
in $enterType int,
in $nClubId int,
in $gamePlayerId int,
out $returnVal int,
out $resultMsg varchar(100)
)
returnNode:begin 

		if not exists(select nClubID from table_clubinfo where nClubID=$nClubId) then 
			set $returnVal=-1;
			set $resultMsg='俱乐部不存在';
			leave returnNode;
		end if;
		if $type=1 then 
				set @setName='百人场设置';
		else 
				set @setName='房间分红设置';
		end if;
		if $enterType=2 then 	
				set @ProxyName='管理员';
				select EnterPriseID into @EnterPriseID from enterprise where GamePlayerId=$gamePlayerId;
				if not exists(select nClubID from enterpricemanage where EnterPriceId=@EnterPriseID and nClubID=$nClubId and nPlayerID=$gamePlayerId and nStatus=1) then 
						set $returnVal=-1;
						set $resultMsg='您的账号已被禁用或者注销';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubmember where nClubID=$nClubId and nPlayerID=$gamePlayerId and nStatus=2 and nStatus=1) then 
						set $returnVal=-1;
						set $resultMsg='当前管理员成员不在此俱乐部中';
						leave returnNode;
				end if;
				
				if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=_gamePlayerId and nLevel=4 and nStatus=1) then 
					set $returnVal=-1;
					set $resultMsg=CONCAT('您的账号没有该俱乐部',@setName,'的同意权限');
					leave returnNode;
				end if;
		else 
				set @ProxyName='部长';
		end if;
		select nTaxRateBig,nTaxTRateBig,nTaxRateNormal,nTaxTRateNormal into @nTaxRateBig,@nTaxTRateBig,@nTaxRateNormal,@nTaxTRateNormal from table_clubinfo where nStatus=1 and  nClubID=$nClubId;
		
		if $royaltyRate>0 then 
				set @Newrate=CONCAT(TRUNCATE($royaltyRate/10,2),'%');
		else 
				set @Newrate=CONCAT(0,'%');
		end if;
		
		if $totalRoyaltyRate>0 then 
				set @NewtotalRate=CONCAT(TRUNCATE($totalRoyaltyRate/10,2),'%');
		else 
				set @NewtotalRate=CONCAT(0,'%');
		end if;
		if $type=1 then 
				update table_clubinfo set nTaxRateBig=$royaltyRate,nTaxTRateBig=$totalRoyaltyRate where nClubID=$nClubId; 
				
				if @nTaxRateBig>0 then 
						set @OldnTaxRateBig=CONCAT(TRUNCATE(@nTaxRateBig/10,2),'%');
				else 
						set @OldnTaxRateBig=CONCAT(0,'%');
				end if;					
				
				if @nTaxTRateBig>0 then 
						set @OldnTaxTRateBig=CONCAT(TRUNCATE(@nTaxTRateBig/10,2),'%');
				else 
						set @OldnTaxTRateBig=CONCAT(0,'%');
				end if;
				
				call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')','修改百人场单局赢家服务费比例:"',@OldnTaxRateBig,'"变更为','"',@Newrate,'"'));
				call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')','修改百人场总局赢家服务费比例:"',@OldnTaxTRateBig,'"变更为','"',@NewtotalRate,'"'));
		else 
				update table_clubinfo set nTaxRateNormal=$royaltyRate,nTaxTRateNormal=$totalRoyaltyRate where nClubID=$nClubId;
				
				if @nTaxRateNormal>0 then 
						set @OldnTaxRateNormal=CONCAT(TRUNCATE(@nTaxRateNormal/10,2),'%');
				else 
						set @OldnTaxRateNormal=CONCAT(0,'%');
				end if;					
				
				if @nTaxTRateNormal>0 then 
						set @OldnTaxTRateNormal=CONCAT(TRUNCATE(@nTaxTRateNormal/10,2),'%');
				else 
						set @OldnTaxTRateNormal=CONCAT(0,'%');
				end if;
				call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')','修改好友场单局赢家服务费比例:"',@OldnTaxRateNormal,'"变更为','"',@Newrate,'"'));
				call Pro_Web_AddEnterPriseLog($nClubId,14,$gamePlayerId,0,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')','修改好友场总局赢家服务费比例:"',@OldnTaxTRateNormal,'"变更为','"',@NewtotalRate,'"'));
		end if;
		
		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClubLogGold_Add
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClubLogGold_Add`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pr_ClubLogGold_Add`(
	
		in $nType int,
		in $nClubID int,
		in $nPlayerID int,
		in $nScore	int,
		out $returnVal int,
		out $resultMsg varchar(50)
)
returnNode:begin 
		
		declare _nScore int default 0;
		declare _szDesc varchar(50) default '';
		if $nScore<=0 then 				
				set $returnVal=-1;
				set $resultMsg='1:金币不能小于0';
				LEAVE returnNode;
		end if;
	
if not exists(select nPlayerID from table_user where nPlayerID=$nPlayerID and nActive=1)then 				
				set $returnVal=-1;
				set $resultMsg='1:玩家账户已注销;2:玩家账户不存在';
				LEAVE returnNode;
		end if;
		
				
				
				
		
		
				
				
				
		
	 
	 select nJinBi into _nScore from table_user where nActive=1  and nPlayerID=$nPlayerID;
		if $nType=1 then 
				set _nScore=_nScore+$nScore;
				set _szDesc='系统充值';
		elseif $nType=2 then 
				if(_nScore<$nScore) then 
						set $returnVal=-1;
						set $resultMsg='玩家金币不足';
						LEAVE returnNode;			
				else 
						set _nScore=_nScore-$nScore;
						set _szDesc='系统扣除';
				end if;
				
		end if;
		
		
		
		update table_user set nJinBi=_nScore where nActive=1 and nPlayerID=$nPlayerID;
		
		insert into Table_ClubLogGold(nPlayerID,nAmount,nScore,nType,szDesc,clubid,CreateTime)
		values($nPlayerID,$nScore,_nScore,$nType,_szDesc,$nClubID,NOW());
		

		set $returnVal=1;
		set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClubLogPlatformScore_Add
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClubLogPlatformScore_Add`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pr_ClubLogPlatformScore_Add`(
	
in $nClubID 	int,
in $nAmount  	int,
in $nType			tinyint,
in $szDesc		varchar(256),
in $sourceid	int,
out $returnVal int,
out $resultMsg varchar(50)
)
returnNode:begin
		declare _nScore bigint default 0;
		declare _totalnScore bigint default 0;
		if $nAmount<=0 then 				
				set $returnVal=-1;
				set $resultMsg='1:俱乐部积分不能小于0';
				LEAVE returnNode;
		end if;
		if exists(select nClubID from Table_ClubInfo where nClubID=$nClubID and nStatus=1 and bIsPublic=0) then 
				select nScore into _nScore  from Table_ClubInfo where nClubID=$nClubID and nStatus=1 and bIsPublic=0;
				if $nType=1 then 
						set _totalnScore=(_nScore+$nAmount);
				elseif $nType=2 then 
						if _nScore<$nAmount then 
								set $returnVal=-1;
								set $resultMsg='俱乐部积分不足';
								LEAVE returnNode;
						else 
								set _totalnScore=(_nScore-$nAmount);
						end if;
				end if;

				insert into Table_ClubLogPlatformScore(nClubID,nAmount,nScore,nType,szDesc,sourceid,CreateTime)
				values($nClubID,$nAmount,_totalnScore,$nType,$szDesc,$sourceid,NOW());

				update Table_ClubInfo set nScore=_totalnScore,CreateTime=NOW() where nClubID=$nClubID and nStatus=1;

				set $returnVal=1;
				set $resultMsg='成功';
		else 
				set $returnVal=-1;
				set $resultMsg='1:俱乐部不存在;2:俱乐部非正常';
				LEAVE returnNode;
		end if;
		
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClubLogScore_Add_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClubLogScore_Add_temp`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pr_ClubLogScore_Add_temp`(
	
in $nplayerId	int,
in $nClubID 	int,
in $nAmount  	int,
in $nType			tinyint,
in $szDesc		varchar(256),
out $returnVal int,
out $resultMsg varchar(50)
)
returnNode:begin
		declare _nScore bigint default 0;
		declare _totalnScore bigint default 0;
		if $nAmount<=0 then 				
				set $returnVal=-1;
				set $resultMsg='1:俱乐部积分不能小于0';
				LEAVE returnNode;
		end if;
		if not exists(select nClubID from table_clubinfo where nClubID=$nClubID  and nStatus=1 and bIsPublic=0) then 
				set $returnVal=-1;
				set $resultMsg='1:俱乐部不存在';
				LEAVE returnNode;
		end if;
		if exists(select nClubID from table_clubmember where  nClubID=$nClubID and nPlayerID=$nplayerId  and nStatus=1) then 

				select nScore into _nScore  from table_clubmember where  nClubID=$nClubID and nPlayerID=$nplayerId  and nStatus=1;

				if $nType=1 then 
						set _totalnScore=(_nScore+$nAmount);
				elseif $nType=2 then 
						if _nScore<$nAmount then 
								set $returnVal=-1;
								set $resultMsg='俱乐部积分不足';
								LEAVE returnNode;
						else 
								set _totalnScore=(_nScore-$nAmount);
						end if;
				end if;
				
				insert into Table_ClubLogScore(nPlayerID,nAmount,nScore,nType,szDesc,clubid,CreateTime)
				values($nplayerId,$nAmount,_totalnScore,$nType,$szDesc,$nClubID,NOW());

				update table_clubmember set nScore=_totalnScore where  nClubID=$nClubID and nPlayerID=$nplayerId  and nStatus=1;

				set $returnVal=1;
				set $resultMsg='成功';
		else 
				set $returnVal=-1;
				set $resultMsg='1:俱乐部不存在;2:俱乐部非正常;3:该玩家不是该俱乐部成员';
				LEAVE returnNode;
		end if;
		
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClubMemDisabledManage
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClubMemDisabledManage`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_ClubMemDisabledManage`(
		
	in $nClubID int,
	in $gamePlayerId int,
	in $nPlayerId int,
	in $status int,
	out $returnVal int,
	out $resultMsg varchar(50)
)
returnVal:begin 
				declare errno int default 0;
				declare continue handler for sqlexception set errno = 1;
				if not exists(select nPlayerId from table_user  where nPlayerId=$nPlayerId or nPlayerId=$gamePlayerId and nActive=1) then 
						set $returnVal=-1;
						set $resultMsg='玩家用户不存在';
						leave returnVal;
				end if;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubID and bIsPublic<>1) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnVal;
				end if;
				select CreatePlayerID into @CreatePlayerID from table_clubinfo where nClubID=$nClubID;
				
				if exists(select EnterPriseID from enterprise where GamePlayerId=$gamePlayerId) then
						set @IsProxyAccount=1;
				else 
						set @IsProxyAccount=0;
				end if;
				start transaction;
				if $status=1 then 
							if @IsProxyAccount=0 then 
									set $returnVal=-1;
									set $resultMsg='尚无后台代理账号';
									leave returnVal;
							end if;
							
							set @title='启用管理员后台账号';
							set @msg=CONCAT('玩家ID：',$nPlayerId,'的','所在俱乐部Id:',$nClubID,'的管理员后台账号已被激活');
							
							update enterprise set `Status`=$status,UpdateTime=NOW() where GamePlayerId=$nPlayerId;
							
							select AccountName into @AccountName from accountinfo where EnterPriseID=(select EnterPriseID from enterprise where GamePlayerId=$nPlayerId);
							call Pro_Web_AddEnterPriseLog($nClubID,7,@CreatePlayerID,$nPlayerId,CONCAT('俱乐部创建者启用(ID:',$nPlayerId,')管理员账号:',	@AccountName));
				elseif $status=2 then 
							if @IsProxyAccount=0 then 
									set $returnVal=-1;
									set $resultMsg='尚无后台代理账号';
									leave returnVal;
							end if;
							
							set @title='禁用管理员后台账号';
							set @msg=CONCAT('玩家ID：',$nPlayerId,'的','所在俱乐部Id:',$nClubID,'的管理员后台账号已被禁用');
							
							update enterprise set `Status`=$status,UpdateTime=NOW() where GamePlayerId=$nPlayerId;
							
							select AccountName into @AccountName from accountinfo where EnterPriseID=(select EnterPriseID from enterprise where GamePlayerId=$nPlayerId);
							call Pro_Web_AddEnterPriseLog($nClubID,8,@CreatePlayerID,$nPlayerId,CONCAT('俱乐部创建者禁用(ID:',$nPlayerId,')管理员账号:',	@AccountName));
				else 
							set @title='取消管理员权限';
							set @msg=CONCAT('玩家ID：',$nPlayerId,'的','所在俱乐部Id:',$nClubID,'的管理员权限已被取消');
							if exists(select nClubID from table_clubmember where nClubID=$nClubID and nPlayerID=$nPlayerId and nStatus=1 and nLevel=2) then 
									
									update table_clubmember set nLevel=$status where nClubID=$nClubID and nPlayerID=$nPlayerId and nStatus=1 and nLevel=2;
							end if;
							
							update table_club_member_authority set nStatus=2,tModifyTime=NOW() where nClubID=$nClubID and nPlayerID=$nPlayerId;	
							
							if @IsProxyAccount=1 then 									
									select EnterPriseID into @enterPriceId from enterprise where GamePlayerId=$nPlayerId;
									update enterpricemanage set nStatus=$status where nClubID=$nClubID and nPlayerID=$nPlayerId and EnterPriceId=@enterPriceId;
							end if;							
							
							call Pro_Web_AddEnterPriseLog($nClubID,2,@CreatePlayerID,$nPlayerId,CONCAT('俱乐部创建者取消管理员(ID:',$nPlayerId,')'));
				end if;
					
				 insert into table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) values($nPlayerId,502,@title,@msg);

				if errno=0 then
						set $returnVal=1;
						set $resultMsg='成功';
						commit;
				ELSE
						set $returnVal=-99;
						set $resultMsg='1:执行存储过程异常';
						rollback;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClubMemExten
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClubMemExten`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_ClubMemExten`(
		
	in $gamePlayerId int,
	in $nClubId int,
	in $nPlayerId int,
	in $type int,
	in $val varchar(100),
	out $returnVal int,
	out $resultMsg varchar(100)
)
returnNode:begin 
				if not exists(select nPlayerId from table_user  where nPlayerId=$nPlayerId or nPlayerId=$gamePlayerId and nActive=1) then 
						set $returnVal=-1;
						set $resultMsg='玩家用户不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubinfo  where nStatus=1 and nClubID=$nClubId and bIsPublic<>1) then 
						set $returnVal=-1;
						set $resultMsg='俱乐部不存在';
						leave returnNode;
				end if;
				if not exists(select nClubID from table_clubmember  where nStatus=1 and nClubID=$nClubId and nPlayerId=$nPlayerId) then 
						set $returnVal=-1;
						set $resultMsg='玩家不在该俱乐部';
						leave returnNode;
				end if;
				if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=1 and nStatus=1) then 
				
						set @ProxyName='部长';
				else 
						if exists(select nPlayerId from table_clubmember where nClubID=$nClubId and nPlayerId=$gamePlayerId and nLevel=2 and nStatus=1)then 
								set @ProxyName='管理员';
								
								if not exists(select nClubID from table_club_member_authority where nClubID=$nClubId and nPlayerID=$gamePlayerId and nLevel=8 and nStatus=1) then 
									set $returnVal=-1;
									set $resultMsg='尚无该俱乐部的修改推广员收益及备注权限';
									leave returnNode;
								end if;
						else 
								set @ProxyName='成员';
								set $returnVal=-1;
								set $resultMsg='尚无该俱乐部的修改推广员收益及备注权限';
								leave returnNode;
						end if;
				end if;
				select nExtenRate,szExtenDesc into @nExtenRate,@szExtenDesc from table_clubmember where nClubID=$nClubId and nPlayerId=$nPlayerId and nStatus=1; 
				
				if $type=1 then 
					 if $val>1000 then 
							set $returnVal=-1;
							set $resultMsg='比例不能大于100%';
							leave returnNode;
					 end if;
					 update table_clubmember set nExtenRate=$val where nClubID=$nClubId and nPlayerId=$nPlayerId and nStatus=1;  
					 if @nExtenRate>0 then 
								set @nExtenRateB=CONCAT(TRUNCATE((@nExtenRate/10),2),'%');
						else 
								set @nExtenRateB=CONCAT(0,'%');
						end if;
						if $val>0 then 
								set @NewnExtenRate=CONCAT(TRUNCATE(($val/10),2),'%');
						else 
								set @NewnExtenRate=CONCAT(0,'%');
						end if;
						call Pro_Web_AddEnterPriseLog($nClubId,24,$gamePlayerId,$nPlayerId,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改玩家:(ID:',$nPlayerId,'),','的推广员比例:"',@nExtenRateB,'"变更为"',@NewnExtenRate,'"'));
				
				else 
					 update table_clubmember set szExtenDesc=$val where nClubID=$nClubId and nPlayerId=$nPlayerId and nStatus=1;  
						if @szExtenDesc is null then
								set @szExtenDesc='';
						end if;
						call Pro_Web_AddEnterPriseLog($nClubId,25,$gamePlayerId,$nPlayerId,CONCAT(@ProxyName,'(ID:',$gamePlayerId,')修改玩家:(ID:',$nPlayerId,'),','的推广员备注:"',@szExtenDesc,'"变更为"',$val,'"'));
				end if;
				set $returnVal=1;
				set $resultMsg='成功';
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ClubMemManageReset
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ClubMemManageReset`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pr_ClubMemManageReset`(
	
	in $nPlayerId int,
	in $nClubId int,
	in $pwd varchar(100),
	out $returnVal int
)
begin 
				declare _AccountId int default 0;
				set $returnVal=0;
				if exists(select GamePlayerId from enterprise where EnterPriseType=2 and GamePlayerId=$nPlayerId) then 
						select AccountId into _AccountId from enterprise where EnterPriseType=2 and GamePlayerId=$nPlayerId;
						update accountinfo set `Password`=$pwd,UpdateTime=NOW() where AccountId=_AccountId;
						
						select CreatePlayerID into @CreatePlayerID from table_clubinfo where nClubID=$nClubId and nStatus=1;
						
						select AccountName into @AccountName from accountinfo where AccountId=_AccountId;
						call Pro_Web_AddEnterPriseLog($nClubId,9,@CreatePlayerID,$nPlayerId,CONCAT('俱乐部创建者重置管理员(ID:)',$nPlayerId,')账号"',@AccountName,'"的密码'));
						set $returnVal=1;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_changeLogClubPlatformScore
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_changeLogClubPlatformScore`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_club_changeLogClubPlatformScore`(
						 in $nClubID   int
						,IN $nGameID   INT
						,IN $nTableID  INT
						,in $nAmount   bigint
						,in $nScore   bigint
						,in $nType    int
						,IN $nTax     INT
						,in $szDesc   varchar(256)
						,IN $szOrder  VARCHAR(128)
						,in $sourceid int
						,IN $targetid INT
)
begin

INSERT INTO Table_ClubLogPlatformScore (nClubID,nGameID,nTableID,nAmount,nScore,nType,nTaxRate,szDesc,szOrder,sourceid,`targetid`)
VALUES($nClubID,$nGameID,$nTableID,$nAmount,$nScore,$nType,$nTax,$szDesc,$szOrder,$sourceid,$targetid);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_changeLogClubScore3_comman
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_changeLogClubScore3_comman`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_club_changeLogClubScore3_comman`(
IN $nPlayerID INT,
IN $gameID INT,
IN $nTableID INT,
IN $nAmount BIGINT,
IN $szOrder VARCHAR(128),
IN $operateID int,
IN $nCurrScore BIGINT,
IN $nType INT,
IN $nSubType tinyint,
IN $nTaxRate INT,
IN $szDesc VARCHAR(256),
IN $nClubID INT,
IN $bRobot tinyint
)
rt:BEGIN
	
	set @tableName=fun_get_table_name_shard('table_clublogscore', 0);
	 
	set @nPlayerId=$nPlayerId,@nGameId=$gameID,@nTableID=$nTableID,@nAmount=$nAmount,@szOrder=$szOrder,@operateID=$operateID,
			@nScore=$nCurrScore,@nType=$nType,@nSubType=$nSubType,@nTaxRate=$nTaxRate,@szDesc=$szDesc,@nClubID=$nClubID,@bRobot=$bRobot;
	set @sqlStr=concat("insert into ",@tableName," (nPlayerID,nGameID,nTableID,nAmount,szOrder,operateID,nScore,nType,nSubType,nTaxRate,szDesc,clubid,bRobot)
	values (?,?,?,?,?,?,?,?,?,?,?,?,?)");		
	#select @sqlStr;
	PREPARE stmt_name FROM @sqlStr;
	EXECUTE stmt_name using @nPlayerId,@nGameId,@nTableID,@nAmount,@szOrder,@operateID,@nScore,@nType,@nSubType,@nTaxRate,@szDesc,@nClubID,@bRobot;
	DEALLOCATE PREPARE stmt_name;
		
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_changeLogClubScore3_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_changeLogClubScore3_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_club_changeLogClubScore3_shard`(
IN $nServerID INT,
IN $nPlayerID INT,
IN $nClubID INT,
IN $nMoney BIGINT,
IN $nCurrScore BIGINT,
IN $nType INT,
IN $szOrder VARCHAR(128),
IN $szDesc VARCHAR(256)
)
rt:BEGIN
	
	set @nTableID=0,@operateID=NULL,@nSubType=0,@nTaxRate=0,@robot=0;
	call pr_club_changeLogClubScore3_comman($nPlayerID,$nServerID,@nTableID,$nMoney,$szOrder,@operateID,$nCurrScore,$nType,@nSubType,@nTaxRate,$szDesc,$nClubID,@robot);
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_changeLogClubScore3_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_changeLogClubScore3_temp`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_club_changeLogClubScore3_temp`(
IN $nServerID INT,
IN $nPlayerID INT,
IN $nClubID INT,
IN $nMoney BIGINT,
IN $nCurrScore BIGINT,
IN $nType INT,
IN $szOrder VARCHAR(128),
IN $szDesc VARCHAR(256)
)
rt:BEGIN
/*
写入用户积分变动记录表
2019-10-17增加服务器ID
*/
INSERT INTO Table_ClubLogScore 
(nPlayerID,nGameID,nAmount,nScore,nType,szDesc,clubid,szOrder)
VALUES
($nPlayerID,$nServerID,$nMoney,$nCurrScore,$nType,$szDesc,$nClubID,$szOrder);
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_ClubEventlog
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_ClubEventlog`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_club_ClubEventlog`(
	 in $nClubID int(11)
	,in $nEventType int(11)
	,in $szDesc varchar(64)
)
begin

INSERT INTO Table_ClubEvent 
				( 
				nClubID,nEventType,szDesc
				)
VALUES (
				$nClubID,$nEventType,$szDesc
				);
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_create_vip_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_create_vip_club`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `pr_club_create_vip_club`(
    
    
	out $nClubID int,
	out $nChannel int,
	out $clubName VARCHAR(64)
)
BEGIN
    
    DECLARE _nChannel      INT DEFAULT 0;
    DECLARE _nPid          INT DEFAULT 0;
    DECLARE _nClubID       INT DEFAULT 0;
    DECLARE _Name          VARCHAR(64);
    
    
    
    INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szOpenId,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nChannel) 
    VALUES(0,0,NOW(),1,'','','',DATE_SUB(NOW(),INTERVAL 1 DAY),'',1,2000,0,0,'',_nChannel);
    
    set _nPid = @@IDENTITY;
    
    SET _Name = CONCAT('V',@@IDENTITY);
    
    
		set @clubScore=900000000000;
   	INSERT INTO Table_ClubInfo
	( szClubName, nIconID, bIsPublic, nStatus, CreatePlayerID, szCity,
	 szDesc, nScore, nTaxRateNormal, nTaxRateBig, nWinnerRoyaltyRate, nBigRoomRoyaltyRate,bIsPrivate,nChannel) 
	VALUES  
	(_Name,0,0,1,_nPid,'',
	'',@clubScore,100,0,0,0,0,_nChannel);
	
	set _nClubID = @@IDENTITY;
	
	INSERT INTO table_club_game_cfg (nClubID,nGameType,nStatus,nDuDiamondMode) VALUES (_nClubID,1,1,2),(_nClubID,3,1,1),(_nClubID,109,1,2); 
	update Table_ClubInfo set nChannel=_nClubID where nClubID=_nClubID;
  update Table_User set nChannel=_nClubID,szThirdAccount=_Name where nPlayerId=_nPid;
    
    INSERT INTO Table_clubmember (nClubID,nPlayerID,nLevel,nStatus,nScore,nExtenID)	VALUES 	(_nClubID,_nPid,1,1,0,0);
    set $nChannel=_nClubID;
    set $clubName=_Name;
		set $nClubID=_nClubID;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_get_notemsg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_get_notemsg`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_club_get_notemsg`(
      in  $nClubID  int
	 ,Out $msg      varchar(256)
	 ,out $nPlayerID int
	 ,out $nickname VARCHAR(64)
	 ,out $headurl  VARCHAR(512)
)
RT:BEGIN
  

select `CreatePlayerID` into $nPlayerID from `table_clubinfo` where nClubID = $nClubID;
select `szNickName`,`szHeadPicUrl` into $nickname,$headurl from table_user where nplayerid = $nPlayerID;
SELECT szNoteMsg INTO $msg from Table_ClubInfo where nClubID = $nClubID limit 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_get_player_clubdata
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_get_player_clubdata`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_club_get_player_clubdata`(
                           IN $intPlayerId INT
                            )
BEGIN

SELECT nclubid FROM table_clubmember WHERE nplayerid = $intPlayerId AND nStatus = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_get_player_exchange_score_detail
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_get_player_exchange_score_detail`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_club_get_player_exchange_score_detail`(
		IN  $nplayerid     INT,
		IN  $nclubid       INT,
		IN  $nValidBet     BIGINT,
		OUT $freescore     BIGINT,
		OUT $limitscore    BIGINT,
		OUT $freezescore   BIGINT,
		OUT $retVal        INT,
		OUT $retMsg        VARCHAR(64)
)
rt:BEGIN

DECLARE _score BIGINT;
DECLARE _sub   BIGINT;
SET $freescore = 0;
SET $limitscore = 0;
SET $freezescore = 0;
IF EXISTS(SELECT 1 FROM `table_clubmember` WHERE `nPlayerID` = $nplayerid AND `nClubID` = $nclubid) THEN
        UPDATE table_club_task_recdata SET doneFlag = 1 WHERE `nPlayerID` = $nplayerid AND `nClubID` = $nclubid AND doneFlag = 0 AND `targetBet` <= $nValidBet;
        SELECT `nScore` INTO _score FROM `table_clubmember` WHERE `nPlayerID` = $nplayerid AND `nClubID` = $nclubid;
        
        SELECT IFNULL(SUM(Amount),0) INTO $freezescore FROM `table_club_task_recdata` WHERE `nPlayerID` = $nplayerid AND `nClubID` = $nclubid AND doneFlag = 0 AND `lockFlag` = 1;
        SELECT IFNULL(SUM(Amount),0) INTO $limitscore FROM `table_club_task_recdata` WHERE `nPlayerID` = $nplayerid AND `nClubID` = $nclubid AND doneFlag = 0 AND `lockFlag` = 0;
                
        IF _score  > $freezescore THEN
             IF (_score  - $freezescore ) > $limitscore THEN
                       SET $freescore = _score - $freezescore - $limitscore;
             ELSE
                       SET $limitscore = _score  - $freezescore;
                       SET $freescore  = 0; 
             END IF;
        ELSE
                SET $limitscore = 0;
                SET $freezescore = _score;
                SET $freescore =  0;
        END IF;
        
        SET $retVal = 1;
        SET $retMsg = "OK";
        LEAVE rt;
        
ELSE
        
        SET $retVal = 0;
        SET $retMsg = "player is NULL";
        LEAVE rt;
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_make_player_exchange_done
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_make_player_exchange_done`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_club_make_player_exchange_done`(
		IN  $nplayerid     INT,
                IN  $exScore       BIGINT,
                IN  $orderid       VARCHAR(128),
		OUT $orderscore    BIGINT,
		OUT $subVal        BIGINT,
		OUT $svCharge      INT,
		OUT $retVal        INT,
		OUT $retMsg        VARCHAR(64)
)
rt:BEGIN
/*
用户兑换,需扣除手续费，更新任务表，返回订单金额
2019-10-31 增加订单号
2021-12-14 修改返回字串，以支持多语言版本
*/
 
DECLARE errno INT DEFAULT 0;
DECLARE _score , _uscore, _freescore,_limitscore,_freezescore BIGINT;
DECLARE _clubid INT;
DECLARE _modVal INT;
 
#事务用
DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET errno = 1;
SELECT `nChannel` INTO _clubid FROM `table_user` WHERE `nPlayerID` = $nplayerid;
SET $orderscore = 0;
SET $svCharge = 0;
SET $subVal = 0;
IF EXISTS(SELECT 1 FROM `table_clubmember` WHERE `nPlayerID` = $nplayerid AND `nClubID` = _clubid) THEN
   
   #检测是否有订单在审核中，如果存在则不能再次提交订单
   IF EXISTS(SELECT 1 FROM table_pyramid_examine WHERE (`nPlayerID` = $nplayerid AND `nClubID` = _clubid AND nFlag < 4) OR ( `nPlayerID` = $nplayerid AND `nClubID` = _clubid AND nFlag = 7) )THEN
           SET $retVal = 2;
           SET $retMsg = "PR_EX_WAIT";
           LEAVE rt;
   END IF;
   
   SELECT `nScore` INTO _score FROM `table_clubmember` WHERE `nPlayerID` = $nplayerid AND `nClubID` = _clubid;
   SELECT IFNULL(SUM(Amount),0) INTO _freezescore FROM `table_club_task_recdata` WHERE `nPlayerID` = $nplayerid AND `nClubID` = _clubid AND doneFlag = 0 AND `lockFlag` = 1;
   SELECT IFNULL(SUM(Amount),0) INTO _limitscore FROM `table_club_task_recdata` WHERE `nPlayerID` = $nplayerid AND `nClubID` = _clubid AND doneFlag = 0 AND `lockFlag` = 0;
   
   #可兑换部分（包括限制部分）
   SET _uscore = _score - _freezescore;
   
   #纯免手续费可兑换部分
   IF (_score - _freezescore) < _limitscore THEN
        SET _freescore = 0;
   ELSE
        SET _freescore = _score - _freezescore - _limitscore;
   END IF;
   
   IF $exScore > _uscore THEN
           SET $retVal = 2;
           SET $retMsg = "PR_EX_AMOUNT_EXCEED";
           LEAVE rt;
   ELSE
        #可以兑,但是超过了纯免，意味着超出部分要扣手续费
        IF $exScore > _freescore THEN
           SET $subVal = $exScore - _freescore;
           SET $svCharge = $subVal * 0.3;
           
           SET _modVal = $svCharge MOD 10;
           
           IF _modVal > 0 THEN
                SET $svCharge = $svCharge - _modVal;
           END IF;
           
           #扣除手续费后应给用户的部分
           SET $orderscore = $exScore - $svCharge;
	   
	   #开始事务
           START TRANSACTION;
                     
           #扣手续费
           CALL pr_UpdateUserClubScore3(0,$nplayerid,_clubid,-$svCharge,0,25,$orderid,'提现手续费',@a);
           #扣提现的额度(直接扣除，但是要等审批，如果被拒绝还要再还回去)
           CALL pr_UpdateUserClubScore3(0,$nplayerid,_clubid,-$orderscore,0,22,$orderid,'现金兑换下分',@a);
           
           #对任务记录表进行更新，强制提取部分都要进行对应修改 (这步要在真正订单成功时才能操作)
           #CALL pr_club_task_deduction($nplayerid,_clubid,$subVal);
                     
           IF errno=0 THEN
               COMMIT; #提交
           ELSE
               ROLLBACK; #回滚
               SET $retVal = 2;
               SET $retMsg = "PR_DATA_ERROR";
               LEAVE rt;
           END IF;
           
        ELSE
        
           #没有超过纯免，可以直接兑换
           SET $orderscore = $exScore;
           
           #扣提现的额度(直接扣除，但是要等审批，如果被拒绝还要再还回去)
           CALL pr_UpdateUserClubScore3(0,$nplayerid,_clubid,-$orderscore,0,22,$orderid,'现金兑换下分',@a);
           
        END IF;
        SET $retVal = 1;
        SET $retMsg = "PR_EX_REQ_SUBMIT";
        LEAVE rt;
   
   END IF;
        
ELSE
   SET $retVal = 0;
   SET $retMsg = "PR_NOT_FIND_USER";
   LEAVE rt;
   
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_search2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_search2`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_club_search2`(
in $nClubID  int,
in $nPlayerID int
)
BEGIN
 
select  
info.nClubID,info.szClubName,info.nIconID,mem.nscore mnscore,mem.nLevel,mem.nExtenID,info.nChannel
from table_clubmember mem INNER JOIN table_clubinfo info on info.nClubID=mem.nClubID
where mem.nPlayerID=$nPlayerID  and mem.nStatus=1 and info.nStatus=1 and info.nClubID = $nClubID;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_set_user_last_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_set_user_last_club`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_club_set_user_last_club`(
      IN      $intPlayerId INT
     ,IN      $intClubId   INT
)
returnVal:BEGIN
IF EXISTS(SELECT 1 FROM Table_User WHERE nPlayerID = $intPlayerId) THEN
	
    UPDATE Table_User SET nLastClubID = $intClubId WHERE nPlayerID = $intPlayerId;
	
END IF;
					
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_sub_clubower_diamond_beforehand
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_sub_clubower_diamond_beforehand`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_club_sub_clubower_diamond_beforehand`(
in  $nClubID int,
IN  $nGameId INT,
IN  $nTableID INT,
in  $nAmount int,
IN  $szDesc  VARCHAR(256),
OUT $nDiamound INT,
OUT $ret     INT
)
RT:begin

	declare _nCardCountOld int default 0;
	declare _dwOwnerPlayerId int default 0;
	
	select CreatePlayerID into _dwOwnerPlayerId from table_clubinfo where nClubId = $nClubID;
	select nCardCount into _nCardCountOld from table_user where nPlayerId = _dwOwnerPlayerId;
	
	
	if _nCardCountOld < $nAmount then
	    set $ret = 1;
	    set $nDiamound = 0;
		LEAVE RT;
	end if;
	
	
	update table_user set nCardCount = nCardCount - $nAmount where nPlayerId = _dwOwnerPlayerId;
	
	select nCardCount into $nDiamound from table_user where nPlayerId = _dwOwnerPlayerId;
	
	
	INSERT INTO Table_clublogDiamond(nPlayerID,nGameID,nTableID,nAmount,nScore,nType,nTaxRate,szDesc,clubid)
	VALUES(_dwOwnerPlayerId,$nGameId,$nTableID, $nAmount, $nDiamound,13, 0, $szDesc, $nClubID);
	
	set $ret = 0;
	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_task_deduction
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_task_deduction`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_club_task_deduction`(
    IN $nplayerid     INT,
    IN $clubid        INT,
    IN $val           INT
)
BEGIN
   
    DECLARE _ID		   INT DEFAULT 0;
    DECLARE _Amount	   INT DEFAULT 0;
    DECLARE _targetBet     INT DEFAULT 0;
	
    DECLARE _all_amount    INT DEFAULT $val;
    DECLARE _reduce_value  INT DEFAULT $val;
	
    DECLARE _val_do_reduce    INT DEFAULT 0;
    DECLARE _get_last_values  INT DEFAULT 0;    
    DECLARE _get_diff_value   INT DEFAULT 0;  
    DECLARE  no_more_record   INT DEFAULT 0;  
	
    DECLARE cur CURSOR FOR SELECT ID AS _ID, Amount AS _Amount,targetBet AS _targetBet  FROM table_club_task_recdata WHERE `nPlayerID` = $nplayerid AND `nClubID` = $clubid AND lockFlag = 0 AND doneFlag = 0 ORDER BY ID;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET no_more_record = 1; 
    
    OPEN cur;
    
    read_loop:LOOP 
        
        FETCH cur INTO _ID,_Amount,_targetBet;
        
        IF no_more_record = 1 THEN
              LEAVE read_loop;
        END IF;
                
        SET _val_do_reduce =  (_reduce_value - _Amount);
    
        IF  _val_do_reduce >= 0 THEN 
                SET _reduce_value = _val_do_reduce;
                SET _get_last_values = (_Amount + _get_last_values);
                UPDATE table_club_task_recdata SET doneFlag=1 WHERE ID=_ID;
        ELSE
                
                SET _get_diff_value = (_all_amount - _get_last_values);
                UPDATE table_club_task_recdata SET Amount=(_Amount-_get_diff_value),targetBet=(_targetBet-_get_diff_value) WHERE ID=_ID;	
                LEAVE read_loop;
        END IF;
        
    END LOOP read_loop;
    CLOSE cur;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_update_score
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_update_score`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_club_update_score`(
		IN  $nplayerid INT,
		IN  $nclubid   INT,
		OUT $upscore   BIGINT
)
rt:BEGIN

SET $upscore = 0;
IF EXISTS(SELECT 1 FROM `table_clubmember` WHERE `nPlayerID` = $nplayerid AND `nClubID` = $nclubid) THEN
        SELECT `updateScore` INTO $upscore FROM `table_clubmember` WHERE `nPlayerID` = $nplayerid AND `nClubID` = $nclubid;
        IF $upscore > 0 THEN
                UPDATE table_clubmember SET `nScore` = nScore + $upscore ,updateScore = updateScore - $upscore WHERE `nPlayerID` = $nplayerid AND `nClubID` = $nclubid;
        END IF;
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_user_msglog2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_user_msglog2`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_club_user_msglog2`(
 in $nPlayerId int(10)
,in $nMsgType int(10)
,in $nIsRead int(10)
,in $sMsgTitle varchar(128)
,in $sMsgBody varchar(1024)
,in $nIsReward int(10)
,out $nMsgId int(10)
)
begin

INSERT INTO table_user_msg 
				( 
				nPlayerId,nMsgType,nIsRead,sMsgTitle,sMsgBody,nIsReward
				)
VALUES (
				$nPlayerId,$nMsgType,$nIsRead,$sMsgTitle,$sMsgBody,$nIsReward
				);
SELECT max(nMsgId) into $nMsgId from table_user_msg where  nPlayerId = $nPlayerId;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_write_robot_score_detail
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_write_robot_score_detail`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_club_write_robot_score_detail`(
 IN $nClubID INT(11)
,IN $nTableID INT(11)
,IN $nChairID INT(11)
,IN $szToken VARCHAR(63)
,IN $nRound INT(11)
,IN $nBaseScore INT(11)
,IN $nPlayCount TINYINT(4)
,IN $tStartTime TIMESTAMP
,IN $tEndTime TIMESTAMP
,IN $nPlayerID INT(11)
,IN $bRobot TINYINT(4)
,IN $nBankID INT(11)
,IN $szCardData TEXT
,IN $nEnterScore BIGINT(20)
,IN $nBetScore INT(11)
,IN $nValidBet INT(11)
,IN $nResultMoney INT(11)
,IN $nPlayerScore BIGINT(20)
,IN $nTax INT(11)
,IN $nGameType INT(11)
,IN $nCardData TEXT
,IN $roomGrade INT
,IN $szExtChar VARCHAR(256)
)
BEGIN

INSERT INTO `table_clubgamescorerobotdetail` 
        (
            nClubID,nTableID,nChairID,szToken,nRound,nBaseScore,nPlayCount,
            tStartTime,tEndTime,nPlayerID,bRobot,nBankID,szCardData,nEnterScore,
            nBetScore,nValidBet,nResultMoney,
            nPlayerScore,nTax,nGameType,nServerID,nCardData,szExtChar
        )
VALUES (
            $nClubID,$nTableID,$nChairID,$szToken,$nRound,$nBaseScore,$nPlayCount,
            $tStartTime,NOW(),$nPlayerID,$bRobot,$nBankID,$szCardData,$nEnterScore,
            $nBetScore,$nValidBet,$nResultMoney,
            $nPlayerScore,$nTax,$nGameType,$roomGrade,$nCardData,$szExtChar
        );
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_write_score_detail3_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_write_score_detail3_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_club_write_score_detail3_shard`(
 IN $nClubID INT(11)
,IN $nTableID INT(11)
,IN $nChairID INT(11)
,IN $szToken VARCHAR(63)
,IN $nRound INT(11)
,IN $nBaseScore INT(11)
,IN $nPlayCount TINYINT(4)
,IN $tStartTime TIMESTAMP
,IN $tEndTime TIMESTAMP
,IN $nPlayerID INT(11)
,IN $bRobot TINYINT(4)
,IN $nBankID INT(11)
,IN $szCardData TEXT
,IN $nEnterScore BIGINT(20)
,IN $nBetScore INT(11)
,IN $nValidBet INT(11)
,IN $nResultMoney INT(11)
,IN $nPlayerScore BIGINT(20)
,IN $nTax INT(11)
,IN $nGameType INT(11)
,IN $nCardData TEXT
,IN $roomGrade INT
,IN $szExtChar VARCHAR(256)
,IN $CardData TEXT
)
BEGIN

IF $bRobot=0 THEN

	/*	
    INSERT INTO table_clubgamescoredetail 
            (
                nClubID,nTableID,nChairID,szToken,nRound,nBaseScore,nPlayCount,
                tStartTime,tEndTime,nPlayerID,bRobot,nBankID,szCardData,nEnterScore,
                nBetScore,nValidBet,nResultMoney,
                nPlayerScore,nTax,nGameType,nServerID,nCardData,szExtChar,`CardData`
            )
    VALUES (
                $nClubID,$nTableID,$nChairID,$szToken,$nRound,$nBaseScore,$nPlayCount,
                $tStartTime,NOW(),$nPlayerID,$bRobot,$nBankID,$szCardData,$nEnterScore,
                $nBetScore,$nValidBet,$nResultMoney,
                $nPlayerScore,$nTax,$nGameType,$roomGrade,$nCardData,$szExtChar,$CardData
            );
    */
	

	set @tableName=fun_get_table_name_shard('table_clubgamescoredetail', 0);
	
	set @nClubID=$nClubID,@nTableID=$nTableID,@nChairID=$nChairID,@szToken=$szToken,@nRound=$nRound,@nBaseScore=$nBaseScore,
				@nPlayCount=$nPlayCount,@tStartTime=$tStartTime,@tEndTime=NOW(),@nPlayerID=$nPlayerID,@bRobot=$bRobot,@nBankID=$nBankID,
				@szCardData=$szCardData,@nEnterScore=$nEnterScore,@nBetScore=$nBetScore,@nValidBet=$nValidBet,@nResultMoney=$nResultMoney,
        @nPlayerScore=$nPlayerScore,@nTax=$nTax,@nGameType=$nGameType,@nServerID=$roomGrade,@nCardData=$nCardData,
				@szExtChar=$szExtChar,@CardData=$CardData;
	
	set @sqlStr=concat("insert into ",@tableName," (nClubID,nTableID,nChairID,szToken,nRound,nBaseScore,nPlayCount,
			tStartTime,tEndTime,nPlayerID,bRobot,nBankID,szCardData,nEnterScore,nBetScore,nValidBet,nResultMoney,
			nPlayerScore,nTax,nGameType,nServerID,nCardData,szExtChar,CardData) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");		
	PREPARE stmt_name FROM @sqlStr;
	EXECUTE stmt_name using @nClubID,@nTableID,@nChairID,@szToken,@nRound,@nBaseScore,
				@nPlayCount,@tStartTime,@tEndTime,@nPlayerID,@bRobot,@nBankID,
				@szCardData,@nEnterScore,@nBetScore,@nValidBet,@nResultMoney,
        @nPlayerScore,@nTax,@nGameType,@nServerID,@nCardData,
				@szExtChar,@CardData;
	DEALLOCATE PREPARE stmt_name;
	
    
    CALL pr_club_write_third_score_detail_shard(1,0,$nClubID,$nTableID,$nChairID,CONCAT($szToken,'-',$nChairID),$nPlayCount,
                                          $tStartTime,NOW(),$nPlayerID,$nEnterScore,$nBetScore,$nValidBet,$nResultMoney,
                                          $nTax,$nGameType,$roomGrade,$CardData);
ELSE
 

 
    INSERT INTO `table_clubgamescorerobotdetail` 
           (
                nClubID,nTableID,nChairID,szToken,nRound,nBaseScore,nPlayCount,
                tStartTime,tEndTime,nPlayerID,bRobot,nBankID,szCardData,nEnterScore,
                nBetScore,nValidBet,nResultMoney,
                nPlayerScore,nTax,nGameType,nServerID,nCardData,szExtChar
            )
    VALUES (
                $nClubID,$nTableID,$nChairID,$szToken,$nRound,$nBaseScore,$nPlayCount,
                $tStartTime,NOW(),$nPlayerID,$bRobot,$nBankID,$szCardData,$nEnterScore,
                $nBetScore,$nValidBet,$nResultMoney,
                $nPlayerScore,$nTax,$nGameType,$roomGrade,$nCardData,$szExtChar
            );
END IF;        
        
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_write_score_detail3_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_write_score_detail3_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_club_write_score_detail3_temp`(
 IN $nClubID INT(11)
,IN $nTableID INT(11)
,IN $nChairID INT(11)
,IN $szToken VARCHAR(63)
,IN $nRound INT(11)
,IN $nBaseScore INT(11)
,IN $nPlayCount TINYINT(4)
,IN $tStartTime TIMESTAMP
,IN $tEndTime TIMESTAMP
,IN $nPlayerID INT(11)
,IN $bRobot TINYINT(4)
,IN $nBankID INT(11)
,IN $szCardData TEXT
,IN $nEnterScore BIGINT(20)
,IN $nBetScore INT(11)
,IN $nValidBet INT(11)
,IN $nResultMoney INT(11)
,IN $nPlayerScore BIGINT(20)
,IN $nTax INT(11)
,IN $nGameType INT(11)
,IN $nCardData TEXT
,IN $roomGrade INT
,IN $szExtChar VARCHAR(256)
,IN $CardData TEXT
)
BEGIN

IF $bRobot=0 THEN

    INSERT INTO table_clubgamescoredetail 
            (
                nClubID,nTableID,nChairID,szToken,nRound,nBaseScore,nPlayCount,
                tStartTime,tEndTime,nPlayerID,bRobot,nBankID,szCardData,nEnterScore,
                nBetScore,nValidBet,nResultMoney,
                nPlayerScore,nTax,nGameType,nServerID,nCardData,szExtChar,`CardData`
            )
    VALUES (
                $nClubID,$nTableID,$nChairID,$szToken,$nRound,$nBaseScore,$nPlayCount,
                $tStartTime,NOW(),$nPlayerID,$bRobot,$nBankID,$szCardData,$nEnterScore,
                $nBetScore,$nValidBet,$nResultMoney,
                $nPlayerScore,$nTax,$nGameType,$roomGrade,$nCardData,$szExtChar,$CardData
            );
            
    
    CALL pr_club_write_third_score_detail(1,0,$nClubID,$nTableID,$nChairID,CONCAT($szToken,'-',$nChairID),$nPlayCount,
                                          $tStartTime,NOW(),$nPlayerID,$nEnterScore,$nBetScore,$nValidBet,$nResultMoney,
                                          $nTax,$nGameType,$roomGrade,$CardData);
ELSE
 

 
    INSERT INTO `table_clubgamescorerobotdetail` 
           (
                nClubID,nTableID,nChairID,szToken,nRound,nBaseScore,nPlayCount,
                tStartTime,tEndTime,nPlayerID,bRobot,nBankID,szCardData,nEnterScore,
                nBetScore,nValidBet,nResultMoney,
                nPlayerScore,nTax,nGameType,nServerID,nCardData,szExtChar
            )
    VALUES (
                $nClubID,$nTableID,$nChairID,$szToken,$nRound,$nBaseScore,$nPlayCount,
                $tStartTime,NOW(),$nPlayerID,$bRobot,$nBankID,$szCardData,$nEnterScore,
                $nBetScore,$nValidBet,$nResultMoney,
                $nPlayerScore,$nTax,$nGameType,$roomGrade,$nCardData,$szExtChar
            );
END IF;        
        
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_write_third_score_detail_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_write_third_score_detail_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_club_write_third_score_detail_shard`(
 IN $nDataType INT(11)
,IN $nSubDataType INT(11) 
,IN $nClubID INT(11)
,IN $nTableID INT(11)
,IN $nChairID INT(11)
,IN $szToken VARCHAR(63)
,IN $nPlayCount TINYINT(4)
,IN $tStartTime TIMESTAMP
,IN $tEndTime TIMESTAMP
,IN $nPlayerID INT(11)
,IN $nEnterScore BIGINT(20)
,IN $nBetScore INT(11)
,IN $nValidBet INT(11)
,IN $nResultMoney INT(11)
,IN $nTax INT(11)
,IN $nGameType INT(11)
,IN $roomGrade INT
,IN $CardData TEXT
)
BEGIN

	select IFNULL(`szNickName`,''),IFNULL(`LineCode`,'') into @nickname,@linecode FROM `table_clubmember` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID;
	 
	set @tableName=fun_get_table_name_shard('table_third_score_detail', 0);
	
	set @nDataType=$nDataType,@nSubDataType=$nSubDataType,@nClubID=$nClubID,@nTableID=$nTableID,@nChairID=$nChairID,
		@szToken=$szToken,@nPlayCount=$nPlayCount,@tStartTime=$tStartTime,@tEndTime=$tEndTime,@nPlayerID=$nPlayerID,
		@nEnterScore=$nEnterScore,@nBetScore=$nBetScore,@nValidBet=$nValidBet,@nResultMoney=$nResultMoney,@nTax=$nTax,
		@nGameType=$nGameType,@roomGrade=$roomGrade,@CardData=$CardData;
	
	set @sqlStr=concat("insert into ",@tableName," (`DataType`, `SubDataType`, `nClubID`, `nTableID`, `nChairID`, `szToken`, `Accounts`,
	  `nPlayCount`, `tStartTime`, `tEndTime`, `nPlayerID`, `nEnterScore`, `nBetScore`, `nValidBet`, `nResultMoney`, `nTax`, `nGameType`,
	  `nServerID`, `CardData`, `LineCode`) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
	  
	PREPARE stmt_name FROM @sqlStr;
	EXECUTE stmt_name using @nDataType,@nSubDataType,@nClubID,@nTableID,@nChairID,
		@szToken,@nickname,@nPlayCount,@tStartTime,@tEndTime,@nPlayerID,
		@nEnterScore,@nBetScore,@nValidBet,@nResultMoney,@nTax,
		@nGameType,@roomGrade,@CardData,@linecode;
		
	DEALLOCATE PREPARE stmt_name;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_club_write_third_score_detail_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_club_write_third_score_detail_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_club_write_third_score_detail_temp`(
 IN $nDataType INT(11)
,IN $nSubDataType INT(11) 
,IN $nClubID INT(11)
,IN $nTableID INT(11)
,IN $nChairID INT(11)
,IN $szToken VARCHAR(63)
,IN $nPlayCount TINYINT(4)
,IN $tStartTime TIMESTAMP
,IN $tEndTime TIMESTAMP
,IN $nPlayerID INT(11)
,IN $nEnterScore BIGINT(20)
,IN $nBetScore INT(11)
,IN $nValidBet INT(11)
,IN $nResultMoney INT(11)
,IN $nTax INT(11)
,IN $nGameType INT(11)
,IN $roomGrade INT
,IN $CardData TEXT
)
BEGIN

DECLARE _nickname VARCHAR(64);
DECLARE _linecode VARCHAR(64);
 
select IFNULL(`szNickName`,''),IFNULL(`LineCode`,'') into _nickname,_linecode FROM `table_clubmember` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID;
 
INSERT INTO `table_third_score_detail` ( `DataType`,  `SubDataType`,  `nClubID`,  `nTableID`,  `nChairID`,  `szToken`,  `Accounts`,
  `nPlayCount`,  `tStartTime`,  `tEndTime`,  `nPlayerID`,  `nEnterScore`,  `nBetScore`,  `nValidBet`,  `nResultMoney`,  `nTax`,  `nGameType`,
  `nServerID`,  `CardData`,  `LineCode`) 
VALUES
  (
    $nDataType,    $nSubDataType,    $nClubID,    $nTableID,    $nChairID,   $szToken,    _nickname,    $nPlayCount,    $tStartTime,   $tEndTime,
    $nPlayerID,    $nEnterScore,    $nBetScore,    $nValidBet,  $nResultMoney,   $nTax,    $nGameType,    $roomGrade,    $CardData,    _linecode
  ) ;
        
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_cp_cal
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_cp_cal`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_cp_cal`(
IN   $nPlayerID      INT,            #代理ID
IN   $szDate         VARCHAR(32)     #计算的日期
)
RT:BEGIN
 
/*
计算城市合伙人的某天统计数据 
*/
 
DECLARE _start_date      VARCHAR(32);
DECLARE _end_date        VARCHAR(32);
DECLARE _agent_total     INT;
DECLARE _agent_new       INT;
DECLARE _recharge        BIGINT;
DECLARE _share           BIGINT;
DECLARE _withdraw        BIGINT;
 
SET _start_date = CONCAT($szDate,' 0:0:0');
SET _end_date = CONCAT($szDate,' 23:59:59');
 
#算某日的总代理数
SELECT COUNT(nplayerid) INTO _agent_total FROM `table_agent_info` WHERE UpCPID IN (SELECT downcpid FROM `table_citypartner_tree` WHERE nplayerid = $nPlayerID UNION ALL SELECT $nPlayerID )
AND CreateCPTime <= _end_date;
 
#算某日的新增代理数
SELECT COUNT(nplayerid) INTO _agent_new FROM `table_agent_info` WHERE UpCPID IN (SELECT downcpid FROM `table_citypartner_tree` WHERE nplayerid = $nPlayerID UNION ALL SELECT $nPlayerID )
AND CreateCPTime >= _start_date AND CreateCPTime <= _end_date;
 
#计算某日线下所有的充值额和分成
SELECT IFNULL(SUM(`nRecharge`),0),IFNULL(SUM(`nAmount`),0) INTO _recharge, _share FROM `table_citypartner_commission` WHERE nCPID IN 
(SELECT downcpid FROM `table_citypartner_tree` WHERE nplayerid = $nPlayerID UNION ALL SELECT $nPlayerID) AND nplayerid = $nPlayerID
AND CreateTime >= _start_date AND CreateTime <= _end_date;
#计算某日提现额
SELECT IFNULL(SUM(`nAmount`),0) INTO _withdraw FROM `table_agent_apply` WHERE `nPlayerID` = $nPlayerID 
AND `nType` = 2 AND `nStatus` = 1 AND `ApprovalTime` >= _start_date AND `ApprovalTime` <= _end_date;
 
IF EXISTS( SELECT 1 FROM `table_citypartner_stat` WHERE nPlayerID=$nPlayerID AND tDate = $szDate) THEN  
        #如果已经存在
        UPDATE table_citypartner_stat SET nAgentTotal = _agent_total,nNewAgent = _agent_new ,nRecharge = _recharge, nShare = _share, nCommission = _withdraw
        WHERE nPlayerID=$nPlayerID AND tDate = $szDate;
ELSE
        INSERT INTO `table_citypartner_stat` (  `nPlayerID`,  `tDate`,  `nAgentTotal`,  `nNewAgent`,  `nRecharge`,  `nShare`,  `nCommission`) 
        VALUES  (    $nPlayerID,   $szDate,    _agent_total,    _agent_new,    _recharge,    _share,    _withdraw  ) ;  
END IF;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_cp_check_player_data
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_cp_check_player_data`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_cp_check_player_data`(
IN   $nPlayerID      INT            #代理ID
)
RT:BEGIN
 
/*
计算城市合伙人的补充数据 
*/
 
DECLARE _subday     INT;
DECLARE i           INT;
DECLARE _start_date VARCHAR(32);
DECLARE _last_stat_date VARCHAR(32);
DECLARE _yesterday  VARCHAR(32);
DECLARE _tday       VARCHAR(32);
DECLARE _day        INT;
 
SET _day = 65;
  
 
#合伙人的创建时间
SELECT date_format(CreateTime, '%Y-%c-%d' )  into _start_date  from `table_citypartner_info` where  nPlayerID = $nPlayerID;
 
IF _start_date IS NULL THEN
        -- select "没有数据";
        LEAVE RT;
END IF;
 
#昨天 
SELECT DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY),'%Y-%c-%d' ) INTO _yesterday;
 
#每日统计数据表里最后的时间
SELECT tDate INTO _last_stat_date FROM `table_citypartner_stat` WHERE nPlayerID = $nPlayerID ORDER BY tDate DESC LIMIT 1;
 
IF _last_stat_date IS NULL THEN
#如果没有数据，要从昨天的倒着去补充
   
   #如果是今天创建的，则不需要补充
   IF _start_date = DATE_FORMAT(NOW(),'%Y-%c-%d' ) THEN
      LEAVE RT;
   ELSE
      #计算创建时间和昨天间隔的天数
      SELECT TIMESTAMPDIFF(DAY,_start_date,_yesterday) INTO _subday;
      #需要多加1天，否则创建那天不会被算进去
      SET _subday = _subday + 1;
      
   END IF;
   
ELSE
 
#需要计算从昨天到开始的日期需要补足多少天
   #如果最后的数据是昨天，则不需要补足
   IF _last_stat_date = _yesterday THEN
       LEAVE RT;
   ELSE
   
       #从昨天开始到最后有数据日期间隔多少天
       SELECT TIMESTAMPDIFF(DAY,_last_stat_date,_yesterday) INTO _subday;
   END IF; 
   
END IF;
SET _tday = _yesterday;
IF _subday > _day THEN
   SET _subday = _day;
END IF;
          
SET i = 0;
 
WHILE i < _subday DO
 #SELECT _tday;
 CALL pr_cp_cal($nPlayerID,_tday); 
 SET _tday = DATE_SUB(_tday,INTERVAL 1 DAY);
 SET i=i+1;
END WHILE;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_cp_get_profit
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_cp_get_profit`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_cp_get_profit`(
IN   $nPlayerID      INT,            #城市合伙人ID
IN   $nPage          INT,            #第几页
OUT  $nTotal         INT,            #总数据量
OUT  $nVal           INT,            #返回值 1-成功
OUT  $nT_NewAgent    INT,            #汇总 新增
OUT  $nT_Recharge    INT,            #汇总 充值
OUT  $nT_Share       INT,            #汇总 分成
OUT  $nT_Commission  INT             #汇总 提现
)
RT:BEGIN
 
/*
获取城市合伙人的推广收益
*/
 
DECLARE _start_date      VARCHAR(32);
DECLARE _today           VARCHAR(32);
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _limitday  INT;
DECLARE _limitday2 INT;
 
SET _count = 5;
SET _limitday = 65;
SET _limitday2 = _limitday + 1;
 
IF $nPage <= 0 THEN
        SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
SET $nTotal = 0;
SET _today = DATE_FORMAT(NOW(), '%Y-%c-%d');
SET _start_date = CONCAT(_today,' 0:0:0');
 
#先计算一下数据 
CALL pr_cp_check_player_data($nPlayerID);
# UNIX_TIMESTAMP(tDate) AS tDate
SELECT UNIX_TIMESTAMP(tDate) AS tDate, nAgentTotal,nNewAgent,nRecharge,nShare, nCommission from ( 
SELECT tDate, nAgentTotal,nNewAgent,nRecharge,nShare, nCommission FROM
(
SELECT _today AS tDate,
 
#算当前的总代理数
(SELECT COUNT(nplayerid) FROM `table_agent_info` WHERE UpCPID IN 
(SELECT downcpid FROM `table_citypartner_tree` WHERE nplayerid = $nPlayerID UNION SELECT $nPlayerID ))
AS nAgentTotal,
 
#算今日的新增代理数
(SELECT COUNT(nplayerid) FROM `table_agent_info` WHERE UpCPID IN 
(SELECT downcpid FROM `table_citypartner_tree` WHERE nplayerid = $nPlayerID UNION SELECT $nPlayerID )
AND CreateCPTime >= _start_date) AS nNewAgent,
#今日充值额 
(SELECT IFNULL(SUM(`nRecharge`),0) FROM `table_citypartner_commission` WHERE nCPID IN 
(SELECT downcpid FROM `table_citypartner_tree` WHERE nplayerid = $nPlayerID UNION SELECT $nPlayerID)
AND CreateTime >= _start_date AND nplayerid = $nPlayerID) AS nRecharge,
#今日分成额
(SELECT IFNULL(SUM(`nAmount`),0) FROM `table_citypartner_commission` WHERE nCPID IN 
(SELECT downcpid FROM `table_citypartner_tree` WHERE nplayerid = $nPlayerID UNION SELECT $nPlayerID)
AND CreateTime >= _start_date AND nplayerid = $nPlayerID) AS nShare,
#计算今日提现额
(SELECT IFNULL(SUM(`nAmount`),0) FROM `table_agent_apply` WHERE `nPlayerID` = $nPlayerID 
AND `nType` = 2 AND `nStatus` = 1 AND `ApprovalTime` >= _start_date) AS nCommission
) temp
UNION ALL 
SELECT  `tDate`, `nAgentTotal`, `nNewAgent`,`nRecharge`,`nShare`, `nCommission` FROM `table_citypartner_stat` 
WHERE `nPlayerID` = $nPlayerID limit _limitday2
)t2 ORDER BY tDate DESC LIMIT _page, _count;
select COUNT(ID) INTO $nTotal FROM table_citypartner_stat WHERE `nPlayerID` = $nPlayerID;
IF $nTotal > _limitday THEN
  SET $nTotal = _limitday;
END IF;
SET $nTotal = $nTotal + 1;
#====================================
#汇总数据的计算
#====================================
SELECT IFNULL(SUM(nNewAgent),0),IFNULL(SUM(nRecharge),0),IFNULL(SUM(nShare),0), IFNULL(SUM(nCommission),0)
INTO $nT_NewAgent,$nT_Recharge,$nT_Share,$nT_Commission
FROM 
( 
        SELECT nNewAgent,nRecharge,nShare,nCommission FROM
        (
        SELECT
                #算今日的新增代理数
                (SELECT COUNT(nplayerid) FROM `table_agent_info` WHERE UpCPID IN 
                (SELECT downcpid FROM `table_citypartner_tree` WHERE nplayerid = $nPlayerID UNION SELECT $nPlayerID )
                AND CreateCPTime >= _start_date) AS nNewAgent,
                 
                #今日充值额 
                (SELECT IFNULL(SUM(`nRecharge`),0) FROM `table_citypartner_commission` WHERE nCPID IN 
                (SELECT downcpid FROM `table_citypartner_tree` WHERE nplayerid = $nPlayerID UNION SELECT $nPlayerID)
                AND CreateTime >= _start_date AND nplayerid = $nPlayerID) AS nRecharge,
                 
                #今日分成额
                (SELECT IFNULL(SUM(`nAmount`),0) FROM `table_citypartner_commission` WHERE nCPID IN 
                (SELECT downcpid FROM `table_citypartner_tree` WHERE nplayerid = $nPlayerID UNION SELECT $nPlayerID)
                AND CreateTime >= _start_date AND nplayerid = $nPlayerID) AS nShare,
                 
                #计算今日提现额
                (SELECT IFNULL(SUM(`nAmount`),0) FROM `table_agent_apply` WHERE `nPlayerID` = $nPlayerID 
                AND `nType` = 2 AND `nStatus` = 1 AND `ApprovalTime` >= _start_date) AS nCommission
                 
        ) t3
                
UNION ALL 
 
        SELECT  `nNewAgent`,`nRecharge`,`nShare`, `nCommission` FROM `table_citypartner_stat` 
        WHERE `nPlayerID` = $nPlayerID LIMIT _limitday2
 
)t4;
 
SET $nVal = 1;
 	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_cp_get_recharge_profit
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_cp_get_recharge_profit`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_cp_get_recharge_profit`(
IN   $nPlayerID      INT,            #城市合伙人ID
IN   $nType          INT,            #类型 0-会员充值 1-代理充值
IN   $nPage          INT,            #第几页
OUT  $nRatio         INT,            #用户自己的分成比例（根据参数选择会员，代理）
OUT  $nTotal         INT,            #总数据量
OUT  $nVal           INT             #返回值 1-成功
)
RT:BEGIN
 
/*
获取城市合伙人的充值收益（会员，代理）
*/
 
DECLARE _page   INT;
DECLARE _count  INT;
SET _count = 5;
SET $nVal  = 0;
 
IF $nPage <= 0 THEN
        SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
SET $nTotal = 0;
SET $nRatio = 0;
IF $nType<>0 THEN
        SET $nType = 1;
END IF;
IF NOT EXISTS (select 1 FROM `table_citypartner_info` WHERE `nPlayerID` = $nPlayerID ) THEN
        SET $nVal = 0;
        LEAVE RT;
END IF;
#============================
 
IF $nType=1 THEN
#代理充值收益
 
        SELECT t.nCPID AS playid,u.`szNickName`, 
        (SELECT COUNT(ID) FROM `table_agent_info` WHERE upcpid = t.nCPID) AS downcount,
        nLevel,UpCPID,ratio,nRecharge,nAmount FROM 
        (
        SELECT com.nCPID, info.`nLevel`,info.`UpCPID`,
        (SELECT `ratio` FROM table_citypartner_commission WHERE nCPID = com.nCPID AND nPlayerID = $nPlayerID AND nType = 1 ORDER BY ID DESC LIMIT 1) AS ratio,
        SUM(com.`nRecharge`) AS nRecharge,SUM(com.`nAmount`) AS nAmount
        FROM table_citypartner_commission com, table_citypartner_info info 
        WHERE com.nCPID = info.nPlayerID AND com.nPlayerID = $nPlayerID AND com.nType = 1 GROUP BY com.nCPID
        ORDER BY info.nLevel,com.nCPID LIMIT _page,_count) t LEFT JOIN table_user u ON u.nplayerid = t.nCPID;
        
        SELECT COUNT(*) INTO $nTotal FROM(
        SELECT nCPID  FROM table_citypartner_commission WHERE nPlayerID = $nPlayerID AND nType = 1 GROUP BY nCPID
        ) t; 
        
        SELECT `ratio_agent` INTO $nRatio FROM `table_citypartner_info` WHERE nPlayerID = $nPlayerID;
 
ELSE
#会员充值收益
        
        SELECT t.nCPID AS playid,u.`szNickName`, 
        (SELECT COUNT(nPlayerID) FROM table_user WHERE `extendCode` IN (SELECT nPlayerID FROM `table_agent_info` WHERE UpCPID = t.nCPID)) AS downcount,
        nLevel,UpCPID,ratio,nRecharge,nAmount FROM 
        (
        SELECT com.nCPID, info.`nLevel`,info.`UpCPID`,
        (SELECT `ratio` FROM table_citypartner_commission WHERE nCPID = com.nCPID AND nPlayerID = $nPlayerID AND nType = 0 ORDER BY ID DESC LIMIT 1) AS ratio,
        SUM(com.`nRecharge`) AS nRecharge ,SUM(com.`nAmount`) AS nAmount
        FROM table_citypartner_commission com, table_citypartner_info info 
        WHERE com.nCPID = info.nPlayerID AND com.nPlayerID = $nPlayerID AND com.nType = 0 GROUP BY com.nCPID
        ORDER BY info.nLevel,com.nCPID LIMIT _page,_count ) t LEFT JOIN table_user u ON u.nplayerid = t.nCPID;
        
        SELECT COUNT(*) INTO $nTotal FROM(
        SELECT nCPID FROM table_citypartner_commission WHERE nPlayerID = $nPlayerID AND nType = 0 GROUP BY nCPID
        ) t;
        SELECT `ratio_player` INTO $nRatio FROM `table_citypartner_info` WHERE nPlayerID = $nPlayerID;
         
END IF;
 
SET $nVal = 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_DeleteMsg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_DeleteMsg`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_DeleteMsg`(
	in $intMsgId bigint,
	out $ReturnVal int
)
BEGIN
	UPDATE table_user_msg SET nMsgType=nMsgType+1000 WHERE nMsgId=$intMsgId;
	set $ReturnVal=1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_dev_league_statistics_partner_anytimer
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_dev_league_statistics_partner_anytimer`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_dev_league_statistics_partner_anytimer`(
        IN $starttime  VARCHAR(19),  # 输入开始时间 '2020-1-1 00:00:00'
        IN $endtime    VARCHAR(19)   # 输入结束时间 '2020-1-1 11:11:11'
)
begin 
/*
合伙人基础数据
用于执行一段时间
*/ 
        CALL pr_league_stc_partner_time($starttime,$endtime,-2147483648,0);
        CALL pr_league_stc_partner_time($starttime,$endtime,10*1000,1);
        CALL pr_league_stc_partner_time($starttime,$endtime,20*1000,2);
        CALL pr_league_stc_partner_time($starttime,$endtime,60*1000,3);
        CALL pr_league_stc_partner_time($starttime,$endtime,80*1000,4);
        CALL pr_league_stc_partner_time($starttime,$endtime,100*1000,5);
        CALL pr_league_stc_partner_time($starttime,$endtime,120*1000,6);
        #---------------------------------------------------------------------
        CALL pr_league_stc_partner_sub_time($starttime,$endtime,-2147483648,0);
        CALL pr_league_stc_partner_sub_time($starttime,$endtime,10*1000,1);
        CALL pr_league_stc_partner_sub_time($starttime,$endtime,20*1000,2);
        CALL pr_league_stc_partner_sub_time($starttime,$endtime,60*1000,3);
        CALL pr_league_stc_partner_sub_time($starttime,$endtime,80*1000,4);
        CALL pr_league_stc_partner_sub_time($starttime,$endtime,100*1000,5);
        CALL pr_league_stc_partner_sub_time($starttime,$endtime,120*1000,6); 
                
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_dev_league_statistics_partner_timer_day
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_dev_league_statistics_partner_timer_day`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_dev_league_statistics_partner_timer_day`(
        IN $theday VARCHAR(19)  # 输入年月日 '2020-1-1'
)
begin 
/*
合伙人基础数据
用于执行一整天
*/ 
       	
               
        #开始时间
        set @startTime = CONCAT($theday,' 00:00:00'); 
               
        #结束时间
        set @endTime   = CONCAT(DATE_FORMAT(DATE_ADD($theday, INTERVAL 1 DAY),'%Y-%m-%d'),' 00:00:00');
        
        select @startTime,@endTime;
        
        CALL pr_league_stc_partner_time(@startTime,@endTime,-2147483648,0);
        CALL pr_league_stc_partner_time(@startTime,@endTime,10*1000,1);
        CALL pr_league_stc_partner_time(@startTime,@endTime,20*1000,2);
        CALL pr_league_stc_partner_time(@startTime,@endTime,60*1000,3);
        CALL pr_league_stc_partner_time(@startTime,@endTime,80*1000,4);
        CALL pr_league_stc_partner_time(@startTime,@endTime,100*1000,5);
        CALL pr_league_stc_partner_time(@startTime,@endTime,120*1000,6);
        #---------------------------------------------------------------------
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,-2147483648,0);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,10*1000,1);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,20*1000,2);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,60*1000,3);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,80*1000,4);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,100*1000,5);
        CALL pr_league_stc_partner_sub_time(@startTime,@endTime,120*1000,6);         
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_diamonddetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_diamonddetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_diamonddetail`(
 )
begin
 declare _curDiffDate VARCHAR(30) default CONCAT(CURDATE(),' 00:00:00');
 declare _oldDiffDate VARCHAR(30) default CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00');
 
INSERT INTO table_web_diamonddetailxp (Todate,bzxp,syxp,sszxp,ddzxp,todaytotaldl,bzxprs,syxprs,sszxprs,ddzxprs,todaytotaldlrs)
SELECT  date_format(ActionDate, '%Y-%m-%d')   'Todate',
	abs(sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2001 then `count` else 0 end)) as '八张摆牌2001',
	abs(sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2002 then `count` else 0 end)) as '水鱼摆牌2002',
	abs(sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2003 then `count` else 0 end)) as '十三章摆牌2003',
	abs(sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2005 then `count` else 0 end)) as '斗地主摆牌2005',
	abs(sum(`count`)) as '总和',
	abs(sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2001 then 1 else 0 end)) as '八张摆牌2001rs',
	abs(sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2002 then 1 else 0 end)) as '水鱼摆牌2002rs',
	abs(sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2003 then 1 else 0 end)) as '十三章摆牌2003rs',
	abs(sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2005 then 1 else 0 end)) as '斗地主摆牌2005rs',
	count(1) as '总和rs'
FROM table_diamondactionlog 
where szRemark like '____洗牌%'
and ActionDate >=_oldDiffDate
and ActionDate <_curDiffDate
GROUP BY date_format(ActionDate, '%Y-%m-%d') ;

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_diamonddetailxp
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_diamonddetailxp`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_diamonddetailxp`(
 )
begin
 declare _curDiffDate VARCHAR(30) default CONCAT(CURDATE(),' 00:00:00');
 declare _oldDiffDate VARCHAR(30) default CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00');

INSERT INTO table_web_diamonddetailxp (Todate,bzxp,syxp,sszxp,ddzxp,todaytotaldl)
SELECT  date_format(ActionDate, '%Y-%m-%d')   'Todate',
	sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2001 then `count` else 0 end) as 'bzxp',
	sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2002 then `count` else 0 end) as 'syxp',
	sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2003 then `count` else 0 end) as 'sszxp',
	sum(CASE when SUBSTR(szremark FROM 1 FOR 4)=2005 then `count` else 0 end) as 'ddzxp',
	sum(`count`) as 'totaldl'
FROM table_diamondactionlog 
where szRemark like '____洗牌%'
and ActionDate >=_oldDiffDate
and ActionDate <_curDiffDate
GROUP BY date_format(ActionDate, '%Y-%m-%d') ;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_diamon_not_enough_Login
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_diamon_not_enough_Login`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_diamon_not_enough_Login`(
	 in $owerid int,
	 in $MsgType int 
)
RT:BEGIN

SELECT nMsgType FROM table_user_msg WHERE nPlayerId = $owerid and  nMsgType = $MsgType and nIsRead = 0;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_do_task_day_award
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_do_task_day_award`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_do_task_day_award`()
BEGIN


CALL pr_task_day_award_action( CONCAT( DATE_FORMAT( DATE_SUB(NOW(),INTERVAL 1 DAY),'%Y-%m-%d')," 00:00:00"), CONCAT( DATE_FORMAT( NOW(), '%Y-%m-%d' )," 00:00:00") );
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_GetActivityList
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_GetActivityList`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_GetActivityList`(IN `$intPlayerId` int,IN `$intActiveId` int,OUT `$ReturnVal` int)
BEGIN
	declare arg int default 0;
	if exists(select * from table_activity where nPlayerId=$intPlayerId and nActiveId=$intActiveId ) then 
			select nIsRead into arg from table_activity where nPlayerId=$intPlayerId and nActiveId=$intActiveId ;
			set $ReturnVal=arg;			
	else 
			insert into table_activity(nPlayerId,nActiveId,nIsRead) values($intPlayerId,$intActiveId,0);
			set $ReturnVal=arg;
	end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_GetAwardMsg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_GetAwardMsg`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_GetAwardMsg`(
        IN $intPlayerId INT,
        IN $intMsgId BIGINT,
        IN $phone BIGINT,
        OUT $ReturnVal INT,
        OUT $MsgTitle VARCHAR(128),
        OUT $MsgType INT)
BEGIN
        DECLARE _MsgType,_IsReward INT;
        DECLARE _MsgTitle VARCHAR(128);
        DECLARE _szNickname VARCHAR(64);
        DECLARE _nCardCount INT DEFAULT 0;
        DECLARE _nJinBi BIGINT DEFAULT 0;
        DECLARE _TYPE,_Num INT;
        DECLARE _done INT DEFAULT 0;
        DECLARE cur CURSOR FOR SELECT nAwardType,nAwardNum FROM table_user_rewards WHERE nMsgId=$intMsgId;
        DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
        SELECT szNickName INTO _szNickname FROM table_user WHERE nPlayerId=$intPlayerId;
        SELECT nMsgType,sMsgTitle,nIsReward INTO _MsgType,_MsgTitle,_IsReward FROM table_user_msg  WHERE nMsgId= $intMsgId;
        SET $MsgTitle=_MsgTitle;
        SET $MsgType=_MsgType;
        SET $ReturnVal = 1;
        IF _IsReward=2 THEN
                SET $ReturnVal = 2; 
        ELSEIF _IsReward=1 THEN
                SELECT nCardCount,nJinBi INTO _nCardCount,_nJinBi FROM table_user WHERE nPlayerId=$intPlayerId;
                OPEN cur;
                REPEAT
                FETCH cur INTO _TYPE,_Num;
                IF NOT _done THEN
                        IF _TYPE=1 THEN
                                UPDATE table_user SET nCardCount=nCardCount+_Num WHERE nPlayerId=$intPlayerId;
                                UPDATE table_user_rewards SET nReward=1 WHERE nMsgId=$intMsgId  AND _TYPE = 1 ;
                                IF _MsgType=200 THEN
                                        INSERT INTO Table_DiamondActionLog (AccountId,COUNT,szRemark)  VALUES ($intPlayerId,_Num,CONCAT('系统邮件 余额:',_nCardCount+_Num));
                                ELSEIF _MsgType=201 THEN
                                        CALL Pr_UserDiamondActionLog ($intPlayerId,_szNickname,_Num,CONCAT('比赛加钻 余额:',_nCardCount+_Num));
                                END IF;
                        ELSEIF _TYPE=2 THEN
                                UPDATE table_user SET nJinBi=nJinBi +_Num WHERE nPlayerId=$intPlayerId;
                                UPDATE table_user_rewards SET nReward=1 WHERE nMsgId=$intMsgId AND  _TYPE = 2;
                                IF _MsgType=200 THEN
                                        INSERT INTO table_clubloggold (nPlayerID,nAmount,nScore,nType,szRemark)  VALUES ($intPlayerId,_Num,_nJinBi+_Num,4,CONCAT('系统邮件 余额:',_nJinBi+_Num));
                                ELSEIF _MsgType=201 THEN
                                        CALL Pr_UserGoldActionLog($intPlayerId,4,_Num,CONCAT('比赛加金币 余额:',_nJinBi+_Num),0);
                                END IF;
                        ELSEIF _TYPE=3 THEN
                                UPDATE table_user_rewards SET phone = $phone WHERE nMsgId= $intMsgId AND  _TYPE = 3;
                                CALL Pr_UserGetrRwardLog($intPlayerId,_szNickname,'充值话费',_Num);
                        ELSEIF _TYPE=5 THEN
                                UPDATE table_user_rewards SET phone = $phone WHERE nMsgId= $intMsgId AND  _TYPE = 5;
                                CALL Pr_UserGetrRwardLog($intPlayerId,_szNickname,'领取搓搓劵',_Num);
                        ELSE
                                SET $ReturnVal = 0;
                        END IF;
                END IF;
                UNTIL _done END REPEAT;
                CLOSE cur;
        ELSEIF _IsReward=0 THEN
                SET $ReturnVal = 0;
        END IF;
    IF $ReturnVal=1 THEN
        UPDATE table_user_msg SET nIsReward=2 WHERE nMsgId= $intMsgId;
        SELECT nAwardType,nAwardNum  FROM table_user_rewards WHERE nMsgId= $intMsgId;
    END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_GetClubGameRate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_GetClubGameRate`;
DELIMITER ;;
CREATE DEFINER=`llj_user`@`%` PROCEDURE `Pr_GetClubGameRate`(
in $nClubID int,
in $nGameId int,
in $nBaseScore int
)
RT:begin

	IF $nBaseScore >= 1000 then
		select nCode,nTaxRate from table_club_cc where nClubID = $nClubID and nGameId = $nGameId and nStatus = 1;
	else
		select nCode,nTaxRate from table_club_cc where nClubID = $nClubID and nGameId = $nGameId and nStatus = 1 and nCode not in (90,91,92,96)
		union
		select nCode,nTaxRate from table_club_cc_low where nClubID = $nClubID and nGameId = $nGameId and nStatus = 1 and nCode in (90,91,92,96);
	end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_GetClubGameRateDefault
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_GetClubGameRateDefault`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `Pr_GetClubGameRateDefault`(
in $nGameId int,
in $nBaseScore int
)
RT:begin

	IF $nBaseScore >= 1000 then
		select nCode,nTaxRate from table_club_cc where nClubID = 0 and nGameId = $nGameId and nStatus = 1;
	else
		select nCode,nTaxRate from table_club_cc where nClubID = 0 and nGameId = $nGameId and nStatus = 1 and nCode not in (90,91,92,96)
		union
		select nCode,nTaxRate from table_club_cc_low where nClubID = 0 and nGameId = $nGameId and nStatus = 1 and nCode in (90,91,92,96);
	end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_GetClubGoodsCfg
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_GetClubGoodsCfg`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `Pr_GetClubGoodsCfg`()
BEGIN
    SELECT nPlatID, nGoodsID, nGoodsName, nType, nOriPrice, nPrice, nGoodsTime, szMark FROM table_clubgoodsinfor WHERE nState = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_GetMsgBody
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_GetMsgBody`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_GetMsgBody`(
    in $intPlayerId int,
in $intMsgId bigint,
out $MsgType int,
out $MsgTitle varchar(128),
out $MsgBody varchar(1024),
out $IsReward int
    )
BEGIN



select nMsgType, sMsgTitle, sMsgBody ,nIsReward into $MsgType,$MsgTitle,$MsgBody ,$IsReward from table_user_msg  where nMsgId= $intMsgId ;

update table_user_msg set nIsRead=1 where nMsgId= $intMsgId;

select nAwardType,nAwardNum from table_user_rewards where nMsgId= $intMsgId;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_GetMsgRewards
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_GetMsgRewards`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_GetMsgRewards`(
    IN $intMsgId INT 
    )
BEGIN
	select nAwardType,nAwardNum from table_user_rewards where nMsgId= $intMsgId;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_GetNewMsg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_GetNewMsg`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_GetNewMsg`(
	in $intPlayerId int,
	in $intMsgId	bigint
)
begin
	if $intMsgId=0 then 
		SELECT A.nMsgId,A.nMsgType,A.nIsRead,A.sMsgTitle,UNIX_TIMESTAMP(A.CreateTime) tm,A.nIsReward,GROUP_CONCAT( CONCAT(B.nAwardType,'|',B.nAwardNum) SEPARATOR "," ) nAwardType  
		FROM table_user_msg  A
		LEFT JOIN table_user_rewards  B ON A.nMsgId = B.nMsgId
		WHERE A.nPlayerId=$intPlayerId AND A.nMsgType < 1000	
		GROUP BY A.nMsgId,A.nMsgType,A.nIsRead,A.sMsgTitle,UNIX_TIMESTAMP(A.CreateTime);
	else
		SELECT A.nMsgId,A.nMsgType,A.nIsRead,A.sMsgTitle,UNIX_TIMESTAMP(A.CreateTime) tm,A.nIsReward,GROUP_CONCAT( CONCAT(B.nAwardType,'|',B.nAwardNum) SEPARATOR "," ) nAwardType  
		FROM table_user_msg  A
		LEFT JOIN table_user_rewards  B ON A.nMsgId = B.nMsgId
		WHERE A.nPlayerId=$intPlayerId AND A.nMsgId>$intMsgId AND A.nIsRead = 0 and A.nMsgType < 1000	
		GROUP BY A.nMsgId,A.nMsgType,A.nIsRead,A.sMsgTitle,UNIX_TIMESTAMP(A.CreateTime);
	end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_GetRecShareCode
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_GetRecShareCode`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_GetRecShareCode`(
				in $strRecToken varchar(256),
				out $intOutSCode int,
				out $returnVal int
)
BEGIN
				DECLARE _nSelIdx,_nCode,_nTSCode,_NewId INT;
				select idx,nRecShareID into _nSelIdx,_nCode from  Table_Web_UserZHangJi where szRecToken = $strRecToken limit 0,1;
				IF _nSelIdx IS NULL 
				THEN 
						set $returnVal=0;
				ELSE
						IF _nCode IS NULL 
						THEN
									
								SELECT ID into _nTSCode FROM Table_RecTokenCode WHERE szRecToken =$strRecToken;
								IF _nTSCode IS NULL
								THEN
	              
										INSERT INTO Table_RecTokenCode(szRecToken) VALUES ($strRecToken);
										set _NewId=@@identity;
										SET _nTSCode = _NewId % 999999;
										if _nTSCode< 100000
										THEN
												SET _nTSCode = _nTSCode + 100000;
										END IF;
										
										UPDATE Table_Web_UserZHangJi SET nRecShareID = _nTSCode WHERE szRecToken = $strRecToken;
								END IF;
						SET $intOutSCode = _nTSCode;
				ELSE
						SET $intOutSCode = _nCode;
				END IF;
						set $returnVal=1;
				end IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_GetRecTokenByShareCode
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_GetRecTokenByShareCode`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_GetRecTokenByShareCode`(
				in $intSCode int,
				out $strOutRecToken nvarchar(128),
				out $returnVal int
)
BEGIN
			SELECT szRecToken into $strOutRecToken from  Table_RecTokenCode where id = $intSCode;
			IF @strOutRecToken IS NULL 
			THEN
					set $returnVal=0;
			ELSE
					set $returnVal=1;
			END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_GetUserDiamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_GetUserDiamond`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_GetUserDiamond`(
		IN  $intPlayerId    INT,
		OUT $diamond        INT,
		OUT $result         INT
)
RT:BEGIN
/*
读取用户的钻石数量
*/
		IF  EXISTS(SELECT 1 FROM table_user WHERE  nPlayerId=$intPlayerId ) THEN
			 	SELECT `nCardCount` INTO $diamond FROM table_user WHERE  nPlayerId = $intPlayerId ;
			 	SET $result=1;
				LEAVE RT;
		else
				SET $diamond = 0;
			 	SET $result=0;
				LEAVE RT;
		END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_GetUserGoodslist
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_GetUserGoodslist`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `Pr_GetUserGoodslist`(
    IN $nPlayerID INT
)
BEGIN
    SELECT nGoodsID, num, bUse, renewal, 
        UNIX_TIMESTAMP(expireTime) AS expireTime, 
        UNIX_TIMESTAMP(lastOpTime) AS lastOpTime 
        FROM table_clubgoods WHERE nPlayerID = $nPlayerID;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_GetUserPhone
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_GetUserPhone`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_GetUserPhone`(
		IN  $intPlayerId    INT,
		OUT $phone          varchar(15),
		OUT $returnVal     INT
)
returnVal:BEGIN
		IF  EXISTS(SELECT 1 FROM table_user WHERE  nPlayerId=$intPlayerId and phone >1) THEN
			 	SELECT phone INTO $phone FROM table_user WHERE  nPlayerId=$intPlayerId ;
			 	SET $returnVal=1;
				LEAVE returnVal;
		else
				SET $phone ='';
			 	SET $returnVal=0;
				LEAVE returnVal;
		END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_GetUserRate
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_GetUserRate`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_GetUserRate`(in `$nplayerid` int,in `$passedmd5` varchar(64),out `$Rate`  int)
RT:BEGIN
  DECLARE _szpass varchar(64);
  DECLARE _szCreateTime TIMESTAMP;
  DECLARE _days int default 0;
  if not exists(select 1 from table_user where nplayerid=$nplayerid) then 
		set $Rate=-2;
		leave RT;
  end if;
  
  select szpass,szCreateTime into _szpass,_szCreateTime from table_user where nplayerid=$nplayerid; 
  if _szpass<>$passedmd5 THEN
      set $Rate=-1;
	  leave RT;
  end if;
  
  set _days=DATEDIFF(now(),_szCreateTime);
 
  IF _days>100 THEN
     set _days=100;
  end if; 
 
  set $Rate=_days;
  
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_agent_key
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_agent_key`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_agent_key`(
						in  $clubid int,
						out $deskey VARCHAR(64),
                        OUT $md5key VARCHAR(64),
						out $strOutErrMsg varchar(256),
						out $returnVal int
)
rt:begin

if exists(select 1 from `admin_proxy` WHERE `nClubId` = $clubid and proxytype = 1) then
    SELECT `DesKey`,`Md5Key` INTO $deskey,$md5key FROM `admin_proxy` WHERE `nClubId` = $clubid AND proxytype = 1;
    SET $returnVal    = 0;
    SET $strOutErrMsg = 'ok';
    LEAVE rt;
else
    
    SET $returnVal    = 1;
    SET $strOutErrMsg = 'accounts miss';
    LEAVE rt;
end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_buygoodslog
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_buygoodslog`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_get_buygoodslog`(
			IN  $nPlayerID  INT,      #用户ID
			IN  $nPage      INT,      #当前页
			OUT $total      INT       #返回一共有多少记录
)
RT:BEGIN
/*
购买道具的记录
*/
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _minID  INT DEFAULT 0;
DECLARE _maxID  INT DEFAULT 0; 
DECLARE _toUpdateID  INT DEFAULT 50;  # 默认取最近15天的最新50条记录
DECLARE _intervalStart VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 15 DAY),'%Y-%m-%d'), ' 00:00:00');
 
SET _count = 6;   #每页的数量
SET _toUpdateID = 50;
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
 
# 取最近15天的最新50条的最大ID 和 最小ID
SELECT MIN(id) INTO _minID FROM(
        SELECT id FROM `table_clubgoodsoperatlog` WHERE nPlayerId = $nPlayerID AND CreateTime>= _intervalStart AND nOperatType=7 and nstate=1 ORDER BY id DESC LIMIT _toUpdateID
) temp10;
SELECT MAX(id) INTO _maxID FROM(
        SELECT id FROM `table_clubgoodsoperatlog` WHERE nPlayerId = $nPlayerID AND CreateTime>= _intervalStart AND nOperatType=7 AND nstate=1 ORDER BY id DESC LIMIT _toUpdateID
) temp10;
#分页查询
SELECT glog.`nPrice` AS Diamond,info.nType,UNIX_TIMESTAMP(glog.CreateTime) AS tdate,glog.ReMark FROM `table_clubgoodsoperatlog` glog,`table_clubgoodsinfor` info 
WHERE glog.ngoodsid = info.ngoodsid AND glog.nPlayerId = $nPlayerID AND info.nPlatID=2 AND glog.CreateTime>= _intervalStart 
AND glog.nOperatType=7 AND glog.nstate=1 AND glog.ID BETWEEN _minID AND _maxID ORDER BY glog.id DESC LIMIT _page, _count;
 
#计算总数
SELECT COUNT(1) INTO $total FROM ( 
        SELECT 1  FROM `table_clubgoodsoperatlog` WHERE nPlayerId = $nPlayerID AND `CreateTime` >= _intervalStart AND nOperatType=7 AND nstate=1 ORDER BY id DESC LIMIT _toUpdateID
)tmp; 
                         
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_buygoodslog_test
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_buygoodslog_test`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_get_buygoodslog_test`(
			IN  $nPlayerID  INT,      #用户ID
			IN  $nPage      INT,      #当前页
			OUT $total      INT       #返回一共有多少记录
)
RT:BEGIN
/*
购买道具的记录
*/
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _minID  INT DEFAULT 0;
DECLARE _maxID  INT DEFAULT 0; 
DECLARE _toUpdateID  INT DEFAULT 50;  # 默认取最近15天的最新50条记录
DECLARE _intervalStart VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 15 DAY),'%Y-%m-%d'), ' 00:00:00');
 
SET _count = 6;   #每页的数量
SET _toUpdateID = 50;
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
 
# 取最近15天的最新50条的最大ID 和 最小ID
SELECT MIN(id) INTO _minID FROM(
        SELECT id FROM `table_clubgoodsoperatlog` WHERE nPlayerId = $nPlayerID AND CreateTime>= _intervalStart AND nOperatType=7 and nstate=1 ORDER BY id DESC LIMIT _toUpdateID
) temp10;
SELECT MAX(id) INTO _maxID FROM(
        SELECT id FROM `table_clubgoodsoperatlog` WHERE nPlayerId = $nPlayerID AND CreateTime>= _intervalStart AND nOperatType=7 AND nstate=1 ORDER BY id DESC LIMIT _toUpdateID
) temp10;
#分页查询
SELECT glog.`nPrice` AS Diamond,info.nType,UNIX_TIMESTAMP(glog.CreateTime) AS tdate,glog.ReMark FROM `table_clubgoodsoperatlog` glog,`table_clubgoodsinfor` info 
WHERE glog.ngoodsid = info.ngoodsid AND glog.nPlayerId = $nPlayerID AND info.nPlatID=2 AND glog.CreateTime>= _intervalStart 
AND glog.nOperatType=7 AND glog.nstate=1 AND glog.ID BETWEEN _minID AND _maxID ORDER BY glog.id DESC LIMIT _page, _count;
 
#计算总数
SELECT COUNT(1) INTO $total FROM ( 
        SELECT 1  FROM `table_clubgoodsoperatlog` WHERE nPlayerId = $nPlayerID AND `CreateTime` >= _intervalStart AND nOperatType=7 AND nstate=1 ORDER BY id DESC LIMIT _toUpdateID
)tmp; 
                         
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_club_base_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_club_base_info`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_club_base_info`(
in $nClubId1  int,
in $nClubId2  int,
in $nClubId3  int,
in $nClubId4  int,
in $nClubId5  int
)
BEGIN

select nClubID,szClubName,nIconID,nChannel from table_clubinfo where nClubID in ($nClubId1,$nClubId2,$nClubId3,$nClubId4,$nClubId5) and nStatus = 1;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_club_cool_list
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_club_cool_list`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_club_cool_list`(
						IN  $stime  VARCHAR(64),
						IN  $etime  VARCHAR(64))
RT:BEGIN
-- 暂时关掉熔断功能，以后稳定后再打开
-- SELECT id, nClubId, nGameType, nLogType, tCreateTime FROM table_webriskcontr_warninglog 
-- WHERE nLevel >=3 and nLogType = 2 and nFusing=1  and tCreateTime > $stime and tCreateTime <= $etime;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_club_gamecfg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_club_gamecfg`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_club_gamecfg`(
in $nClubID int
)
RT:begin

select nGameType from table_club_game_cfg where nClubID=$nClubID AND nStatus = 1;
	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_club_gamecfg2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_club_gamecfg2`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_club_gamecfg2`()
RT:BEGIN

SELECT nClubID,nGameType FROM table_club_game_cfg WHERE nStatus = 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_club_gamecfg3
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_club_gamecfg3`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_club_gamecfg3`(
  								IN  $clubid  INT,
  								OUT $nOpention  VARCHAR(64))
RT:BEGIN

	select nOpention into $nOpention from table_clubinfo where nClubID = $clubid;
	SELECT nClubID,nGameType FROM table_club_game_cfg WHERE nStatus = 1 and nClubID = $clubid;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Get_Club_Info3
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Get_Club_Info3`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_Get_Club_Info3`(
in $nClubID int,
in $nGameType int,
in $nBaseScore int,
out $intShuffle int,
out $intDiaType int,
out $intRecordRate int
)
RT:begin

	SET $intShuffle = 0;
	SET $intDiaType = 0;
	SET $intRecordRate = 0;
	
	select nStatus into $intShuffle from table_club_exswitch_config where nClubID=$nClubID and nType=1;
	select nDuDiamondMode into $intDiaType from table_club_game_cfg where nClubID=$nClubID and nGameType = $nGameType;
	
	if exists (select 1 from table_club_game_dudiamond_rate where nClubID=$nClubID and nGameType=$nGameType and nScore=$nBaseScore and nDuDiamondMode = $intDiaType) then
		select nDuDiamondRate into $intRecordRate from table_club_game_dudiamond_rate where nClubID=$nClubID and nGameType=$nGameType and nScore=$nBaseScore and nDuDiamondMode = $intDiaType;
	else
		select nDuDiamondRate into $intRecordRate from table_club_game_dudiamond_rate where nClubID=0 and nGameType=$nGameType and nScore=$nBaseScore and nDuDiamondMode = $intDiaType;
	end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_club_owner_id
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_club_owner_id`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_club_owner_id`(
in $clubid int
)
RT:begin

	SELECT nPlayerID FROM table_clubmember WHERE nClubID = $clubid AND nLevel IN (1,2);

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_club_owner_info2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_club_owner_info2`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_club_owner_info2`(
in $clubid int
)
RT:begin	
	select CreatePlayerID,szClubName FROM table_clubinfo where nClubID=$clubid;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Get_CreateRoomCfg
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Get_CreateRoomCfg`;
DELIMITER ;;
CREATE DEFINER=`llj_user`@`%` PROCEDURE `Pr_Get_CreateRoomCfg`(
in $nClubID  int,
out $nShuffle int
)
BEGIN
	SET $nShuffle = 1;
	select nStatus into $nShuffle from table_club_exswitch_config where nClubID = $nClubID and nType = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_finance_comparison
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_finance_comparison`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_finance_comparison`(
IN $nPlatID      INT,
IN $tStart       VARCHAR(32),
IN $tEnd         VARCHAR(32),
OUT $returnVal   INT,
OUT $strOutMsg   VARCHAR(256)
)
RT:BEGIN

SELECT `nPlayerID`,SUM(`amount`) AS amount,COUNT(ID) AS ncount,nType FROM table_finance_record WHERE `nPlatformID` = $nPlatID AND `tCreateTime` >= $tStart AND `tCreateTime` <= $tEnd GROUP BY nPlayerID,nType;
SET $returnVal = 1;
SET $strOutMsg = 'ok';
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_finance_rcd
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_finance_rcd`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_finance_rcd`(
IN $nPlatID      INT,
IN $tStart       VARCHAR(32),
IN $tEnd         VARCHAR(32),
IN $nIndex       INT,
IN $nType        INT,
OUT $returnVal   INT,
OUT $strOutMsg   VARCHAR(256)
)
RT:BEGIN

select 
tr.ID AS ID,
tu.`szThirdAccount` as nPlayerID,
tr.`amount` AS amount,
tr.tCreateTime AS tCreateTime,
tr.`szOrder` AS szOrder,
tr.`userData` AS userData,
tr.`callbackData` AS callbackData
from table_finance_record tr, table_user tu
where tr.`nPlatformID` = $nPlatID 
AND tr.ID > $nIndex 
AND tr.nType = $nType 
AND tr.`nPlayerID` = tu.nPlayerID
AND tr.`tCreateTime` >= $tStart 
and tr.`tCreateTime` < $tEnd;
SET $returnVal = 1;
SET $strOutMsg = 'ok';
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_fish_gamescore_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_fish_gamescore_shard`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_get_fish_gamescore_shard`(
IN  $nPlayerId        INT,
IN  $gameType         INT,
IN  $intervals        INT
)
RT:BEGIN
/*
获取捕鱼游戏的牌局
*/
DECLARE _count  INT;
DECLARE _get_interval INT DEFAULT $intervals;
DECLARE _get_interval_count INT DEFAULT $intervals;
DECLARE _concat_sqlStr TEXT DEFAULT '';
DECLARE _concat_sqlStrCount TEXT DEFAULT '';
SELECT  CURDATE() INTO @currentTime;
SELECT  CURDATE() INTO @currentTimeCount;
	
SET _count = 300;
 
WHILE(_get_interval > 0) DO
        SET @dateTable = DATE_FORMAT(@currentTime,'%Y%m%d');
        
        SET @strSql = CONCAT(
                "(SELECT szToken,UNIX_TIMESTAMP(tStartTime) AS tStartTime,UNIX_TIMESTAMP(tEndTime) AS tEndTime , nResultMoney, nServerID, szExtChar ,nChairID FROM Table_ClubGameScoreDetail", @dateTable, " 
                force index(idx_nPlayerID_nGameType_tEndTime) WHERE nPlayerID = ", $nPlayerId, " and nGameType = ", $gameType, " ORDER BY tEndTime DESC ) ");
         
        IF _get_interval > 1 THEN 
                SET @strSql=CONCAT(@strSql, ' union all ');
        END IF;
        
        SET _concat_sqlStr = CONCAT(_concat_sqlStr, @strSql);
        SET _get_interval  = _get_interval - 1;
        SET @currentTime   = DATE_SUB(@currentTime,INTERVAL 1 DAY);
        
END WHILE;
 
SET @sqlStr = CONCAT("SELECT szToken,tStartTime,tEndTime,nResultMoney, nServerID, szExtChar ,nChairID from (  ", _concat_sqlStr, " ) temp ORDER BY temp.tEndTime DESC LIMIT ",_count);
-- SELECT @sqlStr;
PREPARE stmt_name FROM @sqlStr;
EXECUTE stmt_name;
DEALLOCATE PREPARE stmt_name;
			
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_fish_gamescore_shard_test
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_fish_gamescore_shard_test`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_fish_gamescore_shard_test`(
IN  $nPlayerId        INT,
IN  $gameType         INT,
IN  $intervals        INT,
IN  $nPage            INT,
out $nTotal           INT
)
RT:BEGIN
/*
获取捕鱼游戏的牌局
*/
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _get_interval INT DEFAULT $intervals;
DECLARE _get_interval_count INT DEFAULT $intervals;
DECLARE _concat_sqlStr TEXT DEFAULT '';
DECLARE _concat_sqlStrCount TEXT DEFAULT '';
select  curdate() into @currentTime;
select  curdate() into @currentTimeCount;
	
SET _count = 10;
IF $nPage <= 0 THEN
   SET $nPage = 1;
END iF;
set _page = ($nPage-1)*_count;


while(_get_interval > 0) do
        SET @dateTable = date_format(@currentTime,'%Y%m%d');
        
        set @strSql = CONCAT(
                "(SELECT szToken,UNIX_TIMESTAMP(tStartTime) AS tStartTime,UNIX_TIMESTAMP(tEndTime) AS tEndTime , nResultMoney, nServerID, szExtChar FROM Table_ClubGameScoreDetail", @dateTable, " 
                force index(idx_nPlayerID_nGameType_tEndTime) WHERE nPlayerID = ", $nPlayerId, " and nGameType = ", $gameType, " ORDER BY tEndTime DESC ) ");
         
        if _get_interval > 1 then 
                set @strSql=CONCAT(@strSql, ' union all ');
        end if;
        
        set _concat_sqlStr = concat(_concat_sqlStr, @strSql);
        SET _get_interval  = _get_interval - 1;
        SET @currentTime   = DATE_SUB(@currentTime,INTERVAL 1 DAY);
        
END WHILE;
set @sqlStr = CONCAT("SELECT szToken,tStartTime,tEndTime,nResultMoney, nServerID, szExtChar from (  ", _concat_sqlStr, " ) temp ORDER BY temp.tEndTime DESC LIMIT ",_page," ,",_count);
select @sqlStr;
PREPARE stmt_name FROM @sqlStr;
EXECUTE stmt_name;
DEALLOCATE PREPARE stmt_name;


while(_get_interval_count > 0) do
			
        SET @dateTableCount = date_format(@currentTimeCount,'%Y%m%d');
        
        set @strSqlCount = CONCAT(
                "(SELECT count(*) as counts FROM Table_ClubGameScoreDetail", @dateTableCount, " 
                force index(idx_nPlayerID_nGameType_tEndTime) WHERE nPlayerID = ", $nPlayerId, " and nGameType = ", $gameType, ")");
         
        if _get_interval_count > 1 then 
                set @strSqlCount=CONCAT(@strSqlCount, ' union all ');
        end if;
        
        set _concat_sqlStrCount = concat(_concat_sqlStrCount, @strSqlCount);
        SET _get_interval_count  = _get_interval_count - 1;
        SET @currentTimeCount   = DATE_SUB(@currentTimeCount,INTERVAL 1 DAY);
        
END WHILE;
set @strSqlCount = CONCAT("SELECT sum(temp1.counts) into @nTotal from (  ", _concat_sqlStrCount, " ) temp1");
select @strSqlCount;
PREPARE stmt_name_count FROM @strSqlCount;
EXECUTE stmt_name_count;
DEALLOCATE PREPARE stmt_name_count;		
set $nTotal = @nTotal;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_freefee_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_freefee_info`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_freefee_info`(
	  in  $nPlayerID  int
)
RT:BEGIN
 

select nClubId,nFreeServiceFee from table_clubmember WHERE nPlayerID = $nPlayerId AND nStatus = 1; 
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_hun_club_game_rate
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_hun_club_game_rate`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_hun_club_game_rate`(
in $nClubID int,
in $nGameId int,
in $nHunType int
)
RT:begin

		select nCode,nTaxRate from table_club_hundred_cc where nClubID = $nClubID and nGameID = $nGameId AND nHundredType = $nHunType and nStatus = 1;

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_hun_club_room_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_hun_club_room_info`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_hun_club_room_info`(
in $nClubID int,
in $nGameType int,
in $nHundredType int,
in $nOpen int
)
RT:begin
	
	SELECT nAllowPlayBank,nEmptySysBank,nMaxUnionBankNum,nUnBankValSysWin,nUnBankValSysLose FROM table_club_hundred_cfg WHERE nClubID = $nClubID AND nGameType = $nGameType AND nHundredType = $nHundredType AND nOpen = $nOpen;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Get_InvateReward_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Get_InvateReward_temp`;
DELIMITER ;;
CREATE DEFINER=`llj_user`@`%` PROCEDURE `Pr_Get_InvateReward_temp`(
in $nPlayerID  int,
in $nClubID int,
out $nExtenID int,
out $nInvateNum int,
out $nGetReward int
)
BEGIN
	DECLARE Amount1 int default 0;
	DECLARE Amount2 int default 0;
	
	SET $nExtenID = 0;
	SET $nInvateNum = 0;
	SET $nGetReward = 0;
	
	select IFNULL(nExtenID,0) into $nExtenID from table_clubmember where nPlayerID=$nPlayerID and nClubID=$nClubID and nStatus=1;
	select count(1) into $nInvateNum from table_clubmember where nClubID=$nClubID and nExtenID=$nPlayerID and nStatus=1;
	
	select IFNULL(sum(log1.nAmount),0) into Amount1 from table_web_redemptionlog log1 where nClubId=$nClubID and  log1.nPlayerId = $nPlayerID and log1.IsRedemption = 1;
	select IFNULL(sum(log2.nAmount),0) into Amount2 from Table_ClubLogScore log2 where clubid = $nClubID and log2.nPlayerID = $nPlayerID and log2.nType = 15;
	
	SET $nGetReward = Amount1 + Amount2;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_notify_msg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_notify_msg`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_notify_msg`(
in $nPlayerId int
)
BEGIN

SELECT nMsgId, nMsgType,sMsgBody,unix_timestamp(CreateTime)as tCreateTime from table_user_msg where nPlayerId =$nPlayerId AND nIsRead = 0 order by nMsgId desc limit 10;
UPDATE table_user_msg set nIsRead=1 where nPlayerId =$nPlayerId AND nIsRead=0;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_notify_msg_by_direction
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_notify_msg_by_direction`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_notify_msg_by_direction`(
     IN $nPlayerId INT
    ,IN $nDir      INT
    ,IN $nIndex    BIGINT
)
BEGIN

IF $nIndex = 0 THEN
    
    SELECT nMsgId, nMsgType,sMsgBody,UNIX_TIMESTAMP(CreateTime)AS tCreateTime FROM table_user_msg WHERE nPlayerId =$nPlayerId AND nMsgType <> 501  
    UNION 
    SELECT nMsgId, nMsgType,sMsgBody,UNIX_TIMESTAMP(CreateTime)AS tCreateTime FROM table_user_msg WHERE nPlayerId =$nPlayerId AND nMsgType = 501 AND `nIsRead` <> 2
    ORDER BY nMsgId DESC LIMIT 10;
    UPDATE table_user_msg SET nIsRead=1 WHERE nPlayerId =$nPlayerId AND nIsRead=0;
ELSE
    IF $nDir = 1 THEN 
        SELECT nMsgId , nMsgType,sMsgBody,UNIX_TIMESTAMP(CreateTime)AS tCreateTime FROM table_user_msg WHERE nPlayerId =$nPlayerId AND nMsgType <> 501 AND nMsgId < $nIndex 
        UNION 
        SELECT nMsgId , nMsgType,sMsgBody,UNIX_TIMESTAMP(CreateTime)AS tCreateTime FROM table_user_msg WHERE nPlayerId =$nPlayerId AND nMsgType = 501 AND `nIsRead` <> 2 AND nMsgId < $nIndex 
        ORDER BY nMsgId DESC LIMIT 10;
    ELSE
        
        SELECT nMsgId , nMsgType,sMsgBody,UNIX_TIMESTAMP(CreateTime)AS tCreateTime FROM table_user_msg WHERE nPlayerId =$nPlayerId AND nMsgType <> 501 AND nMsgId > $nIndex 
        UNION 
        SELECT nMsgId , nMsgType,sMsgBody,UNIX_TIMESTAMP(CreateTime)AS tCreateTime FROM table_user_msg WHERE nPlayerId =$nPlayerId AND nMsgType = 501 AND `nIsRead` <> 2 AND nMsgId > $nIndex 
        ORDER BY nMsgId DESC LIMIT 10;
    END IF;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_numerical_param
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_numerical_param`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_numerical_param`(
  in $serverID int
)
begin

SELECT * FROM table_numerical_param WHERE serverID = $serverID; 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_player_control
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_player_control`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_get_player_control`(
 	IN $nPlayerId INT
)
BEGIN
	-- 查询玩家控制数据
 	SELECT nPlayerId, nResult, nMaxResult, nType, nValid FROM table_webriskcontr_userset WHERE nPlayerId = $nPlayerId AND nValid = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_player_control_all
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_player_control_all`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_get_player_control_all`()
RT:BEGIN
	-- 查询俱乐部玩家控制数据
	SELECT nPlayerId, nResult, nMaxResult, nType, nValid FROM table_webriskcontr_userset WHERE nValid = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_player_gamehistory
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_player_gamehistory`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_get_player_gamehistory`(
IN  $nPlayerId  INT
)
RT:BEGIN
/*
获取玩家的游戏历史
*/
SELECT nGameType FROM `table_user_game_history` WHERE nplayerid = $nPlayerId GROUP BY nGameType ORDER BY MAX(CreateTime) DESC LIMIT 10;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_play_back_code
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_play_back_code`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_get_play_back_code`()
BEGIN
	SELECT `playBackCode` FROM `table_play_back_code` WHERE `ID` = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_recharge_info_data
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_recharge_info_data`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_recharge_info_data`()
RT:BEGIN

SELECT * FROM table_recharge_channel_info WHERE nStatus = 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_recharge_record
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_recharge_record`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_recharge_record`(
IN  $nPlayID    INT,
IN  $nClubID    INT,
IN  $nIndex     INT,
OUT $nTotal     INT
)
rt:BEGIN

DECLARE _page1  INT;
DECLARE _count  INT;
SET _count = 6;
IF $nIndex <= 0 THEN
        SET $nIndex = 1;
END IF;
SET _page1 = ($nIndex-1)*_count;
SELECT * FROM `table_third_order` WHERE `nPlayerID` = $nPlayID AND `nClubID` = $nClubID AND ntype = 3 ORDER BY ID DESC LIMIT _page1, _count;
SELECT COUNT(ID) INTO $nTotal FROM `table_third_order` WHERE `nPlayerID` = $nPlayID AND `nClubID` = $nClubID AND ntype = 3;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_record_detail_h5_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_record_detail_h5_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_record_detail_h5_shard`(
IN  $gameType  INT,
IN  $nPlayerId  INT,
IN  $intervals        INT
)
RT:BEGIN
/*
获取H5牌局记录
2019-10-22 修改返回的时间字段名字
2019-11-29 由于数据表的修改，可以不使用机器人字段了
2020-1-3   修改返回数据为50,增加有效投注字段
2020-06-03  从当前日期开始动态拼接SQL语句
*/ 	
	
	DECLARE _get_interval INT DEFAULT $intervals;
	DECLARE _concat_sqlStr TEXT DEFAULT '';
	select curdate() into @currentTime;
	
	/*
	SELECT szToken,nChairID,nRound,nBaseScore,nValidBet,nResultMoney,UNIX_TIMESTAMP(tEndTime) AS tTime 
	FROM Table_ClubGameScoreDetail force index(idx_nPlayerID_nGameType_tEndTime) WHERE nPlayerID = $nPlayerId AND nGameType=$gameType ORDER BY tEndTime DESC LIMIT 50; 
	*/
	
	while(_get_interval > 0) do
	
		SET @dateTable=date_format(@currentTime,'%Y%m%d');
		
		set @strSql=CONCAT(
		"(SELECT szToken,nChairID,nRound,nBaseScore,nValidBet,nResultMoney,UNIX_TIMESTAMP(tEndTime) AS tTime,tEndTime  FROM Table_ClubGameScoreDetail", @dateTable, " 
		 force index(idx_nPlayerID_nGameType_tEndTime) WHERE nPlayerID = ", $nPlayerId, " and nGameType = ", $gameType, " ORDER BY tEndTime DESC LIMIT 50) ");
		 
		if _get_interval > 1 then 
			set @strSql=CONCAT(@strSql, ' union all ');
		end if;
		
		set _concat_sqlStr = concat(_concat_sqlStr, @strSql);
		SET _get_interval = _get_interval - 1;
		SET @currentTime=DATE_SUB(@currentTime,INTERVAL 1 DAY) ;
		
	END WHILE;
	
	set @sqlStr = CONCAT("SELECT szToken,nChairID,nRound,nBaseScore,nValidBet,nResultMoney,tTime,tEndTime from (  ", _concat_sqlStr, " ) temp ORDER BY temp.tEndTime DESC LIMIT 50");
	
	#select @sqlStr;
	PREPARE stmt_name FROM @sqlStr;
	EXECUTE stmt_name;
	DEALLOCATE PREPARE stmt_name;
			
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_record_detail_h5_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_record_detail_h5_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_record_detail_h5_temp`(
IN  $gameType  INT,
IN  $nPlayerId  INT
)
RT:BEGIN
 
SELECT szToken,nChairID,nRound,nBaseScore,nValidBet,nResultMoney,UNIX_TIMESTAMP(tEndTime) AS tTime 
FROM Table_ClubGameScoreDetail force index(idx_nPlayerID_nGameType_tEndTime) WHERE nPlayerID = $nPlayerId AND nGameType=$gameType ORDER BY tEndTime DESC LIMIT 50; 
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_supply_data_by_detail_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_supply_data_by_detail_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_supply_data_by_detail_shard`(
 IN $nGameType INT(11)	
,IN $currdateStart VARCHAR(32)
,IN $currdateEnd VARCHAR(32)
,IN $tableDate INT(11)
)
BEGIN 
/*
补充第3方数据表  nGameType如果为0表示所有游戏类型，如果有值则只查对应的游戏类型
$tableDate 表示要带入表名后面的日期, 比如 20200605
*/

IF $nGameType=0 THEN
	
	set @tableName=concat('table_third_score_detail', $tableDate);

	set @sqlStr=concat("INSERT INTO ",@tableName," (
		`DataType`,
		`SubDataType`,
		`nClubID`,
		`nTableID`,
		`nChairID`,
		`szToken`,
		`Accounts`,
		`nPlayCount`,
		`tStartTime`,
		`tEndTime`,
		`nPlayerID`,
		`nEnterScore`,
		`nBetScore`,
		`nValidBet`,
		`nResultMoney`,
		`nTax`,
		`nGameType`,
		`nServerID`,
		`CardData`,
		`LineCode`
	 )  
	SELECT 
	  1,
	  0,
	  detail.`nClubID`,
	  detail.`nTableID`,
	  detail.`nChairID`,
	  CONCAT(detail.`szToken`, '-', detail.`nChairID`),
	  IFNULL(member.szNickName,''),
	  detail.`nPlayCount`,
	  detail.`tStartTime`, 
	  detail.`tEndTime`, 
	  detail.`nPlayerID`,
	  detail.`nEnterScore`, 
	  detail.`nBetScore`,
	  detail.`nValidBet`, 
	  detail.`nResultMoney`,  
	  detail.`nTax`,  
	  detail.`nGameType`,
	  detail.`nServerID`,  
	  detail.`CardData`, 
	  IFNULL(member.LineCode, '')
	FROM table_clubgamescoredetail",$tableDate," detail
	INNER JOIN table_clubmember member ON detail.nClubID = member.nClubID AND detail.nPlayerID = member.nPlayerID
	WHERE (detail.tEndTime BETWEEN '",$currdateStart,"' AND '",$currdateEnd,"')  AND NOT EXISTS(SELECT third.szToken 
	FROM table_third_score_detail",$tableDate," third WHERE third.szToken= CONCAT(detail.`szToken`, '-', detail.`nChairID`))");
	#select @sqlStr;
	PREPARE stmt_name FROM @sqlStr;
	EXECUTE stmt_name;
	DEALLOCATE PREPARE stmt_name;
	
ELSE
	
	set @tableName=concat('table_third_score_detail', $tableDate);
	
	set @sqlStr=concat("INSERT INTO ",@tableName," (
		`DataType`,
		`SubDataType`,
		`nClubID`,
		`nTableID`,
		`nChairID`,
		`szToken`,
		`Accounts`,
		`nPlayCount`,
		`tStartTime`,
		`tEndTime`,
		`nPlayerID`,
		`nEnterScore`,
		`nBetScore`,
		`nValidBet`,
		`nResultMoney`,
		`nTax`,
		`nGameType`,
		`nServerID`,
		`CardData`,
		`LineCode`
	 )  
	SELECT 
	  1,
	  0,
	  detail.`nClubID`,
	  detail.`nTableID`,
	  detail.`nChairID`,
	  CONCAT(detail.`szToken`, '-', detail.`nChairID`),
	  IFNULL(member.szNickName,''),
	  detail.`nPlayCount`,
	  detail.`tStartTime`, 
	  detail.`tEndTime`, 
	  detail.`nPlayerID`,
	  detail.`nEnterScore`, 
	  detail.`nBetScore`,
	  detail.`nValidBet`, 
	  detail.`nResultMoney`,  
	  detail.`nTax`,  
	  detail.`nGameType`,
	  detail.`nServerID`,  
	  detail.`CardData`, 
	  IFNULL(member.LineCode, '')
	FROM table_clubgamescoredetail",$tableDate," detail
	INNER JOIN table_clubmember member ON detail.nClubID = member.nClubID AND  detail.nPlayerID = member.nPlayerID
	WHERE detail.nGameType = ",$nGameType," AND (detail.tEndTime BETWEEN '",$currdateStart,"' AND '",$currdateEnd,"') AND NOT EXISTS(SELECT third.szToken 
	FROM table_third_score_detail",$tableDate,"  third WHERE third.szToken= CONCAT(detail.`szToken`, '-', detail.`nChairID`))");
	#select @sqlStr;
	PREPARE stmt_name FROM @sqlStr;
	EXECUTE stmt_name;
	DEALLOCATE PREPARE stmt_name;
END IF;  	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_supply_data_by_detail_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_supply_data_by_detail_temp`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_supply_data_by_detail_temp`(
 IN $nGameType INT(11)	
,IN $currdateStart VARCHAR(32)
,IN $currdateEnd VARCHAR(32)
)
BEGIN 

IF $nGameType=0 THEN
	INSERT INTO table_third_score_detail(
		`DataType`,
		`SubDataType`,
		`nClubID`,
		`nTableID`,
		`nChairID`,
		`szToken`,
		`Accounts`,
		`nPlayCount`,
		`tStartTime`,
		`tEndTime`,
		`nPlayerID`,
		`nEnterScore`,
		`nBetScore`,
		`nValidBet`,
		`nResultMoney`,
		`nTax`,
		`nGameType`,
		`nServerID`,
		`CardData`,
		`LineCode`
	 )  
	SELECT 
	  1,
	  0,
	  detail.`nClubID`,
	  detail.`nTableID`,
	  detail.`nChairID`,
	  CONCAT(detail.`szToken`, '-', detail.`nChairID`),
	  IFNULL(member.szNickName,''),
	  detail.`nPlayCount`,
	  detail.`tStartTime`, 
	  detail.`tEndTime`, 
	  detail.`nPlayerID`,
	  detail.`nEnterScore`, 
	  detail.`nBetScore`,
	  detail.`nValidBet`, 
	  detail.`nResultMoney`,  
	  detail.`nTax`,  
	  detail.`nGameType`,
	  detail.`nServerID`,  
	  detail.`CardData`, 
	  IFNULL(member.LineCode, '')
	FROM
        table_clubgamescoredetail detail
	INNER JOIN table_clubmember member ON detail.nClubID = member.nClubID AND detail.nPlayerID = member.nPlayerID
	WHERE (detail.tEndTime BETWEEN $currdateStart AND $currdateEnd)  and not exists(select third.szToken from table_third_score_detail third where third.szToken= CONCAT(detail.`szToken`, '-', detail.`nChairID`));
	
ELSE
	
	INSERT INTO table_third_score_detail(
		`DataType`,
		`SubDataType`,
		`nClubID`,
		`nTableID`,
		`nChairID`,
		`szToken`,
		`Accounts`,
		`nPlayCount`,
		`tStartTime`,
		`tEndTime`,
		`nPlayerID`,
		`nEnterScore`,
		`nBetScore`,
		`nValidBet`,
		`nResultMoney`,
		`nTax`,
		`nGameType`,
		`nServerID`,
		`CardData`,
		`LineCode`
	 )  
	SELECT 
	  1,
	  0,
	  detail.`nClubID`,
	  detail.`nTableID`,
	  detail.`nChairID`,
	  CONCAT(detail.`szToken`, '-', detail.`nChairID`),
	  IFNULL(member.szNickName,''),
	  detail.`nPlayCount`,
	  detail.`tStartTime`, 
	  detail.`tEndTime`, 
	  detail.`nPlayerID`,
	  detail.`nEnterScore`, 
	  detail.`nBetScore`,
	  detail.`nValidBet`, 
	  detail.`nResultMoney`,  
	  detail.`nTax`,  
	  detail.`nGameType`,
	  detail.`nServerID`,  
	  detail.`CardData`, 
	  IFNULL(member.LineCode, '')
	FROM
	table_clubgamescoredetail detail
	INNER JOIN table_clubmember member ON detail.nClubID = member.nClubID AND  detail.nPlayerID = member.nPlayerID
	WHERE
	detail.nGameType = $nGameType AND (detail.tEndTime BETWEEN $currdateStart AND $currdateEnd) and not exists(select third.szToken from table_third_score_detail third where third.szToken= CONCAT(detail.`szToken`, '-', detail.`nChairID`));
END IF;  	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_supply_data_by_score_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_supply_data_by_score_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_get_supply_data_by_score_shard`(
 IN $currdateStart VARCHAR(32)
,IN $currdateEnd   VARCHAR(32)
,IN $tableDate INT(11)
)
BEGIN
/*
补充第3方数据表 从任务表中获取数据
$tableDate 表示要带入表名后面的日期, 比如 20200605
*/
	set @tableName=concat('table_third_score_detail', $tableDate);
	
	set @sqlStr=concat("INSERT INTO ",@tableName," (
		`DataType`,
		`SubDataType`,
		`nClubID`,
		`nTableID`,
		`nChairID`,
		`szToken`,
		`Accounts`,
		`nPlayCount`,
		`tStartTime`,
		`tEndTime`,
		`nPlayerID`,
		`nEnterScore`,
		`nBetScore`,
		`nValidBet`,
		`nResultMoney`,
		`nTax`,
		`nGameType`,
		`nServerID`,
		`CardData`,
		`LineCode`
	 )  
	 SELECT
	  2,
	  complete.nTaskID,
	  score.`clubid`,
	  score.`nTableID`,
	  0,
	  score.`szOrder`,
	  IFNULL(member.szNickName,''),
	  0,
	  score.`CreateTime`, 
	  score.`CreateTime`, 
	  score.`nPlayerID`,
	  score.`nScore` - score.`nAmount`, 
	  0,
	  0,
	  score.`nAmount`, 
	  0,  
	  complete.`nGameType`,
	  score.`nGameID`,  
	  score.`szDesc`, 
	  IFNULL(member.LineCode, '')
	FROM table_clublogscore",$tableDate," score
	INNER JOIN table_club_task_complete complete ON score.nPlayerID = complete.nPlayerID AND  score.CreateTime = complete.tCreateTime
	INNER JOIN table_clubmember member ON score.clubid = member.nClubID AND  score.nPlayerID = member.nPlayerID
	WHERE (score.CreateTime BETWEEN '",$currdateStart,"' AND '",$currdateEnd,"')
	AND NOT EXISTS(SELECT third.szToken FROM table_third_score_detail",$tableDate," third WHERE third.szToken = score.`szOrder`)");
	
	#select @sqlStr;
	PREPARE stmt_name FROM @sqlStr;
	EXECUTE stmt_name;
	DEALLOCATE PREPARE stmt_name;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_supply_data_by_score_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_supply_data_by_score_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_supply_data_by_score_temp`(
 IN $currdateStart VARCHAR(32)
,IN $currdateEnd   VARCHAR(32)
)
BEGIN

	INSERT INTO table_third_score_detail(
		`DataType`,
		`SubDataType`,
		`nClubID`,
		`nTableID`,
		`nChairID`,
		`szToken`,
		`Accounts`,
		`nPlayCount`,
		`tStartTime`,
		`tEndTime`,
		`nPlayerID`,
		`nEnterScore`,
		`nBetScore`,
		`nValidBet`,
		`nResultMoney`,
		`nTax`,
		`nGameType`,
		`nServerID`,
		`CardData`,
		`LineCode`
	 )  
	 SELECT 
	  2,
	  complete.nTaskID,
	  score.`clubid`,
	  score.`nTableID`,
	  0,
	  score.`szOrder`,
	  IFNULL(member.szNickName,''),
	  0,
	  score.`CreateTime`, 
	  score.`CreateTime`, 
	  score.`nPlayerID`,
	  score.`nScore` - score.`nAmount`, 
	  0,
	  0,
	  score.`nAmount`, 
	  0,  
	  complete.`nGameType`,
	  score.`nGameID`,  
	  score.`szDesc`, 
	  IFNULL(member.LineCode, '')
	FROM
	table_clublogscore score
	INNER JOIN table_club_task_complete complete ON score.nPlayerID = complete.nPlayerID AND  score.CreateTime = complete.tCreateTime
	INNER JOIN table_clubmember member ON score.clubid = member.nClubID AND  score.nPlayerID = member.nPlayerID
	WHERE (score.CreateTime BETWEEN $currdateStart AND $currdateEnd)  
	AND NOT EXISTS(SELECT third.szToken FROM table_third_score_detail third WHERE third.szToken = score.`szOrder`);
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_task_day_award_section_value
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_task_day_award_section_value`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_task_day_award_section_value`(
	
	IN  $totalnAmount BIGINT,
	OUT $rBetVal   BIGINT,
	OUT $returnVal BIGINT 
)
BEGIN 
 
				IF $totalnAmount<1000000 THEN 								
						SET @returnScore = 0;
						SET $rBetVal = 0;
				ELSE 
						SET @numVal=$totalnAmount/1000; 
												
						IF @numVal>=1000.0 AND @numVal<2000.0 THEN 								
									SET @returnScore=3;
									SET $rBetVal = 1000;
						ELSEIF @numVal>=2000.0 AND @numVal<5000.0 THEN
									SET @returnScore=6;
									SET $rBetVal = 2000;
						ELSEIF @numVal>=5000.0 AND @numVal<10000.0 THEN
									SET @returnScore=15;
									SET $rBetVal = 5000;
						ELSEIF @numVal>=10000.0 AND @numVal<20000.0 THEN
									SET @returnScore=30;
									SET $rBetVal = 10000;
						ELSEIF @numVal>=20000.0 AND @numVal<30000.0 THEN
									SET @returnScore=60;
									SET $rBetVal = 20000;
						ELSEIF @numVal>=30000.0 AND @numVal<50000.0 THEN
									SET @returnScore=90;
                                    SET $rBetVal = 30000;
						ELSEIF @numVal>=50000.0 AND @numVal<100000.0 THEN
									SET @returnScore=150;
									SET $rBetVal = 50000;
						ELSEIF @numVal>=100000.0 THEN
									SET @returnScore=300;
									SET $rBetVal = 100000;
						ELSE 
									SET @returnScore = 0;
									SET $rBetVal = 0;
						END IF;														
				END IF;
				
				SET $returnVal = @returnScore *1000 ; 
				
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_user_club_2exlevel
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_user_club_2exlevel`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_user_club_2exlevel`(
						IN $intPlayID     INT,
						OUT $nExID        INT
    )
RT:BEGIN

DECLARE _clubid  INT;
DECLARE _masterid  INT;
DECLARE _extenid INT;
DECLARE _exlevel INT;
DECLARE _pid     INT;
DECLARE _tpid    INT;
DECLARE _r       INT;
 
SELECT IFNULL(nExtenID,0),IFNULL(nClubID,0),IFNULL(nExLevel,0) INTO _extenid,_clubid,_exlevel FROM `table_clubmember` WHERE nPlayerID = $intPlayID;
 

IF _exlevel=2 THEN
 SET  $nExID = $intPlayID;
 LEAVE RT;
END IF;
 
SELECT IFNULL(nPlayerID,0) INTO _masterid FROM `table_clubmember` WHERE nClubID = _clubid AND nLevel = 1;
 
SET _pid  = $intPlayID;
SET _tpid = $intPlayID;
SET _r    = 1;
SET $nExID = 0;
        
WHILE _extenid <> _masterid DO
    SELECT IFNULL(nExtenID,0) INTO _extenid FROM `table_clubmember` WHERE nPlayerID = _pid;
    SET _tpid = _pid;
    SET _pid = _extenid;
    SET _r = _r + 1;
    
    IF _r > 1000 THEN
        LEAVE RT;
    END IF;
    
END WHILE;
 

SET $nExID = _tpid;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_user_club_owner_vip
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_user_club_owner_vip`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_user_club_owner_vip`(
						IN $intPlayID     INT,
						OUT $nTID         INT,
						OUT $nClubOwnerID INT,
						OUT $nVip         TINYINT
    )
RT:BEGIN

DECLARE _clubid INT;
DECLARE _extenid INT;
DECLARE _pid INT;
DECLARE _tpid INT;
DECLARE _r INT;
SET $nVip = 0;
select IFNULL(nExtenID,0),IFNULL(nClubID,0) INTO _extenid,_clubid from `table_clubmember` WHERE nPlayerID = $intPlayID;
SELECT IFNULL(nPlayerID,0) INTO $nClubOwnerID FROM `table_clubmember` WHERE nClubID = _clubid AND nLevel = 1;
SET _pid = $intPlayID;
SET _tpid = $intPlayID;
SET _r = 1;
WHILE _extenid <> $nClubOwnerID DO
    SELECT IFNULL(nExtenID,0) INTO _extenid FROM `table_clubmember` WHERE nPlayerID = _pid;
    SET _tpid = _pid;
    set _pid = _extenid;
    SET _r = _r + 1;
    
    IF _r > 1000 THEN
        leave RT;
    END IF;
    
END WHILE;
SET $nTID = _tpid;
select IFNULL(isVip,0) INTO $nVip FROM `table_proxy_url` WHERE nPLayerID = _tpid;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_user_game_lock_status
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_user_game_lock_status`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_user_game_lock_status`(
                IN  $playid      INT,
                OUT $tid         INT
)
rt:BEGIN

SELECT `nTablePreID` INTO $tid FROM table_user_gamelock WHERE nPlayerID = $playid LIMIT 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_user_id
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_user_id`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_user_id`(
						IN $account     VARCHAR(64),
						IN $clubid      INT,
						IN $acode       INT,
						OUT $nPlayerID  INT,
						OUT $returnVal  INT,
						OUT $returnMsg  VARCHAR(128)
    )
RT:BEGIN

IF EXISTS(SELECT 1 FROM table_user WHERE `szThirdAccount` = $account AND `nChannel` = $clubid)THEN
        SELECT `nPlayerId` INTO $nPlayerID FROM table_user WHERE `szThirdAccount` = $account AND `nChannel` = $clubid LIMIT 1;
        update table_user set `nActive` = $acode where nPlayerId = $nPlayerID;
        SET $returnVal = 1;
        SET $returnMsg = 'ok';
        LEAVE RT;
ELSE
        SET $nPlayerID = 0;
        SET $returnVal = 0;
        SET $returnMsg = 'acount error';
        LEAVE RT;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_get_user_pass
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_get_user_pass`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_get_user_pass`(
						IN $intPlayID   INT,
						OUT $szPass     VARCHAR(64),
						OUT $returnVal  INT,
						OUT $returnMsg  VARCHAR(128)
    )
RT:BEGIN

IF EXISTS(SELECT 1 FROM table_user WHERE nPLayerId = $intPlayID AND nActive = 1)THEN
        SELECT szPass INTO $szPass FROM table_user WHERE nPLayerId = $intPlayID;
        SET $returnVal = 1;
        SET $returnMsg = 'ok';
        LEAVE RT;
ELSE
        SET $returnVal = 0;
        SET $returnMsg = 'acount error';
        LEAVE RT;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_home_check
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_home_check`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_home_check`(
 IN $szType    VARCHAR(32)            
,IN $szBrowsertype VARCHAR(32)        
,IN $szSpreadtype  VARCHAR(32)        
,IN $szIP      VARCHAR(64)            
,IN $szRegion  VARCHAR(64)            
,IN $nDown     INT                    
,in $nPm       INT                    
,IN $nPid      INT                    
,IN $nIndex    INT                    
,OUT $rIndex   INT                    
,OUT $isVip    TINYINT                
)
RT:BEGIN

SET $isVip = 0;
IF $nDown = 0  THEN

    INSERT INTO `table_homecheck` (`settype`,`browsertype`,`spreadtype`,`ip`,`region`,`ifdown`,`Pm`,`pid`) 
    VALUES (   $szType,$szBrowsertype,$szSpreadtype, $szIP, $szRegion, $nDown, $nPm, $nPid ) ;
    SET $rIndex = @@IDENTITY;
ELSE
    IF $nIndex = 0 OR ( NOT EXISTS(SELECT 1 FROM table_homecheck WHERE ID = $nIndex) ) THEN
    
        INSERT INTO `table_homecheck` (`settype`,`browsertype`,`spreadtype`,`ip`,`region`,`downtime`,`ifdown`,`Pm`,`pid`) 
        VALUES (   $szType,$szBrowsertype,$szSpreadtype, $szIP, $szRegion,NOW(), $nDown, $nPm, $nPid ) ;
        SET $rIndex = @@IDENTITY;
    
    ELSE
    
        
        UPDATE `table_homecheck` SET settype = $szType,
        `browsertype` = $szBrowsertype,
        `spreadtype` = $szSpreadtype,
        `ip` = $szIP,
        `downtime` = NOW(),
        `ifdown` = $nDown,
        `Pm` = $nPm,
        `pid` =  $nPid
        WHERE ID = $nIndex;
        SET $rIndex = $nIndex;
    
    END IF;
    
    
    CALL pr_get_user_club_owner_vip($nPid,@tid,@id,$isVip);
    
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_home_check2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_home_check2`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_home_check2`(
 IN $szType    VARCHAR(32)            
,IN $szBrowsertype VARCHAR(32)        
,IN $szSpreadtype  VARCHAR(32)        
,IN $szIP      VARCHAR(64)            
,IN $szRegion  VARCHAR(64)            
,IN $nDown     INT                    
,in $nPm       INT                    
,IN $nPid      INT                    
,IN $nIndex    INT                    
,OUT $rIndex   INT                    
,OUT $isVip    TINYINT                
)
RT:BEGIN

SET $isVip = 0;
IF $nDown = 0  THEN

    
    CALL pr_get_user_club_2exlevel($nPid,@ex2id);
    INSERT INTO `table_homecheck` (`settype`,`browsertype`,`spreadtype`,`ip`,`region`,`ifdown`,`Pm`,`pid`,`twoLevelId`) 
    VALUES (   $szType,$szBrowsertype,$szSpreadtype, $szIP, $szRegion, $nDown, $nPm, $nPid, @ex2id) ;
    SET $rIndex = @@IDENTITY;
ELSE
    IF $nIndex = 0 OR ( NOT EXISTS(SELECT 1 FROM table_homecheck WHERE ID = $nIndex) ) THEN
    
        CALL pr_get_user_club_2exlevel($nPid,@ex2id);
        
        INSERT INTO `table_homecheck` (`settype`,`browsertype`,`spreadtype`,`ip`,`region`,`downtime`,`ifdown`,`Pm`,`pid`,`twoLevelId`) 
        VALUES (   $szType,$szBrowsertype,$szSpreadtype, $szIP, $szRegion,NOW(), $nDown, $nPm, $nPid,@ex2id) ;
        SET $rIndex = @@IDENTITY;
    
    ELSE
    
        
        UPDATE `table_homecheck` SET settype = $szType,
        `browsertype` = $szBrowsertype,
        `spreadtype` = $szSpreadtype,
        `ip` = $szIP,
        `downtime` = NOW(),
        `ifdown` = $nDown,
        `Pm` = $nPm,
        `pid` =  $nPid
        WHERE ID = $nIndex;
        SET $rIndex = $nIndex;
    
    END IF;
    
    
    CALL pr_get_user_club_owner_vip($nPid,@tid,@id,$isVip);
    
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_IsHasNewMsg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_IsHasNewMsg`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_IsHasNewMsg`(
	in $intPlayerId int,	
	in $intMsgId bigint,
	out $ReturnVal_ int 
)
begin
	declare _maxMsgId bigint;
	if $intMsgId < 1 then 
		if exists(select * from table_user_msg where nPlayerId=$intPlayerId and nMsgType<1000 ) then 
			IF EXISTS(SELECT * FROM table_user_msg WHERE nPlayerId=$intPlayerId AND nIsRead=0) THEN 
				set $ReturnVal_=1;			
			else
				set $ReturnVal_=0;
			end if;
		else
			SET $ReturnVal_=0;
		end if;
	else
		select max(nMsgId) into _maxMsgId from table_user_msg where nPlayerId=$intPlayerId and nIsRead=0 AND nMsgType<1000;
		if _maxMsgId>$intMsgId then 
				set $ReturnVal_=1;
		else
				set $ReturnVal_=0;
		end if;
	end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jackpot_add_ticket
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jackpot_add_ticket`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_jackpot_add_ticket`(
	IN $nClubId INT(11),
    IN $nPlayerId INT(11),
    IN $jackpotNumber INT(11),
    IN $ticketNumber BIGINT(20),
    IN $validTime TIMESTAMP
)
BEGIN
	INSERT INTO table_jackpot_tickets(`nClubId`, `nPlayerId`, `jackpotNumber`, `ticketNumber`, `level`, `award`, `state`, `drawFlag`, `validTime`)
		VALUES($nClubId, $nPlayerId, $jackpotNumber, $ticketNumber, 0, 0, 0, 0, $validTime);
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jackpot_get_club_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jackpot_get_club_info`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_jackpot_get_club_info`(
	IN $nClubId INT(11),
    IN $jackpotNumber INT(11))
BEGIN
	IF $nClubId <> 0 THEN
		SELECT * FROM table_jackpot_club_info WHERE nClubId = $nClubId;
    ELSEIF $jackpotNumber <> 0 THEN
		SELECT * FROM table_jackpot_club_info WHERE jackpotNumber = $jackpotNumber;
    END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jackpot_get_club_tickets
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jackpot_get_club_tickets`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_jackpot_get_club_tickets`(
	IN $nClubId INT(11),
    IN $jackpotNumber INT(11)
)
BEGIN
	SELECT * FROM table_jackpot_tickets WHERE `nClubId` = $nClubId AND `jackpotNumber` = $jackpotNumber;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jackpot_get_club_tickets_last
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jackpot_get_club_tickets_last`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_jackpot_get_club_tickets_last`(
	IN $nClubId INT(11),
    IN $jackpotNumber INT(11)
)
BEGIN
	SELECT * FROM table_jackpot_tickets WHERE `nClubId` = $nClubId AND `jackpotNumber` = $jackpotNumber AND `level` > 0;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_complate
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_complate`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_jscore_complate`(
    IN $nPlayerID INT,
    IN $nTaskID INT,
    IN $szMark VARCHAR(64))
BEGIN
    INSERT INTO table_jscore_task_complete(`nPlayerID`,`nTaskID`,`nAmount`,`nAwardType`,`tCreateTime`,`szMark`)
        VALUES($nPlayerID,$nTaskID,0,0,now(),$szMark);
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_create_join_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_create_join_club`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_jscore_create_join_club`(
			IN  $nPlayerID    INT
)
RT:BEGIN
/*
用户创建或者加入俱乐部会导致对上线增加积分
*/
DECLARE   _upperID            INT;
DECLARE   _ExtenLimit         TINYINT;
#检测用户是否存在于积分用户表 
IF NOT EXISTS (SELECT ID FROM table_jscore_user WHERE nPlayerId = $nPlayerID) THEN
        INSERT INTO table_jscore_user(nPlayerID) VALUES($nPlayerID);
END IF;        
 
#检测上线
SELECT IFNULL(`nExtenID`,0), `nExtenLimit` INTO _upperID, _ExtenLimit FROM table_jscore_user WHERE nPlayerID = $nPlayerID;
 
IF _upperID = 0 OR _ExtenLimit=1 THEN
        LEAVE RT;
END IF;
 
#检测是否已经有送积分
IF EXISTS(SELECT 1 FROM table_jscore_log WHERE nPlayerID = _upperID AND nSourceID = $nPlayerID AND nType = 102) THEN
        LEAVE RT;
END IF;
  
#给上线加积分并写日志
CALL pr_jscore_give_upper_score(_upperID,$nPlayerID,1,102,'创建或加入亲友圈送积分');
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_downline
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_downline`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_jscore_downline`(
		    IN  $nPlayerID    INT,
                    IN  $nPage        INT,
                    OUT $nTotal       INT		
)
RT:BEGIN
/*
查看用户下线的列表，45天内100条。指45天内贡献过积分的下线人员
*/
DECLARE _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 45 day),' 00:00:00');
DECLARE   _page               INT;
DECLARE   _count              INT;
 
SET _count = 5;
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count; 
SELECT nSourceID,nAmount,szNickName,CreateTime FROM ( 
SELECT js.nSourceID, SUM(js.`nAmount`) AS nAmount ,us.`szNickName`, UNIX_TIMESTAMP(us.`szCreateTime`) AS CreateTime
FROM `table_jscore_log` js,table_user us
WHERE js.nPlayerID = $nPlayerID 
AND js.`nType` >100 AND js.`nType` < 200 
AND js.tCreateTime > _StartDate
AND js.nSourceID = us.`nPlayerId`
GROUP BY js.nSourceID
ORDER BY js.ID
LIMIT 100 ) tmp 
LIMIT _page, _count;
 
SELECT COUNT(nSourceID) INTO $nTotal FROM(
SELECT nSourceID FROM `table_jscore_log` 
WHERE nPlayerID = $nPlayerID
AND `nType` >100 AND `nType` < 200 
AND tCreateTime > _StartDate
GROUP BY nSourceID LIMIT 100) tmp;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_ex_shop
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_ex_shop`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_jscore_ex_shop`(
                    IN  $nPlayerID    INT,
                    IN  $nShopID      INT,
                    IN  $nAmount      INT,
                    OUT $nGoodsID     INT,
                    OUT $nGoodsAmount INT,
                    OUT $nStock       INT,
                    OUT $result       INT                          
)
RT:BEGIN
/*
兑换商品操作
*/
DECLARE   _score      BIGINT;
DECLARE   _exscore    BIGINT;
DECLARE   _shopPrice  INT;
DECLARE   _stock      INT;
DECLARE   _ntype      INT;
DECLARE   _nstatus    INT;
DECLARE   _szmark     VARCHAR(256);
 
SET $nGoodsID = 0;
SET $nGoodsAmount = 0;
SET $nStock = 0;
SET $result = 0;
 
#检测用户是否存在于积分用户表
IF NOT EXISTS(SELECT 1 FROM `table_jscore_user` WHERE `nPlayerId` = $nPlayerID) THEN
        #用户写入
        INSERT INTO `table_jscore_user` ( `nPlayerId`,  `nExtenID`,  `nScore`,  `szName`,  `phone`,  `address`) 
        VALUES  (    $nPlayerID,    0,    0,    '',    '',    ''  ) ;
END IF;
        
 
IF NOT EXISTS(SELECT 1 FROM table_jscore_shopinfo WHERE `nShopID` = $nShopID AND nStatus=1) THEN
        LEAVE RT;
ELSE
        SELECT IFNULL(`nScore`,0) INTO _score FROM `table_jscore_user` WHERE `nPlayerId` = $nPlayerID;
        
        SELECT `nPrice`,`nGoodsID`,`nGoodsAmount`,`nStock` ,`nType`
        INTO _shopPrice, $nGoodsID, $nGoodsAmount, _stock , _ntype
        FROM `table_jscore_shopinfo` WHERE `nShopID` = $nShopID;
        
        #计算兑换商品的总积分
        SET _exscore = _shopPrice * $nAmount;
        
        #积分不足
        IF _score < _exscore THEN
                SET $result = 2;
                LEAVE RT;
        END IF;
        
        #库存不足
        IF $nAmount > _stock THEN
                SET $result = 3;
                LEAVE RT;
        END IF;        
        
        #减用户的积分
        UPDATE table_jscore_user SET `nScore` = @nScore := nScore - _exscore WHERE nPlayerID = $nPlayerID;
       
        SET _szmark = CONCAT('兑换商品ID:',$nShopID);
        
        #写日志 
        INSERT INTO `table_jscore_log` (  `nPlayerId`,  `nSourceID`,  `nAmount`,  `nScore`,  `nType`,  `tCreateTime`,  `szMark`) 
        VALUES  (    $nPlayerID,    0,    -1*_exscore,    @nScore,    3,   NOW(),    _szmark  ) ;
                        
        #减商品的库存
        UPDATE `table_jscore_shopinfo` SET `nStock` = @nStock := nStock - $nAmount WHERE `nShopID` = $nShopID;
        SET $nStock = @nStock;
                                        
        if _ntype < 2 THEN
                #实时兑换商品
                SET $nGoodsAmount = $nGoodsAmount * $nAmount;                
                SET _nstatus = 1;
        ELSE
                #需人工处理的兑换商品
                SET _nstatus = 0;
        END IF;
        
        #记录兑换日志
        INSERT INTO `table_jscore_shop_exchange` (  `nPlayerID`,  `nShopID`,  `nType`,  `nAmount`,  `nScore`,  `nStatus`,  `tCreateTime`,   `szMark`) 
        VALUES  (    $nPlayerID,    $nShopID,    _ntype,    $nAmount,    _exscore,    _nstatus,    NOW(),    _szmark  ) ;         
        
        SET $result = 1;
        
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_get_exrecord
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_get_exrecord`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_jscore_get_exrecord`(
		    IN  $nPlayerID    INT,
                    IN  $nPage        INT,
                    OUT $nTotal       INT		
)
RT:BEGIN
/*
查看用户的兑换记录
*/
DECLARE   _page               INT;
DECLARE   _count              INT;
 
SET _count = 5;
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count; 
 
SELECT shop.szName,shop.`szURL`,ex.`nAmount`,ex.`nScore`, UNIX_TIMESTAMP(ex.tCreateTime) AS CreateTime , ex.`nStatus` 
FROM `table_jscore_shop_exchange` ex, `table_jscore_shopinfo` shop
WHERE `nPlayerID` = $nPlayerID AND ex.nShopID = shop.nShopID ORDER BY ex.ID DESC LIMIT _page, _count;
 
SELECT COUNT(ID) INTO $nTotal FROM table_jscore_shop_exchange WHERE `nPlayerID` = $nPlayerID;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_get_playerscore
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_get_playerscore`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_jscore_get_playerscore`(
		    IN  $nPlayerID    INT,
                    OUT $nScore       BIGINT
)
RT:BEGIN
/*
查询某个用户的积分
*/
#检测用户是否存在于积分用户表中
IF NOT EXISTS(SeLECT 1 FROM `table_jscore_user` WHERE `nPlayerId` = $nPlayerID) THen
        
        #用户写入积分用户表
        INSERT INTO `table_jscore_user` ( `nPlayerId`,  `nExtenID`,  `nScore`,  `szName`,  `phone`,  `address`) 
        VALUES  (    $nPlayerID,    0,    0,    '',    '',    ''  ) ;
        
        SET $nScore = 0;
        LEAVE RT;
END IF;
SELECT IFNULL(`nScore`,0) INTO $nScore FROM `table_jscore_user` WHERE `nPlayerId` = $nPlayerID;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_get_player_address
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_get_player_address`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_jscore_get_player_address`(
		    IN  $nPlayerID    INT,
                    OUT $address      VARCHAR(256),
                    OUT $szName       VARCHAR(64),
                    OUT $phone        VARCHAR(32)       
)
RT:BEGIN
/*
查询某个用户的送货地址信息
*/
IF NOT EXISTS(SELECT 1 FROM `table_jscore_user` WHERE `nPlayerId` = $nPlayerID) THEN
        #用户写入积分用户表
        INSERT INTO `table_jscore_user` ( `nPlayerId`,  `nExtenID`,  `nScore`,  `szName`,  `phone`,  `address`) 
        VALUES  (    $nPlayerID,    0,    0,    '',    '',    ''  ) ;
        
        SET $address = '';
        SET $szName = '';
        SET $phone = '';
        LEAVE RT;
END IF;
SELECT `address`,`szName`,`phone` INTO $address,$szName,$phone FROM `table_jscore_user` WHERE `nPlayerId` = $nPlayerID;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_get_stock
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_get_stock`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_jscore_get_stock`(
                    IN  $nShopID      INT,
                    OUT $nStock       INT                          
)
RT:BEGIN
/*
读取商品的库存值
*/
IF NOT EXISTS(SELECT 1 FROM table_jscore_shopinfo WHERE `nShopID` = $nShopID AND `nStatus` = 1) THEN
        SET $nStock  = 0;
ELSE
        SELECT `nStock` INTO $nStock FROM table_jscore_shopinfo WHERE `nShopID` = $nShopID;
        IF $nStock < 0 THEN
                UPDATE table_jscore_shopinfo SET $nStock = 0 WHERE `nShopID` = $nShopID;
                SET $nStock  = 0;
        END IF;
        
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_give_upper_score
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_give_upper_score`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_jscore_give_upper_score`(
			IN  $nPlayerID    INT,          #被加分用户ID（即上线）
			IN  $nSourceID    INT,          #来源ID（即下线）
			IN  $nScore       INT,          #加分
			IN  $nType        INT,          #类型
			IN  $szMark       VARCHAR(256)  #说明
)
RT:BEGIN
/*
给上线加分
*/
DECLARE   _totalScore    INT;
 
#给上线加积分
UPDATE table_jscore_user SET `nScore` = @nScore := nScore + $nScore WHERE nPlayerID = $nPlayerID;
 
#写日志 
INSERT INTO `table_jscore_log` (  `nPlayerId`,  `nSourceID`,  `nAmount`,  `nScore`,  `nType`,  `tCreateTime`,  `szMark`) 
VALUES  (    $nPlayerID,    $nSourceID,    $nScore,    @nScore,    $nType,   NOW(),    $szMark  ) ;
 
#检测给上线加积分是否已经达到上限
SELECT IFNULL(SUM(nAmount),0) INTO _totalScore FROM `table_jscore_log` WHERE nPlayerID = $nPlayerID AND nSourceID = $nSourceID;
 
IF _totalScore >= 15 THEN
        UPDATE table_jscore_user SET `nExtenLimit` = 1 WHERE nPlayerID = $nSourceID;
END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_load_config
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_load_config`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_jscore_load_config`()
BEGIN
	SELECT nTaskID, szTaskName, nValue, nScore, nStatus, szMark FROM table_jscore_task_config;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_load_shopdata
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_load_shopdata`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_jscore_load_shopdata`(
)
RT:BEGIN
/*
读取商品信息
*/
SELECT `nShopID`,`szName`,`nType`,`nOrder`,`szURL`,`nPrice`,`szExplain`,`nStock`
FROM `table_jscore_shopinfo` WHERE `nStatus` = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_load_user_data
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_load_user_data`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_jscore_load_user_data`(
	IN $nPlayerId INT
)
BEGIN
	SELECT nExtenLimit, szTaskData FROM table_jscore_user WHERE nPlayerId = $nPlayerId;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_modify_score
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_modify_score`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_jscore_modify_score`(
    IN $nPlayerId INT, #产生积分的玩家
    IN $nScore INT, #积分
    IN $nType INT, #类型
    IN $szMark VARCHAR(256), #说明
    IN $addUpper INT)
RT:BEGIN
    DECLARE _upperID INT;
    DECLARE _ExtenLimit INT;
    #给上线加积分
    IF $addUpper = 1 THEN
        SELECT IFNULL(`nExtenID`, 0), `nExtenLimit` INTO _upperID, _ExtenLimit FROM table_jscore_user WHERE nPlayerId = $nPlayerId;
        IF _upperID = 0 OR _ExtenLimit = 1 THEN
            LEAVE RT;
        END IF;
        CALL pr_jscore_give_upper_score(_upperID, $nPlayerId, $nScore, $nType, $szMark);
        LEAVE RT;
    END IF;
    #修改积分
    IF NOT EXISTS (SELECT ID FROM table_jscore_user WHERE nPlayerId = $nPlayerId) THEN
        INSERT INTO table_jscore_user(nPlayerId, nScore) VALUES($nPlayerId, $nScore);
        SET @nScore = $nScore;
    ELSE
        UPDATE table_jscore_user SET nScore = @nScore := nScore + $nScore WHERE nPlayerId = $nPlayerId;
    END IF; 
    #写积分日志
    INSERT INTO table_jscore_log(nPlayerId, nSourceID, nAmount, nScore, nType, tCreateTime, szMark) 
        VALUES($nPlayerId, 0, $nScore, @nScore, $nType, NOW(), $szMark) ;
    #修改积分完成表
    UPDATE table_jscore_task_complete SET nAmount = $nScore, tFinishTime = NOW(), 
        nAwardType = 1 WHERE nPlayerID = $nPlayerId AND nTaskID = $nType;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_save_user_data
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_save_user_data`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_jscore_save_user_data`(
	IN $nPlayerId INT,
	IN $szTaskData TEXT
)
BEGIN
	IF NOT EXISTS (SELECT ID FROM table_jscore_user WHERE nPlayerId = $nPlayerId) THEN
		INSERT INTO table_jscore_user(nPlayerId, szTaskData) VALUES($nPlayerId, $szTaskData);
    ELSE
		UPDATE table_jscore_user SET szTaskData = $szTaskData WHERE nPlayerId = $nPlayerId;
    END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_submit_address
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_submit_address`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_jscore_submit_address`(
		    IN  $nPlayerID    INT,
                    IN  $address      VARCHAR(256),
                    IN  $szName       VARCHAR(64),
                    IN  $phone        VARCHAR(32),
                    OUT $result       INT      
)
RT:BEGIN
/*
提交用户的送货地址信息
*/
 
IF NOT EXISTS(SELECT 1 FROM `table_jscore_user` WHERE `nPlayerId` = $nPlayerID) THEN
        #用户写入积分用户表
        INSERT INTO `table_jscore_user` ( `nPlayerId`,  `nExtenID`,  `nScore`,  `szName`,  `phone`,  `address`) 
        VALUES  (    $nPlayerID,    0,    0,    $szName,    $phone,    $address  ) ;    
ELSE
        UPDATE `table_jscore_user` SET `szName`= $szName, `phone`= $phone, `address` = $address WHERE `nPlayerId` = $nPlayerID;
END IF;
 
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_jscore_user_create
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_jscore_user_create`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_jscore_user_create`(
			IN  $nPlayerID    INT,          #用户ID
			IN  $nUpperID     INT,          #上线ID
			OUT $returnVal    INT
)
RT:BEGIN
/*
创建用户时直接产生积分系统的关系信息，添加上下线
*/
 
DECLARE _upid      INT;
SET $returnVal = 0;
 
IF NOT EXISTS(SELECT 1 FROM Table_User WHERE nPlayerId=$nPlayerID ) THEN
    LEAVE RT;
END IF;
IF $nUpperID IS NULL THEN
        SET $nUpperID = 0;
END IF;
 
#用户已经存在了，正常情况不应该重复创建
IF EXISTS(SELECT 1 FROM `table_jscore_user` WHERE nPlayerId=$nPlayerID) THEN
        SET $returnVal = 2;
        LEAVE RT;
ELSE
        #用户写入积分用户表
        INSERT INTO `table_jscore_user` ( `nPlayerId`,  `nExtenID`,  `nScore`,  `szName`,  `phone`,  `address`) 
        VALUES  (    $nPlayerID,    $nUpperID,    0,    '',    '',    ''  ) ;        
END IF;
#上线用户并不存在
IF NOT EXISTS(SELECT 1 FROM Table_User WHERE nPlayerId = $nUpperID ) THEN
        SET $returnVal = 3;
        LEAVE RT;
END IF;
#上线在积分用户表中不存在
IF NOT EXISTS(SELECT 1 FROM `table_jscore_user` WHERE nPlayerId=$nUpperID) THEN
        #将上线信息加入积分用户表
        INSERT INTO `table_jscore_user` ( `nPlayerId`,  `nExtenID`,  `nScore`,  `szName`,  `phone`,  `address`) 
        VALUES  (    $nUpperID,    0,    0,    '',    '',    ''  ) ;
END IF;
 
#注册送积分已经存在记录则不需要送积分了
IF EXISTS(SELECT 1 FROM `table_jscore_log` WHERE nPlayerID = $nUpperID AND nSourceID = $nPlayerID AND nType=101)
THEN
       SET $returnVal = 4;
       LEAVE RT;
END IF;
 
#给上线加积分并写日志
CALL pr_jscore_give_upper_score($nUpperID,$nPlayerID,1,101,'下线注册送积分');
 
SET $returnVal = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_kill_all_clear_plan
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_kill_all_clear_plan`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_kill_all_clear_plan`(
IN  $nclubid  INT,
IN  $nPlayerId  INT
)
RT:BEGIN
 
DELETE FROM table_user                 where      nPlayerId = $nPlayerId;
DELETE FROM table_clubmember           where      nClubID = $nclubid and nPlayerId = $nPlayerId;
DELETE FROM table_web_loginlog         where      nPlayerId = $nPlayerId;
DELETE FROM table_club_task_player_data  where    nClubID = $nclubid and nPlayerId = $nPlayerId;
DELETE FROM table_club_task_complete   where      nClubID = $nclubid and nPlayerId = $nPlayerId;
DELETE FROM table_club_task_recdata    where      nClubID = $nclubid and nPlayerId = $nPlayerId;

DELETE FROM table_clubgamescoredetail where nClubID = $nclubid and nPlayerId = $nPlayerId;

DELETE FROM table_clublogscore        where clubid = $nclubid and nPlayerId = $nPlayerId;

DELETE FROM table_pyramid_betting     where nClubID = $nclubid and nPlayerId = $nPlayerId;
DELETE FROM table_pyramid_bettingday  where nClubID = $nclubid and nPlayerId = $nPlayerId;
DELETE FROM table_pyramid_rebate      where nClubID = $nclubid and nPlayerId = $nPlayerId;
DELETE FROM Table_Web_WinLoseMonitor  where nClubID = $nclubid and nPlayerId = $nPlayerId;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_kill_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_kill_club`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_kill_club`(
IN  $nclubid  INT
)
RT:BEGIN
 
DELETE FROM `table_club_cc` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_cc_low` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_exswitch_config` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_exten_config` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_flow_data` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_game_cfg` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_game_dudiamond_rate` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_info_notauthority` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_member_authority` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_task_clubdata` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_task_complete` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_task_player_data` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_task_recdata`  WHERE `nClubID` = $nclubid;
DELETE FROM `table_clubevent`  WHERE `nClubID` = $nclubid;
DELETE FROM `table_clubgamescoredetail` WHERE `nClubID` = $nclubid;
DELETE FROM `table_clubinfo` WHERE `nClubID` = $nclubid;
DELETE FROM `table_clublogplatformscore` WHERE `nClubID` = $nclubid;
DELETE FROM `table_clublogscore` WHERE clubid = $nclubid;
DELETE FROM `table_clubmember` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_task_clubdata` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_task_complete` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_task_player_data` WHERE `nClubID` = $nclubid;
DELETE FROM `table_club_task_recdata` WHERE `nClubID` = $nclubid;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_kill_security_solution
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_kill_security_solution`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_kill_security_solution`(
IN  $nclubid  INT,
IN  $nPlayerId  INT
)
RT:BEGIN
 

update table_user set nActive=0       where nPlayerId = $nPlayerId;
update table_clubmember set nScore=0  where nClubID = $nclubid and nPlayerId = $nPlayerId;
update table_pyramid_rebate set ClaimFlag=2 where nClubID = $nclubid and nPlayerId = $nPlayerId;

DELETE FROM table_clubgamescoredetail where nClubID = $nclubid and nPlayerId = $nPlayerId;

DELETE FROM table_clublogscore        where clubid = $nclubid and nPlayerId = $nPlayerId;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_leaguedata_get_clubinfo2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_leaguedata_get_clubinfo2`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_leaguedata_get_clubinfo2`(
			IN  $intPlayerId INT
)
RT:BEGIN
/*
数据模块获取用户联盟俱乐部信息
*/
 
SELECT nClubID, nLevel
FROM `table_league_club_member`
WHERE `nPlayerID` =  $intPlayerId AND `nStatus` = 1; 
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_leaguedata_get_clubinfo_by_clubid
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_leaguedata_get_clubinfo_by_clubid`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_leaguedata_get_clubinfo_by_clubid`(
      IN  $intClubID INT
)
RT:BEGIN
/*
数据模块获取用户联盟俱乐部信息
2020-12-22 修改获取人数的语句，加入状态检测
*/
 
SELECT  nClubID,szClubName,szNoteMsg, nIcon, szAuth,szClubAuth,CreatePlayerID,AutoRecharge,AutoRechargeAmount,
(SELECT COUNT(ID) FROM table_league_club_member  WHERE nClubID=$intClubID AND `nStatus` = 1 ) counts,
#(SELECT `szNickName` FROM table_league_club_member  WHERE nClubID=$intClubID AND nLevel = 1 AND `nStatus` = 1 LIMIT 1) createname,
(SELECT `szNickName` FROM `table_user` WHERE `nPlayerId` =  (select `CreatePlayerID` from `table_league_club_info` WHERE `nClubID` = $intClubID) ) createname,
nDiamond, diamondCostType
FROM `table_league_club_info`
WHERE nClubID = $intClubID; 
                          
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_act_admin_downline
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_act_admin_downline`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_act_admin_downline`(
		IN  $nPlayerID    INT,        #操作者
		IN  $nDestID      INT,        #精英ID
		IN  $nClubID      INT,
		IN  $szIDList     VARCHAR(512),  #ID集合 (123,456,789)
		IN  $nType        INT,        #操作类型  0-禁赛  1-解禁 2-踢出
		IN  $nDisTime     INT,        #1-2分钟 2-10分钟 3-60分钟 4-永久
		IN  $nReason      INT,        #1-挂机  2-违规  3-恶意解散 4-用户投诉
		OUT $distime      INT,        #返回禁赛时间
		OUT $result       INT         #结果 0-失败 1-成功
)
RT:BEGIN
/*
用户在精英下线列表对玩家进行操作
*/
DECLARE _level          INT DEFAULT 0;
DECLARE _costType       INT;
DECLARE _sztime         VARCHAR(16);
DECLARE _szreason       VARCHAR(16);
DECLARE _freetime       timestamp;
DECLARE _szmark         VARCHAR(256); 
DECLARE _name           VARCHAR(64);
DECLARE _szauth         VARCHAR(32);
DECLARE _s              VARCHAR(32);
 
-- SELECT `diamondCostType`,szAuth  INTO _costType,_szauth FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus`=1;
--  
-- IF _costType<>2 THEN
-- #不是均摊要退出
--         SET $distime = 0;
--         SET $result = 0;
--         LEAVE RT;
-- END IF;
 
SELECT nLevel INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1;
IF _level = 0 OR _level = 3 THEN
#等级不正确
        SET $distime = 0;
        SET $result = 0;
        LEAVE RT;                
END IF;
IF _level = 2 THEN
#如果是长老，要检查有没有权限
        #检查操作的精英是否为自己的下属(直接操作自己时不需要检测)
        IF $nPlayerID<>$nDestID AND (NOT EXISTS(SELECT ID FROM table_agent_tree WHERE `nPlayerID`= $nPlayerID AND `nNextPlayerID` = $nDestID)) THEN
                SET $distime = 0;
                SET $result = 0;
                LEAVE RT;
        END IF;
        
        IF $nType = 2 THEN
        #踢人权限
                SELECT SUBSTRING(_szauth,5,1) INTO _s;
                
                IF _s<>'1' THEN
                        SET $distime = 0;
                        SET $result = 0;
                        LEAVE RT;                 
                END IF;
        ELSE
        #禁赛权限
                SELECT SUBSTRING(_szauth,4,1) INTO _s;
                IF _s<>'1' THEN
                        SET $distime = 0;
                        SET $result = 0;
                        LEAVE RT;                 
                END IF;
        END IF;
END IF;
  
 
#获取名字
SELECT `szNickName` INTO _name FROM `table_user` WHERE `nPlayerId` = $nPlayerID;
 
IF $nReason = 1 then
        SET _szreason = '挂机';
elseIF $nReason = 2 THEN
        SET _szreason = '违规';
ELSEIF $nReason = 3 THEN
        SET _szreason = '恶意解散';
ELSEIF $nReason = 4 THEN
        SET _szreason = '用户投诉';
END IF;
 
IF $nType = 1 THEN
#解禁
        SET $distime = 0;
 
        #更新所有目标对象的数据
        SET @sqlStr=CONCAT("UPDATE table_league_club_member SET tFreezeTime = 0, nFreezeReason = 0 where nPlayerID in (",$szIDList,") AND nClubID = ",$nClubID," AND nStatus = 1");
        PREPARE stmt_name FROM @sqlStr;
        EXECUTE stmt_name;
        DEALLOCATE PREPARE stmt_name; 
        
        #人员变动日志表
        SET @sqlMemberLogStr = CONCAT("insert into table_league_member_log(nClubID, nPlayerID, CreateTime, szRemark) 
        select ", $nClubID,",", $nPlayerID, ",NOW(),", "concat('", _name, "',", '"(ID:",', $nPlayerID, ',")"', 
        '," 将亲友: "', ",tu.szNickName,", '"(ID:",', "tl.nPlayerID,", '")解禁" )',
        " from table_league_club_member tl inner join table_user tu on tl.nPlayerID=tu.nPlayerID
        where tl.nPlayerID in (",$szIDList,") AND tl.nClubID = ",$nClubID,";");
        #select @sqlMemberLogStr;
        PREPARE stmt_member_name FROM @sqlMemberLogStr;
        EXECUTE stmt_member_name;
        DEALLOCATE PREPARE stmt_member_name;
        
        SET $result = 1;
        LEAVE RT;
        
ELSEIF $nType = 0 THEN        
#禁赛        
        IF $nDisTime = 1 THEN
                SET _freetime = DATE_ADD(NOW(), INTERVAL 2 MINUTE);
                SET _sztime = '2分钟';
        ELSEIF $nDisTime = 2 THEN
                SET _freetime = DATE_ADD(NOW(), INTERVAL 10 MINUTE);
                SET _sztime = '10分钟';
        ELSEIF $nDisTime = 3 THEN
                SET _freetime = DATE_ADD(NOW(), INTERVAL 60 MINUTE);
                SET _sztime = '1小时';
        ELSE
                #永久
                SET _freetime = DATE_ADD(NOW(), INTERVAL 10 year);
                SET _sztime = '永久';
        END IF;
 
        SET $distime = unix_timestamp(_freetime);
         
        #更新所有目标对象的数据
        SET @sqlStr=CONCAT("UPDATE table_league_club_member SET tFreezeTime = '",_freetime,"', nFreezeReason = ",$nReason," where nPlayerID in (",$szIDList,") AND nClubID = ",$nClubID," AND nStatus = 1");
        PREPARE stmt_name FROM @sqlStr;
        EXECUTE stmt_name;
        DEALLOCATE PREPARE stmt_name; 
        
        #人员变动日志表
        SET @sqlMemberLogStr = CONCAT("insert into table_league_member_log(nClubID, nPlayerID, CreateTime, szRemark) 
        select ", $nClubID,",", $nPlayerID, ",NOW(),", "CONCAT('", _name, "',", '"(ID:",', $nPlayerID, ',")"', 
        '," 将亲友: "', ",tu.szNickName,", '"(ID:",', "tl.nPlayerID,", '")禁赛","',_sztime,'"," 理由:","',_szreason,'")',
        " from table_league_club_member tl inner join table_user tu on tl.nPlayerID=tu.nPlayerID
        where tl.nPlayerID in (",$szIDList,") AND tl.nClubID = ",$nClubID,";");
        #select @sqlMemberLogStr;
        PREPARE stmt_member_name FROM @sqlMemberLogStr;
        EXECUTE stmt_member_name;
        DEALLOCATE PREPARE stmt_member_name;
                  
        #返回成功
        SET $result = 1;
        
ELSEIF $nType = 2 THEN
#踢出
        #更新所有目标对象的数据
        SET @sqlStr=CONCAT("UPDATE table_league_club_member SET tExitTime = NOW(), nStatus = 4 , nExtenID = 0, nLeCard = 0, tFreezeTime = NOW(), nFreezeReason = 0, szBan = '' where nPlayerID in (",
        $szIDList,") AND nClubID = ",$nClubID," AND nStatus = 1");
        PREPARE stmt_name FROM @sqlStr;
        EXECUTE stmt_name;
        DEALLOCATE PREPARE stmt_name;
        
        #人员变动日志表
        SET @sqlMemberLogStr = CONCAT("insert into table_league_member_log(nClubID, nPlayerID, CreateTime, szRemark) 
        select ", $nClubID,",", $nPlayerID, ",NOW(),", "CONCAT('", _name, "',", '"(ID:",', $nPlayerID, ',")"', 
        '," 将: "', ",tu.szNickName,", '"(ID:",', "tl.nPlayerID,", '")踢出亲友圈")',
        " from table_league_club_member tl inner join table_user tu on tl.nPlayerID=tu.nPlayerID
        where tl.nPlayerID in (",$szIDList,") AND tl.nClubID = ",$nClubID,";");
        #select @sqlMemberLogStr;
        PREPARE stmt_member_name FROM @sqlMemberLogStr;
        EXECUTE stmt_member_name;
        DEALLOCATE PREPARE stmt_member_name;
        
        #返回成功
        SET $result = 1;
ELSE
        SET $distime = 0;
        SET $result = 0;
        LEAVE RT; 
END IF;        
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_admin_get_diamondlog
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_admin_get_diamondlog`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_admin_get_diamondlog`(
		IN  $nPlayerID    INT,
		IN  $nPage        INT,
		IN  $nType        INT,    # 0-全部 1-消耗 2-获取
		OUT $total        INT
)
RT:BEGIN
/*
代理读取钻石变动日志信息（亲友圈外，包含所有亲友圈的充，提，改名等）
2021.11.24 增加对任务记录的读取
*/
 
DECLARE _level  INT;
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _sztype  VARCHAR(256);
 
SET _count = 5;
 
IF $nPage <= 0 THEN
        SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
SET $total = 0;
   
 
IF  $nType = 0 THEN
        SET _sztype = ' AND nType in (1,2,4,5,6,7,8,9,10,12,13,14,15)';
ELSEIF $nType = 1 THEN
        SET _sztype = ' AND nType in (1,4,6,8,10,13,14)';  #消耗
ELSEIF $nType = 2 THEN
        SET _sztype = ' AND nType in (2,5,7,9,12,15)';  #获取
END IF;
 
 
SET @sqlStrSQLLog=CONCAT("SELECT UNIX_TIMESTAMP(CreateTime) AS CreateTime,nDiamond, szRemark FROM table_league_diamond_log WHERE  nPlayerID = ",$nPlayerID,_sztype," ORDER BY ID DESC LIMIT ",_page, ",", _count, ";");
#select @sqlStrSQLLog;
PREPARE stmt_log_name FROM @sqlStrSQLLog;
EXECUTE stmt_log_name;
DEALLOCATE PREPARE stmt_log_name;
 		 
SET @sqlStrSQLTotal=CONCAT("SELECT COUNT(ID) INTO @all FROM table_league_diamond_log WHERE nPlayerID = ",$nPlayerID ,_sztype,";");
#select @sqlStrSQLTotal;
PREPARE stmt_total_name FROM @sqlStrSQLTotal;
EXECUTE stmt_total_name;
DEALLOCATE PREPARE stmt_total_name;
SET $total=@all;
 
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_back_diamond_tokenstate
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_back_diamond_tokenstate`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_league_back_diamond_tokenstate`()
BEGIN
    #未完成钻石订单 返回钻石
    DECLARE _ID BIGINT;
    DECLARE _nClubID INT;
    DECLARE _nPlayerID INT;
    DECLARE _nKindID INT;
    DECLARE _nDiamond INT;
    DECLARE _szToken VARCHAR(64);
    DECLARE _nRoomId VARCHAR(16);
    DECLARE _szRemark VARCHAR(256);
	DECLARE done INT DEFAULT 0;
    DECLARE cur CURSOR FOR 
        SELECT ID AS _ID, 
        nClubID AS _nClubID,
        nPlayerID as _nPlayerID, 
        nKindID as _nKindID, 
        nDiamond AS _nDiamond, 
        szToken AS _szToken
        FROM table_league_club_diamond_log WHERE nType = 3 AND nTokenState = 1;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done=1;

    OPEN cur;
        posLoop:LOOP
            FETCH cur INTO _ID, _nClubID, _nPlayerID, _nKindID, _nDiamond, _szToken;
            IF done=1 THEN
                LEAVE posLoop;
            END IF;
            SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(_szToken, '-', 2), '-', -1) INTO _nRoomId;
            SELECT CONCAT('亲友圈房间号', _nRoomId, '退还', -_nDiamond, '钻石') INTO _szRemark;
			CALL pr_league_modify_club_diamond(_nPlayerID, _nKindID, _nClubID, -_nDiamond, 11, _szRemark, _szToken, 2);
            CALL pr_league_set_diamond_tokenstate(_szToken, 3, 2);
        END LOOP posLoop;
    CLOSE cur;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_batch_join_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_batch_join_club`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_batch_join_club`(
			IN  $idlist     TEXT,    -- 被加入的玩家ID集合 (123,345,555)
			IN  $nClubID    INT,    -- 亲友圈ID
			IN  $AdminID    INT,    -- 操作者ID
			OUT $szIDList   TEXT,   -- 加入成功的ID集合 (123,345,555)
			OUT $nCounts    INT,    -- 亲友圈总人数
			OUT $result     INT
)
RT:BEGIN
/*
将批量玩家同意加入俱乐部
*/
DECLARE _next     TEXT DEFAULT NULL;
DECLARE _nextlen  INT  DEFAULT NULL;
DECLARE _value    TEXT DEFAULT NULL;
DECLARE _listfail TEXT DEFAULT NULL;
DECLARE _re       INT  DEFAULT NULL;
    
myloop:LOOP
  IF LENGTH(TRIM($idlist)) = 0 OR $idlist IS NULL THEN
    LEAVE myloop;
  END IF;
  
  SET _next = SUBSTRING_INDEX($idlist,',',1);
  
  SET _nextlen = LENGTH(_next);
  
  SET _value = TRIM(_next);
  
  -- 解出单个ID
  -- SELECT _value;
  CALL pr_league_single_join_club(_value,$nClubID,_re);
  
  IF _re = 1 THEN
  -- 成功加入的ID被加入返回集合中
        IF LENGTH($szIDList) > 0 THEN
                SET $szIDList = CONCAT($szIDList,",",_value);
        ELSE
                SET $szIDList = _value;
        END IF;
  elSe
  -- 加入失败的ID集合
        IF LENGTH(_listfail) > 0 THEN
                SET _listfail = CONCAT(_listfail,",",_value);
        ELSE
                SET _listfail = _value;
        END IF;  
  END IF;
  
  SET $idlist = INSERT($idlist,1,_nextlen + 1,'');
  
END LOOP myloop;    
IF LENGTH(_listfail) > 0 THEN
        SET @sqlStr=CONCAT("SELECT `szNickName`,`nPlayerId` FROM `table_user` WHERE `nPlayerId` IN (",_listfail,");");
        PREPARE stmt_score_name FROM @sqlStr;
        EXECUTE stmt_score_name;
        DEALLOCATE PREPARE stmt_score_name;
END IF;
#获取总人数
SELECT COUNT(ID) INTO $nCounts FROM table_league_club_member  WHERE nClubID=$nClubID AND `nStatus` = 1;
SET $result = 1;   
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_confirm_apply
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_confirm_apply`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_confirm_apply`(
                IN  $opID       INT,      #操作者ID
		IN  $nPlayerID  INT,      #用户ID
		IN  $nClubID    INT,      #俱乐部ID
		IN  $nAct       INT,      #操作 0-拒绝 1-同意
		OUT $nCounts    INT,      #返回俱乐部总人数
		OUT $result     INT
)
RT:BEGIN
/*
处理俱乐部的加入申请
2022-1-4 增加给上线送积分
*/
DECLARE _playid   INT;
DECLARE _name     VARCHAR(64);
DECLARE _total_club   INT;
DECLARE _level      INT;
DECLARE _actname   VARCHAR(20);
DECLARE _opname    VARCHAR(64);
DECLARE _szmark    VARCHAR(256);
  
IF NOT EXISTS( SELECT 1 FROM table_league_club_application WHERE  `nPlayerID` = $nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY) ) THEN
    SET $result = 5;    #数据错误
    LEAVE RT;
END IF;
 
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $opID AND `nStatus` = 1 ;
 
SET _actname = '';
  
IF _level=1 THEN
        SET _actname = '族长';
ELSEIF _level=2 THEN
        SET _actname = '长老';
END IF;
  
#操作者的名字
SELECT `szNickName` INTO _opname FROM `table_user` WHERE `nPlayerId` = $opID AND nActive=1;
#申请者的名字
SELECT `szNickName` INTO _name FROM `table_user` WHERE `nPlayerId` = $nPlayerID AND nActive=1;
 
IF $nAct = 0 THEN
#拒绝
        UPDATE table_league_club_application SET nStatus = 3 ,nOpID = $opID , `tOperationTime` = NOW() 
        WHERE  `nPlayerID` = $nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY);
        
        #需要写日志到记录表中
        SET _szmark  = CONCAT(_actname,_opname,"(",$opID,") 拒绝 ",_name,"(",$nPlayerID,")的入圈申请");
        CALL pr_league_write_member_log($opID,$nClubID,_szmark);
        SET $result = 1;
        LEAVE RT;
        
ELSE
#同意 这里要做用户是否加入了足够多俱乐部的判定，如果已经够多了，就不能让其加入
         
        #已进入俱乐部的数量
        SELECT COUNT(ID) INTO _total_club FROM table_league_club_member WHERE `nPlayerID` = $nPlayerID AND `nStatus` = 1 AND nClubID > 666000;
        
        IF _total_club >= 6 THEN
            UPDATE table_league_club_application SET nStatus = 3 ,nOpID = $opID , `tOperationTime` = NOW() WHERE  `nPlayerID` = $nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY);
            #需要写日志到记录表中
            SET _szmark  = CONCAT(_actname,_opname,"(",$opID,") 拒绝 ",_name,"(",$nPlayerID,")的入圈申请");
            CALL pr_league_write_member_log($opID,$nClubID,_szmark);
                    
            SET $result = 6;  #达到上限
            
            LEAVE RT;      
        END IF;
        
        UPDATE table_league_club_application SET nStatus = 2 ,nOpID = $opID , `tOperationTime` = NOW() WHERE  `nPlayerID` = $nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY);
        
        #如果已经存在有成员记录，则更新
        IF EXISTS (SELECT 1 FROM table_league_club_member WHERE nClubID=$nClubID AND nPlayerID=$nPlayerID) THEN
                UPDATE table_league_club_member SET tJoinTime=NOW(),nStatus=1,szNickName=_name,nLevel=3,partner=0,nScore=0,nLeCard=0,nFreezeReason=0,BigWinner=0,tExitTime=NULL,szBan=NULL WHERE nClubID=$nClubID AND nPlayerID=$nPlayerID;
        ELSE
                #插入成员表
                INSERT INTO `table_league_club_member` (  `nClubID`,  `nPlayerID`,  `szNickName`,  `nLevel`,  `partner`,  `nStatus`,  `tJoinTime`,  `nScore`,  `nLeCard`, `nFreezeReason`,  `BigWinner`) 
                VALUES  (    $nClubID,   $nPlayerID ,   _name,   3,   0,   1,   NOW(),   0,    0,   0,    0 ) ;
        END IF;
        
        #需要写日志到记录表中
        SET _szmark  = CONCAT(_actname,_opname,"(",$opID,") 同意 ",_name,"(",$nPlayerID,")的入圈申请");
        CALL pr_league_write_member_log($opID,$nClubID,_szmark);
                
        #获取总人数
        SELECT COUNT(ID) INTO $nCounts FROM table_league_club_member  WHERE nClubID=$nClubID AND `nStatus` = 1;
        
        #给上线送积分
        CALL pr_jscore_create_join_club($nPlayerID);
                
        SET $result = 1;
        LEAVE RT;                                       
END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_confirm_apply_all
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_confirm_apply_all`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_confirm_apply_all`(
        IN  $opID       INT,      #操作者ID
        IN  $nClubID    INT,      #俱乐部ID
        IN  $nAct       INT,      #操作 0-拒绝 1-同意
        OUT $nCounts    INT       #返回俱乐部总人数
)
RT:BEGIN
/*
对加入俱乐部申请进行批量操作
2021-6-17 在分摊模式下，只绑定码的条件下，只将绑定管理员的玩家通过申请  族长也和管理一样的权限
2022-1-4 增加给上线送积分
*/    
    DECLARE _name         VARCHAR(64);
    DECLARE _nPlayerID    INT DEFAULT 0;
    DECLARE _total_club   INT;
    DECLARE done          INT DEFAULT FALSE;
    DECLARE _level        INT;
    DECLARE _actname      VARCHAR(20);
    DECLARE _opname       VARCHAR(64);
    DECLARE _szmark       VARCHAR(256);
    
    DECLARE _concat_nPlayerID varchar(3000) DEFAULT 0;
    
    DECLARE _szauth   VARCHAR(32);
    DECLARE _s        VARCHAR(32);
    DECLARE _costType INT;
    DECLARE _exid     INT; 
    
    
    DECLARE cur CURSOR FOR SELECT nPlayerID FROM table_league_club_application WHERE nClubID = $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY) GROUP BY nPlayerID;
    
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    SELECT `szAuth`,`diamondCostType` INTO _szauth, _costType FROM `table_league_club_info` WHERE `nClubID` = $nClubID;
    SELECT SUBSTRING(_szauth,1,1) INTO _s;    
 
    SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $opID AND `nStatus` = 1 ;
 
    SET _actname = '';
  
    IF _level=1 THEN
        SET _actname = '族长';
    ELSEIF _level=2 THEN
        SET _actname = '长老';
    END IF;
          
    #操作者的名字
    SELECT `szNickName` INTO _opname FROM `table_user` WHERE `nPlayerId` = $opID AND nActive=1;
    
    #=====================
    
    OPEN cur;  
    
    read_loop:LOOP  
    
    FETCH cur INTO _nPlayerID;
    
    IF done THEN                    
        LEAVE read_loop;    
    END IF;
    
        IF NOT EXISTS( SELECT 1 FROM table_league_club_application WHERE  `nPlayerID` = _nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY) ) THEN
                ITERATE read_loop;
        END IF;
        
        #分摊模式下 只处理绑定该管理员的用户申请
        IF _costType = 2 AND _s = 0 THEN
                SELECT extendCode INTO _exid FROM table_user WHERE `nPlayerID` = _nPlayerID;
                
                IF _exid <>  $opID THEN
                        ITERATE read_loop;
                END IF;
        END IF;
        
        #申请者的名字
        SELECT `szNickName` INTO _name FROM `table_user` WHERE `nPlayerId` = _nPlayerID AND nActive=1;
                
        IF $nAct = 0 THEN
        #拒绝
                UPDATE table_league_club_application SET nStatus = 3 ,nOpID = $opID , `tOperationTime` = NOW() 
                WHERE  `nPlayerID` = _nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY);
                
                #需要写日志到记录表中
                SET _szmark  = CONCAT(_actname,_opname,"(",$opID,") 拒绝 ",_name,"(",_nPlayerID,")的入圈申请");
                CALL pr_league_write_member_log($opID,$nClubID,_szmark);
                
                ITERATE read_loop;
        ELSE
        #同意 这里要做用户是否加入了足够多俱乐部的判定，如果已经够多了，就不能让其加入
                       
                #已进入俱乐部的数量
                SELECT COUNT(ID) INTO _total_club FROM table_league_club_member WHERE `nPlayerID` = _nPlayerID AND `nStatus` = 1 AND nClubID > 666000;
                
                IF _total_club >= 6 THEN
                #设置为拒绝
                        UPDATE table_league_club_application SET nStatus = 3 ,nOpID = $opID , `tOperationTime` = NOW() WHERE  `nPlayerID` = _nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY);
                        
                        #需要写日志到记录表中
                        SET _szmark  = CONCAT(_actname,_opname,"(",$opID,") 拒绝 ",_name,"(",_nPlayerID,")的入圈申请");
                        CALL pr_league_write_member_log($opID,$nClubID,_szmark);
                                              
                        ITERATE read_loop;     
                END IF;
                
                #设置为通过
                UPDATE table_league_club_application SET nStatus = 2 ,nOpID = $opID , `tOperationTime` = NOW() WHERE  `nPlayerID` = _nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY);
                
                #如果已经存在有成员记录，则更新
                IF EXISTS (SELECT 1 FROM table_league_club_member WHERE nClubID=$nClubID AND nPlayerID=_nPlayerID) THEN
                        UPDATE table_league_club_member SET tJoinTime=NOW(),nStatus=1,szNickName=_name,nLevel=3,partner=0,nScore=0,nLeCard=0,nFreezeReason=0,BigWinner=0,tExitTime=NULL,szBan=NULL WHERE nClubID=$nClubID AND nPlayerID=_nPlayerID;
                ELSE
                        #插入成员表
                        INSERT INTO `table_league_club_member` (  `nClubID`,  `nPlayerID`,  `szNickName`,  `nLevel`,  `partner`,  `nStatus`,  `tJoinTime`,  `nScore`,  `nLeCard`, `nFreezeReason`,  `BigWinner`) 
                        VALUES  (    $nClubID,   _nPlayerID ,   _name,   3,   0,   1,   NOW(),   0,    0,   0,    0 ) ;
                END IF;
                
                #需要写日志到记录表中
                SET _szmark  = CONCAT(_actname,_opname,"(",$opID,") 同意 ",_name,"(",_nPlayerID,")的入圈申请");
                CALL pr_league_write_member_log($opID,$nClubID,_szmark);
                #给上线送积分
                CALL pr_jscore_create_join_club(_nPlayerID);
                                
                #成功的要加入集合中，注意第一个是0，在外面不要采用第一个元素
                SET _concat_nPlayerID = CONCAT(_concat_nPlayerID, ",", _nPlayerID);                                
                                                
        END IF;
        
    END LOOP;
                    
    CLOSE cur;
    
    #=====================
        
    #获取总人数
    SELECT COUNT(ID) INTO $nCounts FROM table_league_club_member  WHERE nClubID=$nClubID AND `nStatus` = 1;
               
    SELECT _concat_nPlayerID;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_confirm_apply_all_debug
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_confirm_apply_all_debug`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_confirm_apply_all_debug`(
        IN  $opID       INT,      #操作者ID
        IN  $nClubID    INT,      #俱乐部ID
        IN  $nAct       INT       #操作 0-拒绝 1-同意
)
RT:BEGIN
    
    DECLARE _name         VARCHAR(64);
    DECLARE _nPlayerID    INT DEFAULT 0;
    DECLARE _total_club   INT;
    DECLARE done          INT DEFAULT FALSE;
		DECLARE _concat_nPlayerID varchar(3000) DEFAULT 0;

    DECLARE cur CURSOR FOR SELECT nPlayerID FROM table_league_club_application WHERE nClubID = $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY) GROUP BY nPlayerID;
    
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    OPEN cur;  
    
    read_loop:LOOP  
    
    FETCH cur INTO _nPlayerID;
    
    IF done THEN                    
        LEAVE read_loop;    
    END IF;
    
        # call pr_league_confirm_apply($opID, _nPlayerID, $nClubID, $nAct, @re);
				IF NOT EXISTS( SELECT 1 FROM table_league_club_application WHERE  `nPlayerID` = _nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY) ) THEN
												
							ITERATE read_loop;
				END IF;
				IF $nAct = 0 THEN
				#拒绝
								UPDATE table_league_club_application SET nStatus = 3 ,nOpID = $opID , `tOperationTime` = NOW() 
								WHERE  `nPlayerID` = _nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY);
								ITERATE read_loop;
				ELSE
								#同意 这里要做用户是否加入了足够多俱乐部的判定，如果已经够多了，就不能让其加入
								SELECT `szNickName` INTO _name FROM `table_user` WHERE nPlayerId = _nPlayerID AND nActive=1;
								
								#已进入俱乐部的数量
								# SELECT COUNT(ID) INTO _total_club FROM table_league_club_member WHERE `nPlayerID` = _nPlayerID AND `nStatus` = 1 AND nClubID > 666000;
								SELECT COUNT(ID) INTO _total_club FROM table_league_club_member WHERE `nPlayerID` = _nPlayerID AND `nStatus` = 1;
								IF _total_club >= 6 THEN
										UPDATE table_league_club_application SET nStatus = 3 ,nOpID = $opID , `tOperationTime` = NOW() WHERE  `nPlayerID` = _nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY);
										ITERATE read_loop;     
								END IF;
								
								UPDATE table_league_club_application SET nStatus = 2 ,nOpID = $opID , `tOperationTime` = NOW() WHERE  `nPlayerID` = _nPlayerID AND `nClubID`= $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY);
								
								#如果已经存在有成员记录，则更新
								IF EXISTS (SELECT 1 FROM table_league_club_member WHERE nClubID=$nClubID AND nPlayerID=_nPlayerID) THEN
												UPDATE table_league_club_member SET tJoinTime=NOW(),nStatus=1,szNickName=_name,nLevel=3,partner=0,nScore=0,nLeCard=0,nFreezeReason=0,BigWinner=0,tExitTime=NULL,szBan=NULL WHERE nClubID=$nClubID AND nPlayerID=_nPlayerID;
												SET _concat_nPlayerID = CONCAT(_concat_nPlayerID, ",", _nPlayerID);
							  ELSE
												#插入成员表
												INSERT INTO `table_league_club_member` (  `nClubID`,  `nPlayerID`,  `szNickName`,  `nLevel`,  `partner`,  `nStatus`,  `tJoinTime`,  `nScore`,  `nLeCard`, `nFreezeReason`,  `BigWinner`) 
												VALUES  (    $nClubID,   _nPlayerID ,   _name,   3,   0,   1,   NOW(),   0,    0,   0,    0 ) ;

												SET _concat_nPlayerID = CONCAT(_concat_nPlayerID, ",", _nPlayerID);

								END IF;
														
				END IF;

    END LOOP;
                    
    CLOSE cur;
	   
    select _concat_nPlayerID;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_create_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_create_club`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_create_club`(
	IN $intPlayerID INT,
	IN $szClubName  VARCHAR(32),
	IN $szNote      VARCHAR(256),
	IN $nIcon       INT,
        IN $diamondCostType INT,
	OUT $nClubID    INT,
	OUT $nLeCard    INT,
	OUT $szAuth     VARCHAR(32),
	OUT $sName      VARCHAR(64),
	OUT $result     INT
)
RT:BEGIN
/*
用户请求创建俱乐部
2021-3-31 新的代理身份规则判断
2022-1-4 增加给上线送积分
*/
 
DECLARE _entFlag      INT;
DECLARE _e            INT;
DECLARE _create_club  INT;
DECLARE _join_club    INT;
DECLARE _total_club   INT;
DECLARE _max_total_club   INT;
DECLARE _max_create_club   INT;
DECLARE _szauth  VARCHAR(32);
 
SET $nLeCard = 0;
SET _max_total_club = 6;
SET _max_create_club = 5;
 
IF NOT EXISTS(SELECT 1 FROM table_user WHERE  nPlayerId = $intPlayerID AND nActive=1) THEN
    SET $nClubID = 0;
    SET $result = 2;    #用户账号错误
    LEAVE RT;
END IF;
 
#先检查身份
IF NOT EXISTS(SELECT 1 FROM `table_agent_info` WHERE nPlayerId=$intPlayerID) THEN
        SET $nClubID = 0;
        SET $result = 3;  #没有代理身份
        LEAVE RT;    
END IF;
 
  
#不能重名
IF EXISTS( SELECT 1 FROM `table_league_club_info` WHERE `szClubName` = $szClubName AND `nStatus` = 1 ) THEN
        SET $nClubID = 0;
        SET $result = 6;  #重名了
        LEAVE RT;
END IF;
 
#已经创建俱乐部的数量
SELECT COUNT(nClubID) INTO _create_club FROM table_league_club_info WHERE `CreatePlayerID` = $intPlayerID AND `nStatus` = 1;
 
#已加入的俱乐部的数量
SELECT COUNT(ID) INTO _join_club FROM table_league_club_member WHERE `nPlayerID` = $intPlayerID AND `nStatus` = 1 AND nClubID > 666000 AND `nLevel` > 1;
 
SET _total_club = _create_club + _join_club;
 
IF _total_club>=_max_total_club OR _create_club>=_max_create_club THEN
        SET $nClubID = 0;
        SET $result = 4;  #超出俱乐部上限
        LEAVE RT;
END IF;
 
SELECT `szNickName` INTO $sName FROM `table_user` WHERE nPlayerId = $intPlayerID AND nActive=1;
 
SET _szauth = '00000000000000000000000000000000';
 
IF  $diamondCostType = 2 THEN
        SET _szauth = '10000000000000000000000000000000';               
END IF;
 
#新增俱乐部
INSERT INTO `table_league_club_info` ( `nIcon`,  `szClubName`,  `nStatus`,  `CreatePlayerID`, `szNoteMsg`, `szAuth`,`szClubAuth`,`diamondCostType`) 
VALUES ($nIcon,$szClubName,1,$intPlayerID,$szNote,_szauth,'01000000000000000000000000000000',$diamondCostType);
 
SET $nClubID = @@IDENTITY;
  
#加乐卡  均摊模式不加乐卡
IF  $diamondCostType = 1 THEN
        SET $nLeCard = 99999;
END IF;
 
SELECT `szAuth` INTO $szAuth FROM table_league_club_info WHERE `nClubID` = $nClubID;
 
INSERT INTO `table_league_club_member` (  `nClubID`,  `nPlayerID`,  `szNickName`,  `nLevel`,  `partner`,  `nStatus`,  `tJoinTime`,  `nScore`,  `nLeCard`, `nFreezeReason`,  `BigWinner`) 
VALUES  (    $nClubID,   $intPlayerID ,   $sName,   1,   1,   1,   NOW(),   0,    $nLeCard,   0,    0 ) ;
 
#插入乐卡的日志记录
IF  $diamondCostType = 1 THEN
        INSERT INTO `table_league_lescore_log` (  `nPlayerID`,  `nClubID`,  `nKindID`,  `nLeCard`,  `nPlayerLeCard`,  `nType`,  `CreateTime`,  `szRemark`) 
        VALUES  (    $intPlayerID,    $nClubID,  0,    $nLeCard,    $nLeCard,    4,    NOW(),    '用户创建俱乐部收到系统赠送乐卡'  ) ;
END IF;
#给上线送积分
CALL pr_jscore_create_join_club($intPlayerID);
  
SET $result = 1;
        
LEAVE RT;
                        
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_del_partner_subid
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_del_partner_subid`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_del_partner_subid`(
                IN  $nPlayID    INT,
		IN  $nClubID    INT,
		IN  $nPartenID  INT,
		IN  $nDestID    INT,
		OUT $result     INT
)
RT:BEGIN
/*
删除某个合伙人的下线
*/
IF NOT EXISTS( SELECT 1 from table_league_club_member WHERE `nPlayerID` = $nDestID AND `nClubID` = $nClubID AND nExtenID = $nPartenID ) THEN
        SET $result = 0;
        LEAVE RT;
END IF;
UPDATE `table_league_club_member` SET `nExtenID` = 0 WHERE `nPlayerID` = $nDestID AND `nClubID` = $nClubID AND nExtenID = $nPartenID;
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_direct_joinclub
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_direct_joinclub`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_direct_joinclub`(
		IN  $nPlayerID  INT,      #用户ID
		IN  $nClubID    INT,      #俱乐部ID
		OUT $nCounts    INT,      #返回俱乐部总人数
		OUT $result     INT
)
RT:BEGIN
/*
直接加入公共俱乐部
2022-1-14 加入积分处理
*/
DECLARE _name VARCHAR(64);
DECLARE _total_club INT;
 
SET $result = 0;
 
IF NOT EXISTS(SELECT 1 FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
 
#已进入俱乐部的数量
SELECT COUNT(ID) INTO _total_club FROM table_league_club_member WHERE `nPlayerID` = $nPlayerID AND `nStatus` = 1 AND nClubID > 666000;
 
IF _total_club >= 6 THEN   
    LEAVE RT;      
END IF;
 
SELECT `szNickName` INTO _name FROM `table_user` WHERE `nPlayerId` = $nPlayerID;
 
#如果已经存在有成员记录，则更新
IF EXISTS (SELECT 1 FROM table_league_club_member WHERE nClubID=$nClubID AND nPlayerID=$nPlayerID) THEN
        UPDATE table_league_club_member SET tJoinTime=NOW(),nStatus=1,szNickName=_name,nLevel=3,partner=0,nScore=0,nLeCard=0,nFreezeReason=0,BigWinner=0,tExitTime=NULL,szBan=NULL WHERE nClubID=$nClubID AND nPlayerID=$nPlayerID;
ELSE
        #插入成员表
        INSERT INTO `table_league_club_member` (  `nClubID`,  `nPlayerID`,  `szNickName`,  `nLevel`,  `partner`,  `nStatus`,  `tJoinTime`,  `nScore`,  `nLeCard`, `nFreezeReason`,  `BigWinner`) 
        VALUES  (    $nClubID,   $nPlayerID ,   _name,   3,   0,   1,   NOW(),   0,    0,   0,    0 ) ;
END IF;
 
#获取总人数
SELECT COUNT(ID) INTO $nCounts FROM table_league_club_member  WHERE nClubID=$nClubID AND `nStatus` = 1;
#给上线送积分
CALL pr_jscore_create_join_club($nPlayerID);
 
SET $result = 1;
                                     
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_disgame_member
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_disgame_member`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_disgame_member`(
		IN  $intPlayerID  INT,
		IN  $intClubID    INT,
		IN  $nDestID      INT,
		IN  $nDisTime     INT,
		IN  $nReason      INT,
		OUT $distime      INT,
		OUT $result       INT
)
RT:BEGIN
/*
对玩家禁赛
注意，部长可对所有人。  管理员只能对普通成员
*/
DECLARE _level          INT;
DECLARE _dest_level     INT;
DECLARE _sztime         VARCHAR(16);
DECLARE _szreason       VARCHAR(16);
DECLARE _freetime       timestamp;
DECLARE _szmark         VARCHAR(256); 
DECLARE _name           VARCHAR(64);
DECLARE _destname       VARCHAR(64);
DECLARE _actname        VARCHAR(20);
 
 
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $intPlayerID AND nActive=1) THEN
        SET $result = 2;    #用户账号错误
        LEAVE RT;
END IF;
 
#查目标用户
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $nDestID AND nActive=1) THEN
        SET $result = 2;    #用户账号错误
        LEAVE RT;
END IF;
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $intClubID AND `nPlayerID` = $intPlayerID AND `nStatus` = 1 ;
 
SET _actname = '';
  
IF _level=1 THEN
        SET _actname = '族长';
ELSEIF _level=2 THEN
        SET _actname = '长老';
END IF;
 
#获取名字
SELECT `szNickName` INTO _name FROM `table_user` WHERE `nPlayerId` = $intPlayerID;
SELECT `szNickName` INTO _destname FROM `table_user` WHERE `nPlayerId` = $nDestID;
 
IF $nReason = 1 then
        SET _szreason = '挂机';
elseIF $nReason = 2 THEN
        SET _szreason = '违规';
ELSEIF $nReason = 3 THEN
        SET _szreason = '恶意解散';
ELSEIF $nReason = 4 THEN
        SET _szreason = '用户投诉';
END IF;
 
#根据设置的时间参数确定禁赛的结束时间
IF $nDisTime = 0 THEN
#解禁
        SET $distime = 0;
 
        #更新数据
        UPDATE `table_league_club_member` SET `tFreezeTime` = 0, nFreezeReason = 0 WHERE  nClubID = $intClubID AND nPlayerId = $nDestID AND `nStatus` = 1;
        
        #写日志
        SET _szmark  = CONCAT(_actname,_name,"(",$intPlayerID,") 将亲友:",_destname,"(",$nDestID,")解禁");
         
        CALL pr_league_write_member_log($intPlayerID,$intClubID,_szmark);
        
        SET $result = 1;
        LEAVE RT;
ELSEIF $nDisTime = 1 THEN
        SET _freetime = DATE_ADD(NOW(), INTERVAL 2 MINUTE);
        SET _sztime = '2分钟';
ELSEIF $nDisTime = 2 THEN
        SET _freetime = DATE_ADD(NOW(), INTERVAL 10 MINUTE);
        SET _sztime = '10分钟';
ELSEIF $nDisTime = 3 THEN
        SET _freetime = DATE_ADD(NOW(), INTERVAL 60 MINUTE);
        SET _sztime = '1小时';
ELSE
        #永久
        SET _freetime = DATE_ADD(NOW(), INTERVAL 10 year);
        SET _sztime = '永久';
END IF;
 
SET $distime = unix_timestamp(_freetime);
 
#更新数据
UPDATE `table_league_club_member` SET `tFreezeTime` = _freetime, nFreezeReason = $nReason WHERE  nClubID = $intClubID AND nPlayerId = $nDestID AND `nStatus` = 1;
#写日志
SET _szmark  = CONCAT(_actname,_name,"(",$intPlayerID,") 将亲友:",_destname,"(",$nDestID,")禁赛",_sztime," 理由:",_szreason);
CALL pr_league_write_member_log($intPlayerID,$intClubID,_szmark);
  
#返回成功
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_dismiss_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_dismiss_club`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_dismiss_club`(
		IN  $intPlayerID  INT,
		IN  $intClubID    INT,
		OUT $result       INT
)
RT:BEGIN
/*
用户解散俱乐部
*/
DECLARE _level  INT;
IF NOT EXISTS(SELECT 1 FROM table_user WHERE  nPlayerId = $intPlayerID AND nActive=1) THEN
        SET $result = 2;    #用户账号错误
        LEAVE RT;
END IF;
#是否已经有创建俱乐部
IF NOT EXISTS(SELECT 1 FROM `table_league_club_info` WHERE `CreatePlayerID` = $intPlayerID AND nClubID = $intClubID AND `nStatus` = 1) THEN
        SET $result = 4;  #没有俱乐部
        LEAVE RT;
END IF;
-- #先检查身份
-- SELECT nLevel INTO _level  FROM `table_league_club_member` WHERE `nPlayerId` = $intPlayerID AND nClubID = $intClubID AND `nStatus` = 1;
-- IF _level <> 1  THEN
--         SET $result = 3;  #权限不足
--         LEAVE RT;
-- END IF;
 
#更新数据，写入解散时间
UPDATE table_league_club_info SET `nStatus` = 3 ,EndTime = NOW() WHERE `CreatePlayerID` = $intPlayerID AND nClubID = $intClubID AND `nStatus` = 1;
UPDATE table_league_club_member SET `nStatus` = 2 WHERE nClubID = $intClubID AND `nStatus` = 1;
 
#返回成功
SET $result = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_distable_member
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_distable_member`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_distable_member`(
		IN  $intPlayerID  INT,
		IN  $intClubID    INT,
		IN  $nDestID      INT,
		IN  $szDisTable   VARCHAR(512),
		OUT $result       INT
)
RT:BEGIN
/*
对玩家设置禁止同桌
注意，部长可对所有人。 管理员只能对普通成员
*/
DECLARE _level      INT; 
DECLARE _szmark     VARCHAR(256);
DECLARE _name       VARCHAR(64);
DECLARE _destname   VARCHAR(64);
DECLARE _actname    VARCHAR(20);
 
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $intPlayerID AND nActive=1) THEN
        SET $result = 0;    #用户账号错误
        LEAVE RT;
END IF;
 
#查目标用户
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $nDestID AND nActive=1) THEN
        SET $result = 0;    #用户账号错误
        LEAVE RT;
END IF;
 
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $intClubID AND `nPlayerID` = $intPlayerID AND `nStatus` = 1 ;
 
SET _actname = '';
  
IF _level=1 THEN
        SET _actname = '族长';
ELSEIF _level=2 THEN
        SET _actname = '长老';
END IF;
  
#获取名字
SELECT `szNickName` INTO _name FROM `table_user` WHERE `nPlayerId` = $intPlayerID;
SELECT `szNickName` INTO _destname FROM `table_user` WHERE `nPlayerId` = $nDestID;
 
UPDATE table_league_club_member set szBan = $szDisTable WHERE `nPlayerID` = $nDestID AND `nClubID` = $intClubID;
 
#写日志
SET _szmark  = CONCAT(_actname,_name,"(",$intPlayerID,") 将亲友:",_destname,"(",$nDestID,")设置了禁止同桌操作");
CALL pr_league_write_member_log($intPlayerID,$intClubID,_szmark);
 
#返回成功
SET $result = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_admin_downline
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_admin_downline`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_admin_downline`(
                        IN $nPlayID     INT,     #查看者
			IN $nClubID     INT,
			IN $nDestID     INT,     #查询的精英ID
			IN $nPage       INT,     #第几页
			OUT $nTotal     INT,     #共有多少数据
			OUT $nResult    INT      #返回值 0-失败 1-成功
)
RT:BEGIN
/*
查看精英的下线
*/
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _costType INT;
DECLARE _extid    INT;
DECLARE _level    INT DEFAULT 0;
DECLARE _acctype  VARCHAR(32);
DECLARE _s        VARCHAR(8);
 
SET _count = 10;
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
 
SET $nResult = 1;
 
-- #支付类型
-- SELECT `diamondCostType`  INTO _costType FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus`=1;
--  
-- IF _costType<>2 THEN
-- #不是均摊要退出
--         SET $nTotal = 0;
--         SET $nResult = 0;
--         LEAVE RT;
-- END IF;
#精英的标识
SELECT `acctype` INTO _acctype from `table_user` WHERE `nPlayerID` = $nDestID;
IF LENGTH(_acctype) < 2 THEN
#目标用户不是精英
        SET $nTotal = 0;
        SET $nResult = 0;
        LEAVE RT;
END IF;
SELECT SUBSTRING(_acctype,-2,1) INTO _s;
IF _s <> '1' THEN
#目标用户不是精英
        SET $nTotal = 0;
        SET $nResult = 0;
        LEAVE RT;
END IF;
#查询者的级别
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayID AND `nStatus` = 1;
IF _level = 0 THEN
#级别有错误
        SET $nTotal = 0;
        SET $nResult = 0;
        LEAVE RT;                
END IF;
#是族长或管家
IF _level=1 OR _level=4 THEN
       
        SELECT a.nPlayerID, a.nLevel, a.partner, a.`nExtenID`,UNIX_TIMESTAMP(a.`tJoinTime`) as tJoinTime, UNIX_TIMESTAMP(IFNULL(a.`tFreezeTime`,0)) AS freezetime,
        a.`nLeCard`, b.`szNickName`, b.`szHeadPicUrl`, b.nSex, b.`extendCode`, b.acctype,
        (SELECT unix_timestamp( IFNULL(szTime,0) ) FROM `table_web_loginlog` c WHERE c.nPlayerID=a.nPlayerID ORDER BY szTime DESC LIMIT 1) lasttime
        FROM `table_league_club_member` a inner join  `table_user` b on  a.`nPlayerID` = b.nPlayerID 
        WHERE a.`nClubID` = $nClubID AND b.`extendCode`= $nDestID AND a.`nStatus` = 1 LIMIT _page,_count;
        
        SELECT COUNT(a.nPlayerID) INTO $nTotal FROM `table_league_club_member` a INNER JOIN  `table_user` b ON  a.`nPlayerID` = b.nPlayerID 
        WHERE a.`nClubID` = $nClubID AND b.`extendCode`= $nDestID AND a.`nStatus` = 1;
                
ELSE
#是长老或者普通成员，需要检查所查询的精英ID是否为自己或者下线，不可以查询其他精英
        IF $nPlayID<>$nDestID AND (NOT EXISTS(SELECT ID FROM table_agent_tree WHERE `nPlayerID`= $nPlayID AND `nNextPlayerID` = $nDestID)) THEN
                SET $nTotal = 0;
                SET $nResult = 0;
                LEAVE RT;
        END IF;
        SELECT a.nPlayerID, a.nLevel, a.partner, a.`nExtenID`,UNIX_TIMESTAMP(a.`tJoinTime`) AS tJoinTime, UNIX_TIMESTAMP(IFNULL(a.`tFreezeTime`,0)) AS freezetime,
        a.`nLeCard`, b.`szNickName`, b.`szHeadPicUrl`, b.nSex, b.`extendCode`, b.acctype,
        (SELECT UNIX_TIMESTAMP( IFNULL(szTime,0) ) FROM `table_web_loginlog` c WHERE c.nPlayerID=a.nPlayerID ORDER BY szTime DESC LIMIT 1) lasttime
        FROM `table_league_club_member` a INNER JOIN  `table_user` b ON  a.`nPlayerID` = b.nPlayerID 
        WHERE a.`nClubID` = $nClubID AND b.`extendCode`= $nDestID AND a.`nStatus` = 1 LIMIT _page,_count;
        
        SELECT COUNT(a.nPlayerID) INTO $nTotal FROM `table_league_club_member` a INNER JOIN  `table_user` b ON  a.`nPlayerID` = b.nPlayerID 
        WHERE a.`nClubID` = $nClubID AND b.`extendCode`= $nDestID AND a.`nStatus` = 1;        
        
END IF;
                         
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_applylist
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_applylist`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_applylist`(
    IN  $nClubID    INT,
    IN  $nPlayerID  INT,
    IN  $nPage      INT,
    OUT $nTotal     INT,
    OUT $nMaxID     INT
)
RT:BEGIN
/*
获取某俱乐部的加入申请
2021-6-16 均摊类型的分为2种查询 0-绑定码查询 1-全查询
*/
 
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _szauth  VARCHAR(32);
DECLARE _s      VARCHAR(32);
DECLARE _costType INT;
DECLARE _level   INT;
 
SET _count = 6;
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
 
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1 ;
select `szAuth`,`diamondCostType` into _szauth, _costType FROM `table_league_club_info` WHERE `nClubID` = $nClubID;
 
SELECT SUBSTRING(_szauth,1,1) INTO _s;
 
IF _costType = 2 AND _s = 0 THEN
#分摊模式，只能查绑定该管理员的用户申请 族长也是这样的处理
        
        SELECT a.ID, a.nPlayerID, b.szNickName, UNIX_TIMESTAMP(a.CreateTime) AS jointime, b.nSex, b.szHeadPicUrl 
        FROM `table_league_club_application` a, table_user b 
        WHERE a.nClubID = $nClubID 
        AND a.nStatus = 1 
        AND a.CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY) 
        AND a.nPlayerID = b.nPlayerId
        AND b.`extendCode` = $nPlayerID
        ORDER BY a.ID DESC LIMIT _page, _count;
         
        #计算全部的请求数量 
        SELECT IFNULL(COUNT(ID),0), IFNULL(MAX(ID),0) INTO $nTotal,$nMaxID 
        FROM `table_league_club_application` a, table_user b  
        WHERE a.nClubID = $nClubID 
        AND a.nStatus = 1 
        AND a.CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY) 
        AND a.nPlayerID = b.nPlayerId
        AND b.`extendCode` = $nPlayerID;
ELSE
#族长模式或分摊中设置为全部可查
        
        SELECT a.ID, a.nPlayerID, b.szNickName, UNIX_TIMESTAMP(a.CreateTime) AS jointime, b.nSex, b.szHeadPicUrl FROM 
        `table_league_club_application` a, table_user b WHERE a.nClubID = $nClubID AND a.nStatus = 1 
        AND a.CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY) AND a.nPlayerID = b.nPlayerId
        ORDER BY a.ID DESC LIMIT _page, _count;
         
        #计算全部的请求数量 
        SELECT IFNULL(COUNT(ID),0), IFNULL(MAX(ID),0) INTO $nTotal,$nMaxID FROM `table_league_club_application` 
        WHERE `nClubID` = $nClubID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY);
END IF; 
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_bind_invitation
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_bind_invitation`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_bind_invitation`(
                        IN  $nPlayID     INT,
			IN  $nClubID     INT,
			OUT $nResult     INT    # 0-不具备查询的条件  1-完成查询
)
RT:BEGIN
/*
均摊模式下，族长，管家或长老查找绑定自己的用户还未加入亲友圈
*/
DECLARE _costType INT;
DECLARE _level    INT;
SELECT `diamondCostType` INTO _costType FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND nStatus = 1;
SELECT `nLevel` INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayID AND `nStatus` = 1;
IF _level = 3 THEN
#级别不正确
        SET $nResult = 0;
        LEAVE RT;
END IF;
IF _costType = 2 THEN
#均摊模式
        SELECT `nPlayerId` , `szNickName`,`nSex`,`szHeadPicUrl` FROM `table_user` WHERE `extendCode` = $nPlayID AND nPlayerId NOT IN 
        (SELECT `nPlayerID` FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nStatus` = 1);
ELSE
#模式不对，不能查询
        SET $nResult = 0;
END IF;
SET $nResult = 1;
                    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_clubinfo2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_clubinfo2`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_clubinfo2`(
			IN  $intPlayerId INT,
			OUT $nAgntFlag   INT,
			OUT $nLastID     INT,
			OUT $nMallLevel  INT
)
RT:BEGIN
/*
获取用户联盟俱乐部信息
2021-3-31 准备使用新的字段及规则来存储身份信息
*/
  
SELECT `acctype`,`nLastClubID`,`reser1` INTO $nAgntFlag,$nLastID,$nMallLevel FROM `table_user` WHERE `nPlayerId` = $intPlayerId;
 
SELECT nClubID, nLevel,nLeCard,partner,nExtenID,unix_timestamp(tFreezeTime) as tFreezeTime,nFreezeReason,szBan
FROM `table_league_club_member` 
WHERE `nPlayerID` =  $intPlayerId AND `nStatus` = 1; 
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_clubmember
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_clubmember`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_clubmember`(
                        IN $nPlayID     INT,
			IN $nClubID     INT,
			IN $nDestID     INT,     #单独查询某个用户时填写此ID  否则填0   当单独查用户时，nType参数无效
			IN $nType       INT,     #查询条件 0-所有  1-3天以上未登录 2-7天以上未登录 3-15天以上未登录 4-管家 5-管理员 6-合伙人 7-禁赛玩家 8-禁止同桌玩家 9-已绑定推荐码 10-未绑定推荐码
			IN $nPage       INT,     #第几页
			OUT $nTotal     INT,     #共有多少数据
			OUT $nResult    INT      #返回值 0-单查玩家不存在 1-成功 2-单查时发现此玩家不属于该俱乐部
)
RT:BEGIN
/*
获取用户俱乐部的成员
*/
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _sclub    VARCHAR(32);
DECLARE _s        VARCHAR(32);
DECLARE _costType INT;
DECLARE _extid    INT;
DECLARE _level    INT;
# 当前时间
DECLARE _currdateEnd VARCHAR(20) DEFAULT DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s');
SET _count = 10;
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
 
SET $nResult = 1;
IF $nDestID = 0 THEN 
#查询全部人员
        SELECT SUBSTRING(`szClubAuth`,3,1),`diamondCostType`  INTO _s,_costType FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus`=1;
        
        IF _s IS NULL THEN
                SET $nTotal = 0;
                SET $nResult = 0;
                LEAVE RT;
        END IF;
        
        SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayID AND `nStatus` = 1;
        IF _level = 0 THEN
                SET $nTotal = 0;
                SET $nResult = 0;
                LEAVE RT;                
        END IF;        
        
        IF _costType=2 AND _s = '1' AND (_level>1 AND _level<4) THEN
        #均摊俱乐部启用了列表中自有绑码用户设定  长老,普通用户都只能查自己下面的人
                              
                IF $nType=1 OR $nType=2 OR $nType=3 THEN 
                        
                        IF $nType=1 THEN
                                SET @startTime = DATE_FORMAT(DATE_SUB(_currdateEnd,INTERVAL 3 DAY),'%Y-%m-%d %H:%i:%s');
                                SET @endTime = _currdateEnd;
                        ELSEIF $nType=2 THEN
                                SET @startTime = DATE_FORMAT(DATE_SUB(_currdateEnd,INTERVAL 7 DAY),'%Y-%m-%d %H:%i:%s');
                                SET @endTime = _currdateEnd;
                        ELSE
                                SET @startTime = DATE_FORMAT(DATE_SUB(_currdateEnd,INTERVAL 15 DAY),'%Y-%m-%d %H:%i:%s');
                                SET @endTime = _currdateEnd;
                        END IF;
                        
                        SET @sqlStrSQLLog=CONCAT("
                                SELECT * FROM(
                                        SELECT a.nPlayerID, a.nLevel, a.partner, a.`nExtenID`,
                                        (SELECT szHeadPicUrl FROM table_user WHERE nPlayerID = a.`nExtenID`) upPicUrl,
                                        (SELECT szNickName FROM table_user WHERE nPlayerID = a.`nExtenID`) upNickName,
                                        (SELECT nSex FROM table_user WHERE nPlayerID = a.`nExtenID`) upSex,                                        
                                        UNIX_TIMESTAMP(a.`tJoinTime`) as tJoinTime, 
                                        UNIX_TIMESTAMP(IFNULL(a.`tFreezeTime`,0)) AS freezetime,
                                        a.`nLeCard`, b.`szNickName`, b.`szHeadPicUrl`, b.nSex, b.`extendCode`, b.`acctype`,
                                        (SELECT unix_timestamp( IFNULL(szTime,0) ) FROM `table_web_loginlog` c WHERE c.nPlayerID=a.nPlayerID ORDER BY szTime DESC LIMIT 1) lasttime
                                        FROM `table_league_club_member` a inner join  `table_user` b on  a.`nPlayerID` = b.nPlayerID 
                                        WHERE a.`nClubID` =", $nClubID, " AND a.nPlayerID=",$nPlayID," AND a.`nStatus` = 1  and not exists 
                                        (select nplayerid from table_web_loginlog where nplayerid=a.nPlayerID and (szTime between '", @startTime, "' and '", @endTime, "'))
                                        UNION
                                        SELECT a.nPlayerID, a.nLevel, a.partner, a.`nExtenID`,
                                        (SELECT szHeadPicUrl FROM table_user WHERE nPlayerID = a.`nExtenID`) upPicUrl,
                                        (SELECT szNickName FROM table_user WHERE nPlayerID = a.`nExtenID`) upNickName,
                                        (SELECT nSex FROM table_user WHERE nPlayerID = a.`nExtenID`) upSex,                                        
                                        UNIX_TIMESTAMP(a.`tJoinTime`) as tJoinTime, 
                                        UNIX_TIMESTAMP(IFNULL(a.`tFreezeTime`,0)) AS freezetime,
                                        a.`nLeCard`, b.`szNickName`, b.`szHeadPicUrl`, b.nSex, b.`extendCode`, b.`acctype`,
                                        (SELECT unix_timestamp( IFNULL(szTime,0) ) FROM `table_web_loginlog` c WHERE c.nPlayerID=a.nPlayerID ORDER BY szTime DESC LIMIT 1) lasttime
                                        FROM `table_league_club_member` a inner join  `table_user` b on  a.`nPlayerID` = b.nPlayerID 
                                        WHERE a.`nClubID` =", $nClubID, " AND b.extendCode=",$nPlayID," AND a.`nStatus` = 1  and not exists 
                                        (select nplayerid from table_web_loginlog where nplayerid=a.nPlayerID and (szTime between '", @startTime, "' and '", @endTime, "'))
                                       )tmp group by nPlayerID LIMIT ", _page, ",", _count, ";");
                        #select @sqlStrSQLLog;
                        PREPARE stmt_log_name FROM @sqlStrSQLLog; 
                        EXECUTE stmt_log_name;
                        DEALLOCATE PREPARE stmt_log_name;
                        
                        SET @sqlStrSQLLogCount=CONCAT("
                                select count(*) into @countAll from( 
                                SELECT nPlayerID FROM(
                                        SELECT a.nPlayerID
                                        FROM `table_league_club_member` a inner join  `table_user` b on  a.`nPlayerID` = b.nPlayerID 
                                        WHERE a.`nClubID` =", $nClubID, " AND a.nPlayerID=",$nPlayID," AND a.`nStatus` = 1  and not exists 
                                        (select nplayerid from table_web_loginlog where nplayerid=a.nPlayerID and (szTime between '", @startTime, "' and '", @endTime, "'))
                                        UNION
                                        SELECT a.nPlayerID
                                        FROM `table_league_club_member` a inner join  `table_user` b on  a.`nPlayerID` = b.nPlayerID 
                                        WHERE a.`nClubID` =", $nClubID, " AND b.extendCode=",$nPlayID," AND a.`nStatus` = 1  and not exists 
                                        (select nplayerid from table_web_loginlog where nplayerid=a.nPlayerID and (szTime between '", @startTime, "' and '", @endTime, "'))
                                       )tmp group by nPlayerID) tmp2;");
                        #select @sqlStrSQLLogCount;
                        PREPARE stmt_log_count_name FROM @sqlStrSQLLogCount; 
                        EXECUTE stmt_log_count_name;
                        DEALLOCATE PREPARE stmt_log_count_name;
                
                        SET $nTotal=@countAll;
                ELSE
                        
                        IF $nType=4 THEN 
                                SET @nWhere = ' and a.nLevel=4';
                        ELSEIF $nType=5 THEN 
                                SET @nWhere = ' and a.nLevel=2';
                        ELSEIF $nType=6 THEN 
                                SET @nWhere = ' and a.partner=1';
                        ELSEIF $nType=7 THEN 
                                SET @nWhere = CONCAT(" and a.tFreezeTime > '", NOW(), "'");
                        ELSEIF $nType=8 THEN 
                                SET @nWhere = ' and LENGTH(a.szban) > 1';
                        ELSEIF $nType=9 THEN #已绑定
                                #SET @nWhere = ' and b.extendCode > 0';
                                SET @nWhere = '';
                        ELSEIF $nType=10 THEN #未绑定
                                #SET @nWhere = ' and b.extendCode = 0';
                                SET @nWhere = '';		
                        ELSE
                                SET @nWhere = '';
                        END IF;
                         
                        SET @sqlStrSQL=CONCAT(" 
                                SELECT * FROM(
                                        SELECT a.nPlayerID, a.nLevel, a.partner,a.`nExtenID`, 
                                        (SELECT szHeadPicUrl FROM table_user WHERE nPlayerID = a.`nExtenID`) upPicUrl,
                                        (SELECT szNickName FROM table_user WHERE nPlayerID = a.`nExtenID`) upNickName,
                                        (SELECT nSex FROM table_user WHERE nPlayerID = a.`nExtenID`) upSex,                                    
                                        UNIX_TIMESTAMP(a.`tJoinTime`) AS tJoinTime, 
                                        UNIX_TIMESTAMP(IFNULL(a.`tFreezeTime`,0)) AS freezetime,
                                        a.`nLeCard`, b.`szNickName`, b.`szHeadPicUrl`, b.nSex, b.`extendCode`, b.`acctype`,
                                        (SELECT UNIX_TIMESTAMP( IFNULL(szTime,0) ) FROM `table_web_loginlog` c WHERE c.nPlayerID=a.nPlayerID ORDER BY szTime DESC LIMIT 1) lasttime
                                        FROM `table_league_club_member` a INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
                                        WHERE a.`nClubID` = ", $nClubID, @nWhere, " AND a.nPlayerID= ",$nPlayID," AND a.`nStatus` = 1
                                        UNION
                                        SELECT a.nPlayerID, a.nLevel, a.partner,a.`nExtenID`, 
                                        (SELECT szHeadPicUrl FROM table_user WHERE nPlayerID = a.`nExtenID`) upPicUrl,
                                        (SELECT szNickName FROM table_user WHERE nPlayerID = a.`nExtenID`) upNickName,
                                        (SELECT nSex FROM table_user WHERE nPlayerID = a.`nExtenID`) upSex,                                        
                                        UNIX_TIMESTAMP(a.`tJoinTime`) AS tJoinTime, 
                                        UNIX_TIMESTAMP(IFNULL(a.`tFreezeTime`,0)) AS freezetime,
                                        a.`nLeCard`, b.`szNickName`, b.`szHeadPicUrl`, b.nSex, b.`extendCode`, b.`acctype`,
                                        (SELECT UNIX_TIMESTAMP( IFNULL(szTime,0) ) FROM `table_web_loginlog` c WHERE c.nPlayerID=a.nPlayerID ORDER BY szTime DESC LIMIT 1) lasttime
                                        FROM `table_league_club_member` a INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
                                        WHERE a.`nClubID` = ", $nClubID, @nWhere, " AND b.`extendCode`= ",$nPlayID," AND a.`nStatus` = 1
                                )tmp LIMIT ",_page, ",", _count, ";");
        
                        #select @sqlStrSQL; 
                        PREPARE stmt_name FROM @sqlStrSQL; 
                        EXECUTE stmt_name;
                        DEALLOCATE PREPARE stmt_name;
                         
                        SET @sqlStrSQLCount=CONCAT(" 
                                SELECT count(nPlayerID) into @countAll FROM(
                                        SELECT a.nPlayerID FROM `table_league_club_member` a INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
                                        WHERE a.`nClubID` = ", $nClubID, @nWhere, " AND a.nPlayerID= ",$nPlayID," AND a.`nStatus` = 1
                                        UNION
                                        SELECT a.nPlayerID FROM `table_league_club_member` a INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
                                        WHERE a.`nClubID` = ", $nClubID, @nWhere, " AND b.`extendCode`= ",$nPlayID," AND a.`nStatus` = 1
                                )tmp;");
                                                                
                        #select @sqlStrSQLCount; 
                        PREPARE stmt_count_name FROM @sqlStrSQLCount; 
                        EXECUTE stmt_count_name;
                        DEALLOCATE PREPARE stmt_count_name;
                        
                        SET $nTotal=@countAll;
                        
                END IF;                          
                        
        ELSE
        #普通模式
        
                # $nType: 1-3天以上 2-7天以上 3-15天以上, 需要关联 table_web_loginlog 表做查询
                 
                IF $nType=1 OR $nType=2 OR $nType=3 THEN 
                        
                        IF $nType=1 THEN
                                SET @startTime = DATE_FORMAT(DATE_SUB(_currdateEnd,INTERVAL 3 DAY),'%Y-%m-%d %H:%i:%s');
                                SET @endTime = _currdateEnd;
                        ELSEIF $nType=2 THEN
                                SET @startTime = DATE_FORMAT(DATE_SUB(_currdateEnd,INTERVAL 7 DAY),'%Y-%m-%d %H:%i:%s');
                                SET @endTime = _currdateEnd;
                        ELSE
                                SET @startTime = DATE_FORMAT(DATE_SUB(_currdateEnd,INTERVAL 15 DAY),'%Y-%m-%d %H:%i:%s');
                                SET @endTime = _currdateEnd;
                        END IF;
                        
                        SET @sqlStrSQLLog=CONCAT("
                                SELECT a.nPlayerID, a.nLevel, a.partner, a.`nExtenID`,
                                (SELECT szHeadPicUrl FROM table_user WHERE nPlayerID = a.`nExtenID`) upPicUrl,
                                (SELECT szNickName FROM table_user WHERE nPlayerID = a.`nExtenID`) upNickName,
                                (SELECT nSex FROM table_user WHERE nPlayerID = a.`nExtenID`) upSex,                                 
                                UNIX_TIMESTAMP(a.`tJoinTime`) as tJoinTime, 
                                UNIX_TIMESTAMP(IFNULL(a.`tFreezeTime`,0)) AS freezetime,
                                a.`nLeCard`, b.`szNickName`, b.`szHeadPicUrl`, b.nSex, b.`extendCode`, b.`acctype`,
                                (SELECT unix_timestamp( IFNULL(szTime,0) ) FROM `table_web_loginlog` c WHERE c.nPlayerID=a.nPlayerID ORDER BY szTime DESC LIMIT 1) lasttime
                                FROM `table_league_club_member` a inner join  `table_user` b on  a.`nPlayerID` = b.nPlayerID 
                                WHERE a.`nClubID` =", $nClubID, " AND a.`nStatus` = 1  and not exists (select nplayerid from table_web_loginlog where nplayerid=a.nPlayerID and (szTime between '", @startTime, "' and '", @endTime, "'))", 
                                " group by a.nPlayerID ORDER BY a.nLevel LIMIT ",_page, ",", _count, ";");
                        #select @sqlStrSQLLog;
                        PREPARE stmt_log_name FROM @sqlStrSQLLog; 
                        EXECUTE stmt_log_name;
                        DEALLOCATE PREPARE stmt_log_name;
                        
                        SET @sqlStrSQLLogCount=CONCAT("select count(counts) into @countAll  from ( 
                                SELECT count(*) as counts
                                FROM `table_league_club_member` a inner join  `table_user` b on  a.`nPlayerID` = b.nPlayerID 
                                WHERE a.`nClubID` =", $nClubID, " AND a.`nStatus` = 1  and not exists (select nplayerid from table_web_loginlog where nplayerid=a.nPlayerID and (szTime between '", @startTime, "' and '", @endTime, "'))", 
                                " group by a.nPlayerID )temp", ";");
                        #select @sqlStrSQLLogCount;
                        PREPARE stmt_log_count_name FROM @sqlStrSQLLogCount; 
                        EXECUTE stmt_log_count_name;
                        DEALLOCATE PREPARE stmt_log_count_name;
                
                        SET $nTotal=@countAll;
                ELSE
                        
                        IF $nType=4 THEN 
                                SET @nWhere = ' and a.nLevel=4';
                        ELSEIF $nType=5 THEN 
                                SET @nWhere = ' and a.nLevel=2';
                        ELSEIF $nType=6 THEN 
                                SET @nWhere = ' and a.partner=1';
                        ELSEIF $nType=7 THEN 
                                SET @nWhere = CONCAT(" and a.tFreezeTime > '", NOW(), "'");
                        ELSEIF $nType=8 THEN 
                                SET @nWhere = ' and LENGTH(a.szban) > 1';
                        ELSEIF $nType=9 THEN 
                                SET @nWhere = ' and b.extendCode > 0';
                        ELSEIF $nType=10 THEN 
                                SET @nWhere = ' and b.extendCode = 0';			
                        ELSE
                                SET @nWhere = '';
                        END IF;
                         
                        SET @sqlStrSQL=CONCAT(" 
                                SELECT a.nPlayerID, a.nLevel, a.partner,a.`nExtenID`,
                                (SELECT szHeadPicUrl FROM table_user WHERE nPlayerID = a.`nExtenID`) upPicUrl,
                                (SELECT szNickName FROM table_user WHERE nPlayerID = a.`nExtenID`) upNickName,
                                (SELECT nSex FROM table_user WHERE nPlayerID = a.`nExtenID`) upSex,                                 
                                UNIX_TIMESTAMP(a.`tJoinTime`) as tJoinTime, 
                                UNIX_TIMESTAMP(IFNULL(a.`tFreezeTime`,0)) AS freezetime,
                                a.`nLeCard`, b.`szNickName`, b.`szHeadPicUrl`, b.nSex,b.`extendCode`, b.`acctype`,
                                (SELECT unix_timestamp( IFNULL(szTime,0) ) FROM `table_web_loginlog` c WHERE c.nPlayerID=a.nPlayerID ORDER BY szTime DESC LIMIT 1) lasttime
                                FROM `table_league_club_member` a inner join `table_user` b on a.`nPlayerID` = b.nPlayerID 
                                WHERE a.`nClubID` = ", $nClubID, @nWhere, " AND a.`nStatus` = 1 order by a.nLevel LIMIT ",_page, ",", _count, ";");
                        #select @sqlStrSQL; 
                        PREPARE stmt_name FROM @sqlStrSQL; 
                        EXECUTE stmt_name;
                        DEALLOCATE PREPARE stmt_name;
                         
                        SET @sqlStrSQLCount=CONCAT(" 
                                SELECT count(*) into @countAll
                                FROM `table_league_club_member` a inner join `table_user` b on a.`nPlayerID` = b.nPlayerID 
                                WHERE a.`nClubID` = ", $nClubID, @nWhere, " AND a.`nStatus` = 1", ";");
                        #select @sqlStrSQLCount; 
                        PREPARE stmt_count_name FROM @sqlStrSQLCount; 
                        EXECUTE stmt_count_name;
                        DEALLOCATE PREPARE stmt_count_name;
                        
                        SET $nTotal=@countAll;
                        
                END IF;        
        
        END IF;
 
ELSE 
#单独查询,需要判断这个人是否为本俱乐部成员，如果不是要返回信息，让客户端去邀请
 
        IF NOT EXISTS( SELECT 1 FROM `table_user` WHERE `nPlayerID` = $nDestID AND `nActive` = 1  ) THEN
        #用户不存在，直接返回错误
                SET $nResult = 0;
                LEAVE RT;
        END IF;
        
        SELECT SUBSTRING(`szAuth`,1,1),SUBSTRING(`szClubAuth`,3,1),`diamondCostType` INTO _s,_sclub,_costType FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus`=1;
        SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayID AND `nStatus` = 1;
        SELECT `extendCode` INTO _extid FROM `table_user` WHERE `nPlayerID` = $nDestID AND `nActive` = 1;
        
        IF NOT EXISTS( SELECT 1 FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nDestID AND `nStatus` = 1  ) THEN
        #亲友圈不存在这个用户
                
                SELECT nPlayerID , `szNickName`, `szHeadPicUrl`, nSex FROM `table_user` WHERE `nPlayerID` = $nDestID AND `nActive` = 1;
                                
                IF _costType = 2 AND _s = '0' THEN
                #分摊模式，长老权限中自绑码用户申请，需要判断是否属于自己的绑定用户
                        
                        IF _extid <> $nPlayID THEN
                                #不是自己的绑定用户，不能邀请
                                SET $nResult = 3;
                        ELSE
                                SET $nResult = 2;
                        END IF;
                
                ELSE
                        #此人不属于该俱乐部,返回有关信息
                        SET $nResult = 2;
                END IF;
        ELSE
        #存在这个用户
        
                IF _costType = 2 AND _sclub = '1' THEN
                #均摊俱乐部启用了列表中自有绑码用户设定
                
                        IF _level=3 AND ($nPlayID<>$nDestID) THEN
                        #普通用户也只能查绑自己的人
                        
                                IF _extid <> $nPlayID THEN
                                        SET $nResult = 0;
                                        LEAVE RT;
                                END IF;
                                
                        ELSEIF _level=2 AND ($nPlayID<>$nDestID) THEN
                        #长老只能查自己下面的人
                        
                                IF _extid <> $nPlayID THEN
                                #不是绑定长老的，不能查询
                                        SET $nResult = 0;
                                        LEAVE RT;                                
                                END IF;
                        
                        END IF;
                
                END IF;
                
                SELECT a.nPlayerID, a.nLevel, a.partner,a.`nExtenID`, 
                (SELECT szHeadPicUrl FROM table_user WHERE nPlayerID = a.`nExtenID`) upPicUrl,
                (SELECT szNickName FROM table_user WHERE nPlayerID = a.`nExtenID`) upNickName,
                (SELECT nSex FROM table_user WHERE nPlayerID = a.`nExtenID`) upSex,                 
                UNIX_TIMESTAMP(a.`tJoinTime`) AS tJoinTime, 
                UNIX_TIMESTAMP(IFNULL(a.`tFreezeTime`,0)) AS freezetime,
                a.`nLeCard`, b.`szNickName`, b.`szHeadPicUrl`, b.nSex, b.`extendCode`, b.`acctype`,
                (SELECT UNIX_TIMESTAMP( IFNULL(szTime,0) ) FROM `table_web_loginlog` c WHERE c.nPlayerID=a.nPlayerID ORDER BY szTime DESC LIMIT 1) lasttime
                FROM `table_league_club_member` a INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
                WHERE a.`nClubID` = $nClubID AND a.nPlayerID=$nDestID AND a.`nStatus` = 1;
                         
                SELECT COUNT(*) INTO $nTotal 
                FROM `table_league_club_member` a INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
                WHERE a.`nClubID` = $nClubID AND a.nPlayerID=$nDestID AND a.`nStatus` = 1;
        END IF;
        
END IF;
                         
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_clubmember_short
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_clubmember_short`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_clubmember_short`(
                        IN $nAdminID    INT,    #操作者的ID（只能是族长，管家，长老）
                        IN $nPlayerID   INT,    #被设置者的ID
			IN $nClubID     INT,    #俱乐部ID
			IN $nDestID     INT,    #为0时表示查所有，写ID则单独查找
			IN $nPage       INT,    #页数
			OUT $nTotal     INT     #返回总个数
)
RT:BEGIN
/*
获取用户俱乐部成员的简短信息，在设置禁桌时使用，可单独查某个ID
*/
DECLARE _page           INT;
DECLARE _count          INT;
DECLARE _level          INT;
DECLARE _costType       INT;
DECLARE _exid           INT;
DECLARE _sauth          VARCHAR(32);   
  
SET _count = 5;
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
 
SELECT SUBSTRING(szClubAuth, 3, 1),`diamondCostType`  INTO _sauth, _costType FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus`=1;
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nAdminID AND `nStatus` = 1;
 
IF _costType = 2 AND _sauth = '1' AND _level=2 THEN
#均摊模式下勾选自绑码 是长老操作
        IF $nDestID = 0 THEN
        #全部
                SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
                FROM `table_league_club_member` a INNER JOIN `table_user` b ON a.nPlayerID = b.nPlayerID
                WHERE a.`nClubID` = $nClubID AND a.nPlayerID<>$nPlayerID AND b.extendCode = $nAdminID AND a.`nStatus` = 1
                LIMIT _page, _count;
                
                #全部的成员数量
                SELECT COUNT(a.nPlayerID) INTO $nTotal FROM table_league_club_member a INNER JOIN `table_user` b ON a.nPlayerID = b.nPlayerID
                WHERE a.`nClubID` = $nClubID AND a.nPlayerID<>$nPlayerID AND b.extendCode = $nAdminID AND a.`nStatus` = 1;
                
                LEAVE RT;
        ELSE
        #单独查找
                select `extendCode` INTO _exid FROM `table_user` WHERE `nPlayerId` = $nDestID;
                IF _exid<>$nAdminID THeN
                        SET $nTotal = 0;
                        LEAVE RT;
                END IF;
                
                SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
                FROM `table_league_club_member` a , `table_user` b
                WHERE a.nPlayerID=$nDestID AND a.`nClubID` = $nClubID AND a.`nStatus` = 1 AND a.`nPlayerID` = b.nPlayerID;
                #全部的成员数量
                SELECT COUNT(ID) INTO $nTotal FROM table_league_club_member WHERE nPlayerID=$nDestID AND nClubID = $nClubID AND `nStatus` = 1;
                LEAVE RT;
        END IF;
END IF; 
 
IF $nDestID = 0 THEN
 #全部
        SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
        FROM `table_league_club_member` a , `table_user` b
        WHERE a.nPlayerID<>$nPlayerID AND a.`nClubID` = $nClubID AND a.`nStatus` = 1 AND a.`nPlayerID` = b.nPlayerID LIMIT _page, _count;
         
        #全部的成员数量
        SELECT count(ID) into $nTotal FROM table_league_club_member WHERE nPlayerID<>$nPlayerID AND nClubID = $nClubID AND `nStatus` = 1;
ELSE
 #单独查找
        SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
        FROM `table_league_club_member` a , `table_user` b
        WHERE a.nPlayerID=$nDestID AND a.`nClubID` = $nClubID AND a.`nStatus` = 1 AND a.`nPlayerID` = b.nPlayerID;
         
        #全部的成员数量
        SELECT COUNT(ID) INTO $nTotal FROM table_league_club_member WHERE nPlayerID=$nDestID AND nClubID = $nClubID AND `nStatus` = 1;
END IF;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_club_diamond_auth
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_club_diamond_auth`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_club_diamond_auth`(
			IN  $nClubID     INT,
			OUT $nDiamond    INT,
			OUT $szAuth      VARCHAR(32)
)
RT:BEGIN
/*
获取俱乐部的钻石数量
*/
IF NOT EXISTS(SELECT 1 FROM table_league_club_info WHERE  nClubID = $nClubID AND nStatus=1) THEN
    #俱乐部不存在
    LEAVE RT;
END IF;
SELECT nDiamond,szAuth INTO $nDiamond,$szAuth FROM table_league_club_info WHERE  nClubID = $nClubID AND nStatus=1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_diamondlog
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_diamondlog`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_diamondlog`(
		IN  $intPlayerID  INT,
		IN  $intClubID    INT,
		IN  $nPage        INT,
		IN  $nType        INT,    # 0-全部汇总  1-消耗 2-提取 3-充值
		OUT $total        INT,
		OUT $result       INT
)
RT:BEGIN
/*
读取俱乐部的钻石变动日志信息
*/
 
DECLARE _level  INT;
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _sztype  VARCHAR(256);
DECLARE _tname   VARCHAR(256);
 
SET _count = 5;
 
IF $nPage <= 0 THEN
        SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
SET $total = 0;
   
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $intPlayerID AND nActive=1) THEN
        SET $result = 2;    #用户账号错误
        LEAVE RT;
END IF;
 
#是否加入此俱乐部
IF NOT EXISTS(SELECT 1 FROM `table_league_club_member` WHERE nPlayerId = $intPlayerID AND nClubID = $intClubID AND `nStatus` = 1) THEN
        SET $result = 3;  #没有加入此俱乐部
        LEAVE RT;
END IF;
 
IF  $nType = 0 THEN  #全部
        #SET _sztype = ' AND nType in (1,2,3,11)';
        
        SELECT UNIX_TIMESTAMP(CreateTime) AS CreateTime, szRemark FROM 
        (
          SELECT CreateTime,szRemark FROM table_league_diamond_log WHERE nClubID = $intClubID AND ntype IN (1,2)
          UNION ALL 
          SELECT CreateTime,szRemark FROM table_league_club_diamond_log WHERE nClubID = $intClubID AND ntype IN (3,11)
        )t1 ORDER BY CreateTime DESC LIMIT _page,_count;
        
        SELECT COUNT(ID) INTO $total FROM
        (
          SELECT ID FROM table_league_diamond_log WHERE nClubID = $intClubID AND ntype IN (1,2)
          UNION ALL 
          SELECT ID FROM table_league_club_diamond_log WHERE nClubID = $intClubID AND ntype IN (3,11)        
        )t1;
        
        SET $result = 1;
        LEAVE RT;
        
ELSEIF $nType = 1 THEN
        SET _sztype = ' AND nType in (3,11)';  #消耗
        SET _tname = 'table_league_club_diamond_log';
ELSEIF $nType = 2 THEN
        SET _sztype = ' AND nType = 2';  #提取
        SET _tname = 'table_league_diamond_log';
ELSEIF $nType = 3 THEN
        SET _sztype = ' AND nType = 1';  #充值
        SET _tname = 'table_league_diamond_log';
END IF;
 
 
SET @sqlStrSQLLog=CONCAT("SELECT UNIX_TIMESTAMP(CreateTime) AS CreateTime, szRemark FROM ",_tname," WHERE  nClubID = ",$intClubID,_sztype," ORDER BY ID DESC LIMIT ",_page, ",", _count, ";");
#select @sqlStrSQLLog;
PREPARE stmt_log_name FROM @sqlStrSQLLog;
EXECUTE stmt_log_name;
DEALLOCATE PREPARE stmt_log_name;
 		 
SET @sqlStrSQLTotal=CONCAT("SELECT COUNT(ID) INTO @all FROM ",_tname," WHERE nClubID = ",$intClubID ,_sztype,";");
#select @sqlStrSQLTotal;
PREPARE stmt_total_name FROM @sqlStrSQLTotal;
EXECUTE stmt_total_name;
DEALLOCATE PREPARE stmt_total_name;
SET $total=@all;
 
#返回成功
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_diamondlog_by_token
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_diamondlog_by_token`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_league_get_diamondlog_by_token`(
	IN $szToken VARCHAR(64),
    IN $nType INT
)
BEGIN
	#根据token查询钻石订单状态
	SELECT nPlayerID, nKindID, nClubID, nDiamond, nTokenState FROM table_league_club_diamond_log WHERE szToken = $szToken AND nType = $nType;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_diamond_dep
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_diamond_dep`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_diamond_dep`(
			IN  $nClubID    INT,
			OUT $result     INT
)
RT:BEGIN
/*
群主获取自动充钻的设置情况
*/
DECLARE _sw   INT;
DECLARE _dw   INT;
select `AutoRecharge`,`AutoRechargeAmount` INTO _sw,_dw FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus` = 1;
IF _sw = 0 THEN
        SET $result = 0;
        LEAVE RT;
END IF;
SET $result = -1;
IF _dw = 100 THEN
        SET $result = 1;
ELSEIF _dw = 200 THEN
        SET $result = 2;
ELSEIF _dw = 300 THEN
        SET $result = 3;        
ELSEIF _dw = 500 THEN
        SET $result = 4;        
END IF;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_gamescore_detail
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_gamescore_detail`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_league_get_gamescore_detail`(
			IN  $szToken    VARCHAR(64)      #某桌的token
)
RT:BEGIN

DECLARE _intervalStart VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y-%m-%d'), ' 00:00:00');

/*
查看战绩详情,返回明细数据
*/
SELECT `nPlayerID`,`nRound`,`szToken`,`nResult`,`nPlayBackCode` FROM `table_league_club_game_score_detail` WHERE `szToken` = $szToken AND `tStartTime` > _intervalStart;
                         
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_gamescore_total
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_gamescore_total`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_gamescore_total`(
			IN  $nPlayerID  INT,      #如果是有ID，则是单查某个人  如果为0，说明查这个俱乐部全部战绩
			IN  $nClubID    INT,
			IN  $nPage      INT,      #当前页
			OUT $total      INT,      #返回一共有多少桌
			OUT $result     INT       #返回值 1-成功 4-查不到用户
)
RT:BEGIN
/*
查看战绩列表，合计界面
*/
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _minID  INT DEFAULT 0;
DECLARE _maxID  INT DEFAULT 0; 
DECLARE _toUpdateID  INT DEFAULT 100;  # 默认取最近2天的最新100局战绩
DECLARE _intervalStart VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY),'%Y-%m-%d'), ' 00:00:00');
 
SET _count = 5;   #每页的数量
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
IF $nPlayerID>0 THEN
   IF NOT EXISTS (SELECT 1 FROM `table_league_club_member` WHERE `nPlayerID`= $nPlayerID AND `nClubID` = $nClubID AND `nStatus` = 1 ) THEN
        SET $total  = 0;
        SET $result = 4;
        LEAVE RT;
   END IF;
END IF;
 
# 取某个俱乐部的战绩列表
IF $nPlayerID=0 THEN 
	# 取最近2天的最新100局的最大ID 和 最小ID
	SELECT MIN(id) INTO _minID FROM(
		SELECT MIN(id) id FROM `table_league_club_game_score_total` WHERE `nClubID` = $nClubID AND  tCreateTime>= _intervalStart GROUP BY szToken order by ID DESC LIMIT _toUpdateID
	) temp10;
	
	SELECT MAX(id) INTO _maxID FROM(
		SELECT MAX(id) id FROM `table_league_club_game_score_total` WHERE `nClubID` = $nClubID AND  tCreateTime>= _intervalStart GROUP BY szToken ORDER BY ID DESC LIMIT _toUpdateID
	) temp14;	
	
	SELECT temp12.ID, tu.szNickName, temp12.nPlayerID, temp12.szToken, temp12.nTableID, temp12.nRound, unix_timestamp(temp12.tCreateTime) AS tStartTime, temp12.nKindID, temp12.`nTotalResult`, temp12.BigWinner, temp12.Dismiss 
	FROM (SELECT b.ID, b.nPlayerID ,b.szToken, b.nTableID, b.nRound, b.tCreateTime, b.nKindID, b.`nTotalResult`, b.BigWinner, b.Dismiss  FROM (
		SELECT nPlayerID, szToken FROM `table_league_club_game_score_total` WHERE `nClubID` = $nClubID  AND `tCreateTime` >= _intervalStart
		AND (ID BETWEEN _minID AND _maxID)
		GROUP BY szToken ORDER BY ID DESC
		LIMIT _page, _count
                ) temp11 LEFT JOIN table_league_club_game_score_total b ON b.szToken = temp11.szToken GROUP BY b.nPlayerID,b.szToken
        ) temp12 INNER JOIN table_user tu ON tu.nPlayerID = temp12.nPlayerID  order by temp12.ID desc;
	-- ) temp12 INNER JOIN table_user tu ON tu.nPlayerID = temp12.nPlayerID order by temp12.tStartTime desc, temp12.szToken desc;
	
	 SELECT COUNT(1) INTO $total FROM (
		SELECT 1 FROM `table_league_club_game_score_total` WHERE `nClubID` = $nClubID  AND `tCreateTime` >= _intervalStart GROUP BY szToken ORDER BY ID DESC LIMIT _toUpdateID
	 ) temp13;
ELSE
# 取某个玩家的战绩列表
 	
	# 取最近2天的最新100局的最大ID 和 最小ID
	SELECT MIN(id) INTO _minID FROM(
		SELECT id FROM `table_league_club_game_score_total` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND tCreateTime>= _intervalStart ORDER BY ID DESC LIMIT _toUpdateID
	) temp20;
	
	SELECT MAX(id) INTO _maxID FROM(
		SELECT id FROM `table_league_club_game_score_total` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND tCreateTime>= _intervalStart ORDER BY ID DESC LIMIT _toUpdateID
	) temp24;
	
	SELECT temp22.ID, tu.szNickName, temp22.nPlayerID, temp22.szToken, temp22.nTableID, temp22.nRound, UNIX_TIMESTAMP(temp22.tCreateTime) AS tStartTime, temp22.nKindID, temp22.`nTotalResult`, temp22.BigWinner, temp22.Dismiss 
	FROM (SELECT b.ID, b.nPlayerID ,b.szToken, b.nTableID, b.nRound, b.tCreateTime, b.nKindID, b.`nTotalResult`, b.BigWinner, b.Dismiss  FROM (
		SELECT nPlayerID, szToken FROM `table_league_club_game_score_total` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `tCreateTime` >= _intervalStart
		AND (ID BETWEEN _minID AND _maxID)
		ORDER BY ID DESC
		LIMIT _page, _count
                ) temp21 LEFT JOIN table_league_club_game_score_total b ON b.szToken = temp21.szToken GROUP BY b.nPlayerID,b.szToken
	) temp22 INNER JOIN table_user tu ON tu.nPlayerID = temp22.nPlayerID  order by temp22.ID desc;
-- 	) temp22 INNER JOIN table_user tu ON tu.nPlayerID = temp22.nPlayerID  order by temp22.tStartTime desc, temp22.szToken desc;
	
	SELECT COUNT(1) INTO $total FROM (
                SELECT 1 FROM `table_league_club_game_score_total` WHERE `nClubID` = $nClubID AND  `nPlayerID` = $nPlayerID  AND `tCreateTime` >= _intervalStart ORDER BY ID DESC LIMIT _toUpdateID
	 ) temp23;
	 
END IF;
           
SET $result = 1;
                         
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_give_lecard_member
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_give_lecard_member`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_give_lecard_member`(
                IN  $nPlayerID  INT,   #查询人 要根据身份来确定都查出什么人  部长可赠送除自己外全部人，管理员可赠送除自己及部长外所有人，合伙人只可送自己的下线
		IN  $nClubID    INT,   #俱乐部
		IN  $nDestID    INT,   #精确查找时的ID   如果为0则表示全查找，这时就根据 $nPlayerID 的身份来确定
		IN  $nPage      INT,
		OUT $nTotal     INT
)
RT:BEGIN
/*
乐卡赠送时，获得被赠送人的信息
*/
 
DECLARE _page     INT;
DECLARE _count    INT;
DECLARE _adminid  INT;
DECLARE _level    INT;
DECLARE _partnter TINYINT;
 
SELECT `nLevel`,`partner` INTO _level,_partnter FROM `table_league_club_member` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID;
  
SET _count = 5;
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
SELECT nPlayerID INTO _adminid FROM table_league_club_member WHERE `nLevel` = 1 AND `nClubID` = $nClubID;
 
IF $nDestID = 0 THEN
  #查全部
  
  IF _level = 1 THEN
  #部长
        SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
        FROM `table_league_club_member` a , `table_user` b
        WHERE a.nPlayerID <> $nPlayerID AND a.`nClubID` = $nClubID  AND a.`nStatus` = 1 AND a.nPlayerID = b.`nPlayerId` LIMIT _page, _count;
        #总数
        SELECT COUNT(ID) INTO $nTotal FROM table_league_club_member WHERE nClubID = $nClubID AND nPlayerID<>$nPlayerID AND `nStatus` = 1;
        LEAVE RT;
  ELSEIF _level = 2 THEN
  #管理员
        SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
        FROM `table_league_club_member` a , `table_user` b
        WHERE a.nPlayerID <> $nPlayerID AND a.nPlayerID <> _adminid AND a.`nClubID` = $nClubID  AND a.`nStatus` = 1 AND a.nPlayerID = b.`nPlayerId` LIMIT _page, _count;
        #总数
        SELECT COUNT(ID) INTO $nTotal FROM table_league_club_member WHERE nClubID = $nClubID AND nPlayerID<>$nPlayerID AND nPlayerID<>_adminid AND `nStatus` = 1;
        LEAVE RT;
  ELSEIF _partnter = 1 THEN
  #合伙人
        SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
        FROM `table_league_club_member` a , `table_user` b
        WHERE a.`nClubID` = $nClubID AND `nExtenID` = $nPlayerID  AND a.`nStatus` = 1 AND a.nPlayerID = b.`nPlayerId` LIMIT _page, _count;
        #总数
        SELECT COUNT(ID) INTO $nTotal FROM table_league_club_member WHERE nClubID = $nClubID AND nExtenID=$nPlayerID AND `nStatus` = 1;
        LEAVE RT; 
  ELSE
        SET $nTotal = 0;
        LEAVE RT;
  END IF;
        
ELSE
 #单独查找
 
 IF _adminid = $nDestID THEN
 #部长不能被查找
        SET $nTotal = 0;
        LEAVE RT;
 END IF;
 
        IF _level > 2 THEN
        
                IF _partnter = 1 THEN
                #只能是合伙人自己的下线
                        SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
                        FROM `table_league_club_member` a , `table_user` b
                        WHERE a.nPlayerID=$nDestID AND a.`nExtenID`= $nPlayerID AND a.`nClubID` = $nClubID  AND a.`nStatus` = 1 AND a.nPlayerID = b.`nPlayerId`;
                        #总数
                        SELECT COUNT(ID) INTO $nTotal FROM table_league_club_member WHERE nClubID = $nClubID AND nPlayerID=$nDestID AND `nExtenID`= $nPlayerID AND `nStatus` = 1;                
                ELSE
                        LEAVE RT;
                END IF;
        
        ELSE
                SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
                FROM `table_league_club_member` a , `table_user` b
                WHERE a.nPlayerID=$nDestID AND a.`nClubID` = $nClubID  AND a.`nStatus` = 1 AND a.nPlayerID = b.`nPlayerId`;
                #总数
                SELECT COUNT(ID) INTO $nTotal FROM table_league_club_member WHERE nClubID = $nClubID AND nPlayerID=$nDestID AND `nStatus` = 1;        
        END IF;
END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_lecard_consume
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_lecard_consume`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_lecard_consume`(
                IN  $nPlayerID  INT,
		IN  $nClubID    INT
)
RT:BEGIN
/*
查询某个俱乐部的乐卡消耗情况  返回7天的数据，没有的要补0
*/
DECLARE _level   INT;
DECLARE _partner INT;
 
DECLARE _weekdateStartYmd VARCHAR(20) DEFAULT DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 6 DAY), '%Y-%m-%d');
DECLARE _currdateEndYmd VARCHAR(20) DEFAULT DATE_FORMAT(NOW(), '%Y-%m-%d');
DECLARE _weekdateStart VARCHAR(20) DEFAULT CONCAT(_weekdateStartYmd, ' 00:00:00');
DECLARE _currdateEnd VARCHAR(20) DEFAULT CONCAT(_currdateEndYmd, ' 23:59:59');
 
SELECT `nLevel`,`partner` INTO _level,_partner FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1;
IF _level > 2 AND _partner = 0 THEN
        LEAVE RT;
END IF;
 
SELECT 
	UNIX_TIMESTAMP(ymd) AS unixDate,
	ymd,
	IFNULL(nPlayCount2,0) nPlayCount2,
	IFNULL(nPlayCount3,0) nPlayCount3,
	IFNULL(nPlayCount4,0) nPlayCount4,
	IFNULL(nPlayCount6,0) nPlayCount6,
	(IFNULL(nPlayCount2,0) + IFNULL(nPlayCount3,0) + IFNULL(nPlayCount4,0) + IFNULL(nPlayCount6,0)) allCount
FROM (
	SELECT 
		DATE_FORMAT(tStartTime,'%Y-%m-%d') AS toFormatDate,
		SUM(IF(nPlayCount = 2, nLeCard, 0)) nPlayCount2,
		SUM(IF(nPlayCount = 3, nLeCard, 0)) nPlayCount3,
		SUM(IF(nPlayCount = 4, nLeCard, 0)) nPlayCount4,
		SUM(IF(nPlayCount = 6, nLeCard, 0)) nPlayCount6
	FROM table_league_club_game_score_total WHERE nClubID=$nClubID
	AND (tStartTime BETWEEN _weekdateStart AND _currdateEnd)
	GROUP BY toFormatDate
) temp RIGHT JOIN table_league_daydate ON table_league_daydate.ymd = temp.toFormatDate
WHERE (table_league_daydate.ymd BETWEEN _weekdateStartYmd AND _currdateEndYmd)
ORDER BY ymd DESC;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_lobby_gamescore
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_lobby_gamescore`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_lobby_gamescore`(
			IN  $nPlayerID  INT,      #用户ID
			IN  $nPage      INT,      #当前页
			OUT $total      INT,      #返回一共有多少记录
			OUT $result     INT       #返回值 1-成功  2-查不到用户
)
RT:BEGIN
/*
大厅查看战绩列表
*/
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _minID  INT DEFAULT 0;
DECLARE _maxID  INT DEFAULT 0; 
DECLARE _toUpdateID  INT DEFAULT 100;  # 默认取最近2天的最新100局战绩
DECLARE _intervalStart VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY),'%Y-%m-%d'), ' 00:00:00');
 
SET _count = 5;   #每页的数量
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
 
IF NOT EXISTS (SELECT 1 FROM `table_user` WHERE `nPlayerID`= $nPlayerID AND `nActive` = 1 ) THEN
        SET $total  = 0;
        SET $result = 2;
        LEAVE RT;
END IF;
 
# 取最近2天的最新100局的最大ID 和 最小ID
SELECT MIN(id) INTO _minID FROM(
        SELECT MIN(id) id FROM `table_league_club_game_score_total` WHERE `nPlayerID` = $nPlayerID AND  tStartTime>= _intervalStart GROUP BY szToken ORDER BY ID DESC LIMIT _toUpdateID
) temp20;
SELECT MAX(id) INTO _maxID FROM(
        SELECT MAX(id) id FROM `table_league_club_game_score_total` WHERE `nPlayerID` = $nPlayerID AND  tStartTime>= _intervalStart GROUP BY szToken ORDER BY ID DESC LIMIT _toUpdateID
) temp24;
 
SELECT temp22.ID, tu.szNickName, temp22.nPlayerID, temp22.nClubID, temp22.szToken, temp22.nTableID, temp22.nRound, UNIX_TIMESTAMP(temp22.tStartTime) AS 
      tStartTime, temp22.nKindID, temp22.`nTotalResult`, temp22.BigWinner, temp22.Dismiss 
FROM ( 
        SELECT b.ID,b.nClubID, b.nPlayerID ,b.szToken, b.nTableID, b.nRound, b.tStartTime, b.nKindID, b.`nTotalResult`, b.BigWinner, b.Dismiss  FROM (
        SELECT nPlayerID, szToken FROM `table_league_club_game_score_total` WHERE `nPlayerID` = $nPlayerID AND `tStartTime` >= _intervalStart
        AND (ID BETWEEN _minID AND _maxID)
        GROUP BY szToken ORDER BY ID DESC
        LIMIT _page, _count
) temp21 LEFT JOIN table_league_club_game_score_total b ON b.szToken = temp21.szToken GROUP BY b.nPlayerID,b.szToken
) temp22 INNER JOIN table_user tu ON tu.nPlayerID = temp22.nPlayerID  order by temp22.ID desc;
  
SELECT COUNT(1) INTO $total FROM (
        SELECT 1 FROM `table_league_club_game_score_total` WHERE `nPlayerID` = $nPlayerID  AND `tStartTime` >= _intervalStart GROUP BY szToken ORDER BY ID DESC LIMIT _toUpdateID
 ) temp23;
           
SET $result = 1;
                         
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_member_backinfo
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_member_backinfo`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_member_backinfo`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			OUT $bName      VARCHAR(64),
			OUT $szwx       VARCHAR(64)
)
RT:BEGIN
/*
获取用户的备注信息
*/
SELECT `szBackName`,`szWXAccount` into $bName ,$szwx FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_not_ex_list
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_not_ex_list`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_not_ex_list`(
                        IN $nPartnerID     INT,      #合伙人ID
			IN $nClubID        INT,      #俱乐部ID
			IN $nPage          INT,      #页数
			IN $nSubID         INT,      #单独的下线ID，如果为0则表示查全部
			OUT $nTotal        INT       #返回总数
)
RT:BEGIN
/*
获取用户俱乐部可成为下线成员的简短信息
*/
DECLARE _page   INT;
DECLARE _count  INT;
 
SET _count = 5;
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
/* 
#检测合伙人是否存在
IF NOT EXISTS (SELECT 1 FROM table_league_club_member WHere nClubID = $nClubID AND nPlayerID=$nPartnerID AND partner = 1 AND `nStatus` = 1) THEN
        SET $nTotal = 0;
        LEAVE RT;
END IF;
*/
 
IF   $nSubID = 0 THeN
#查全部
        SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
        FROM `table_league_club_member` a , `table_user` b
        WHERE a.`nClubID` = $nClubID AND a.partner = 0 AND a.`nExtenID`=0 AND a.`nStatus` = 1 AND a.nPlayerID<>$nPartnerID AND a.`nPlayerID` = b.nPlayerID LIMIT _page, _count;
         
        #全部的成员数量
        SELECT count(ID) into $nTotal FROM table_league_club_member WHERE nClubID = $nClubID AND partner = 0 AND `nExtenID`=0 AND `nStatus` = 1 AND nPlayerID<>$nPartnerID;
ELSE
#单查一个用户
        SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
        FROM `table_league_club_member` a , `table_user` b
        WHERE a.nPlayerID = $nSubID AND a.`nClubID` = $nClubID AND a.partner = 0 AND a.`nExtenID`=0 AND a.`nStatus` = 1 AND a.nPlayerID<>$nPartnerID AND a.`nPlayerID` = b.nPlayerID;
         
        #全部的成员数量
        SELECT COUNT(ID) INTO $nTotal FROM table_league_club_member WHERE nClubID = $nClubID AND partner = 0 AND `nExtenID`=0 AND `nStatus` = 1 AND nPlayerID = $nSubID;
END IF;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_partner_downline
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_partner_downline`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_partner_downline`(
		IN  $nClubID       INT,     #俱乐部ID
		IN  $nPartnerID    INT     #合伙人ID
)
RT:BEGIN
/*
获得合伙人下线的简短信息
*/
 
 
        SELECT a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
        FROM `table_league_club_member` a , `table_user` b
        WHERE a.`nClubID` = $nClubID AND a.`nExtenID`=$nPartnerID AND a.`nStatus` = 1 AND a.nPlayerID = b.`nPlayerId`;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_partner_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_partner_info`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_partner_info`(
		IN  $nClubID    INT,
		IN  $nDestID    INT,         #目标用户ID 必须是合伙人
		IN  $nPage      INT,         #查询页数 从1开始
		IN  $nType      INT,         #查询分类 0-总场次 1-10分 2-20分 3-60分 4-80分 5-100分 6-120分
		OUT $nTotal     INT          #下线的数量
)
RT:BEGIN
/*
查询合伙人详情，列出下线的统计信息，30天跨度，各场次(2,3,4),筛选条件 nType
*/
 
DECLARE _page   INT;
DECLARE _count  INT;
 
# 本月
DECLARE _mondateStart VARCHAR(20) DEFAULT DATE_FORMAT( CURDATE(), '%Y-%m-01 00:00:00');
 
SET _count = 5;
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
  
IF $nPage=1 THEN
	# 合伙人排第一个
	SELECT nPlayerID, nLevel, szNickName, szHeadPicUrl, nSex, nPlayCount2, nPlayCount3, nPlayCount4,nPlayCount6, allCount  FROM 
	(
-- 		SELECT 
-- 			a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex,
-- 			SUM( IF(c.tTime>=_mondateStart AND nGrade=$nType,c.n2PlayCount,0) ) nPlayCount2,
-- 			SUM( IF(c.tTime>=_mondateStart AND nGrade=$nType,c.n3PlayCount,0) ) nPlayCount3,
-- 			SUM( IF(c.tTime>=_mondateStart AND nGrade=$nType,c.n4PlayCount,0) ) nPlayCount4,
-- 			SUM( IF(c.tTime>=_mondateStart AND nGrade=$nType,c.nRound,0) )      allCount
-- 		FROM `table_league_club_member` a 
-- 		INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
-- 		LEFT JOIN `table_league_stc_partner_sub` c ON a.`nPlayerID` = c.nPlayerId AND a.`nClubID` = c.nClubID
-- 		WHERE a.nPlayerID = $nDestID AND c.`nExtenID` = 0 AND a.nClubID = $nClubID AND a.nStatus = 1
 
		SELECT * FROM
		(
		SELECT 
                        a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex
		FROM `table_league_club_member` a 
		INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID AND b.nPlayerID = $nDestID AND a.`nClubID`= $nClubID AND a.nStatus = 1
		) a1,
		
		(
		  SELECT
                  IFNULL(SUM( IF(tTime>=_mondateStart AND nGrade=$nType,n2PlayCount,0) ),0) nPlayCount2,
                  IFNULL(SUM( IF(tTime>=_mondateStart AND nGrade=$nType,n3PlayCount,0) ),0) nPlayCount3,
                  IFNULL(SUM( IF(tTime>=_mondateStart AND nGrade=$nType,n4PlayCount,0) ),0) nPlayCount4,
                  IFNULL(SUM( IF(tTime>=_mondateStart AND nGrade=$nType,n6PlayCount,0) ),0) nPlayCount6,
                  IFNULL(SUM( IF(tTime>=_mondateStart AND nGrade=$nType,nRound,0) ),0)      allCount
                  FROM table_league_stc_partner_sub WHERE nPlayerID = $nDestID AND nClubID = $nClubID AND nExtenID = 0
		) a2
				
	) temp1
		
	UNION ALL
	
	# 这里是查询下线的数据
	SELECT nPlayerID, nLevel, szNickName, szHeadPicUrl, nSex, nPlayCount2, nPlayCount3, nPlayCount4,nPlayCount6, allCount  FROM 
	(
		SELECT 
			a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex,
			SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n2PlayCount, 0)) nPlayCount2,
			SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n3PlayCount, 0)) nPlayCount3,
			SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n4PlayCount, 0)) nPlayCount4,
			SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n6PlayCount, 0)) nPlayCount6,
			SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.nRound,0) )      allCount
		FROM `table_league_club_member` a 
		INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
		LEFT JOIN `table_league_stc_partner_sub` c ON a.`nPlayerID` = c.nPlayerId AND a.`nClubID` = c.nClubID AND c.nExtenID = $nDestID
		WHERE a.nExtenID = $nDestID AND a.nClubID = $nClubID AND a.nStatus = 1  
		GROUP BY a.nPlayerID LIMIT _page, _count
	) temp2;
ELSE
	# 分页非第一页的不需要显示合伙人数据
	# 这里是查询下线的数据
        SELECT 
                a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex,
                SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n2PlayCount, 0)) nPlayCount2,
                SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n3PlayCount, 0)) nPlayCount3,
                SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n4PlayCount, 0)) nPlayCount4,
                SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n6PlayCount, 0)) nPlayCount6,
                SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.nRound,0) )      allCount
        FROM `table_league_club_member` a 
        INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
        LEFT JOIN `table_league_stc_partner_sub` c ON a.`nPlayerID` = c.nPlayerId AND a.`nClubID` = c.nClubID AND c.nExtenID = $nDestID
        WHERE a.nExtenID = $nDestID AND a.nClubID = $nClubID AND a.nStatus = 1  
        GROUP BY a.nPlayerID LIMIT _page, _count;
		
END IF;
 
#全部的下线数量
SELECT COUNT(ID) INTO $nTotal FROM table_league_club_member WHERE nClubID = $nClubID AND `nStatus` = 1 AND `nExtenID` = $nDestID;
IF $nPage=1 THEN
        SET $nTotal = $nTotal + 1;
END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_partner_info_byid
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_partner_info_byid`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_partner_info_byid`(
		IN  $nClubID    INT,
		IN  $nDestID    INT,         #目标用户ID 必须是合伙人
		IN  $nSubID     INT,         #下线的ID
		IN  $nType      INT          #查询分类 0-总场次 1-10分 2-20分 3-60分 4-80分 5-100分 6-120分
)
RT:BEGIN
/*
查询合伙人单个下线的统计信息，30天跨度，各场次(2,3,4),筛选条件 nType
*/
 
DECLARE _mondateStart VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 29 DAY),'%Y-%m-%d'), ' 00:00:00');
  
#检测下线是否属于这个合伙人
IF NOT EXISTS (SELECT 1 FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nSubID AND `nExtenID` = $nDestID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
 
# 这里是查询下线的数据
SELECT 
        a.nPlayerID, a.nLevel, b.`szNickName`, b.`szHeadPicUrl`, b.nSex,
        SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n2PlayCount, 0)) nPlayCount2,
        SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n3PlayCount, 0)) nPlayCount3,
        SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n4PlayCount, 0)) nPlayCount4,
        SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.n6PlayCount, 0)) nPlayCount6,
        SUM(IF(c.tTime>=_mondateStart AND nGrade=$nType, c.nRound,0) )      allCount
FROM `table_league_club_member` a INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
LEFT JOIN `table_league_stc_partner_sub` c ON a.`nPlayerID` = c.nPlayerId AND a.`nClubID` = c.nClubID
WHERE a.`nPlayerID`= $nSubID AND a.nExtenID = $nDestID AND a.nClubID = $nClubID AND a.nStatus = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_partner_list
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_partner_list`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_partner_list`(
		IN  $nClubID    INT,
		IN  $nPage      INT,
		IN  $nType      INT,    #查询分类 0-总场次 1-10分 2-20分 3-60分 4-80分 5-100分 6-120分
		OUT $nTotal     INT
)
RT:BEGIN
/*
读取合伙人的列表
*/
 
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _nTotalResult INT;
 
DECLARE _currdateStart VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(NOW(),'%Y-%m-%d'),' 00:00:00');
DECLARE _currdateEnd VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(NOW(),'%Y-%m-%d'),' 23:59:59');
 
# 本周
#DECLARE _weekdateStart VARCHAR(20) DEFAULT DATE_FORMAT( SUBDATE(CURDATE(),DATE_FORMAT(CURDATE(),'%w') -1), '%Y-%m-%d 00:00:00');
DECLARE _weekdateStart VARCHAR(20) DEFAULT DATE_FORMAT(SUBDATE(CURDATE(),IF(DATE_FORMAT(CURDATE(),'%w')=0,7,DATE_FORMAT(CURDATE(),'%w'))-1), '%Y-%m-%d 00:00:00');
  
# 本月
DECLARE _mondateStart VARCHAR(20) DEFAULT DATE_FORMAT( CURDATE(), '%Y-%m-01 00:00:00');
 
SET _count = 5;   #每页的数量
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
 
SELECT 
	a.nPlayerID, a.nLevel, a.nLeCard, b.`szNickName`, b.`szHeadPicUrl`, b.nSex,
	SUM(IF(c.nGrade = $nType AND (c.tTime BETWEEN _mondateStart  AND _currdateEnd), c.nRound, 0)) mon_countAll, 
	SUM(IF(c.nGrade = $nType AND (c.tTime BETWEEN _weekdateStart AND _currdateEnd), c.nRound, 0)) week_countAll,
	SUM(IF(c.nGrade = $nType AND (c.tTime BETWEEN _currdateStart AND _currdateEnd), c.nRound, 0)) today_countALL
 
FROM `table_league_club_member` a 
INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
LEFT JOIN `table_league_stc_partner` c ON a.`nPlayerID` = c.nPlayerId AND a.nClubID=c.nClubID
WHERE a.nClubID = $nClubID AND a.nStatus = 1  AND a.partner = 1 
GROUP BY a.nPlayerID ORDER BY a.ID DESC LIMIT _page, _count;
 
#计算全部的数量
SELECT COUNT(ID) INTO $nTotal FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND nStatus = 1 AND `partner` = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_partner_list_byid
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_partner_list_byid`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_partner_list_byid`(
		IN  $nClubID    INT,
		IN  $nDestID    INT,
		IN  $nType      INT    #查询分类 0-总场次 1-10分 2-20分 3-60分 4-80分 5-100分 6-120分
)
RT:BEGIN
/*
读取单个合伙人的信息
*/
 
DECLARE _nTotalResult INT;
  
DECLARE _currdateStart VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(NOW(),'%Y-%m-%d'),' 00:00:00');
DECLARE _currdateEnd VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(NOW(),'%Y-%m-%d'),' 23:59:59');
 
# 本周
#DECLARE _weekdateStart VARCHAR(20) DEFAULT DATE_FORMAT( SUBDATE(CURDATE(),DATE_FORMAT(CURDATE(),'%w') -1), '%Y-%m-%d 00:00:00');
 
DECLARE _weekdateStart VARCHAR(20) DEFAULT DATE_FORMAT(SUBDATE(CURDATE(),IF(DATE_FORMAT(CURDATE(),'%w')=0,7,DATE_FORMAT(CURDATE(),'%w'))-1), '%Y-%m-%d 00:00:00');
  
# 本月
DECLARE _mondateStart VARCHAR(20) DEFAULT DATE_FORMAT( CURDATE(), '%Y-%m-01 00:00:00');
  
#检测这个合伙人是否合法
IF NOT EXISTS (SELECT 1 FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nDestID AND `partner`=1 AND `nStatus` = 1) THEN
        LEAVE RT;
END IF; 
 
 
SELECT 
	a.nPlayerID, a.nLevel, a.nLeCard, b.`szNickName`, b.`szHeadPicUrl`, b.nSex,
	SUM(IF(c.nGrade = $nType AND (c.tTime BETWEEN _mondateStart  AND _currdateEnd), c.nRound, 0)) mon_countAll, 
	SUM(IF(c.nGrade = $nType AND (c.tTime BETWEEN _weekdateStart AND _currdateEnd), c.nRound, 0)) week_countAll,
	SUM(IF(c.nGrade = $nType AND (c.tTime BETWEEN _currdateStart AND _currdateEnd), c.nRound, 0)) today_countALL
FROM `table_league_club_member` a 
INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID
LEFT  JOIN `table_league_stc_partner` c ON a.`nPlayerID` = c.nPlayerId AND a.nClubID = c.nClubID
WHERE a.nClubID = $nClubID AND a.nStatus = 1  AND a.partner = 1 AND a.nPlayerID = $nDestID;
 
  
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_partner_sub_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_partner_sub_info`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_partner_sub_info`(
		IN  $nClubID    INT,
		IN  $nPartnerID INT,  #合伙人ID
		IN  $nDestID    INT,  #下线ID
		IN  $nType      INT   #查询分类 0-总场次 1-10分 2-20分 3-60分 4-80分 5-100分 6-120分
)
RT:BEGIN
/*
查询合伙人的某个下线战局详情，列出7天的战绩情况，分2，3，4人场
*/
 
DECLARE _weekdateStartYmd VARCHAR(20) DEFAULT DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 6 DAY), '%Y-%m-%d');
DECLARE _currdateEndYmd VARCHAR(20) DEFAULT DATE_FORMAT(NOW(), '%Y-%m-%d');
  
IF $nPartnerID = $nDestID THEN
 #当查的是合伙人自己时
 
        SELECT 
                UNIX_TIMESTAMP(ymd) AS unixDate,
                IFNULL(nPlayCount2,0) nPlayCount2,
                IFNULL(nPlayCount3,0) nPlayCount3,
                IFNULL(nPlayCount4,0) nPlayCount4,
                IFNULL(nPlayCount6,0) nPlayCount6,
                IFNULL(nRound,0)      allCount
        FROM (
                SELECT 
                        tTime,
                        SUM(n2PlayCount) nPlayCount2,
                        SUM(n3PlayCount) nPlayCount3,
                        SUM(n4PlayCount) nPlayCount4,
                        SUM(n6PlayCount) nPlayCount6,
                        SUM(nRound)      nRound
                FROM table_league_stc_partner_sub 
                WHERE nPlayerID=$nPartnerID AND `nClubID` = $nClubID AND nGrade = $nType
                AND (tTime BETWEEN _weekdateStartYmd AND _currdateEndYmd)
                GROUP BY tTime
        ) temp 
        RIGHT JOIN table_league_daydate ON table_league_daydate.ymd = temp.tTime
        WHERE (table_league_daydate.ymd BETWEEN _weekdateStartYmd AND _currdateEndYmd)
        ORDER BY ymd DESC;
  
ELSE
 #是下线
 
        SELECT 
                UNIX_TIMESTAMP(ymd) AS unixDate,
                IFNULL(nPlayCount2,0) nPlayCount2,
                IFNULL(nPlayCount3,0) nPlayCount3,
                IFNULL(nPlayCount4,0) nPlayCount4,
                IFNULL(nPlayCount6,0) nPlayCount6,
                IFNULL(nRound,0)      allCount
        FROM (
                SELECT 
                        tTime,
                        SUM(n2PlayCount) nPlayCount2,
                        SUM(n3PlayCount) nPlayCount3,
                        SUM(n4PlayCount) nPlayCount4,
                        SUM(n6PlayCount) nPlayCount6,
                        SUM(nRound)      nRound
                FROM table_league_stc_partner_sub 
                WHERE nPlayerID=$nDestID AND `nClubID` = $nClubID AND nExtenID=$nPartnerID AND nGrade = $nType
                AND (tTime BETWEEN _weekdateStartYmd AND _currdateEndYmd)
                GROUP BY tTime
        ) temp RIGHT JOIN table_league_daydate ON table_league_daydate.ymd = temp.tTime
        WHERE (table_league_daydate.ymd BETWEEN _weekdateStartYmd AND _currdateEndYmd)
        ORDER BY ymd DESC;
  
END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_partner_total_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_partner_total_info`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_partner_total_info`(
		IN  $nClubID    INT,
		IN  $nPartnerID INT,  #合伙人ID
		IN  $nType      INT   #查询分类 0-总场次 1-10分 2-20分 3-60分 4-80分 5-100分 6-120分
)
RT:BEGIN
/*
查询合伙人和下线合计的战局详情，列出7天的战绩情况，分2，3，4,6人场
*/
 
DECLARE _weekdateStartYmd VARCHAR(20) DEFAULT DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 6 DAY), '%Y-%m-%d');
DECLARE _currdateEndYmd VARCHAR(20) DEFAULT DATE_FORMAT(NOW(), '%Y-%m-%d');
 
#合伙人身份判断
IF NOT EXISTS(SELECT 1 FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPartnerID AND `partner` = 1 AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
 
 
SELECT 
UNIX_TIMESTAMP(a1.ymd) AS unixDate, 
SUM(a1.n2+a2.n2) nPlayCount2,
SUM(a1.n3+a2.n3) nPlayCount3,
SUM(a1.n4+a2.n4) nPlayCount4,
SUM(a1.n6+a2.n6) nPlayCount6,
SUM(a1.nd+a2.nd) allCount
FROM 
(
SELECT 
ymd,
IFNULL(sum_n2PlayCount,0) n2,
IFNULL(sum_n3PlayCount,0) n3,
IFNULL(sum_n4PlayCount,0) n4,
IFNULL(sum_n6PlayCount,0) n6,
IFNULL(sum_nRound,0) nd
FROM
(
SELECT ttime , 
IFNULL(SUM(n2PlayCount),0) sum_n2PlayCount, 
IFNULL(SUM(n3PlayCount),0) sum_n3PlayCount, 
IFNULL(SUM(n4PlayCount),0) sum_n4PlayCount,
IFNULL(SUM(n6PlayCount),0) sum_n6PlayCount, 
IFNULL(SUM(nRound),0)      sum_nRound
 
FROM table_league_stc_partner_sub
WHERE nclubid = $nClubID AND nplayerid = $nPartnerID AND  nGrade = 0 
AND `nExtenID` = 0
AND (ttime BETWEEN _weekdateStartYmd AND _currdateEndYmd)  
 
GROUP BY tTime
) r
RIGHT JOIN table_league_daydate ON table_league_daydate.ymd = r.ttime
WHERE (table_league_daydate.ymd BETWEEN _weekdateStartYmd AND _currdateEndYmd)
ORDER BY ymd DESC
) a1,
 
(
SELECT 
ymd,
IFNULL(sum_n2PlayCount,0) n2,
IFNULL(sum_n3PlayCount,0) n3,
IFNULL(sum_n4PlayCount,0) n4,
IFNULL(sum_n6PlayCount,0) n6,
IFNULL(sum_nRound,0) nd
FROM
(
SELECT ttime , 
IFNULL(SUM(n2PlayCount),0) sum_n2PlayCount, 
IFNULL(SUM(n3PlayCount),0) sum_n3PlayCount, 
IFNULL(SUM(n4PlayCount),0) sum_n4PlayCount,
IFNULL(SUM(n6PlayCount),0) sum_n6PlayCount, 
IFNULL(SUM(nRound),0)      sum_nRound
FROM table_league_stc_partner_sub
WHERE nclubid = $nClubID AND nextenid = $nPartnerID AND  nGrade = 0 
AND (ttime BETWEEN _weekdateStartYmd AND _currdateEndYmd)  
GROUP BY tTime
) r
RIGHT JOIN table_league_daydate ON table_league_daydate.ymd = r.ttime
WHERE (table_league_daydate.ymd BETWEEN _weekdateStartYmd AND _currdateEndYmd)
ORDER BY ymd DESC
) a2
WHERE a1.ymd=a2.ymd
GROUP BY a1.ymd
ORDER BY a1.ymd DESC;
 
-- SELECT 
--   UNIX_TIMESTAMP(ymd) AS unixDate,
--   (IFNULL(sum_n2PlayCount, 0) + IFNULL(sum_nextenid_n2PlayCounts,0)) nPlayCount2, 
--   (IFNULL(sum_n3PlayCount, 0) + IFNULL(sum_nextenid_n3PlayCounts,0)) nPlayCount3,   
--   (IFNULL(sum_n4PlayCount, 0) + IFNULL(sum_nextenid_n4PlayCounts,0)) nPlayCount4,   
--   (IFNULL(sum_nRound, 0)      + IFNULL(sum_nextenid_nRound,0))       allCount
-- FROM (
-- 
--         SELECT ttime , 
--         SUM(n2PlayCount) sum_n2PlayCount, 
--         SUM(n3PlayCount) sum_n3PlayCount, 
--         SUM(n4PlayCount) sum_n4PlayCount, 
--         SUM(nRound)      sum_nRound,
--  
--         #统计下线的2人场
--         (SELECT SUM(n2PlayCount)  FROM table_league_stc_partner_sub 
--         WHERE nclubid = $nClubID AND nextenid = $nPartnerID AND  nGrade = $nType AND tTime=ta.tTime GROUP BY tTime) sum_nextenid_n2PlayCounts,
--         #统计下线的3人场
--         (SELECT SUM(n3PlayCount)  FROM table_league_stc_partner_sub 
--         WHERE nclubid = $nClubID AND nextenid = $nPartnerID AND  nGrade = $nType AND tTime=ta.tTime GROUP BY tTime) sum_nextenid_n3PlayCounts,
--         #统计下线的4人场
--         (SELECT SUM(n4PlayCount)  FROM table_league_stc_partner_sub 
--         WHERE nclubid = $nClubID AND nextenid = $nPartnerID AND  nGrade = $nType AND tTime=ta.tTime GROUP BY tTime) sum_nextenid_n4PlayCounts,
--         #统计下线的局数
--         (SELECT SUM(nRound)  FROM table_league_stc_partner_sub 
--         WHERE nclubid = $nClubID AND nextenid = $nPartnerID AND  nGrade = $nType AND tTime=ta.tTime GROUP BY tTime) sum_nextenid_nRound
--   
--         FROM table_league_stc_partner_sub ta
--         WHERE nclubid = $nClubID AND nplayerid = $nPartnerID AND  nGrade = $nType 
--         AND (ttime BETWEEN _weekdateStartYmd AND _currdateEndYmd )  GROUP BY tTime
--  
-- )temp
-- RIGHT JOIN table_league_daydate ON table_league_daydate.ymd = temp.ttime
-- WHERE (table_league_daydate.ymd BETWEEN _weekdateStartYmd AND _currdateEndYmd )
-- ORDER BY ymd DESC;
  
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_paylog
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_paylog`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_paylog`(
			IN  $nPlayerID  INT,      #如果是有ID，则是单查某个人  如果为0，说明查这个俱乐部全部战绩
			IN  $nPage      INT,      #当前页
			OUT $total      INT       #返回一共有多少桌
)
RT:BEGIN
/*
房卡商城查看
*/
DECLARE _page   INT;
DECLARE _count  INT;
DECLARE _minID  INT DEFAULT 0;
DECLARE _maxID  INT DEFAULT 0; 
DECLARE _toUpdateID  INT DEFAULT 50;  # 默认取最近15天的最新50条记录
DECLARE _intervalStart VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 15 DAY),'%Y-%m-%d'), ' 00:00:00');
 
SET _count = 6;   #每页的数量
 
IF $nPage <= 0 THEN
   SET $nPage = 1;
END IF;
 
SET _page = ($nPage-1)*_count;
 
# 取最近15天的最新50条的最大ID 和 最小ID
SELECT MIN(id), MAX(id) INTO _minID, _maxID FROM(
        SELECT id FROM `table_pay_log` WHERE nPlayerId = $nPlayerID AND create_date>= _intervalStart and state=1 ORDER BY id DESC LIMIT _toUpdateID
) temp10;
 
#分页查询
SELECT UNIX_TIMESTAMP(create_date) AS tdate, `diamond_count` AS Diamond, total_fee FROM `table_pay_log` WHERE nPlayerId = $nPlayerID AND create_date>= _intervalStart AND state=1
AND ID BETWEEN _minID AND _maxID ORDER BY id DESC LIMIT _page, _count;
 
#计算总数        
 SELECT SUM(totals)	INTO $total FROM (
        SELECT COUNT(id) AS totals FROM `table_pay_log` WHERE nPlayerId = $nPlayerID AND `create_date` >= _intervalStart AND state=1 ORDER BY id DESC LIMIT _toUpdateID
 ) temp13;
                         
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_player_baninfo
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_player_baninfo`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_player_baninfo`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			OUT $szBan      TEXT
)
RT:BEGIN
/*
获取用户的禁止同桌信息
*/
 
SELECT `szBan` INTO $szBan from `table_league_club_member` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID;
 
#有禁止同桌信息则进行读取
IF $szBan IS NoT NULL AND LENGTH($szBan) > 1 THEN
        #按照禁桌字串中的ID查有关用户的信息
        SET @sqlStr=CONCAT("select a.nPlayerID, a.nLevel, b.szNickName, b.szHeadPicUrl, b.nSex FROM table_league_club_member a , table_user b WHERE a.nClubID =",$nClubID," AND a.nStatus = 1 AND a.nPlayerID IN (",$szBan,") AND a.nPlayerID = b.nPlayerID");
        PREPARE stmt_name FROM @sqlStr;
        EXECUTE stmt_name;
        DEALLOCATE PREPARE stmt_name;
        
END IF;
        
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_rank
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_rank`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_rank`(
			IN  $nOwnID     INT,            #发起这次查找的用户ID,当其是非会员时，俱乐部不是全员可见时，直接返回这个人的信息
			IN  $nPlayerID  INT,            #指定查找时填写用户ID， 0表示全部
			IN  $nClubID    INT,            #俱乐部ID
			IN  $nTimeType  INT,            #时间范围   1-今日  2-昨日  3-本周  4-上周  5-本月
			OUT $result     INT             #返回值 1-成功 0-失败
)
RT:BEGIN
	
DECLARE _rank    INT;
DECLARE _playid  INT;
DECLARE _name    VARCHAR(64);
DECLARE _score   INT;
DECLARE _result  INT;
DECLARE _bigwinner INT;
 
DECLARE _level          INT;
DECLARE _costType       INT;
DECLARE _exid           INT;
DECLARE _sauth          VARCHAR(32);      
        
# 当前日期
DECLARE _currdateEndYmd VARCHAR(20) DEFAULT DATE_FORMAT(NOW(), '%Y-%m-%d');
# 今日
DECLARE _todaydateStart VARCHAR(20) DEFAULT CONCAT(_currdateEndYmd, ' 00:00:00');
# 昨日
DECLARE _yesterdaydateYmd   VARCHAR(20) DEFAULT DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY), '%Y-%m-%d');
DECLARE _yesterdaydateStart VARCHAR(20) DEFAULT CONCAT(_yesterdaydateYmd, ' 00:00:00');
DECLARE _yesterdaydateEnd   VARCHAR(20) DEFAULT CONCAT(_yesterdaydateYmd, ' 23:59:59');
# 本周
#DECLARE _weekdateStart VARCHAR(20) DEFAULT DATE_FORMAT( SUBDATE(CURDATE(),DATE_FORMAT(CURDATE(),'%w') -1), '%Y-%m-%d 00:00:00');
DECLARE _weekdateStart VARCHAR(20) DEFAULT DATE_FORMAT(SUBDATE(CURDATE(),IF(DATE_FORMAT(CURDATE(),'%w')=0,7,DATE_FORMAT(CURDATE(),'%w'))-1), '%Y-%m-%d 00:00:00');
# 上周
DECLARE _lastweekStart VARCHAR(20) DEFAULT DATE_FORMAT( DATE_SUB( DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL 1 WEEK), '%Y-%m-%d 00:00:00');
DECLARE _lastweekEnd   VARCHAR(20) DEFAULT DATE_FORMAT( SUBDATE(CURDATE(), WEEKDAY(CURDATE()) + 1), '%Y-%m-%d 23:59:59');
# 本月
DECLARE _mondateStart VARCHAR(20) DEFAULT DATE_FORMAT( CURDATE(), '%Y-%m-01 00:00:00');
# 结束日期
DECLARE _currdateEnd VARCHAR(20) DEFAULT CONCAT(_currdateEndYmd, ' 23:59:59');
# 时间范围   1-今日  2-昨日  3-本周  4-上周  5-本月
IF $nTimeType=1 THEN
        SET @startTime = _todaydateStart;
        SET @endTime = _currdateEnd;
ELSEIF $nTimeType=2 THEN
        SET @startTime = _yesterdaydateStart;
        SET @endTime = _yesterdaydateEnd;
ELSEIF $nTimeType=3 THEN
        SET @startTime = _weekdateStart;
        SET @endTime = _currdateEnd;
ELSEIF $nTimeType=4 THEN
        SET @startTime = _lastweekStart;
        SET @endTime = _lastweekEnd;
ELSE
        SET @startTime = _mondateStart;
        SET @endTime = _currdateEnd;
END IF;
	
SELECT SUBSTRING(szClubAuth, 3, 1),`diamondCostType`  INTO _sauth, _costType FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus`=1;
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nOwnID AND `nStatus` = 1;
	
/*
   1.不选中自绑码时所有成员都可以看到整个俱乐部的数据
   2.选中自绑码时:
          族长，管家 可以看全部人
          长老只能看到绑定自己数据的用户和自己
          普通玩家只能看到的自己
          
          单查时：
                长老只能搜索自己下面的绑码用户
                普通用户不能查别人
                族长，管家不受限制
*/
IF $nPlayerID > 1 THEN
        IF NOT EXISTS (SELECT 1 FROM `table_league_club_member` WHERE `nClubID`=$nClubID AND `nPlayerID`=$nPlayerID AND `nStatus`=1) THEN
                SET $result = 0;
                LEAVE RT;
        END IF;
END IF;
	
	
IF _costType = 2 AND _sauth = '1' AND (_level>=2 AND _level<=3 ) THEN
#均摊模式下勾选自绑码
        IF _level = 2 THEN
        #长老 查自己下面的人
                IF $nPlayerID = 0 THEN
                
                        SELECT @y:=@y+1 AS rank,nPlayerID,szNickName,nScore,nResult,nBigWinner FROM(
                          SELECT tk.nPlayerID,tu.szNickName,SUM(tk.nScore) AS nScore,ROUND(SUM(tk.nResult)/1000) AS nResult,SUM(tk.nBigWinner) AS nBigWinner 
                          FROM table_league_rank tk ,table_user tu 
                          WHERE tk.nClubID = $nClubID AND tk.nPlayerID = tu.nPlayerID AND (tTime BETWEEN @startTime AND @endTime)
                          AND tk.nPlayerID IN (SELECT $nOwnID
                                            UNION 
                                            SELECT a.nPlayerID FROM table_league_club_member a INNER JOIN table_user b ON a.nPlayerID = b.nPlayerID
                                            WHERE a.nClubID = $nClubID AND b.extendCode = $nOwnID AND a.`nStatus` = 1
                                            )
                          GROUP BY tk.nPlayerID
                          ORDER BY nScore DESC, nPlayerID DESC LIMIT 100
                        ) temp1, (SELECT @y:=0) temp2;
                        
                ELSE
                #单查时，只能查自己下面的人或自己
                        SELECT `extendCode` INTO _exid FROM `table_user` WHERE `nPlayerId` = $nPlayerID;
                        IF _exid=$nOwnID OR $nPlayerID=$nOwnID THEN
                        
                                 SELECT rank,nPlayerID,szNickName,nScore,nResult,nBigWinner INTO _rank,_playid,_name,_score,_result,_bigwinner FROM (
                                     SELECT @y:=@y+1 AS rank,nPlayerID,szNickName,nScore,nResult,nBigWinner FROM(
                                        SELECT tk.nPlayerID,tu.szNickName,SUM(tk.nScore) AS nScore,ROUND(SUM(tk.nResult)/1000) AS nResult,SUM(tk.nBigWinner) AS nBigWinner 
                                        FROM table_league_rank tk ,table_user tu 
                                        WHERE tk.nClubID = $nClubID AND tk.nPlayerID = tu.nPlayerID AND (tTime BETWEEN @startTime AND @endTime)  GROUP BY tk.nPlayerID
                                        ORDER BY nScore DESC, nPlayerID DESC LIMIT 100
                                ) temp1, (SELECT @y:=0) temp2 ) temp3 WHERE nPlayerID = $nPlayerID;
                                
                                IF _rank IS NULL THEN
                                       IF EXISTS (SELECT 1 FROM table_league_rank WHERE nClubID = $nClubID AND nPlayerID=$nPlayerID AND (tTime BETWEEN @startTime AND @endTime)) THEN
                                          SELECT 999 AS rank, tk.nPlayerID AS nPlayerID,tu.szNickName AS szNickName,
                                          SUM(tk.nScore) AS nScore,
                                          ROUND(SUM(tk.nResult)/1000) AS nResult,
                                          SUM(tk.nBigWinner) AS nBigWinner
                                          FROM table_league_rank tk ,table_user tu 
                                          WHERE tk.nClubID = $nClubID AND tk.nPlayerID = $nPlayerID AND tk.nPlayerID = tu.nPlayerID AND (tTime BETWEEN @startTime AND @endTime) 
                                          GROUP BY tk.nPlayerID;
                                       ELSE
                                          SELECT 999 AS rank,nPlayerID,szNickName, 0 AS nScore, 0 AS nResult, 0 AS nBigWinner
                                          FROM table_user WHERE nPlayerID = $nPlayerID;
                                       END IF;
                                ELSE
                                          SELECT _rank AS rank,_playid AS nPlayerID,_name AS szNickName,_score AS nScore,_result AS nResult,_bigwinner AS nBigWinner;                 
                                END IF;
                                                
                        ELSE
                        #被查询的人不是长老的下属，也不是自己
                                SET $result = 0;
                                LEAVE RT;
                        END IF;
                        
                END IF;
        
        ELSE
        #普通玩家 只能看自己
                SELECT rank,nPlayerID,szNickName,nScore,nResult,nBigWinner INTO _rank,_playid,_name,_score,_result,_bigwinner FROM (
                     SELECT @y:=@y+1 AS rank,nPlayerID,szNickName,nScore,nResult,nBigWinner FROM(
                        SELECT tk.nPlayerID,tu.szNickName,SUM(tk.nScore) AS nScore,ROUND(SUM(tk.nResult)/1000) AS nResult,SUM(tk.nBigWinner) AS nBigWinner 
                        FROM table_league_rank tk ,table_user tu 
                        WHERE tk.nClubID = $nClubID AND tk.nPlayerID = tu.nPlayerID AND (tTime BETWEEN @startTime AND @endTime) GROUP BY tk.nPlayerID
                        ORDER BY nScore DESC, nPlayerID DESC LIMIT 100
                ) temp1, (SELECT @y:=0) temp2 ) temp3 WHERE nPlayerID = $nOwnID;
                
                IF _rank IS NULL THEN
                       IF EXISTS (SELECT 1 FROM table_league_rank WHERE nClubID = $nClubID AND nPlayerID=$nOwnID AND (tTime BETWEEN @startTime AND @endTime)) THEN
                          SELECT 999 AS rank, tk.nPlayerID AS nPlayerID,tu.szNickName AS szNickName,
                          SUM(tk.nScore) AS nScore,ROUND(SUM(tk.nResult)/1000) AS nResult,SUM(tk.nBigWinner) AS nBigWinner
                          FROM table_league_rank tk ,table_user tu 
                          WHERE tk.nClubID = $nClubID AND tk.nPlayerID = $nOwnID AND tk.nPlayerID = tu.nPlayerID AND (tTime BETWEEN @startTime AND @endTime) 
                          GROUP BY tk.nPlayerID;
                       ELSE
                          SELECT 999 AS rank,nPlayerID,szNickName, 0 AS nScore, 0 AS nResult, 0 AS nBigWinner
                          FROM table_user WHERE nPlayerID = $nOwnID;
                       END IF;
                ELSE
                       SELECT _rank AS rank,_playid AS nPlayerID,_name AS szNickName,_score AS nScore,_result AS nResult,_bigwinner AS nBigWinner;                 
                END IF;
        END IF;
        
ELSE
#族长支付模式 或均摊模式下没勾选自绑码 或是族长，管家
        IF $nPlayerID = 0 THEN
        #查全部
                SELECT @y:=@y+1 AS rank,nPlayerID,szNickName,nScore,nResult,nBigWinner FROM(
                  SELECT tk.nPlayerID,tu.szNickName,SUM(tk.nScore) AS nScore,ROUND(SUM(tk.nResult)/1000) AS nResult,SUM(tk.nBigWinner) AS nBigWinner 
                  FROM table_league_rank tk ,table_user tu 
                  WHERE tk.nClubID = $nClubID AND tk.nPlayerID = tu.nPlayerID AND (tTime BETWEEN @startTime AND @endTime)
                  GROUP BY tk.nPlayerID
                  ORDER BY nScore DESC, nPlayerID DESC LIMIT 100
                ) temp1, (SELECT @y:=0) temp2;
        ELSE
        #查询某个玩家
                SELECT rank,nPlayerID,szNickName,nScore,nResult,nBigWinner INTO _rank,_playid,_name,_score,_result,_bigwinner FROM (
                     SELECT @y:=@y+1 AS rank,nPlayerID,szNickName,nScore,nResult,nBigWinner FROM(
                        SELECT tk.nPlayerID,tu.szNickName,SUM(tk.nScore) AS nScore,ROUND(SUM(tk.nResult)/1000) AS nResult,SUM(tk.nBigWinner) AS nBigWinner 
                        FROM table_league_rank tk ,table_user tu 
                        WHERE tk.nClubID = $nClubID AND tk.nPlayerID = tu.nPlayerID AND (tTime BETWEEN @startTime AND @endTime)  GROUP BY tk.nPlayerID
                        ORDER BY nScore DESC, nPlayerID DESC LIMIT 100
                ) temp1, (SELECT @y:=0) temp2 ) temp3 WHERE nPlayerID = $nPlayerID;
                
                IF _rank IS NULL THEN
                       IF EXISTS (SELECT 1 FROM table_league_rank WHERE nClubID = $nClubID AND nPlayerID=$nPlayerID AND (tTime BETWEEN @startTime AND @endTime)) THEN
                          SELECT 999 AS rank, tk.nPlayerID AS nPlayerID,tu.szNickName AS szNickName,
                          SUM(tk.nScore) AS nScore,
                          ROUND(SUM(tk.nResult)/1000) AS nResult,
                          SUM(tk.nBigWinner) AS nBigWinner
                          FROM table_league_rank tk ,table_user tu 
                          WHERE tk.nClubID = $nClubID AND tk.nPlayerID = $nPlayerID AND tk.nPlayerID = tu.nPlayerID AND (tTime BETWEEN @startTime AND @endTime) 
                          GROUP BY tk.nPlayerID;
                       ELSE
                          SELECT 999 AS rank,nPlayerID,szNickName, 0 AS nScore, 0 AS nResult, 0 AS nBigWinner
                          FROM table_user WHERE nPlayerID = $nPlayerID;
                       END IF;
                ELSE
                          SELECT _rank AS rank,_playid AS nPlayerID,_name AS szNickName,_score AS nScore,_result AS nResult,_bigwinner AS nBigWinner;                 
                END IF;
        
        END IF;
END IF;
	
SET $result=1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_rank20210106
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_rank20210106`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_rank20210106`(
			IN  $nOwnID     INT,            #发起这次查找的用户ID,当其是非会员时，俱乐部不是全员可见时，直接返回这个人的信息
			IN  $nPlayerID  INT,            #指定查找时填写用户ID， 0表示全部
			IN  $nClubID    INT,            #俱乐部ID
			IN  $nAdmin     INT,            #管理员还是普通成员查看  1-管理 0-普通成员  返回的数据字段不同
			IN  $nTimeType  INT,            #时间范围   1-今日  2-昨日  3-本周  4-上周  5-本月
			IN  $nPage      INT,            #第几页 没有的填0
			OUT $nTotal     INT,            #总计数据量，用于客户端计算分页数
			OUT $nShowAll   INT,            #全员可见标志  0-否  1-是
			OUT $result     INT             #返回值 1-成功 0-失败
)
RT:BEGIN
	DECLARE _page   INT;
	DECLARE _count  INT;
	
	# 当前日期
	DECLARE _currdateEndYmd VARCHAR(20) DEFAULT DATE_FORMAT(NOW(), '%Y-%m-%d');
	# 今日
	DECLARE _todaydateStart VARCHAR(20) DEFAULT CONCAT(_currdateEndYmd, ' 00:00:00');
	# 昨日
	DECLARE _yesterdaydateYmd VARCHAR(20) DEFAULT DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY), '%Y-%m-%d');
	DECLARE _yesterdaydateStart VARCHAR(20) DEFAULT CONCAT(_yesterdaydateYmd, ' 00:00:00');
	DECLARE _yesterdaydateEnd VARCHAR(20) DEFAULT CONCAT(_yesterdaydateYmd, ' 23:59:59');
	
	# 本周
	DECLARE _weekdateStart VARCHAR(20) DEFAULT DATE_FORMAT( SUBDATE(CURDATE(),DATE_FORMAT(CURDATE(),'%w') -1), '%Y-%m-%d 00:00:00');
	# 上周
	DECLARE _lastweekStart VARCHAR(20) DEFAULT DATE_FORMAT( DATE_SUB( DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL 1 WEEK), '%Y-%m-%d 00:00:00');
	DECLARE _lastweekEnd VARCHAR(20) DEFAULT DATE_FORMAT( SUBDATE(CURDATE(), WEEKDAY(CURDATE()) + 1), '%Y-%m-%d 23:59:59');
	# 本月
	DECLARE _mondateStart VARCHAR(20) DEFAULT DATE_FORMAT( CURDATE(), '%Y-%m-01 00:00:00');
	
	# 结束日期
	DECLARE _currdateEnd VARCHAR(20) DEFAULT CONCAT(_currdateEndYmd, ' 23:59:59');
	# 时间范围   1-今日  2-昨日  3-本周  4-上周  5-本月
	IF $nTimeType=1 THEN
		SET @startTime = _todaydateStart;
		SET @endTime = _currdateEnd;
	ELSEIF $nTimeType=2 THEN
		SET @startTime = _yesterdaydateStart;
		SET @endTime = _yesterdaydateEnd;
	ELSEIF $nTimeType=3 THEN
		SET @startTime = _weekdateStart;
		SET @endTime = _currdateEnd;
	ELSEIF $nTimeType=4 THEN
		SET @startTime = _lastweekStart;
		SET @endTime = _lastweekEnd;
	ELSE
		SET @startTime = _mondateStart;
		SET @endTime = _currdateEnd;
	END IF;
	SET _count = 10;   #每页的数量
	 
	IF $nPage <= 0 THEN
		 SET $nPage = 1;
	END IF;
	 
	SET _page = ($nPage-1)*_count;
		
	/*
		1. 是管理员：查询所有的
		2. 不是管理员，但是有全员可见标识，就是查询普通成员：不返回 输赢总分、大赢家次数 这2个字段
		3. 不是管理员，也没有全员可见标识，就是查询 $nOwnID，返回个人信息：不返回 输赢总分、大赢家次数 这2个字段
	*/
	
	# 获取可见标识 
	SELECT SUBSTRING(szClubAuth, 1, 1) INTO @szClubAuth FROM table_league_club_info WHERE nClubID=$nClubID;
	
	# 管理员可见
	IF $nAdmin=1 THEN
		
		IF $nPlayerID = 0 THEN
		# 统计有打游戏的
			SET @sqlStrSQL=CONCAT(" select @y:=@y+1 as rank, nPlayerID, szNickName, scores, nTotalResult, bigWinnerCount from ( select nPlayerID, szNickName, scores, nTotalResult, bigWinnerCount from (
			SELECT tl.nPlayerID, tu.szNickName, (count(tl.szToken) * 15) as scores , ROUND(sum(tl.nTotalResult)/1000) as nTotalResult, sum(tl.BigWinner) as bigWinnerCount 
			FROM table_league_club_game_score_total tl INNER JOIN table_user tu on tl.nPlayerID=tu.nPlayerID 
			INNER JOIN table_league_club_member tc on tc.nPlayerID=tu.nPlayerID 
			WHERE tl.nClubID =",$nClubID, " and tc.nClubID =",$nClubID, " and (tl.tStartTime between '",@startTime, "' and '", @endTime, "')"," group by tl.nPlayerID
			union all 
			
			# 统计没有打游戏的
			SELECT tl.nPlayerID, tu.szNickName, 0 as scores, 0 as nTotalResult, 0 as bigWinnerCount from table_league_club_member tl inner join table_user tu on tl.nPlayerID=tu.nPlayerID
			where nClubID=", $nClubID, " and not exists(select nPlayerID from table_league_club_game_score_total where nClubID=", $nClubID, " and nPlayerID=tl.nPlayerID", " and (tStartTime between '",@startTime, "' and '", @endTime, "'))",
			" ) temp1 order by scores desc, nPlayerID desc LIMIT ",_page, ",", _count, 
			" )temp2, (SELECT @y:=", _page, ") temp3");
			# SELECT @sqlStrSQL;
		
			PREPARE stmt_name FROM @sqlStrSQL; 
			EXECUTE stmt_name;
			DEALLOCATE PREPARE stmt_name;
		
		ELSE
			
			SET @scores=0;
		
			# 先获取自己在全俱乐部中的排名，包括没有打游戏的
			
			SET @sqlGetSelfRank=CONCAT(" SELECT rank,scores into @rank, @scores FROM (
				SELECT @y:=@y+1 as rank, nPlayerID, scores from ( select nPlayerID, scores from (
					SELECT tl.nPlayerID, tu.szNickName, (count(tl.szToken) * 15) as scores
					FROM table_league_club_game_score_total tl INNER JOIN table_user tu on tl.nPlayerID=tu.nPlayerID 
					INNER JOIN table_league_club_member tc on tc.nPlayerID=tu.nPlayerID 
					WHERE tl.nClubID =",$nClubID, " and tc.nClubID =",$nClubID, " and (tl.tStartTime between '",@startTime, "' and '", @endTime, "')"," group by tl.nPlayerID
					union all 
					SELECT tl.nPlayerID, tu.szNickName, 0 as scores from table_league_club_member tl inner join table_user tu on tl.nPlayerID=tu.nPlayerID
					where nClubID=", $nClubID, " and not exists(select nPlayerID from table_league_club_game_score_total where nClubID=", $nClubID, " and nPlayerID=tl.nPlayerID", " and (tStartTime between '",@startTime, "' and '", @endTime, "'))",
				" ) temp1 order by scores desc, nPlayerID desc 
				)temp2, (SELECT @y:=0) temp3
			) temp4 where nPlayerID=", $nPlayerID, "
			");
			
			
			#SELECT @sqlGetSelfRank;		
			PREPARE stmt_get_self_rank_name FROM @sqlGetSelfRank; 
			EXECUTE stmt_get_self_rank_name;
			DEALLOCATE PREPARE stmt_get_self_rank_name;
			# @scores = 0, 表示查不到，说明没有打游戏
			IF @scores = 0 THEN 
				# 确定没有打过游戏，不再需要关联战绩表，直接查询 table_user 表获取用户名
				SELECT @rank AS  rank, nPlayerID, szNickName, 0 AS scores, 0 AS nTotalResult, 0 AS bigWinnerCount FROM table_user WHERE nPlayerId=$nPlayerID;
			ELSE
				
				# 有玩游戏
				SET @sqlStrIDSQL=CONCAT(" SELECT ", @rank, " as rank, tl.nPlayerID, tu.szNickName, (count(tl.szToken) * 15) as scores , ROUND(sum(tl.nTotalResult)/1000) as nTotalResult, sum(BigWinner) as bigWinnerCount 
					FROM table_league_club_game_score_total tl INNER JOIN table_user tu on tl.nPlayerID=tu.nPlayerID 
					WHERE tl.nClubID =",$nClubID, " and (tl.tStartTime between '",@startTime, "' and '", @endTime, "') ", " and tl.nPlayerID=", $nPlayerID, " group by tl.nPlayerID"
				);
				
				# SELECT @sqlStrIDSQL;		
				PREPARE stmt_id_name FROM @sqlStrIDSQL; 
				EXECUTE stmt_id_name;
				DEALLOCATE PREPARE stmt_id_name;
		
			END IF;
		END IF;
	# 不是管理员，但是有全员可见标识
	ELSEIF $nAdmin=0 AND @szClubAuth=1 THEN
	
		IF $nPlayerID = 0 THEN
			SET @sqlStrSQLAuth=CONCAT(" select @y:=@y+1 as rank,nPlayerID, szNickName, scores  from ( select nPlayerID, szNickName, scores from (
				SELECT tl.nPlayerID, tu.szNickName, (count(tl.szToken) * 15) as scores
				FROM table_league_club_game_score_total tl INNER JOIN table_user tu on tl.nPlayerID=tu.nPlayerID 
				INNER JOIN table_league_club_member tc on tc.nPlayerID=tu.nPlayerID 
				WHERE tl.nClubID =",$nClubID, " and tc.nClubID =",$nClubID, " and (tl.tStartTime between '",@startTime, "' and '", @endTime, "')"," group by tl.nPlayerID
			
				union all 
				# 统计没有打游戏的
				SELECT tl.nPlayerID, tu.szNickName, 0 as scores from table_league_club_member tl inner join table_user tu on tl.nPlayerID=tu.nPlayerID
				where nClubID=", $nClubID, " and not exists(select nPlayerID from table_league_club_game_score_total where nClubID=", $nClubID, " and nPlayerID=tl.nPlayerID", " and (tStartTime between '",@startTime, "' and '", @endTime, "'))",
				" ) temp1 order by scores desc, nPlayerID desc LIMIT ",_page, ",", _count, 
				" )temp2, (SELECT @y:=", _page, ") temp3");
			
			
			PREPARE stmt_auth_name FROM @sqlStrSQLAuth; 
			EXECUTE stmt_auth_name;
			DEALLOCATE PREPARE stmt_auth_name;
		ELSE
		
			SET @scoresID=0;
		
			# 先获取自己在全俱乐部中的排名，包括没有打游戏的
		
			SET @sqlGetSelfIDRank=CONCAT(" SELECT rank,scores into @rankID, @scoresID FROM (
				SELECT @y:=@y+1 as rank, nPlayerID, scores from ( select nPlayerID, scores from (
					SELECT tl.nPlayerID, tu.szNickName, (count(tl.szToken) * 15) as scores
					FROM table_league_club_game_score_total tl INNER JOIN table_user tu on tl.nPlayerID=tu.nPlayerID 
					INNER JOIN table_league_club_member tc on tc.nPlayerID=tu.nPlayerID 
					WHERE tl.nClubID =",$nClubID, " and tc.nClubID =",$nClubID, " and (tl.tStartTime between '",@startTime, "' and '", @endTime, "')"," group by tl.nPlayerID
					union all 
					SELECT tl.nPlayerID, tu.szNickName, 0 as scores from table_league_club_member tl inner join table_user tu on tl.nPlayerID=tu.nPlayerID
					where nClubID=", $nClubID, " and not exists(select nPlayerID from table_league_club_game_score_total where nClubID=", $nClubID, " and nPlayerID=tl.nPlayerID", " and (tStartTime between '",@startTime, "' and '", @endTime, "'))",
				" ) temp1 order by scores desc, nPlayerID desc 
			 )temp2, (SELECT @y:=0) temp3
			) temp4 where nPlayerID=", $nPlayerID, "
			");
		
			#SELECT @sqlGetSelfIDRank;		
			PREPARE stmt_get_self_rankid_name FROM @sqlGetSelfIDRank; 
			EXECUTE stmt_get_self_rankid_name;
			DEALLOCATE PREPARE stmt_get_self_rankid_name;
			
			# @scores = 0, 表示查不到，说明没有打游戏
			IF @scoresID = 0 THEN 
				# 确定没有打过游戏，不再需要关联战绩表，直接查询 table_user 表获取用户名
				SELECT @rankID AS  rank, nPlayerID, szNickName, 0 AS scores FROM table_user WHERE nPlayerId=$nPlayerID;
			ELSE
				
				# 有玩游戏
				SET @sqlStrPlayerIDSQL=CONCAT(" SELECT ", @rankID, " as rank, tl.nPlayerID, tu.szNickName, (count(tl.szToken) * 15) as scores 
					FROM table_league_club_game_score_total tl INNER JOIN table_user tu on tl.nPlayerID=tu.nPlayerID 
					WHERE tl.nClubID =",$nClubID, " and (tl.tStartTime between '",@startTime, "' and '", @endTime, "') ", " and tl.nPlayerID=", $nPlayerID, " group by tl.nPlayerID"
				);
				
				# SELECT @sqlStrPlayerIDSQL;		
				PREPARE stmt_nplayerid_name FROM @sqlStrPlayerIDSQL; 
				EXECUTE stmt_nplayerid_name;
				DEALLOCATE PREPARE stmt_nplayerid_name;
		
			END IF;
		END IF;
	#查nOwnID, 返回自己的信息 
	ELSE 
		SET @sqlStrSQLSelf=CONCAT("SELECT 
			tl.nPlayerID, tu.szNickName, (count(tl.szToken) * 15) as scores
			FROM table_league_club_game_score_total tl INNER JOIN table_user tu on tl.nPlayerID=tu.nPlayerID 
			WHERE tl.nClubID =",$nClubID, " and (tl.tStartTime between '",@startTime, "' and '", @endTime, "')", " and tl.nPlayerID=", $nOwnID ," group by tl.nPlayerID", ";");
		#SELECT @sqlStrSQLSelf;
		
		PREPARE stmt_self_name FROM @sqlStrSQLSelf; 
		EXECUTE stmt_self_name;
		DEALLOCATE PREPARE stmt_self_name;
		
	END IF;
	
	IF $nAdmin=1 OR ($nAdmin=0 AND @szClubAuth=1) THEN
		
		#总计数据量，用于客户端计算分页数
		IF $nPlayerID = 0 THEN
			SELECT COUNT(*) INTO @countAll FROM table_league_club_member WHERE nClubID=$nClubID;
			
		ELSE
			SET @countAll = 1;
			SET $nTotal=@countAll;
			
		END IF;
		
	ELSE
		#总计数据量，用于客户端计算分页数
		SET @sqlStrSQLOwnCount=CONCAT("select count(counts) into @countAll  from ( 
			SELECT count(*) as counts	
			FROM table_league_club_game_score_total tl INNER JOIN table_user tu on tl.nPlayerID=tu.nPlayerID 
			WHERE tl.nClubID =",$nClubID, " and (tl.tStartTime between '",@startTime, "' and '", @endTime, "')", " and tl.nPlayerID=", $nOwnID ," group by tl.nPlayerID)temp", ";");
		#SELECT @sqlStrSQLOwnCount;
		
		PREPARE stmt_name_count_own FROM @sqlStrSQLOwnCount; 
		EXECUTE stmt_name_count_own;
		DEALLOCATE PREPARE stmt_name_count_own;
	END IF;
	SET $nTotal=@countAll;
	
	IF @szClubAuth=1 THEN
		SET $nShowAll=1;
	ELSE
		SET $nShowAll=0;
	END IF;
	SET $result=1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_rank_openoff
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_rank_openoff`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_rank_openoff`(
			IN  $nClubID    INT,
			OUT $result     VARCHAR(32)
)
RT:BEGIN
/*
部长获取俱乐部的配置信息 注意这里的权限字段不是管理员的权限字段，是俱乐部本身的配置字段
*/
IF NOT EXISTS(SELECT 1 FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
#取原来的权限值
SELECT `szClubAuth` INTO $result FROM table_league_club_info WHERE `nClubID` = $nClubID AND `nStatus` = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_room_cfg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_room_cfg`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_league_get_room_cfg`(
	IN $nClubID INT #俱乐部ID
)
BEGIN
	SELECT cfgId, cfg FROM `table_league_room_cfg` WHERE nClubID = $nClubID;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_stafflog
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_stafflog`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_stafflog`(
		IN  $intPlayerID  INT,
		IN  $intClubID    INT,
		IN  $nPage        INT,
		OUT $total        INT,
		OUT $result       INT
)
RT:BEGIN
/*
读取俱乐部的人员变动日志信息
*/
DECLARE _level  INT;
DECLARE _page1  INT;
DECLARE _count  INT;
 
SET _count = 5;
 
IF $nPage <= 0 THEN
        SET $nPage = 1;
END iF;
 
set _page1 = ($nPage-1)*_count;
SET $total = 0;
   
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $intPlayerID AND nActive=1) THEN
        SET $result = 2;    #用户账号错误
        LEAVE RT;
END IF;
 
#是否加入此俱乐部
IF NOT EXISTS(SELECT 1 FROM `table_league_club_member` WHERE nPlayerId = $intPlayerID AND nClubID = $intClubID AND `nStatus` = 1) THEN
        SET $result = 3;  #没有加入此俱乐部
        LEAVE RT;
END IF;
 
#查询用户的等级
-- SELECT `nLevel` INTO _level FROM `table_league_club_member` WHERE nPlayerId = $intPlayerID AND nClubID = $intClubID AND `nStatus` = 1;
-- IF _level > 2 THEN
--         SET $result = 4;  #权限不足
--         LEAVE RT;
-- END IF;
 
#对俱乐部权限设定进行检查
-- IF _level = 2 THEN
--         IF NOT EXISTS(SELECT 1 FROM `table_league_club_authority` WHERE nLevel = 7 AND nClubID = $intClubID AND `nStatus` = 1) THEN
--                 SET $result = 4;  #权限不足
--                 LEAVE RT;
--         END IF;
-- END IF;
 
#更新数据
SELECT unix_timestamp(CreateTime) AS CreateTime, szRemark FROM  `table_league_member_log` WHERE  nClubID = $intClubID order by ID DESC limit _page1, _count;
SELECT count(ID) INTO $total FROM `table_league_member_log` WHERE  `nClubID` = $intClubID;
 
#返回成功
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_today_give_lecard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_today_give_lecard`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_today_give_lecard`(
			IN  $nClubID    INT,            #俱乐部
			OUT $nCount     INT             #今日赠送的乐卡数量
)
RT:BEGIN
/*
查询今日赠送的乐卡数量
*/
DECLARE _currdateStart VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(NOW(),'%Y-%m-%d'),' 00:00:00');
DECLARE _currdateEnd VARCHAR(20) DEFAULT CONCAT(DATE_FORMAT(NOW(),'%Y-%m-%d'),' 23:59:59');
 
 
SELECT SUM(`nLeCard`) INTO $nCount from `table_league_lescore_log` WHERE `nClubID`= $nClubID AND `nType`=1 AND `CreateTime` BETWEEN _currdateStart AND _currdateEnd;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_get_web_token
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_get_web_token`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_get_web_token`(
        IN  $nPlayerID       INT,
        OUT $szToken         VARCHAR(256),
        OUT $nVal            INT
)
RT:BEGIN
/*
获取用于web登录的token
*/
DECLARE _time     TIMESTAMP;
DECLARE _val      INT;
 
IF NOT EXISTS(SELECT 1 FROM table_user WHEre nPlayerID=$nPlayerID) THEN
        SET $nVal = 0;
        LEAVE RT;
END IF;
 
IF NOT EXISTS(SELECT 1 FROM `table_league_web_token` WHERE nPlayerID=$nPlayerID) THEN
        #不存在记录，需要新加入
        
        SET $szToken = CONCAT($nPlayerID,'-',UNIX_TIMESTAMP(NOW()),'-',CEILING(RAND() * 89999 + 10000));
        
        INSERT INTO `table_league_web_token` (  `nPlayerID`,  `szToken`,  `CreateTime`) 
        VALUES  (  $nPlayerID  ,    $szToken,    NOW()  ) ;
ELSE
        #已经存在，需要检测时间是否过期
        SELECT `szToken`,`CreateTime` INTO $szToken,_time FROM table_league_web_token WHERE nPlayerID=$nPlayerID;
        
        SET _val = TIMESTAMPDIFF(DAY,_time,NOW());
        
        IF _val >= 45 THEN
                SET $szToken = CONCAT($nPlayerID,'-',UNIX_TIMESTAMP(NOW()),'-',CEILING(RAND() * 89999 + 10000));
                UPDATE table_league_web_token SET szToken = $szToken,CreateTime = NOW() WHERE nPlayerID=$nPlayerID;
        END IF;
        
END IF;
   
SET $nVal = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_give_lecard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_give_lecard`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_give_lecard`(
			IN  $nPlayerID  INT,            #赠送人
			IN  $nClubID    INT,            #俱乐部
			IN  $szIDList   VARCHAR(512),   #受赠人的ID集合 "123,456,789"
			IN  $nLecard    INT,            #每个人送多少乐卡
			IN  $nTotalCard BIGINT,         #全部的总数
			OUT $nStock     INT,            #返回赠送人还剩多少乐卡
			OUT $result     INT             #结果 1-成功 0-失败
)
RT:BEGIN
/*
群主或管理员给其他人赠送乐卡
*/
DECLARE _card  BIGINT;
DECLARE _date VARCHAR(32);
SET _date = DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i, ");
 
#需要先检测赠送人的乐卡够不够
SELECT `nLeCard` INTO _card FROM `table_league_club_member` WHERE `nPlayerID` =  $nPlayerID AND `nClubID` = $nClubID AND `nStatus` = 1;
IF _card < $nTotalCard THEN
        
        SET $result = 4;
        LEAVE RT;
ELSE
        UPDATE table_league_club_member SET nLeCard = nLeCard - $nTotalCard WHERE `nPlayerID` =  $nPlayerID AND `nClubID` = $nClubID AND `nStatus` = 1;
END IF;
 
#读取剩余的乐卡
SELECT `nLeCard` INTO $nStock FROM `table_league_club_member` WHERE `nPlayerID` =  $nPlayerID AND `nClubID` = $nClubID AND `nStatus` = 1;
 
#给所有人加乐卡
SET @sqlStr=CONCAT("UPDATE `table_league_club_member` SET `nLeCard` = `nLeCard` + ",$nLecard," where nPlayerID in (",$szIDList,") AND nClubID = ",$nClubID,"");
 
PREPARE stmt_name FROM @sqlStr;
EXECUTE stmt_name;
DEALLOCATE PREPARE stmt_name; 
 
#赠送人的名字
SELECT `szNickName` INTO @sznickname FROM `table_user` WHERE `nPlayerId` = $nPlayerID;
#赠送后剩余的乐卡
SELECT `nLeCard` INTO _card FROM `table_league_club_member` WHERE `nPlayerID` =  $nPlayerID AND `nClubID` = $nClubID AND `nStatus` = 1 ;
 
#降低事务隔离级别为READ COMMITTED, 执行下面的所有语句中对table_league_club_member和table_user表的数据不会加锁
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
 
# table_league_lescore_log 乐卡变动记录表
#受赠人需要写日志
SET @sqlScoreLogStr=CONCAT("insert into table_league_lescore_log(nPlayerID, nRelatedID, nClubID, nLeCard, nPlayerLeCard, nType, CreateTime, szRemark) 
select tl.nPlayerID,", $nPlayerID, ",", $nClubID, ",", $nLecard, ",tl.nLeCard,", "1,NOW(),", "concat('",_date,"','", @sznickname, "',", '"(ID:",', $nPlayerID, ',")"', '," 赠送友卡给 "', ",tu.szNickName,", '"(ID:",', "tl.nPlayerID,", '") ",', $nLecard, ',"张" )',  
" from table_league_club_member tl  inner join table_user tu on tl.nPlayerID=tu.nPlayerID
where tl.nPlayerID in (",$szIDList,") AND tl.nClubID = ",$nClubID,";");
#select @sqlScoreLogStr;
PREPARE stmt_score_name FROM @sqlScoreLogStr;
EXECUTE stmt_score_name;
DEALLOCATE PREPARE stmt_score_name;
#赠送人需要写日志
SET @sqlGiveScoreLogStr=CONCAT("
	INSERT INTO `table_league_lescore_log` (  nPlayerID, nRelatedID, nClubID,  nLeCard,  nPlayerLeCard,  nType,  CreateTime,  szRemark) 
	select ", $nPlayerID,  ",nPlayerID,", $nClubID,  ",", -$nLecard, ",",  _card,  ",3,NOW(),", "CONCAT('赠送给别的玩家:', nPlayerID)  
	from table_league_club_member where nPlayerID in (",$szIDList,") group by nPlayerID");
#select @sqlGiveScoreLogStr;
PREPARE stmt_give_score_name FROM @sqlGiveScoreLogStr;
EXECUTE stmt_give_score_name;
DEALLOCATE PREPARE stmt_give_score_name;
/*
INSERT INTO `table_league_lescore_log` (  `nPlayerID`, nRelatedID, `nClubID`,  `nLeCard`,  `nPlayerLeCard`,  `nType`,  `CreateTime`,  `szRemark`) 
select $nPlayerID,  nPlayerID,  $nClubID,   $nTotalCard,   _card,  3,   NOW(), CONCAT('赠送给别的玩家:', nPlayerID)  from table_league_club_member where nPlayerID in($szIDList) group by nPlayerID;
*/
#人员变动日志表 table_league_member_log
# 张三（ID：123456） 赠送 乐卡给 王二（ID：789666）300
SET @sqlMemberLogStr=CONCAT("insert into table_league_member_log(nClubID, nPlayerID, CreateTime, szRemark) 
select ", $nClubID,",", $nPlayerID, ",NOW(),", "concat('", @sznickname, "',", '"(ID:",', $nPlayerID, ',")"', '," 赠送友卡给 "', ",tu.szNickName,", '"(ID:",', "tl.nPlayerID,", '") ",', $nLecard, ',"张" )',  
" from table_league_club_member tl  inner join table_user tu on tl.nPlayerID=tu.nPlayerID
where tl.nPlayerID in (",$szIDList,") AND tl.nClubID = ",$nClubID,";");
#select @sqlMemberLogStr;
PREPARE stmt_member_name FROM @sqlMemberLogStr;
EXECUTE stmt_member_name;
DEALLOCATE PREPARE stmt_member_name;
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_joinclub
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_joinclub`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_joinclub`(
		IN  $intPlayerID  INT,
		IN  $intClubID    INT,
		OUT $returnVal    INT
)
RT:BEGIN
/*
用户申请加入俱乐部
*/
-- DECLARE _club_count INT; 
-- DECLARE _app_count  INT;  
-- DECLARE _sum        INT;
 
IF NOT EXISTS(SELECT 1 FROM table_user WHERE  nPlayerId = $intPlayerID AND nActive=1) THEN
    SET $returnVal=4;    #用户账号错误
    LEAVE RT;
END IF;
 
IF NOT EXISTS(SELECT 1 FROM table_league_club_info WHERE  nClubID = $intClubID AND nStatus=1) THEN
    SET $returnVal=2;  #俱乐部不存在
    LEAVE RT;
END IF;
 
-- IF EXISTS(SELECT 1 FROM table_league_club_member WHERE  nClubID = $intClubID AND nplayerid = $intPlayerID  AND nStatus=1) THEN
--     SET $returnVal=5; #已经是此俱乐部成员
--     LEAVE RT;
-- END IF;
                             
IF EXISTS(SELECT 1 FROM table_league_club_application WHERE  nClubID = $intClubID AND nplayerid = $intPlayerID  AND nStatus=1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY)) THEN
    SET $returnVal=6;  #已提交了申请
    LEAVE RT;
END IF;
 
-- #计算俱乐部数量
-- SELECT COUNT(id) INTO _club_count FROM `table_league_club_member` WHERE nplayerid = $intPlayerID AND nLevel > 1 AND nStatus = 1;
-- SELECT COUNT(id) INTO _app_count FROM `table_league_club_application` WHERE nplayerid = $intPlayerID AND nStatus = 1 AND CreateTime > DATE_SUB(NOW(), INTERVAL 1 DAY);
--  
-- #要算上已经申请的俱乐部
-- SET _sum = _club_count + _app_count;
-- IF _sum >= 5 THEN
--     SET $returnVal=3;   #数量达上限
--     LEAVE RT;
-- END IF;
 
#插入记录
INSERT INTO `table_league_club_application`(`nClubID`,`nPlayerID`,`nStatus`) VALUES ($intClubID,$intPlayerID,1);
 
#返回成功
SET $returnVal = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_kick_member
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_kick_member`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_kick_member`(
		IN  $intPlayerID  INT,
		IN  $intClubID    INT,
		IN  $nDestID      INT,
		OUT $result       INT
)
RT:BEGIN
/*
踢人
注意，部长可踢所有人。  管理员只能对普通成员
*/
 
DECLARE _level      INT;
DECLARE _actname    VARCHAR(20);
DECLARE _szmark     VARCHAR(256);
DECLARE _name       VARCHAR(64);
DECLARE _destname   VARCHAR(64);
   
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $intPlayerID AND nActive=1) THEN
        SET $result = 2;    #用户账号错误
        LEAVE RT;
END IF;
  
#目标用户是否加入此俱乐部
IF NOT EXISTS(SELECT 1 FROM `table_league_club_member` WHERE nPlayerId = $nDestID AND nClubID = $intClubID AND `nStatus` = 1) THEN
        SET $result = 3;  #没有加入此俱乐部
        LEAVE RT;
END IF;
 
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $intClubID AND `nPlayerID` = $intPlayerID AND `nStatus` = 1 ;
 
SET _actname = '';
  
IF _level=1 THEN
        SET _actname = '族长';
ELSEIF _level=2 THEN
        SET _actname = '长老';
END IF;
  
#获取名字
SELECT `szNickName` INTO _name FROM `table_user` WHERE `nPlayerId` = $intPlayerID;
SELECT `szNickName` INTO _destname FROM `table_user` WHERE `nPlayerId` = $nDestID;
 
#更新数据
UPDATE `table_league_club_member` SET `tExitTime` = NOW(), `nStatus` = 4 , `nExtenID` = 0, `nLeCard` = 0, `tFreezeTime` = NOW(), `nFreezeReason` = 0, `szBan` = ''  WHERE  nClubID = $intClubID AND nPlayerId = $nDestID AND `nStatus` = 1;
 
#需要写日志到记录表中
SET _szmark  = CONCAT(_actname,_name,"(",$intPlayerID,") 将 ",_destname,"(",$nDestID,")踢出亲友圈");
CALL pr_league_write_member_log($intPlayerID,$intClubID,_szmark);
 
#返回成功
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_misc_binding
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_misc_binding`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_misc_binding`(
		IN $nPlayerID     INT,
		IN $strPhone      VARCHAR(64),
		IN $strPass       VARCHAR(64),
		OUT $returnVal    INT,
		OUT $strOutErrMsg VARCHAR(256)
)
rt:BEGIN
/*
联盟版 绑定手机，直接和用户绑定
*/
	IF EXISTS(SELECT 1 FROM Table_User WHERE phone=$strPhone AND nActive = 1) THEN
		SET $strOutErrMsg = '此手机号码已绑定账户，请更换另一号码进行尝试';
		SET $returnVal = 0;
	ELSEif NOT EXISTS(SELECT 1 FROM Table_User WHERE nPlayerId = $nPlayerID AND nActive = 1) THEN
		SET $strOutErrMsg ='账号错误，无法绑定';
		SET $returnVal=0;
	ELSE
		UPDATE table_user SET phone = $strPhone, `szThirdPass` = $strPass WHERE nPlayerId = $nPlayerID;
		SET $strOutErrMsg ='账号绑定成功！' ;
		SET $returnVal=1;
	END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_misc_mobile_login
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_misc_mobile_login`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_misc_mobile_login`(
    IN  $strPhone    VARCHAR(64),
    IN  $strPass     VARCHAR(64),
    OUT $nPlayerID   INT,
    OUT $returnVal   INT,
    OUT $returnMsg   VARCHAR(256)
)
rt:BEGIN
/*
新房卡 使用手机验证码登录 先获得用户ID
*/
IF EXISTS(SELECT * FROM Table_User WHERE phone=$strPhone AND nActive = 1 ) THEN
        SELECT nPlayerID INTO $nPlayerID FROM Table_User WHERE phone=$strPhone AND nActive = 1 LIMIT 1;
        UPDATE table_user SET `szPass` = $strPass WHERE nPlayerId = $nPlayerID;
        
        SET $returnVal = 1;
        SET $returnMsg = "完成";
ELSE
        SET $nPlayerID = 0;
        SET $returnVal = 0;
        SET $returnMsg = "没有找到用户";
END IF;
    
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_ModifyUserDiamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_ModifyUserDiamond`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_ModifyUserDiamond`(
		IN  $nPlayerID      INT,             #用户ID
		IN  $nClubID        INT,             #俱乐部ID
                IN  $nAmount        INT,             #变动值
                IN  $nType          INT,             #类型
                IN  $szMark         VARCHAR(256),    #备注
		OUT $result         INT              #返回值 0-失败  1-成功
)
RT:BEGIN
/*
修改用户的钻石数量，发生存入或取出俱乐部钻石
*/
 
DECLARE _errno   INT DEFAULT 0; 
declare _card    BIGINT;
 
DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _errno = 1;
  
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
 
START TRANSACTION;
 
SELECT `nCardCount` INTO _card FROM `table_user` WHERE `nPlayerId` = $nPlayerID FOR UPDATE;
IF $nAmount < 0 THEN
  IF ABS($nAmount) > _card THEN
        COMMIT;
        #钻石不足
        SET $result = 0;
        LEAVE RT;
   END IF;
END IF;
 
#修改用户自己的钻石
UPDATE `table_user` SET `nCardCount` = @card := nCardCount + $nAmount WHERE `nPlayerId` = $nPlayerID;
  
CALL pr_league_write_diamond_log($nPlayerID,0,$nClubID,$nAmount,@card,$nType, NOW(), $szMark);
 
IF _errno=0 THEN
        COMMIT; 
        SET $result = 1;
ELSE
        ROLLBACK;
        SET $result = 0;
END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_ModifyUserDiamond2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_ModifyUserDiamond2`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_league_ModifyUserDiamond2`(
	IN $nPlayerID INT, 			#玩家ID
    IN $nClubID INT, 			#俱乐部ID
	IN $nAmount INT, 			#数量
	IN $nType INT,      			#操作类型
        IN $nKindID INT, 			#游戏ID
        IN $szMark VARCHAR(256),  		#日志
        OUT $CurCardCount INT,      	        #帐变后的钻石数
	OUT $result INT)
RT:BEGIN
#修改用户的钻石数量
	DECLARE _errno  INT DEFAULT 0; 
	DECLARE _count INT;
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _errno = 1;
        
	SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
	START TRANSACTION;
	IF $nAmount < 0 THEN
		SELECT `nCardCount` INTO _count FROM `table_user` WHERE `nPlayerId` = $nPlayerID FOR UPDATE;
        #钻石不足
	 	IF ABS($nAmount) > _count THEN
	        COMMIT;
	        SET $CurCardCount = 0;
	        SET $result = 0;
	        LEAVE RT;
	     END IF;
	END IF;
    
	UPDATE `table_user` SET `nCardCount` = @cuCardCount := nCardCount + $nAmount WHERE `nPlayerId` = $nPlayerID;
	CALL pr_league_write_diamond_log($nPlayerID, $nKindID, $nClubID, $nAmount, @cuCardCount, $nType, "", $szMark);
	
	IF _errno = 0 THEN
	    COMMIT;
	    SET $CurCardCount = @cuCardCount;
	    SET $result = 1;
	ELSE 
	    ROLLBACK;
	    SET $CurCardCount = 0;
	    SET $result = 0;
	END IF; 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_modify_club_diamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_modify_club_diamond`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_modify_club_diamond`(
                            IN $nPlayerID INT,              #用户ID
                            IN $nKindID INT,                #游戏ID  
                            IN $nClubID INT,                #俱乐部ID
                            IN $nDiamond BIGINT,            #变动值
                            IN $nType INT,                  #类型
                            IN $szRemark VARCHAR(256),      #备注
                            IN $szToken VARCHAR(32),        #订单号
                            IN $nTokenState  INT            #订单状态
	)
RT:BEGIN
/*
对俱乐部的钻石数量进行增减
2.2号，去掉返回权限相关字段
2021-4-20 加入对俱乐部钻石日志的写入操作
*/
 
DECLARE _count  BIGINT;
DECLARE _errno  INT DEFAULT 0;
 
DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _errno = 1;
 
IF NOT EXISTS(SELECT 1 FROM table_league_club_info WHERE  nClubID = $nClubID AND nStatus=1) THEN
        #俱乐部不存在
        LEAVE RT;
END IF;
 
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
START TRANSACTION;
 
IF $nDiamond < 0 THEN
         select nDiamond INTO _count FROM table_league_club_info WHERE  nClubID = $nClubID AND nStatus=1 for update;
         IF ABS($nDiamond) > _count THEN
                COMMIT;
                #钻石不足
                LEAVE RT;
         END IF;
END IF;
 
UPDATE table_league_club_info SET nDiamond = @clubDiamond := nDiamond + $nDiamond WHERE nClubID = $nClubID AND nStatus=1;
 
#写入钻石变动记录
INSERT INTO `table_league_club_diamond_log`(`nPlayerID`, `nKindID`, `nClubID`, `nDiamond`, `nClubDiamond`, `nType`, `CreateTime`, `szRemark`, `szToken`, `nTokenState`) 
VALUES ($nPlayerID, $nKindID, $nClubID, $nDiamond, @clubDiamond, $nType, NOW(), $szRemark, $szToken, $nTokenState);
 
if _errno=0 THEN
        commit;
else 
        rollback;
end if; 
                                                        
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_player_agree_invitation
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_player_agree_invitation`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_player_agree_invitation`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			IN  $nAdminID   INT,
			OUT $nCounts    INT,      #返回俱乐部总人数
			OUT $result     INT
)
RT:BEGIN
/*
玩家同意加入俱乐部
2022-1-4 增加给上线送积分
*/
DECLARE _name VARCHAR(64);
 
IF EXISTS(SELECT 1 FROM `table_league_club_member` WHERE  nClubID = $nClubID AND nplayerid = $nPlayerID  AND nStatus=1 ) THEN
    SET $result = 0;  #已加入
    LEAVE RT;
END IF;
 
SELECT `szNickName` INTO _name FROM `table_user` WHERE nPlayerId = $nPlayerID AND nActive=1;
#如果已经存在有成员记录，则更新
IF EXISTS (SELECT 1 FROM table_league_club_member WHERE nClubID=$nClubID AND nPlayerID=$nPlayerID) THEN
        UPDATE table_league_club_member SET tJoinTime=NOW(),nStatus=1,szNickName=_name,nLevel=3,partner=0,nScore=0,nLeCard=0,nFreezeReason=0,BigWinner=0,tExitTime=NULL,szBan=NULL WHERE nClubID=$nClubID AND nPlayerID=$nPlayerID;
ELSE
        #插入成员表
        INSERT INTO `table_league_club_member` (  `nClubID`,  `nPlayerID`,  `szNickName`,  `nLevel`,  `partner`,  `nStatus`,  `tJoinTime`,  `nScore`,  `nLeCard`, `nFreezeReason`,  `BigWinner`) 
        VALUES  (    $nClubID,   $nPlayerID ,   _name,   3,   0,   1,   NOW(),   0,    0,   0,    0 ) ;
END IF;
   
#获取总人数
SELECT COUNT(ID) INTO $nCounts FROM table_league_club_member  WHERE nClubID=$nClubID AND `nStatus` = 1;
 
#如存在申请将申请设置为通过
UPDATE `table_league_club_application` SET nStatus = 2, `tOperationTime` = NOW() WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID AND nStatus = 1;
 
#给上线送积分
CALL pr_jscore_create_join_club($nPlayerID);
                       
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_quit_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_quit_club`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_quit_club`(
		IN  $intPlayerID  INT,
		IN  $intClubID    INT,
		OUT $result       INT
)
RT:BEGIN
/*
用户退出俱乐部
*/
DECLARE _level     INT;
DECLARE _actname   VARCHAR(20);
DECLARE _opname    VARCHAR(64);
DECLARE _szmark    VARCHAR(256);
  
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $intPlayerID AND nActive=1) THEN
        SET $result = 2;    #用户账号错误
        LEAVE RT;
END IF;
 
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $intClubID AND `nPlayerID` = $intPlayerID AND `nStatus` = 1 ;
 
SET _actname = '亲友';
  
IF _level=1 THEN
        SET _actname = '族长';
ELSEIF _level=2 THEN
        SET _actname = '长老';
END IF;
 
#操作者的名字
SELECT `szNickName` INTO _opname FROM `table_user` WHERE `nPlayerId` = $intPlayerID AND nActive=1;
 
#更新数据，写入了离开时间
UPDATE `table_league_club_member` SET `nStatus` = 3 ,tExitTime = NOW() WHERE nPlayerId = $intPlayerID AND nClubID = $intClubID AND `nStatus` = 1;
#需要写日志到记录表中
SET _szmark  = CONCAT(_actname,_opname,"(",$intPlayerID,") 退出了亲友圈");
CALL pr_league_write_member_log($intPlayerID,$intClubID,_szmark);
 
#返回成功
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_rank_old_data_synchronous
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_rank_old_data_synchronous`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_league_rank_old_data_synchronous`(
	in $startDate varchar(20),#开始时间--2019-04-01
	in $endDate varchar(20)		#结束时间--2019-05-01
)
begin 
			declare _tempData varchar(20) default $startDate;
			while _tempData<$endDate do 
						call pr_league_statistics_rank(CONCAT(_tempData,' 00:00:00'),CONCAT(_tempData,' 23:59:59'));
						set _tempData=date_sub(_tempData,interval -1 day);
			end while;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_rank_old_data_synchronous_20210107
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_rank_old_data_synchronous_20210107`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_league_rank_old_data_synchronous_20210107`(
	in $startDate varchar(20),#开始时间--2019-04-01
	in $endDate varchar(20)		#结束时间--2019-05-01
)
begin 
			declare _tempData varchar(20) default $startDate;
			while _tempData<$endDate do 
						call pr_league_statistics_rank_20210107(CONCAT(_tempData,' 00:00:00'),CONCAT(_tempData,' 23:59:59'));
						set _tempData=date_sub(_tempData,interval -1 day);
			end while;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_remove_room_cfg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_remove_room_cfg`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_league_remove_room_cfg`(
	IN $nClubID INT, #俱乐部ID
    IN $cfgId VARCHAR(128) #配置ID
)
BEGIN
	DELETE FROM table_league_room_cfg WHERE nClubID = $nClubID AND cfgId = $cfgId;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_rename_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_rename_club`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_rename_club`(
		IN  $intPlayerID  INT,
		IN  $intClubID    INT,
		IN  $szClubName   VARCHAR(32),
		OUT $firstflag    INT,
		OUT $result       INT
)
RT:BEGIN
/*
用户给俱乐部改名
*/
 
DECLARE _level    INT;
DECLARE _diamond  INT;
DECLARE _first    INT;
DECLARE _szmark   VARCHAR(256);
DECLARE _szname   VARCHAR(64);
DECLARE _clubname VARCHAR(32);
declare _rename_cost INT;
DECLARE _actname    VARCHAR(20);
DECLARE _errno  INT DEFAULT 0;
 
DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _errno = 1;
SET _rename_cost = 600;
SET $firstflag = 0;
 
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $intPlayerID AND nActive=1) THEN
        SET $result = 2;    #用户账号错误
        LEAVE RT;
END IF;
 
#是否加入此俱乐部
IF NOT EXISTS(SELECT 1 FROM `table_league_club_member` WHERE nPlayerId = $intPlayerID AND nClubID = $intClubID AND `nStatus` = 1) THEN
        SET $result = 3;  #没有加入此俱乐部
        LEAVE RT;
END IF;
 
#不能重名
IF EXISTS( SELECT 1 FROM `table_league_club_info` WHERE `szClubName` = $szClubName ) THEN
        SET $result = 7;  #重名了
        LEAVE RT;
END IF;
 
SELECT `FirstChangeName`,`szClubName` INTO _first,_clubname FROM `table_league_club_info` WHERE  nClubID = $intClubID AND `nStatus` = 1;
 
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $intClubID AND `nPlayerID` = $intPlayerID AND `nStatus` = 1 ;
 
SET _actname = '';
  
IF _level=1 THEN
        SET _actname = '族长';
ELSEIF _level=2 THEN
        SET _actname = '长老';
END IF;
  
IF _first > 0 THEN
        SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
        START TRANSACTION;
        SELECT `nCardCount`,`szNickName` INTO _diamond,_szname FROM `table_user` WHERE `nPlayerId` = $intPlayerID for update;
        
        IF _diamond < _rename_cost THEN
	    COMMIT;
            SET $result = 5;  #钻石不足
            LEAVE RT;
        ELSE
                UPDATE `table_user` SET `nCardCount` = @cuCardCount := nCardCount - _rename_cost WHERE `nPlayerId` = $intPlayerID;
                UPDATE `table_league_club_info` SET szClubName = $szClubName WHERE  nClubID = $intClubID AND `nStatus` = 1;
                SET _szmark = CONCAT(_actname,_szname,"(",$intPlayerID,") 给亲友圈:",_clubname," (",$intClubID,") 改名,扣钻 ",_rename_cost," 颗");
                CALL pr_league_write_diamond_log($intPlayerID,0,$intClubID,-1*_rename_cost,@cuCardCount,10,NULL,_szmark);
                if _errno=0 THEN
                        commit;
                        #返回成功
                        SET $firstflag = 1;
                        SET $result = 1;
                else 
                        rollback;
                        #返回失败
                        SET $result = 0;
                end if; 
        END IF;
ELSE
        #更新数据
        UPDATE `table_league_club_info` SET szClubName = $szClubName, FirstChangeName=1 WHERE  nClubID = $intClubID AND `nStatus` = 1;
        #返回成功
        SET $result = 1;
END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_renote_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_renote_club`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_renote_club`(
		IN  $intPlayerID  INT,
		IN  $intClubID    INT,
		IN  $szClubNote   VARCHAR(256),
		OUT $result       INT
)
RT:BEGIN
/*
部长给俱乐部改公告
*/
DECLARE _level  INT;
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $intPlayerID AND nActive=1) THEN
        SET $result = 2;    #用户账号错误
        LEAVE RT;
END IF;
 
-- #是否加入此俱乐部
-- IF NOT EXISTS(SELECT 1 FROM `table_league_club_member` WHERE nPlayerId = $intPlayerID AND nClubID = $intClubID AND `nStatus` = 1) THEN
--         SET $result = 3;  #没有加入此俱乐部
--         LEAVE RT;
-- END IF;
-- #查询用户的等级,必须是部长
-- SELECT `nLevel` INTO _level FROM `table_league_club_member` WHERE nPlayerId = $intPlayerID AND nClubID = $intClubID AND `nStatus` = 1;
-- IF _level > 1 THEN
--         SET $result = 4;  #权限不足
--         LEAVE RT;
-- END IF;
 
#更新数据
UPDATE `table_league_club_info` SET `szNoteMsg` = $szClubNote WHERE  nClubID = $intClubID AND `nStatus` = 1;
#返回成功
SET $result = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_search_admin_downline
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_search_admin_downline`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_search_admin_downline`(
		IN  $nPlayerID    INT,        #操作者
		IN  $nClubID      INT,
                IN  $nAdminID     INT,        #长老ID
                IN  $nDestID      INT,        #被查询ID
		OUT $result       INT         #结果 0-失败 1-成功
)
RT:BEGIN
/*
均摊模式下，
族长或管家在长老列表中搜索某个玩家,只能是俱乐部中该长老及长老下面的人
*/
DECLARE _level          INT;
DECLARE _costType       INT;
DECLARE _exid           INT;
 
SELECT `diamondCostType`  INTO _costType FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus`=1;
 
IF _costType<>2 THEN
#不是均摊要退出
        SET $result = 0;
        LEAVE RT;
END IF;
 
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1;
IF _level = 0 OR (_level>1 AND _level<4) THEN
#不是族长或管家要退出
        SET $result = 0;
        LEAVE RT;                
END IF;
  
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nAdminID AND `nStatus` = 1;
IF _level <> 2 THEN
#长老级别不对
        SET $result = 0;
        LEAVE RT;                
END IF;
IF NOT EXISTS(SELECT 1 FROM table_league_club_member WHERE `nClubID` = $nClubID AND `nPlayerID` = $nDestID AND `nStatus` = 1) THEN
#被查询的人不在俱乐部中
        SET $result = 0;
        LEAVE RT;
END IF;
 
IF $nAdminID = $nDestID THEN
#查询长老本身
        SELECT a.nPlayerID, a.nLevel, a.partner,a.`nExtenID`, 
        UNIX_TIMESTAMP(a.`tJoinTime`) AS tJoinTime, 
        UNIX_TIMESTAMP(IFNULL(a.`tFreezeTime`,0)) AS freezetime,
        a.`nLeCard`, b.`szNickName`, b.`szHeadPicUrl`, b.nSex, b.`extendCode`,
        (SELECT UNIX_TIMESTAMP( IFNULL(szTime,0) ) FROM `table_web_loginlog` c WHERE c.nPlayerID=a.nPlayerID ORDER BY szTime DESC LIMIT 1) lasttime
        FROM `table_league_club_member` a INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
        WHERE a.`nClubID` = $nClubID AND a.nPlayerID = $nDestID AND a.`nStatus` = 1;
        #返回成功
        SET $result = 1;
        LEAVE RT;
END IF;
 
SELECT `extendCode` INTO _exid FROM `table_user` WHERE `nPlayerId` = $nDestID;
IF _exid <> $nAdminID THEN
#被查询的人不是长老的下属
        SET $result = 0;
        LEAVE RT;
END IF;
 
#查询该目标用户的信息
SELECT a.nPlayerID, a.nLevel, a.partner,a.`nExtenID`, 
UNIX_TIMESTAMP(a.`tJoinTime`) AS tJoinTime, 
UNIX_TIMESTAMP(IFNULL(a.`tFreezeTime`,0)) AS freezetime,
a.`nLeCard`, b.`szNickName`, b.`szHeadPicUrl`, b.nSex, b.`extendCode`,
(SELECT UNIX_TIMESTAMP( IFNULL(szTime,0) ) FROM `table_web_loginlog` c WHERE c.nPlayerID=a.nPlayerID ORDER BY szTime DESC LIMIT 1) lasttime
FROM `table_league_club_member` a INNER JOIN `table_user` b ON a.`nPlayerID` = b.nPlayerID 
WHERE a.`nClubID` = $nClubID AND a.nPlayerID = $nDestID AND a.`nStatus` = 1;
 
#返回成功
SET $result = 1;
    
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_admin
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_admin`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_set_admin`(
			IN  $nPlayerID  INT,
			IN  $nDestID    INT,
			IN  $nClubID    INT,
			IN  $nAct       INT,
			OUT $result     INT
)
RT:BEGIN
/*
群主设置管理员身份
*/
DECLARE _level      INT;
DECLARE _destlevel  INT;
DECLARE _szmark     VARCHAR(256);
DECLARE _name       VARCHAR(64);
DECLARE _destname   VARCHAR(64);
DECLARE _szact      VARCHAR(16);
DECLARE _oplevel    INT;
DECLARE _rank       VARCHAR(20);
 
SET $result = 0;
 
IF NOT EXISTS(SELECT 1 FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` =  $nPlayerID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
 
IF NOT EXISTS(SELECT 1 FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` =  $nDestID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
 
SELECT IFNULL(`nLevel`,0) INTO _oplevel FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1 ;
SELECT IFNULL(`nLevel`,0) INTO _destlevel FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nDestID AND `nStatus` = 1 ;
 
SET _rank = '';
  
IF _oplevel=1 THEN
        SET _rank = '族长';
ELSEIF _oplevel=2 THEN
        SET _rank = '长老';
END IF;
IF _destlevel=1 THEN
        #族长不能被设置
        LEAVE RT;
END IF;
  
#获取名字
SELECT `szNickName` INTO _name FROM `table_user` WHERE `nPlayerId` = $nPlayerID;
SELECT `szNickName` INTO _destname FROM `table_user` WHERE `nPlayerId` = $nDestID;
 
IF $nAct = 1 THEN
   SET _level = 2;
   SET _szact = '提升为长老';
ELSE
   SET _level = 3;
   SET _szact = '长老身份取消';
END IF;
 
UPDATE `table_league_club_member` SET `nLevel` = _level WHERE `nClubID` = $nClubID AND `nPlayerID` =  $nDestID AND `nStatus` = 1;
 
#写日志
SET _szmark  = CONCAT(_rank,_name,"(",$nPlayerID,") 将亲友",_destname,"(",$nDestID,")",_szact);
CALL pr_league_write_member_log($nPlayerID,$nClubID,_szmark);
  
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_auto_diamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_auto_diamond`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_set_auto_diamond`(
			IN  $nClubID    INT,
			IN  $nPlayID    INT,
			IN  $nType      INT,         # 0-停止扣钻 1-100钻 2-200钻 3-300钻 4-500钻
			OUT $result     INT
)
RT:BEGIN
/*
群主对俱乐部设置自动存钻石
*/
 
DECLARE _diamond   INT;
DECLARE _flag      INT;
 
SET _diamond = 0;
SET _flag = 1;
IF $nType = 0 THEN
        SET _flag = 0;
ELSEIF $nType = 1 THEN
        SET _diamond = 100;
ELSEIF $nType = 2 THEN
        SET _diamond = 200;
ELSEIF $nType = 3 THEN
        SET _diamond = 300;
ELSEIF $nType = 4 THEN
        SET _diamond = 500;
ELSE
       SET $result = 0;
       LEAVE RT;
END IF;
 
UPDATE `table_league_club_info` SET `AutoRecharge` = _flag, `AutoRechargeAmount` = _diamond WHere `nClubID` = $nClubID AND `nStatus` = 1;
                              
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_clubauth
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_clubauth`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_set_clubauth`(
			IN  $nClubID    INT,
			IN  $nPos       INT,           # 字串中的位置
			IN  $nAct       INT,
			OUT $szClubAuth VARCHAR(32),   # 返回整个权限字串
			OUT $result     INT
)
RT:BEGIN
/*
修改亲友圈属性 注意这里的权限字段不是管理员的权限字段，是俱乐部本身的配置字段
*/
DECLARE _sz        VARCHAR(32);
DECLARE _act       VARCHAR(1);
DECLARE _szleft    VARCHAR(32);
DECLARE _szright   VARCHAR(32);
 
SET $result = 0;
 
IF NOT EXISTS(SELECT 1 FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
 
#因为字串只有32长度，所以位置是从1~32
IF $nPos<1 OR $nPos>32 THEN
        LEAVE RT;
END IF;
 
IF $nAct = 1 THEN
   SET _act = '1';
ELSE
   SET _act = '0';
END IF;
 
#取原来的权限值
SELECT `szClubAuth` INTo _sz FROM table_league_club_info WHERE `nClubID` = $nClubID AND `nStatus` = 1;
IF _sz = NULL OR LENGTH(_sz)<>32 TheN
        LEAVE RT;
END IF;
 
#进行拆分与组合
SET _szleft = LEFT(_sz,$nPos-1);
SET _szright = RIGHT(_sz,32-$nPos);
SET _sz = CONCAT(_szleft,_act,_szright);
  
#更新数据 
UPDATE table_league_club_info SET szClubAuth = _sz WHERE `nClubID` = $nClubID AND `nStatus` = 1;
 
SET $szClubAuth = _sz;
 
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_club_auth
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_club_auth`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_set_club_auth`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			IN  $szRule     VARCHAR(32),
			OUT $result     INT
)
RT:BEGIN
/*
群主设置俱乐部管理员的权限
*/
UPDATE `table_league_club_info` SET `szAuth` = $szRule WHERE `nClubID` = $nClubID;
SET $result = 1;
#返回所有管理员
SELECT  nPlayerID from `table_league_club_member` WHere `nClubID` = $nClubID AND `nLevel` <> 3 AND `nStatus` = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_diamond_act_tmp_20201115
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_diamond_act_tmp_20201115`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_set_diamond_act_tmp_20201115`(
			IN  $nClubID    INT,
			IN  $nPlayID    INT,
			IN  $nAmount    BIGINT,      #数量
			IN  $nAct       INT,         #1-存入  2-取出
			OUT $result     INT
)
RT:BEGIN
/*
群主对俱乐部存取钻石
20201115:这个存储过程暂时不用了
*/
DECLARE _diamond   BIGINT;
IF $nAct = 1 THEN
#存入钻石
        SELECT `nCardCount` INTO _diamond FROM `table_user` WHERE `nPlayerId` = $nPlayID;
        
        IF _diamond < $nAmount THEN
                SET $result = 0;
                LEAVE RT;        
        ELSE
                UPDATE table_league_club_info SET `nDiamond` = nDiamond + $nAmount WHERE `nClubID` = $nClubID AND `nStatus` = 1;
                UPDATE `table_user` SET nCardCount = nCardCount - $nAmount WHERE `nPlayerId` = $nPlayID;
        END IF;
 
ELSE
#取出钻石到用户的账户中
        SELECT `nDiamond` INTO _diamond FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus` = 1;
        
        IF _diamond < $nAmount THEN
        
                SET $result = 0;
                LEAVE RT;
        
        ELSE
                UPDATE table_league_club_info SET `nDiamond` = nDiamond - $nAmount WHERE `nClubID` = $nClubID AND `nStatus` = 1;
                UPDATE `table_user` SET nCardCount = nCardCount + $nAmount WHERE `nPlayerId` = $nPlayID;
        
        END IF;
END IF;
                              
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_diamond_tokenstate
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_diamond_tokenstate`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_league_set_diamond_tokenstate`(
	IN $szToken VARCHAR(64),
    IN $nType INT,
    IN $nTokenState INT
)
BEGIN
	#修改钻石订单状态
    UPDATE table_league_club_diamond_log SET nTokenState = $nTokenState WHERE szToken = $szToken AND nType = $nType;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_hidetable
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_hidetable`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_set_hidetable`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			IN  $nAct       INT,
			OUT $szClubAuth     VARCHAR(32),
			OUT $result     INT
)
RT:BEGIN
/*
修改俱乐部隐藏桌子的开关属性
*/
DECLARE _sz        VARCHAR(32);
DECLARE _act       VARCHAR(1);
DECLARE _szleft    VARCHAR(32);
DECLARE _szright   VARCHAR(32);
 
SET $result = 0;
 
IF NOT EXISTS(SELECT 1 FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
 
IF $nAct = 1 THEN
   SET _act = '1';
ELSE
   SET _act = '0';
END IF;
 
#取原来的权限值
SELECT `szClubAuth` INTo _sz FROM table_league_club_info WHERE `nClubID` = $nClubID AND `nStatus` = 1;
 
#进行拆分
SET _szleft = LEFT(_sz,1);
SET _szright = RIGHT(_sz,30);
SET _sz = CONCAT(_szleft,_act,_szright);
 
#更新数据 
UPDATE table_league_club_info SET szClubAuth = _sz WHERE `nClubID` = $nClubID AND `nStatus` = 1;
SET $szClubAuth = _sz;
#返回所有需要接收变动的人员
SELECT  nPlayerID FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nLevel` <> 3 AND `nStatus` = 1;
 
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_housekeeper
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_housekeeper`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_set_housekeeper`(
			IN  $nPlayerID  INT,
			IN  $nDestID    INT,
			IN  $nClubID    INT,
			IN  $nAct       INT,
			OUT $result     INT
)
RT:BEGIN
/*
群主设置管家身份
*/
DECLARE _level      INT;
DECLARE _destlevel  INT;
DECLARE _costType   INT;
DECLARE _szmark     VARCHAR(256);
DECLARE _name       VARCHAR(64);
DECLARE _destname   VARCHAR(64);
DECLARE _szact      VARCHAR(16);
DECLARE _oplevel    INT;
DECLARE _rank       VARCHAR(20);
 
SET $result = 0;
 
IF NOT EXISTS(SELECT 1 FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` =  $nPlayerID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
IF NOT EXISTS(SELECT 1 FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` =  $nDestID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
 
SELECT `diamondCostType` into _costType FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus` = 1;
IF _costType<>2 THEN
#不是均摊模式，不能设置管家
        LEAVE RT;
END IF;
 
SELECT IFNULL(`nLevel`,0) INTO _oplevel FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1 ;
SELECT IFNULL(`nLevel`,0) INTO _destlevel FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nDestID AND `nStatus` = 1 ;
 
SET _rank = '';
  
IF _oplevel=1 THEN
        SET _rank = '族长';
ELSE
#只有族长有权限
        LEAVE RT;
END IF;
IF _destlevel=1 THEN
        #族长不能被设置
        LEAVE RT;
END IF;
  
#获取名字
SELECT `szNickName` INTO _name FROM `table_user` WHERE `nPlayerId` = $nPlayerID;
SELECT `szNickName` INTO _destname FROM `table_user` WHERE `nPlayerId` = $nDestID;
 
IF $nAct = 1 THEN
   SET _level = 4;
   SET _szact = '提升为管家';
ELSE
   SET _level = 3;
   SET _szact = '管家身份取消';
END IF;
 
UPDATE `table_league_club_member` SET `nLevel` = _level WHERE `nClubID` = $nClubID AND `nPlayerID` =  $nDestID AND `nStatus` = 1;
 
#写日志
SET _szmark  = CONCAT(_rank,_name,"(",$nPlayerID,") 将亲友",_destname,"(",$nDestID,")",_szact);
CALL pr_league_write_member_log($nPlayerID,$nClubID,_szmark);
  
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_only_extend_player
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_only_extend_player`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_set_only_extend_player`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			IN  $nAct       INT,
			OUT $szClubAuth     VARCHAR(32),
			OUT $result     INT
)
RT:BEGIN
/*
修改列表的仅看自绑码用户开关
*/
DECLARE _sz        VARCHAR(32);
DECLARE _act       VARCHAR(1);
DECLARE _szleft    VARCHAR(32);
DECLARE _szright   VARCHAR(32);
DECLARE _level     INT;
 
SET $result = 0;
 
IF NOT EXISTS(SELECT 1 FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
 
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID AND `nStatus` = 1;
 
IF _level<>1 AND _level<>4 THEN
#既不是族长也不是管家
        LEAVE RT;
END IF;
 
IF $nAct = 1 THEN
   SET _act = '1';
ELSE
   SET _act = '0';
END IF;
 
#取原来的权限值
SELECT `szClubAuth` INTo _sz FROM table_league_club_info WHERE `nClubID` = $nClubID AND `nStatus` = 1;
 
#进行拆分
SET _szleft = LEFT(_sz,2);
SET _szright = RIGHT(_sz,29);
SET _sz = CONCAT(_szleft,_act,_szright);
 
#更新数据 
UPDATE table_league_club_info SET szClubAuth = _sz WHERE `nClubID` = $nClubID AND `nStatus` = 1;
 
SET $szClubAuth = _sz;
 
#返回族长和管家
SELECT nPlayerID FROM (
SELECT  nPlayerID FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nLevel` = 1 AND `nStatus` = 1
UNION 
SELECT  nPlayerID FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nLevel` = 4 AND `nStatus` = 1)
temp WHERE temp.nPlayerID <> $nPlayerID;
 
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_partner
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_partner`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_set_partner`(
		IN  $intPlayerID  INT,
		IN  $intClubID    INT,
		IN  $nDestID      INT,
		IN  $szSub        VARCHAR(256),
		OUT $result       INT
)
RT:BEGIN
/*
设置合伙人及下线
*/
DECLARE _level  INT;
DECLARE _count  INT;
DECLARE _szmark     VARCHAR(256);
DECLARE _name       VARCHAR(64);
DECLARE _destname   VARCHAR(64);
DECLARE _actname    VARCHAR(20);
DECLARE _actstr     VARCHAR(20);
DECLARE _pstr       VARCHAR(20);
DECLARE _oldpartner INT;
SET _actname = '';
     
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $intPlayerID AND nActive=1) THEN
        SET $result = 2;    #用户账号错误
        LEAVE RT;
END IF;
 
#是否加入此俱乐部
IF NOT EXISTS(SELECT 1 FROM `table_league_club_member` WHERE nPlayerId = $intPlayerID AND nClubID = $intClubID AND `nStatus` = 1) THEN
        SET $result = 3;  #没有加入此俱乐部
        LEAVE RT;
END IF;
 
#检测被设置者是否合法
IF EXISTS (SELECT 1 FROM `table_league_club_member` WHERE nPlayerId = $nDestID AND nClubID = $intClubID AND `nExtenID`>0 AND `nStatus` = 1) THEN
        SET $result = 7;  #被设置者是别人的下线
        LEAVE RT;
END IF;
 
SELECT IFNULL(`partner`,0) INTO _oldpartner FROM `table_league_club_member` WHERE `nClubID` = $intClubID AND `nPlayerID` = $nDestID AND `nStatus` = 1;
 
#传入了下线ID
IF LENGTH($szSub) > 0 THEN
        #检查要设置的下线里是否已经有已经是别人下线的情况，如果有则不能继续
        SET @sqlStr=CONCAT(" select count(*) INTO @count from table_league_club_member where nPlayerID in (",$szSub,") and nExtenID != 0 AND nClubID = ",$intClubID,"");
        PREPARE stmt_name FROM @sqlStr;
        EXECUTE stmt_name;
        DEALLOCATE PREPARE stmt_name;
         
        SET _count=@count;
        IF  _count > 1 THEN
                SET $result = 6;  #下线中有人已经是下线了，不能重复
                LEAVE RT;
        END IF;
        
        #所有下线的记录中更新上线ID
        SET @sqlStr=CONCAT("update table_league_club_member set nExtenID=",$nDestID," where nPlayerID in (",$szSub,") AND nClubID = ",$intClubID,"");
         
        PREPARE stmt_up FROM @sqlStr;
        EXECUTE stmt_up;
        DEALLOCATE PREPARE stmt_up;
END IF;
 
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $intClubID AND `nPlayerID` = $intPlayerID AND `nStatus` = 1 ;
 
IF _level=1 THEN
        SET _actname = '族长';
ELSEIF _level=2 THEN
        SET _actname = '长老';
END IF;
 
IF _oldpartner = 0 THEN
        #更新数据
        UPDATE table_league_club_member SET `partner` = 1 WHERE `nPlayerID` = $nDestID AND `nClubID` = $intClubID;
        SET _actstr = '设为合伙人';
        SET _pstr = '亲友';
ELSE
        SET _actstr = '设置下线';
        SET _pstr = '合伙人';
END IF;
 
#获取名字
SELECT `szNickName` INTO _name FROM `table_user` WHERE `nPlayerId` = $intPlayerID;
SELECT `szNickName` INTO _destname FROM `table_user` WHERE `nPlayerId` = $nDestID;
 
#需要写日志到记录表中
SET _szmark  = CONCAT(_actname,":",_name,"(",$intPlayerID,") 将",_pstr,":",_destname,"(",$nDestID,")",_actstr);
 
CALL pr_league_write_member_log($intPlayerID,$intClubID,_szmark);
 
#返回成功
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_partner_disable
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_partner_disable`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_set_partner_disable`(
		IN  $nPlayerID  INT,
		IN  $nClubID    INT,
		IN  $nDestID    INT,
		OUT $result     INT
)
RT:BEGIN
/*
取消合伙人资格，这个操作只有部长和管理可以做
*/
DECLARE _szmark     VARCHAR(256);
DECLARE _name       VARCHAR(64);
DECLARE _destname   VARCHAR(64);
DECLARE _actname    VARCHAR(20);
 
DECLARE _level      int;
    
IF NOT EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = $nPlayerID AND nActive=1) THEN
        SET $result = 0;    #用户账号错误
        LEAVE RT;
END IF;
 
SELECT IFNULL(`nLevel`,0) INTO _level FROM `table_league_club_member` WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1 ;
 
IF _level = 0 THEN
        SET $result = 0;    #用户账号错误
        LEAVE RT;
ELSEIF _level=1 THEN
        SET _actname = '族长';
ELSEIF _level=2 THEN
        SET _actname = '长老';
ELSE
        SET $result = 0;    #用户账号错误
        LEAVE RT;
END IF;
 
#更新数据
UPDATE table_league_club_member SET `partner` = 0 WHERE `nPlayerID` = $nDestID AND `nClubID` = $nClubID;
#将所有旧的下线ID返回出去
SELECT nPlayerID FROM table_league_club_member WHERE nExtenID = $nDestID AND `nClubID` = $nClubID AND `nStatus` = 1;
         
#取消原来的下线
UPDATE table_league_club_member SET `nExtenID` = 0 WHERE nExtenID = $nDestID AND `nClubID` = $nClubID;
 
#获取名字
SELECT `szNickName` INTO _name FROM `table_user` WHERE `nPlayerId` = $nPlayerID;
SELECT `szNickName` INTO _destname FROM `table_user` WHERE `nPlayerId` = $nDestID;
 
#需要写日志到记录表中
SET _szmark  = CONCAT(_actname,":",_name,"(",$nPlayerID,") 将亲友:",_destname,"(",$nDestID,")合伙人身份取消");
 
CALL pr_league_write_member_log($nPlayerID,$nClubID,_szmark);
  
#返回成功
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_rank_openoff
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_rank_openoff`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_set_rank_openoff`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			IN  $nAct       INT,
			OUT $szClubAuth VARCHAR(32),
			OUT $result     INT
)
RT:BEGIN
/*
部长修改排行榜的开关属性 注意这里的权限字段不是管理员的权限字段，是俱乐部本身的配置字段
*/
DECLARE _sz        VARCHAR(32);
DECLARE _act       VARCHAR(1);
DECLARE _szleft    VARCHAR(32);
DECLARE _szright   VARCHAR(32);
 
SET $result = 0;
 
IF NOT EXISTS(SELECT 1 FROM `table_league_club_info` WHERE `nClubID` = $nClubID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
 
IF $nAct = 1 THEN
   SET _act = '1';
ELSE
   SET _act = '0';
END IF;
 
#取原来的权限值
SELECT `szClubAuth` INTo _sz FROM table_league_club_info WHERE `nClubID` = $nClubID AND `nStatus` = 1;
 
#进行拆分
#SET _szleft = LEFT(_sz,1);
SET _szright = RIGHT(_sz,31);
SET _sz = CONCAT(_act,_szright);
  
#更新数据 
UPDATE table_league_club_info SET szClubAuth = _sz WHERE `nClubID` = $nClubID AND `nStatus` = 1;
 
SET $szClubAuth = _sz;
 
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_set_room_cfg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_set_room_cfg`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_league_set_room_cfg`(
	IN $nClubID INT, #俱乐部ID
    IN $cfgId VARCHAR(128), #配置ID
    IN $gameType INT, #游戏类型
    IN $cfg VARCHAR(2048) #房间配置
)
BEGIN
	IF NOT EXISTS (SELECT ID FROM table_league_room_cfg WHERE nClubID = $nClubID AND cfgId = $cfgId) THEN
        INSERT INTO table_league_room_cfg(nClubID, cfgId, gameType, cfg, updateTime) 
			VALUES($nClubID, $cfgId, $gameType, $cfg, NOW());
	ELSE
		UPDATE table_league_room_cfg SET cfg = $cfg, updateTime = NOW() WHERE nClubID = $nClubID AND cfgId = $cfgId;
	END IF;
        
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_single_invitation_join_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_single_invitation_join_club`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_single_invitation_join_club`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			IN  $nAdminID   INT,
			OUT $nCounts    INT,
			OUT $result     INT
)
RT:BEGIN
/*
单个邀请时，将玩家直接加入俱乐部
2022-1-14 加入积分处理
*/
DECLARE _name VARCHAR(64);
DECLARE _count INT;
DECLARE _exid  INT;
   
IF EXISTS(SELECT 1 FROM `table_league_club_member` WHERE  nClubID = $nClubID AND nplayerid = $nPlayerID  AND nStatus=1 ) THEN
    SET $result = 0;  #已加入
    LEAVE RT;
END IF;
 
select COUNT(nClubID) INTO _count  FROM table_league_club_member WHERE `nPlayerID` = $nPlayerID AND `nClubID` <> 666000 AND `nLevel` > 1 AND `nStatus` = 1;
 
IF _count >= 5 THEN
    SET $result = 0;  #已经加入5个以上俱乐部了，不能再加入
    LEAVE RT;
END IF;
 
SELECT COUNT(nClubID) INTO _count  FROM table_league_club_member WHERE `nPlayerID` = $nPlayerID AND `nClubID` <> 666000 AND `nStatus` = 1;
 
IF _count >= 6 THEN
    SET $result = 0;  #总俱乐部达到6个了，不能再加入
    LEAVE RT;
END IF;
  
SELECT `szNickName`,`extendCode` INTO _name,_exid FROM `table_user` WHERE nPlayerId = $nPlayerID AND nActive=1;
 
IF _exid<>$nAdminID THEN
    SET $result = 0;  #绑定码不正确（正常情况下不会发生这个问题，这里是为了保险）
    LEAVE RT;
END IF;
 
#如果已经存在有成员记录，则更新
IF EXISTS (SELECT 1 FROM table_league_club_member WHERE nClubID=$nClubID AND nPlayerID=$nPlayerID) THEN
        UPDATE table_league_club_member SET tJoinTime=NOW(),nStatus=1,szNickName=_name,nLevel=3,partner=0,nScore=0,nLeCard=0,nFreezeReason=0,BigWinner=0,tExitTime=NULL,szBan=NULL 
        WHERE nClubID=$nClubID AND nPlayerID=$nPlayerID;
ELSE
        #插入成员表
        INSERT INTO `table_league_club_member` (  `nClubID`,  `nPlayerID`,  `szNickName`,  `nLevel`,  `partner`,  `nStatus`,  `tJoinTime`,  `nScore`,  `nLeCard`, `nFreezeReason`,  `BigWinner`) 
        VALUES  (    $nClubID,   $nPlayerID ,   _name,   3,   0,   1,   NOW(),   0,    0,   0,    0 ) ;
END IF;
 
#如存在申请将申请设置为通过
UPDATE `table_league_club_application` SET nStatus = 2, `tOperationTime` = NOW() WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID AND nStatus = 1;
 
#获取总人数
SELECT COUNT(ID) INTO $nCounts FROM table_league_club_member  WHERE nClubID=$nClubID AND `nStatus` = 1;
 
#给上线送积分
CALL pr_jscore_create_join_club($nPlayerID);
       
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_single_join_club
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_single_join_club`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_single_join_club`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			OUT $result     INT
)
RT:BEGIN
/*
将单个玩家同意加入俱乐部
*/
DECLARE _name VARCHAR(64);
DECLARE _count INT;
   
IF EXISTS(SELECT 1 FROM `table_league_club_member` WHERE  nClubID = $nClubID AND nplayerid = $nPlayerID  AND nStatus=1 ) THEN
    SET $result = 0;  #已加入
    LEAVE RT;
END IF;
 
select COUNT(nClubID) INTO _count  FROM table_league_club_member WHERE `nPlayerID` = $nPlayerID AND `nClubID` <> 666000 AND `nLevel` > 1 AND `nStatus` = 1;
 
IF _count >= 5 THEN
    SET $result = 0;  #已经加入5个以上俱乐部了，不能再加入
    LEAVE RT;
END IF;
 
SELECT COUNT(nClubID) INTO _count  FROM table_league_club_member WHERE `nPlayerID` = $nPlayerID AND `nClubID` <> 666000 AND `nStatus` = 1;
 
IF _count >= 6 THEN
    SET $result = 0;  #总俱乐部达到6个了，不能再加入
    LEAVE RT;
END IF;
 
SELECT `szNickName` INTO _name FROM `table_user` WHERE nPlayerId = $nPlayerID AND nActive=1;
#如果已经存在有成员记录，则更新
IF EXISTS (SELECT 1 FROM table_league_club_member WHERE nClubID=$nClubID AND nPlayerID=$nPlayerID) THEN
        UPDATE table_league_club_member SET tJoinTime=NOW(),nStatus=1,szNickName=_name,nLevel=3,partner=0,nScore=0,nLeCard=0,nFreezeReason=0,BigWinner=0,tExitTime=NULL,szBan=NULL 
        WHERE nClubID=$nClubID AND nPlayerID=$nPlayerID;
ELSE
        #插入成员表
        INSERT INTO `table_league_club_member` (  `nClubID`,  `nPlayerID`,  `szNickName`,  `nLevel`,  `partner`,  `nStatus`,  `tJoinTime`,  `nScore`,  `nLeCard`, `nFreezeReason`,  `BigWinner`) 
        VALUES  (    $nClubID,   $nPlayerID ,   _name,   3,   0,   1,   NOW(),   0,    0,   0,    0 ) ;
END IF;
#如存在申请将申请设置为通过
UPDATE `table_league_club_application` SET nStatus = 2, `tOperationTime` = NOW() WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID AND nStatus = 1;
       
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_spc_get_bigwin_gamescore_detail
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_spc_get_bigwin_gamescore_detail`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_spc_get_bigwin_gamescore_detail`(
			IN  $szToken    VARCHAR(64)      #某桌的token
)
RT:BEGIN
/*
场次统计中大赢家查看战绩明细数据
*/
SELECT `nPlayerID`,`nRound`,`nResult`,`nPlayBackCode` FROM `table_league_club_game_score_detail` WHERE `szToken` = $szToken;
                         
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_spc_get_bigwin_gamescore_list
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_spc_get_bigwin_gamescore_list`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_spc_get_bigwin_gamescore_list`(
			IN  $nClubID      INT,         #俱乐部ID
			IN  $nGameType    INT,         #游戏类型  1-麻将 2-纸牌 3-字牌
			IN  $nPlayCount   INT,         #人数场次  0-所有 2，3，4人场对应
			IN  $nResult      INT,         #基于分数查找时大于此分数
			IN  $nPlayerID    INT, 	       #用户ID
			IN  $tDay         VARCHAR(32), #查询的天 "2020-11-01"
			IN  $nStartTime   INT,         #0-23
			IN  $nEndTime     INT,         #0-23    这两个时间要配合使用，等于取两个整数小时之间  如果都是0就表示不起作用，取1整天
			IN  $nPage        INT,         #当前页
			IN  $nVoteType    INT,         #点赞类型 1-全部 2-点赞 3-未点赞
			OUT $nTotal       INT	
)
RT:BEGIN
	/*
	场次统计，大赢家列表点击详情后，显示个人的1天大赢家游戏局数据，带条件查询，分页查询，注意是带有同桌玩家信息的
	*/
	DECLARE _page   INT;
	DECLARE _count  INT;
	 
	SET _count = 5;   #每页的数量
	 
	IF $nPage <= 0 THEN
		 SET $nPage = 1;
	END IF;
	 
	SET _page = ($nPage-1)*_count;
	
	# 还要连接table_user取昵称szNickName,`nSex`,`szHeadPicUrl`
	
	# 设置过滤场次
	IF $nPlayCount = 0 THEN
		SET @nPlayCountSQL = '';
	ELSE
		SET @nPlayCountSQL = CONCAT(' and nPlayCount=', '', $nPlayCount);
	END IF;
	
	# 设置过滤点赞类型
	IF $nVoteType = 2 THEN
		SET @nVoteTypeSQL = ' and nUpvote=1 ';
	ELSEIF $nVoteType = 3 THEN
		SET @nVoteTypeSQL = ' and nUpvote=0 ';
	ELSE
		SET @nVoteTypeSQL = '';
	END IF;
		
	# 设置过滤时间
	IF $nStartTime = 00 AND $nEndTime = 00 THEN
		SET @startTime = CONCAT($tDay, ' 00:00:00');
		SET @endTime = CONCAT($tDay, ' 23:59:59');
	ELSE
		SET @startTime = CONCAT($tDay, ' ', CONCAT($nStartTime, ':00:00'));
		SET @endTime = CONCAT($tDay, ' ', CONCAT($nEndTime, ':59:59'));
	END IF;
	SET @sqlStrSQL=CONCAT("
		SELECT tu.szNickName, tu.`szHeadPicUrl`, tu.`nSex`, temp12.nPlayerID, temp12.szToken, temp12.nTableID, temp12.nRound, unix_timestamp(temp12.tStartTime) AS tStartTime, 
			temp12.nKindID, temp12.`nTotalResult`, temp12.BigWinner, temp12.Dismiss, temp12.nUpvote
		 FROM (
			SELECT b.nPlayerID ,b.szToken, b.nTableID, b.nRound, b.tStartTime, b.nKindID, b.`nTotalResult`, b.BigWinner, b.Dismiss, b.nUpvote FROM (
					select szToken from table_league_club_game_score_total WHERE nClubID =",$nClubID, " AND nPlayerID=", $nPlayerID,
					" AND BigWinner =1 AND nFake = 0 AND nGameType=", $nGameType, " and nTotalResult>=", $nResult*1000, @nPlayCountSQL, @nVoteTypeSQL,
					" AND (tStartTime BETWEEN '",@startTime, "' and '", @endTime, "') 
					GROUP BY szToken ORDER BY tStartTime DESC
					LIMIT ",_page, ",", _count, "
				) temp11 LEFT JOIN table_league_club_game_score_total b ON b.szToken = temp11.szToken GROUP BY b.nPlayerID,b.szToken
		) temp12 INNER JOIN table_user tu ON tu.nPlayerID = temp12.nPlayerID order by temp12.tStartTime desc, temp12.szToken desc",";");
	#SELECT @sqlStrSQL;
	
	PREPARE stmt_name FROM @sqlStrSQL; 
	EXECUTE stmt_name;
	DEALLOCATE PREPARE stmt_name;
	
	
	#要求总计的数目，用于客户端计算分页
	SET $nTotal = 0;
	SET @countAll=0;
	SET @sqlStrSQLCount=CONCAT("select count(counts) into @countAll  from ( 
			select count(*) counts from table_league_club_game_score_total WHERE nClubID =",$nClubID, " AND nPlayerID=", $nPlayerID,
			" AND BigWinner =1 AND nFake = 0 AND nGameType=", $nGameType, " and nTotalResult>=", $nResult*1000, @nPlayCountSQL, @nVoteTypeSQL, 
			" AND (tStartTime BETWEEN '",@startTime, "' and '", @endTime, "') 
				GROUP BY szToken)temp", ";");
	#SELECT @sqlStrSQLCount;
	PREPARE stmt_name_count FROM @sqlStrSQLCount; 
	EXECUTE stmt_name_count;
	DEALLOCATE PREPARE stmt_name_count;
	
	SET $nTotal=@countAll;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_spc_get_bigwin_list
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_spc_get_bigwin_list`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_spc_get_bigwin_list`(
			IN  $nClubID      INT,         #俱乐部ID
			IN  $nGameType    INT,         #游戏类型  1-麻将 2-纸牌 3-字牌
			IN  $nPlayCount   INT,         #人数场次  0-所有 2，3，4人场对应
			IN  $nResult      INT,         #基于分数查找时大于此分数
			IN  $nPlayerID    INT, 	       #用户ID，精确查找时使用，如果无则填0
			IN  $tDay         VARCHAR(32), #查询的天 "2020-11-01"
			IN  $nStartTime   INT,         #0-23
			IN  $nEndTime     INT,         #0-23    这两个时间要配合使用，等于取两个整数小时之间  如果都是0就表示不起作用，取1整天
			IN  $nPage        INT,         #当前页
			OUT $nTotal       INT,
			OUT $winnerCount  INT,
			OUT $voteCount    INT			
			
			
)
RT:BEGIN
/*
场次统计，大赢家列表数据，各种条件的查询，分页查询
*/
	DECLARE _page   INT;
	DECLARE _count  INT;
	 
	SET _count = 5;   #每页的数量
	 
	IF $nPage <= 0 THEN
		 SET $nPage = 1;
	END IF;
	 
	SET _page = ($nPage-1)*_count;
	
	# 还要连接table_user取昵称szNickName,`nSex`,`szHeadPicUrl`
	# SELECT * FROM `table_league_club_game_score_total` WHERE `nClubID` = $nClubID AND `BigWinner` = 1;
	 
	# 设置过滤场次
	IF $nPlayCount = 0 THEN
		SET @nPlayCountSQL = '';
	ELSE
		SET @nPlayCountSQL = CONCAT(' and tl.nPlayCount=', '', $nPlayCount);
	END IF;
	
	# 高过过滤玩家ID
	IF $nPlayerID = 0 THEN
		SET @nPlayerIDSQL = '';
	ELSE
		SET @nPlayerIDSQL = CONCAT(' and tl.nPlayerID=', $nPlayerID);
	END IF;
	
	# 设置过滤时间
	IF $nStartTime = 00 AND $nEndTime = 00 THEN
		SET @startTime = CONCAT($tDay, ' 00:00:00');
		SET @endTime = CONCAT($tDay, ' 23:59:59');
	ELSE
		SET @startTime = CONCAT($tDay, ' ', CONCAT($nStartTime, ':00:00'));
		SET @endTime = CONCAT($tDay, ' ', CONCAT($nEndTime, ':59:59'));
	END IF;
	
	SET @sqlStrSQL=CONCAT("
		SELECT tl.nPlayerID,tu.szNickName, tu.`szHeadPicUrl`, tu.`nSex`, count(BigWinner) as bigWinnerCount, SUM(nUpvote) nUpvoteCount  
		FROM table_league_club_game_score_total tl INNER JOIN table_user tu on tl.nPlayerID=tu.nPlayerID
		WHERE tl.nClubID =",$nClubID, " AND tl.BigWinner =1 AND nFake = 0 AND tl.nGameType=", $nGameType, " and tl.nTotalResult>=",$nResult*1000,
		" and (tl.tStartTime between '",@startTime, "' and '", @endTime, "')", @nPlayerIDSQL , @nPlayCountSQL, " group by tl.nPlayerID LIMIT ",_page, ",", _count, ";");
	
	#SELECT @sqlStrSQL;
	
	PREPARE stmt_name FROM @sqlStrSQL; 
	EXECUTE stmt_name;
	DEALLOCATE PREPARE stmt_name;
	
	#要求总计的数目，用于客户端计算分页
	SET $nTotal = 0;
	-- select COUNT(nPlayerID) INTO $nTotal FROM `table_league_club_game_score_total` WHERE `BigWinner` = 1 AND `tStartTime` BETWEEN @startTime AND @endTime group by nPlayerID;
	 
	SET @countAll=0;
	 
	SET @sqlStrSQLCount=CONCAT("select count(counts) into @countAll  from ( 
		SELECT count(*) as counts
		FROM table_league_club_game_score_total tl INNER JOIN table_user tu on tl.nPlayerID=tu.nPlayerID
		WHERE tl.nClubID =",$nClubID, " AND tl.BigWinner =1 AND nFake = 0 AND tl.nGameType=", $nGameType, " and tl.nTotalResult>=",$nResult*1000,
		" and (tl.tStartTime between '",@startTime, "' and '", @endTime, "')", @nPlayerIDSQL , @nPlayCountSQL, " group by tl.nPlayerID)temp", ";");
	 
	# SELECT @sqlStrSQLCount;
	
	PREPARE stmt_name_count FROM @sqlStrSQLCount; 
	EXECUTE stmt_name_count;
	DEALLOCATE PREPARE stmt_name_count;
	
	SET $nTotal=@countAll;
	
	SET @winnerCount=0;
	SET @voteCount=0;
	
	SET @sqlStrSQLAllCount=CONCAT("select sum(bigWinnerCount), sum(nUpvoteCount) into @winnerCount, @voteCount from (
		SELECT  count(BigWinner) as bigWinnerCount, SUM(nUpvote) nUpvoteCount  
		FROM table_league_club_game_score_total tl INNER JOIN table_user tu on tl.nPlayerID=tu.nPlayerID
		WHERE tl.nClubID =",$nClubID, " AND tl.BigWinner =1 AND nFake = 0 AND tl.nGameType=", $nGameType, " and tl.nTotalResult>=",$nResult*1000,
		" and (tl.tStartTime between '",@startTime, "' and '", @endTime, "')", @nPlayerIDSQL , @nPlayCountSQL, " group by tl.nPlayerID)temp", ";");
		 
	#SELECT @sqlStrSQLAllCount;
	 
	PREPARE stmt_name_all_count FROM @sqlStrSQLAllCount; 
	EXECUTE stmt_name_all_count;
	DEALLOCATE PREPARE stmt_name_all_count;
	
	SET $winnerCount=@winnerCount;
	SET $voteCount=@voteCount;
		
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_spc_get_gametype_list
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_spc_get_gametype_list`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_spc_get_gametype_list`(
			IN  $nClubID      INT,
			IN  $nGameType    INT
)
RT:BEGIN
/*
场次统计，第一个根据游戏类型查7天总局数(注意应该是桌数)
*/
DECLARE _weekdateStartYmd VARCHAR(20) DEFAULT DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 6 DAY), '%Y-%m-%d');
DECLARE _currdateEndYmd VARCHAR(20) DEFAULT DATE_FORMAT(NOW(), '%Y-%m-%d');
DECLARE _weekdateStart VARCHAR(20) DEFAULT CONCAT(_weekdateStartYmd, ' 00:00:00');
DECLARE _currdateEnd VARCHAR(20) DEFAULT CONCAT(_currdateEndYmd, ' 23:59:59');
 
SELECT unix_timestamp(t_date.ymd) AS utime, t_date.ymd,IFNULL(counts,0) counts from (
	SELECT 
		DATE_FORMAT(tStartTime,'%Y-%m-%d') AS toFormatDate,
		COUNT(DISTINCT szToken) as counts
	FROM table_league_club_game_score_total 
	WHERE nGameType=$nGameType AND nClubID=$nClubID AND nFake = 0
	AND (tStartTime BETWEEN _weekdateStart AND _currdateEnd)
	GROUP BY toFormatDate
) temp RIGHT JOIN table_league_daydate t_date ON t_date.ymd = temp.toFormatDate
WHERE (t_date.ymd BETWEEN _weekdateStartYmd AND _currdateEndYmd)
ORDER BY ymd DESC;
 
-- SELECT unix_timestamp(t_date.ymd) AS utime, t_date.ymd,IFNULL(counts,0) counts from 
-- (
-- 	SELECT 
-- 	DATE_FORMAT(ta.tStartTime,'%Y-%m-%d') AS toFormatDate,
-- 	COUNT(DISTINCT ta.szToken) as counts
-- 	FROM table_league_club_game_score_total ta
-- 	LEFT JOIN table_league_club_game_score_detail td
--         ON ta.`szToken` = td.`szToken` AND ta.nclubid = td.nclubid AND ta.nPlayerID = td.nPlayerID
-- 	WHERE ta.nGameType=$nGameType AND ta.nClubID=$nClubID
-- 	AND (ta.tStartTime BETWEEN _weekdateStart AND _currdateEnd)
-- 	AND td.`szToken` IS NOT NULL
-- 	GROUP BY toFormatDate
-- ) temp 
-- RIGHT JOIN table_league_daydate t_date 
-- ON t_date.ymd = temp.toFormatDate
-- WHERE (t_date.ymd BETWEEN _weekdateStartYmd AND _currdateEndYmd)
-- ORDER BY ymd DESC; 
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_spc_rounds_list
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_spc_rounds_list`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_spc_rounds_list`(
			IN  $nClubID      INT,
			IN  $nGameType    INT,          #游戏的类型 1-麻将，2-纸牌，3-字牌
			IN  $utime        VARCHAR(32),  #日期 "2020-11-01"
			OUT $round1       INT,          #第1列的局数
			OUT $round2       INT,          #第2列的局数
			OUT $round3       INT           #第3列的局数			
)
RT:BEGIN
 
DECLARE _currdateStart VARCHAR(20) DEFAULT CONCAT($utime, ' 00:00:00');
DECLARE _currdateEnd VARCHAR(20) DEFAULT CONCAT($utime, ' 23:59:59');
 
# 场次统计，局数统计
# nRound` 就是局数 麻将：4,8,16 纸牌：10,20,30  `nPlayCount` 几人场 2-4
# 麻将统计
 
IF $nGameType = 1 THEN
        SET $round1 = 4;
        SET $round2 = 8;
        SET $round3 = 16;
        
	SELECT nPlayCount, SUM(IF(nRound = 4, 1, 0)) nRound1, SUM(IF(nRound = 8, 1, 0)) nRound2, SUM(IF(nRound = 16, 1, 0)) nRound3 FROM (
			SELECT 
                               nPlayCount,
                               szToken,
                               nRound
			FROM table_league_club_game_score_total 
			WHERE (`tStartTime` BETWEEN _currdateStart AND _currdateEnd) 
			AND `nClubID` = $nClubID AND `nGameType` = $nGameType AND nFake = 0
			GROUP BY szToken, nPlayCount
		)temp1 GROUP BY nPlayCount;
-- 	SELECT nPlayCount, SUM(IF(nRound = 4, 1, 0)) nRound1, SUM(IF(nRound = 8, 1, 0)) nRound2, SUM(IF(nRound = 16, 1, 0)) nRound3 FROM (
-- 			SELECT 
--                                ta.nPlayCount,
--                                ta.szToken,
--                                ta.nRound
-- 			FROM table_league_club_game_score_total ta
-- 			LEFT JOIN table_league_club_game_score_detail td
--                         ON ta.`szToken` = td.`szToken` AND ta.nclubid = td.nclubid AND ta.nPlayerID = td.nPlayerID
-- 			WHERE (ta.`tStartTime` BETWEEN _currdateStart AND _currdateEnd) AND ta.`nClubID` = $nClubID AND ta.`nGameType` = $nGameType
-- 			AND td.`szToken` IS NOT NULL
-- 			GROUP BY ta.szToken, ta.nPlayCount
-- 		)temp1 GROUP BY nPlayCount;
		
# 纸牌统计
ELSEIF $nGameType = 2 THEN
 
        SET $round1 = 10;
        SET $round2 = 20;
        SET $round3 = 30;
        
	SELECT nPlayCount, SUM(IF(nRound = 10, 1, 0)) nRound1, SUM(IF(nRound = 20, 1, 0)) nRound2, SUM(IF(nRound = 30, 1, 0)) nRound3 FROM (
		SELECT 
                        nPlayCount,
                        szToken,
                        nRound
		FROM table_league_club_game_score_total 
		WHERE (`tStartTime` BETWEEN _currdateStart AND _currdateEnd) 
		AND `nClubID` = $nClubID AND `nGameType` = $nGameType AND nFake = 0
		GROUP BY szToken, nPlayCount
	)temp1 GROUP BY nPlayCount;
	
-- 	SELECT nPlayCount, SUM(IF(nRound = 10, 1, 0)) nRound1, SUM(IF(nRound = 20, 1, 0)) nRound2, SUM(IF(nRound = 30, 1, 0)) nRound3 FROM (
-- 			SELECT 
--                                ta.nPlayCount,
--                                ta.szToken,
--                                ta.nRound
-- 			FROM table_league_club_game_score_total ta
-- 			LEFT JOIN table_league_club_game_score_detail td
--                         ON ta.`szToken` = td.`szToken` AND ta.nclubid = td.nclubid AND ta.nPlayerID = td.nPlayerID
-- 			WHERE (ta.`tStartTime` BETWEEN _currdateStart AND _currdateEnd) AND ta.`nClubID` = $nClubID AND ta.`nGameType` = $nGameType
-- 			AND td.`szToken` IS NOT NULL
-- 			GROUP BY ta.szToken, ta.nPlayCount
-- 	)temp1 GROUP BY nPlayCount;
		
END IF;
 
  
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_spc_rounds_list2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_spc_rounds_list2`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_spc_rounds_list2`(
			IN  $nClubID      INT,
			IN  $nGameType    INT,
			IN  $utime        VARCHAR(32),
			OUT $round1       INT,          #第1列的局数
			OUT $round2       INT,          #第2列的局数
			OUT $round3       int           #第3列的局数
)
RT:BEGIN
DECLARE _currdateStart VARCHAR(20) DEFAULT CONCAT($utime, ' 00:00:00');
DECLARE _currdateEnd VARCHAR(20) DEFAULT CONCAT($utime, ' 23:59:59');
# 场次统计，局数统计
# nRound` 就是局数 麻将：4,8,16 纸牌：10,20,30  `nPlayCount` 几人场 2-4
# 麻将统计
if $nGameType = 1 THEN
        SET $round1 = 4;
        SET $round2 = 8;
        SET $round3 = 16;
	select nPlayCount, SUM(IF(nRound = 4, 1, 0)) nRound1, SUM(IF(nRound = 8, 1, 0)) nRound2, SUM(IF(nRound = 16, 1, 0)) nRound3 from (
			select 
					nPlayCount,
					szToken,
					nRound
			from table_league_club_game_score_total 
			where (`tStartTime` between _currdateStart AND _currdateEnd) AND `nClubID` = $nClubID AND `nGameType` = $nGameType
			group by szToken, nPlayCount
		)temp1 group by nPlayCount;
# 纸牌统计
ELSEIF $nGameType = 2 THEN
 
        SET $round1 = 10;
        SET $round2 = 20;
        SET $round3 = 30;	
	select nPlayCount, SUM(IF(nRound = 10, 1, 0)) nRound1, SUM(IF(nRound = 20, 1, 0)) nRound2, SUM(IF(nRound = 30, 1, 0)) nRound3 from (
		select 
				nPlayCount,
				szToken,
				nRound
		from table_league_club_game_score_total 
		where (`tStartTime` between _currdateStart AND _currdateEnd) AND `nClubID` = $nClubID AND `nGameType` = $nGameType
		group by szToken, nPlayCount
	)temp1 group by nPlayCount;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_spc_set_bigwin_vote
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_spc_set_bigwin_vote`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_spc_set_bigwin_vote`(
                        IN  $nPlayerID    INT,
			IN  $nClubID      INT,
			IN  $szToken      VARCHAR(64),  #某桌的token
			IN  $nVote        tinyint,      #设置点赞 1-是 0-否
			OUT $result       INT           #1-成功 0-失败
	
)
RT:BEGIN
DECLARE _v INT;
SELECT nUpvote INTO _v FROM table_league_club_game_score_total WHERE `nClubID` = $nClubID AND `szToken` = $szToken LIMIT 1;
IF _v IS NULL THEN
#数据不存在
        SET $result = 0;
        LEAVE RT;
ELSE
        IF _v = $nVote THEN
                SET $result = 1;
                LEAVE RT;   
        ELSE
                UPDATE `table_league_club_game_score_total` SET `nUpvote` = $nVote WHERE `nClubID` = $nClubID AND `szToken` = $szToken;
                SET $result = 1;
                LEAVE RT;         
        END IF;
       
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_statistics_partner_20210107
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_statistics_partner_20210107`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_league_statistics_partner_20210107`(
	in $startTime varchar(19), 
	in $endTime varchar(19)
)
BEGIN
/*
Admin房卡俱乐部会员数据
*/
/*
set @startTime = CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
set @endTime   = CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
*/

set @startTime = DATE_FORMAT($startTime,'%Y-%m-%d');


#创建临时表
drop temporary table if exists temp_RoomCardClubUserExtenIDSort;
create temporary table temp_RoomCardClubUserExtenIDSort(  
        Id int unsigned  not null  auto_increment primary key,
        nClubId int DEFAULT 0,
        nPlayerId int DEFAULT 0,
        nKindID int DEFAULT 0,
        nExtenID int DEFAULT 0,
        nPlayCount int DEFAULT 0,
        nPlayCountByCal int DEFAULT 0,
        nTotalResult bigint DEFAULT 0
);
#插入临时表
insert into temp_RoomCardClubUserExtenIDSort(nClubId,nPlayerId,nKindID,nExtenID,nPlayCount,nPlayCountByCal,nTotalResult)
select ta.nClubID,ta.nPlayerID,ta.nKindID,ta.nExtenID,ta.nPlayCount, count(ta.nPlayCount) as nPlayCountByCal,sum(ta.nTotalResult)
from table_league_club_game_score_total ta where ta.tStartTime>=$startTime and ta.tStartTime<$endTime
GROUP BY ta.nClubID,ta.nPlayerID,ta.nExtenID,ta.nPlayCount;

select * from temp_RoomCardClubUserExtenIDSort;
     
select count(1) into @totalCount from temp_RoomCardClubUserExtenIDSort;
if @totalCount>0 then 
        #DELETE FROM table_league_rank  WHERE tTime = $startTime;
        set @currId=1;
        
        while (@currId<=@totalCount) do
								
						
								select nClubId,nPlayerId,nKindID,nExtenID,nPlayCount,nPlayCountByCal,nTotalResult into @nClubId,@nPlayerId,@nKindID,@nExtenID,@nPlayCount,@nPlayCountByCal,@nTotalResult
                from temp_RoomCardClubUserExtenIDSort where Id=@currId;
								
								
                if exists(select nClubId from table_league_day_round where nClubId=@nClubId and nPlayerId=@nPlayerId and nExtenID=@nExtenID and tTime=@startTime) then 
										if 	@nPlayCount=2 then 
												
                        update table_league_day_round set  n2PlayCount=n2PlayCount+@nPlayCountByCal, n2TotalResult=n2TotalResult+@nTotalResult, nAllPlayCount=n3PlayCount+n4PlayCount+@nPlayCountByCal,nAllTotalResult=n3TotalResult+n4TotalResult+@nTotalResult 
												where nClubId=@nClubId and nPlayerId=@nPlayerId and nExtenID=@nExtenID and tTime=@startTime;
                     
										ELSEIF @nPlayCount=3 then 

												update table_league_day_round set  n3PlayCount=n3PlayCount+@nPlayCountByCal, n3TotalResult=n3TotalResult+@nTotalResult, nAllPlayCount=n2PlayCount+n4PlayCount+@nPlayCountByCal,nAllTotalResult=n2TotalResult+n4TotalResult+@nTotalResult  
												where nClubId=@nClubId and nPlayerId=@nPlayerId and nExtenID=@nExtenID and tTime=@startTime;
										
										ELSEIF @nPlayCount=4 then 
												
												update table_league_day_round set  n4PlayCount=n4PlayCount+@nPlayCountByCal, n4TotalResult=n4TotalResult+@nTotalResult, nAllPlayCount=n2PlayCount+n3PlayCount+@nPlayCountByCal,nAllTotalResult=n2TotalResult+n3TotalResult+@nTotalResult  
												where nClubId=@nClubId and nPlayerId=@nPlayerId and nExtenID=@nExtenID and tTime=@startTime;

										END IF;
				
                else  

                  #插入会员排行表
										if 	@nPlayCount=2 then 
												
                        INSERT INTO table_league_day_round (
													nClubId,
													nKindID,
													n2PlayCount,
													n3PlayCount,
													n4PlayCount,
													nAllPlayCount,
													nPlayerID,
													nExtenID,
													n2TotalResult,
													n3TotalResult,
													n4TotalResult,
													nAllTotalResult,
													tTime
												)
												VALUES
													(
														@nClubId,@nKindID,@nPlayCountByCal, 0, 0, @nPlayCountByCal, @nPlayerId,@nExtenID, @nTotalResult,0,0,@nTotalResult,@startTime
													);
													 
										ELSEIF @nPlayCount=3 then 
                        INSERT INTO table_league_day_round (
													nClubId,
													nKindID,
													n2PlayCount,
													n3PlayCount,
													n4PlayCount,
													nAllPlayCount,
													nPlayerID,
													nExtenID,
													n2TotalResult,
													n3TotalResult,
													n4TotalResult,
													nAllTotalResult,
													tTime
												)
												VALUES
													(
														@nClubId,@nKindID,0,@nPlayCountByCal,0,@nPlayCountByCal, @nPlayerId,@nExtenID, 0,@nTotalResult,0,@nTotalResult,@startTime
													);
												
										
										ELSEIF @nPlayCount=4 then 

                        INSERT INTO table_league_day_round (
													nClubId,
													nKindID,
													n2PlayCount,
													n3PlayCount,
													n4PlayCount,
													nAllPlayCount,
													nPlayerID,
													nExtenID,
													n2TotalResult,
													n3TotalResult,
													n4TotalResult,
													nAllTotalResult,
													tTime
												)
												VALUES
													(
														@nClubId,@nKindID,0,0,@nPlayCountByCal,@nPlayCountByCal, @nPlayerId,@nExtenID, 0,0,@nTotalResult,@nTotalResult,@startTime
													);												
												
										END IF;

									
                end if;		

									
                set @currId=@currId+1;
        end while;
        
end if;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_statistics_rank
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_statistics_rank`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_statistics_rank`(
	in $startTime varchar(19), 
	in $endTime varchar(19)
)
BEGIN
/*
生成排行榜的基础数据，此可用于手动同步数据使用
*/
set @startTime = DATE_FORMAT($startTime,'%Y-%m-%d');
 
#创建临时表
drop temporary table if exists temp_RoomCardClubUserSort;
 
create temporary table temp_RoomCardClubUserSort(  
        Id int unsigned  not null  auto_increment primary key,
        nClubId int DEFAULT 0,
        nPlayerId int DEFAULT 0,
        nScore bigint DEFAULT 0,
        nResult bigint DEFAULT 0,
        nBigWinner bigint DEFAULT 0
);
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
 
#插入临时表
insert into temp_RoomCardClubUserSort(nClubId,nPlayerId,nScore,nResult,nBigWinner)
select ta.nClubID,ta.nPlayerID,(count(ta.szToken) * 15) as nScore ,sum(ta.nTotalResult) as nResult, sum(ta.BigWinner) as nBigWinner  
from table_league_club_game_score_total ta where ta.tCreateTime>=$startTime and ta.tCreateTime<$endTime AND ta.nFake = 0
GROUP BY ta.nClubID,ta.nPlayerID;
-- INSERT INTO temp_RoomCardClubUserSort(nClubId,nPlayerId,nScore,nResult,nBigWinner)
-- SELECT ta.nClubID,ta.nPlayerID,(COUNT(DISTINCT(ta.szToken))*15) AS nScore ,SUM(ta.nTotalResult) AS nResult, SUM(ta.BigWinner) AS nBigWinner  
-- FROM table_league_club_game_score_total ta 
-- LEFT JOIN table_league_club_game_score_detail td
-- ON ta.`szToken` = td.`szToken` AND ta.nclubid = td.nclubid AND ta.nPlayerID = td.nPlayerID
-- WHERE ta.tCreateTime>=$startTime AND ta.tCreateTime<$endTime AND td.`szToken` IS NOT NULL
-- GROUP BY ta.nClubID,ta.nPlayerID;
 
#select * from temp_RoomCardClubUserSort;
 
select count(1) into @totalCount from temp_RoomCardClubUserSort;
 
if @totalCount>0 then 
        set @currId=1;
        
        while (@currId<=@totalCount) do
        
                select nClubId,nPlayerId,nScore,nResult,nBigWinner into @nClubId,@nPlayerId,@nScore,@nResult,@nBigWinner 
                from temp_RoomCardClubUserSort where Id=@currId;
                
                if exists(select nClubId from table_league_rank where nClubId=@nClubId and nPlayerId=@nPlayerId and tTime=@startTime) then 
                
                        update table_league_rank set nScore=nScore+@nScore, nResult=nResult+@nResult,nBigWinner=nBigWinner+@nBigWinner where nClubId=@nClubId and nPlayerId=@nPlayerId and tTime=@startTime;
                         
                else  
                        #插入会员排行表
                        insert into table_league_rank(nClubId,nPlayerId,nScore,nResult,nBigWinner,tTime)
                        values(@nClubId,@nPlayerId,@nScore,@nResult,@nBigWinner,@startTime);
                end if;								
                set @currId=@currId+1;
        end while;
        
end if;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_statistics_rank_20210107
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_statistics_rank_20210107`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_statistics_rank_20210107`(
	in $startTime varchar(19), 
	in $endTime varchar(19)
)
BEGIN
/*
Admin房卡俱乐部会员数据
*/
/*
set @startTime = CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 00:00:00');
set @endTime   = CONCAT(DATE_FORMAT($startTime,'%Y-%m-%d'),' 23:59:59');
*/

set @startTime = DATE_FORMAT($startTime,'%Y-%m-%d');


#创建临时表
drop temporary table if exists temp_RoomCardClubUserSort;
create temporary table temp_RoomCardClubUserSort(  
        Id int unsigned  not null  auto_increment primary key,
        nClubId int DEFAULT 0,
        nPlayerId int DEFAULT 0,
        nScore bigint DEFAULT 0,
        nResult bigint DEFAULT 0,
        nBigWinner bigint DEFAULT 0
);
#插入临时表
insert into temp_RoomCardClubUserSort(nClubId,nPlayerId,nScore,nResult,nBigWinner)
select ta.nClubID,ta.nPlayerID,(count(ta.szToken) * 15) as nScore ,sum(ta.nTotalResult) as nResult, sum(ta.BigWinner) as nBigWinner  
from table_league_club_game_score_total ta where ta.tStartTime>=$startTime and ta.tStartTime<$endTime
GROUP BY ta.nClubID,ta.nPlayerID;

select * from temp_RoomCardClubUserSort;
     
select count(1) into @totalCount from temp_RoomCardClubUserSort;
if @totalCount>0 then 
        #DELETE FROM table_league_rank  WHERE tTime = $startTime;
        set @currId=1;
        
        while (@currId<=@totalCount) do
        
                select nClubId,nPlayerId,nScore,nResult,nBigWinner into @nClubId,@nPlayerId,@nScore,@nResult,@nBigWinner 
                from temp_RoomCardClubUserSort where Id=@currId;
                
                if exists(select nClubId from table_league_rank where nClubId=@nClubId and nPlayerId=@nPlayerId and tTime=@startTime) then 
                
                        update table_league_rank set nScore=nScore+@nScore, nResult=nResult+@nResult,nBigWinner=nBigWinner+@nBigWinner where nClubId=@nClubId and nPlayerId=@nPlayerId and tTime=@startTime;
                         
                else  
                        #插入会员排行表
                        insert into table_league_rank(nClubId,nPlayerId,nScore,nResult,nBigWinner,tTime)
                        values(@nClubId,@nPlayerId,@nScore,@nResult,@nBigWinner,@startTime);
                end if;								
                set @currId=@currId+1;
        end while;
        
end if;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_stc_partner_sub_time
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_stc_partner_sub_time`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_stc_partner_sub_time`(
	IN $startTime VARCHAR(19), 
	IN $endTime   VARCHAR(19),
	IN $result    BIGINT,       #用于计算的底分 和场次信息进行对应
	IN $grade     INT           #表示分数统计   0-总场次 1-10分以上.......6-120分以上
)
BEGIN
/*
以时间间隔生成合伙人以及下线的基础数据
*/
 
DECLARE _startTime VARCHAR(32);
SET _startTime = DATE_FORMAT($startTime,'%Y-%m-%d');  
 
#========================================================= 
#创建临时表
DROP TEMPORARY TABLE IF EXISTS temp_stc_partner_detail;
 
CREATE TEMPORARY TABLE temp_stc_partner_detail(  
        Id            INT UNSIGNED  NOT NULL  AUTO_INCREMENT PRIMARY KEY,
        nClubId       INT    DEFAULT 0,
        nPlayerId     INT    DEFAULT 0,
        nExtenID      INT    DEFAULT 0,
        n2PlayCount   INT    DEFAULT 0,
        n3PlayCount   INT    DEFAULT 0,
        n4PlayCount   INT    DEFAULT 0,
        n6PlayCount   INT    DEFAULT 0,
        nRound        BIGINT DEFAULT 0,
        nGrade        BIGINT DEFAULT 0,
        tTime         DATE
);
 
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
 
#=========================================================== 
#插入临时表 针对合伙人的战局统计
 
INSERT INTO temp_stc_partner_detail(nClubId,nPlayerId,nExtenID,n2PlayCount,n3PlayCount,n4PlayCount,n6PlayCount,nRound,nGrade,tTime)
SELECT tt.nCLubID,tt.`nPlayerID`, 0,
IFNULL(SUM(IF(tt.nPlayCount=2,1,0) ),0) AS two, 
IFNULL(SUM(IF(tt.nPlayCount=3,1,0) ),0) AS three, 
IFNULL(SUM(IF(tt.nPlayCount=4,1,0) ),0) AS four,
IFNULL(SUM(IF(tt.nPlayCount=6,1,0) ),0) AS six,
IFNULL(COUNT(tt.szToken),0)             AS nRound ,
$grade, 
_startTime 
FROM  `table_league_club_game_score_total` tt ,`table_league_club_member` tm 
WHERE tt.`nPlayerID` = tm.`nPlayerID` AND tt.`nClubID` = tm.`nClubID` AND tm.`partner` = 1 
AND tt.`tCreateTime` >=$startTime AND tt.tCreateTime<$endTime AND tt.`nExtenID` = 1
AND tt.nTotalResult >= $result AND tt.nFake = 0
GROUP BY tm.`nClubID`, tm.`nPlayerID`;
 
 
-- INSERT INTO temp_stc_partner_detail(nClubId,nPlayerId,nExtenID,n2PlayCount,n3PlayCount,n4PlayCount,nRound,nGrade,tTime)
-- SELECT  
-- tmp.nclubid, 
-- tmp.nplayerid,
-- 0,
-- IFNULL(SUM(IF(tmp.nPlayCount=2,1,0) ),0) AS two,
-- IFNULL(SUM(IF(tmp.nPlayCount=3,1,0) ),0) AS three, 
-- IFNULL(SUM(IF(tmp.nPlayCount=4,1,0) ),0) AS four,
-- IFNULL(COUNT(tmp.szToken),0)             AS nRound,
-- $grade, 
-- _startTime 
-- FROM  
-- (
-- SELECT tt.nclubid,tt.nplayerid,tt.nPlayCount,tt.szToken
-- FROM  `table_league_club_game_score_total` tt 
-- LEFT JOIN table_league_club_game_score_detail td
-- ON tt.`szToken` = td.`szToken` AND tt.nclubid = td.nclubid AND tt.nPlayerID = td.nPlayerID
-- WHERE tt.`tCreateTime` >=$startTime AND tt.tCreateTime<$endTime AND tt.`nExtenID` = 1 AND tt.nTotalResult >= $result
-- AND td.`szToken` IS NOT NULL
-- GROUP BY tt.`nClubID`, tt.`nPlayerID`,tt.sztoken
-- )tmp 
-- GROUP BY tmp.nclubid,tmp.nplayerid;
 
  
#插入临时表 针对合伙人下线的战局统计
INSERT INTO temp_stc_partner_detail(nClubId,nPlayerId,nExtenID,n2PlayCount,n3PlayCount,n4PlayCount,n6PlayCount,nRound,nGrade,tTime)
SELECT nCLubID,`nPlayerID`, nExtenID,
IFNULL(SUM(IF(nPlayCount=2,1,0) ),0) AS two, 
IFNULL(SUM(IF(nPlayCount=3,1,0) ),0) AS three, 
IFNULL(SUM(IF(nPlayCount=4,1,0) ),0) AS four,
IFNULL(SUM(IF(nPlayCount=6,1,0) ),0) AS six,
IFNULL(COUNT(szToken),0)             AS nRound ,
$grade, 
_startTime 
FROM  `table_league_club_game_score_total`
WHERE nExtenID > 1 AND nFake = 0
AND `tCreateTime` >=$startTime AND tCreateTime<$endTime
AND nTotalResult >= $result
GROUP BY `nClubID`, `nPlayerID`,nExtenID;
 
-- INSERT INTO temp_stc_partner_detail(nClubId,nPlayerId,nExtenID,n2PlayCount,n3PlayCount,n4PlayCount,nRound,nGrade,tTime)
-- SELECT  
-- tmp.nclubid, 
-- tmp.nplayerid,
-- tmp.nExtenID,
-- IFNULL(SUM(IF(tmp.nPlayCount=2,1,0) ),0) AS two,
-- IFNULL(SUM(IF(tmp.nPlayCount=3,1,0) ),0) AS three, 
-- IFNULL(SUM(IF(tmp.nPlayCount=4,1,0) ),0) AS four,
-- IFNULL(COUNT(tmp.szToken),0)             AS nRound,
-- $grade, 
-- _startTime 
-- FROM  
-- (
-- SELECT tt.nclubid,tt.nplayerid,tt.nExtenID,tt.nPlayCount,tt.szToken
-- FROM  `table_league_club_game_score_total` tt 
-- LEFT JOIN table_league_club_game_score_detail td
-- ON tt.`szToken` = td.`szToken` AND tt.nclubid = td.nclubid AND tt.nPlayerID = td.nPlayerID
-- WHERE tt.`tCreateTime` >=$startTime AND tt.tCreateTime<$endTime AND tt.`nExtenID` > 1 AND tt.nTotalResult >= $result
-- AND td.`szToken` IS NOT NULL
-- GROUP BY tt.`nClubID`, tt.`nPlayerID`,tt.sztoken
-- )tmp 
-- GROUP BY tmp.nclubid,tmp.nplayerid;
 
#SELECT * FROM temp_stc_partner_detail;
 
#---------------
-- 算场次
SELECT COUNT(id) INTO @totalCount FROM temp_stc_partner_detail;
SELECT MIN(id) INTO @minid FROM temp_stc_partner_detail;
SELECT MAX(id) INTO @maxid FROM temp_stc_partner_detail;
 
IF @totalCount>0 THEN 
        
        SET @currId=@minid;
        
        WHILE (@currId<=@maxid) DO
                IF EXISTS (SELECT 1 FROM temp_stc_partner_detail WHERE Id=@currId) THEN
                
                        SELECT nClubId,nPlayerId,n2PlayCount,n3PlayCount,n4PlayCount,n6PlayCount,nExtenID,nRound,nGrade INTO 
                               @nClubId,@nPlayerId,@n2PlayCount,@n3PlayCount,@n4PlayCount,@n6PlayCount,@nExtenID,@nRound,@nGrade 
                        FROM temp_stc_partner_detail WHERE Id=@currId;
                                                
                        IF EXISTS(SELECT 1 FROM table_league_stc_partner_sub WHERE nClubID=@nClubId AND nPlayerID=@nPlayerId AND nExtenID = @nExtenID AND nGrade = @nGrade AND tTime=_startTime) THEN 
                        -- 已有记录则累加
                        
                                UPDATE table_league_stc_partner_sub SET nRound=nRound+@nRound, n2PlayCount=n2PlayCount+@n2PlayCount , n3PlayCount = n3PlayCount + @n3PlayCount,
                                n4PlayCount = n4PlayCount + @n4PlayCount, n6PlayCount = n6PlayCount + @n6PlayCount
                                WHERE nClubId=@nClubId AND nPlayerId=@nPlayerId AND nExtenID = @nExtenID AND nGrade = @nGrade AND tTime=_startTime;
                        ELSE  
                        #插入新的记录
                        
                                INSERT INTO table_league_stc_partner_sub(nClubId,nPlayerId,n2PlayCount,n3PlayCount,n4PlayCount,n6PlayCount,nExtenID,nRound,nGrade,tTime)
                                VALUES(@nClubId,@nPlayerId,@n2PlayCount,@n3PlayCount,@n4PlayCount,@n6PlayCount,@nExtenID,@nRound,@nGrade,_startTime);
                        END IF;                
                END IF;
        
                SET @currId=@currId+1;
                
        END WHILE;
        
END IF;
#---------------
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_stc_partner_time
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_stc_partner_time`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_stc_partner_time`(
	IN $startTime VARCHAR(19), 
	IN $endTime   VARCHAR(19),
	IN $result    BIGINT,       #用于计算的底分 和场次信息进行对应
	IN $grade     INT           #表示分数统计   0-总场次 1-10分以上.......6-120分以上
)
BEGIN
/*
以时间间隔生成合伙人的基础数据
*/
DECLARE _startTime VARCHAR(32);
  
SET _startTime = DATE_FORMAT($startTime,'%Y-%m-%d');  
 
#========================================================= 
#创建临时表
DROP TEMPORARY TABLE IF EXISTS temp_stc_partner;
 
CREATE TEMPORARY TABLE temp_stc_partner(  
        Id            INT UNSIGNED  NOT NULL  AUTO_INCREMENT PRIMARY KEY,
        nClubId       INT    DEFAULT 0,
        nPlayerId     INT    DEFAULT 0,
        nRound        BIGINT DEFAULT 0,
        nGrade        BIGINT DEFAULT 0,
        tTime         DATE,
        UNIQUE KEY `nClubId_nPlayerId_nGrade` (`nClubId`, `nPlayerId`, `nGrade`)
);
 
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
 
#将所有合伙人先都取出
INSERT INTO temp_stc_partner(nClubId,nPlayerId,nRound,nGrade,tTime)
SELECT nClubID,nPlayerID, 0,$grade,_startTime FROM table_league_club_member WHERE partner = 1 GROUP BY nClubID,nPlayerID;
  
INSERT IGNORE INTO temp_stc_partner(nClubId,nPlayerId,nRound,nGrade,tTime)
SELECT nClubID, nPlayerID, 0,$grade,_startTime FROM table_league_club_game_score_total
WHERE `nExtenID` = 1 AND nFake = 0 AND tCreateTime >=$startTime AND tCreateTime<$endTime AND nTotalResult >= $result;
 
#===========================================================
#每个合伙人都检索是否有战绩，如果有要合计局数后写入临时表
SELECT COUNT(1) INTO @totalCount FROM temp_stc_partner;
 
IF @totalCount>0 THEN
 
        SET @curid = 1;
        
        WHILE (@curid<=@totalCount) DO
        
                 SELECT nClubId,nPlayerId INTO @nClubId,@nPlayerId FROM temp_stc_partner WHERE Id = @curid;
                                 
                 #IF EXISTS(SELECT 1 FROM table_league_club_game_score_total WHERE nClubID=@nClubId AND nPlayerID=@nPlayerId AND `nExtenID` = 1 AND nFake = 0 AND tCreateTime >= $startTime AND tCreateTime < $endTime AND nTotalResult >= $result) THEN 
                 #IF EXISTS(SELECT 1 FROM table_league_club_game_score_total t1,table_league_club_game_score_detail t2 WHERE t1.nplayerid = t2.nplayerid AND t1.nClubID = t2.nClubID AND t1.sztoken=t2.sztoken AND t1.nClubID=@nClubId AND t1.nPlayerID=@nPlayerId AND t1.`nExtenID` = 1 AND t1.tCreateTime >= $startTime AND t1.tCreateTime < $endTime AND t1.nTotalResult >= $result) THEN 
 
                        SELECT IFNULL(COUNT(sztoken),0) INTO @rd
                        FROM table_league_club_game_score_total 
                        WHERE nClubID=@nClubId AND nPlayerID=@nPlayerId AND `nExtenID` = 1 AND nFake = 0
                        AND tCreateTime >=$startTime AND tCreateTime<$endTime AND nTotalResult >= $result;
                        
--                         SELECT IFNULL(COUNT(DISTINCT(t1.sztoken)),0) INTO @rd
--                         FROM table_league_club_game_score_total t1,table_league_club_game_score_detail t2 
--                         WHERE t1.nplayerid = t2.nplayerid AND t1.nClubID = t2.nClubID AND t1.sztoken=t2.sztoken
--                         AND t1.nClubID=@nClubId AND t1.nPlayerID=@nPlayerId AND t1.`nExtenID` = 1 
--                         AND t1.tCreateTime >=$startTime AND t1.tCreateTime<$endTime AND t1.nTotalResult >= $result;                        
                        
                        UPDATE temp_stc_partner SET nRound = @rd WHERE Id = @curid;
                 
                 #END IF;
                  
                 SET @curid=@curid+1;
        END WHILE;
 
END IF;
#=========================================================== 
 
#创建临时表 针对下线的每日战局统计用来和合伙人的局数合并
DROP TEMPORARY TABLE IF EXISTS temp_stc_partner_sub;
 
CREATE TEMPORARY TABLE temp_stc_partner_sub(  
        Id            INT UNSIGNED  NOT NULL  AUTO_INCREMENT PRIMARY KEY,
        nClubId       INT    DEFAULT 0,
        nPlayerId     INT    DEFAULT 0,
        nExtenID      INT  DEFAULT 0,
        nRound        INT  DEFAULT 0,
        nGrade        INT  DEFAULT 0,
        tTime         DATE
);
 
INSERT INTO  temp_stc_partner_sub(nClubId,nPlayerId,nExtenID,nRound,nGrade,tTime)
SELECT tt.nClubid,tt.nplayerid, tt.nExtenID, COUNT(tt.sztoken) AS rd, $grade,_startTime 
FROM `table_league_club_game_score_total` tt ,`table_league_club_member` tm 
WHERE tt.`nExtenID` >1 AND tt.`nClubID` = tm.`nClubID` AND tt.nPlayerID=tm.nPlayerID 
AND tt.tCreateTime >=$startTime AND tt.tCreateTime < $endTime 
AND tt.nTotalResult >= $result AND tt.nFake = 0
GROUP BY tt.`nClubID`, tt.`nPlayerID`,tt.nExtenID;
-- INSERT INTO  temp_stc_partner_sub(nClubId,nPlayerId,nExtenID,nRound,nGrade,tTime)
-- SELECT tt.nClubid,tt.nplayerid, tt.nExtenID, COUNT(DISTINCT(tt.sztoken)) AS rd, $grade,_startTime 
-- FROM `table_league_club_game_score_total` tt
-- LEFT JOIN table_league_club_game_score_detail td
-- ON tt.`szToken` = td.`szToken`
-- WHERE tt.`nExtenID` >1 AND tt.tCreateTime >=$startTime AND tt.tCreateTime < $endTime AND td.`szToken` IS NOT NULL
-- AND tt.nTotalResult >= $result
-- GROUP BY tt.`nClubID`, tt.`nPlayerID`;
 
#SELECT * FROM temp_stc_partner;
#SELECT * FROM temp_stc_partner_sub;
 
#---------------
#算场次     
SELECT COUNT(1) INTO @totalCount FROM temp_stc_partner;
 
IF @totalCount>0 THEN 
        
        SET @currId=1;
        
        WHILE (@currId<=@totalCount) DO
        
                SELECT nClubId,nPlayerId,nRound,nGrade INTO @nClubId,@nPlayerId,@nRound,@nGrade 
                FROM temp_stc_partner WHERE Id=@currId;
                
                SELECT IFNULL(SUM(nRound),0) INTO @subRound FROM temp_stc_partner_sub WHERE nExtenID = @nPlayerId AND nClubID = @nClubId AND nGrade = @nGrade ;
                
                SET @nRound = @nRound + @subRound;
                
                IF EXISTS(SELECT 1 FROM table_league_stc_partner WHERE nClubID=@nClubId AND nPlayerID=@nPlayerId AND nGrade = @nGrade AND tTime=_startTime) THEN 
                -- 已有记录则累加
                
                        UPDATE table_league_stc_partner SET nRound=nRound+@nRound WHERE nClubId=@nClubId AND nPlayerId=@nPlayerId AND nGrade = @nGrade AND tTime=_startTime;
                         
                ELSE  
                #插入新的记录
                
                        INSERT INTO table_league_stc_partner(nClubId,nPlayerId,nRound,nGrade,tTime)
                        VALUES(@nClubId,@nPlayerId,@nRound,@nGrade,_startTime);
                END IF;
                						
                SET @currId=@currId+1;
                
        END WHILE;
        
END IF;
#---------------
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_stc_partner_time_debug
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_stc_partner_time_debug`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_league_stc_partner_time_debug`(
	IN $startTime VARCHAR(19), 
	IN $endTime   VARCHAR(19),
	IN $result    BIGINT,       #用于计算的底分 和场次信息进行对应
	IN $grade     INT           #表示分数统计   0-总场次 1-10分以上.......6-120分以上
)
BEGIN
/*
以时间间隔生成合伙人的基础数据
*/
DECLARE _startTime VARCHAR(32);
  
SET _startTime = DATE_FORMAT($startTime,'%Y-%m-%d');  
 
#========================================================= 
#创建临时表
DROP TEMPORARY TABLE IF EXISTS temp_stc_partner;
 
CREATE TEMPORARY TABLE temp_stc_partner(  
        Id            INT UNSIGNED  NOT NULL  AUTO_INCREMENT PRIMARY KEY,
        nClubId       INT    DEFAULT 0,
        nPlayerId     INT    DEFAULT 0,
        nRound        BIGINT DEFAULT 0,
        nGrade        BIGINT DEFAULT 0,
        tTime         DATE,
        UNIQUE KEY `nClubId_nPlayerId_nGrade` (`nClubId`, `nPlayerId`, `nGrade`)
);
 
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
 
#将所有合伙人先都取出
INSERT INTO temp_stc_partner(nClubId,nPlayerId,nRound,nGrade,tTime)
SELECT nClubID,nPlayerID, 0,$grade,_startTime FROM table_league_club_member WHERE partner = 1 GROUP BY nClubID,nPlayerID;
 
#SELECT nClubID, nPlayerID, 0,$grade,_startTime FROM table_league_club_game_score_total
#WHERE `nExtenID` = 1 AND nFake = 0 AND tCreateTime >=$startTime AND tCreateTime<$endTime AND nTotalResult >= $result;
 
INSERT IGNORE INTO temp_stc_partner(nClubId,nPlayerId,nRound,nGrade,tTime)
SELECT nClubID, nPlayerID, 0,$grade,_startTime FROM table_league_club_game_score_total
WHERE `nExtenID` = 1 AND nFake = 0 AND tCreateTime >=$startTime AND tCreateTime<$endTime AND nTotalResult >= $result;

select * from temp_stc_partner;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_update_lastclub
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_update_lastclub`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_update_lastclub`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			OUT $result     INT
)
RT:BEGIN
/*
更新用户的最后俱乐部ID
*/
SET $result = 0;
 
IF NOT EXISTS(SELECT 1 FROM table_user WHERE `nPlayerID` = $nPlayerID) THEN
        LEAVE RT;
END IF;
 
#更新数据
UPDATE table_user SET `nLastClubID` = $nClubID WHERE `nPlayerID` = $nPlayerID;
 
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_update_member_backinfo
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_update_member_backinfo`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_update_member_backinfo`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			IN  $bName      VARCHAR(64),
			IN  $szwx       VARCHAR(64),
			OUT $result     INT
)
RT:BEGIN
/*
更新用户的备注信息
*/
SET $result = 0;
IF NOT EXISTS(SELECT 1 FROM table_league_club_member WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1) THEN
        LEAVE RT;
END IF;
#更新数据
UPDATE table_league_club_member SET `szBackName`= $bName,`szWXAccount` = $szwx WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1;
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_user_create
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_user_create`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_user_create`(
                IN $nLoginType  INT,             # 0-游客创建 1-微信 2-手机
		IN $strPass     VARCHAR(64),
		IN $strNickName VARCHAR(64),
		IN $strHeadUrl  VARCHAR(512),
		IN $strPreLoginIp  VARCHAR(64),
		IN $strOpenID   VARCHAR(256),
		IN $nClubID     INT,
		IN $nUpperID    INT,
		IN $nOsType     INT,
		IN $strPhone    VARCHAR(15),
		IN $strPhonepass    VARCHAR(64),
		OUT $intOutPlayerId INT,
		OUT $intOutCardCount INT,
		OUT $intOutJinBi BIGINT,
		OUT $intOutScore INT,
		OUT $intOutExtentCode INT,
		OUT $intFirstCreate   INT,
		OUT $intOutSex        INT,
		OUT $strOutNickName  VARCHAR(64),
		OUT $strOutHeadUrl   VARCHAR(512),
		OUT $strOutUserSign  VARCHAR(256),
		OUT $strOutErrMsg    VARCHAR(256),
		OUT $returnVal       INT
)
rt:BEGIN
/*
大联盟(新房卡)的账号创建
2021-5-18 去掉对非手机创建时openid的检测，增加类型的错误返回处理
2021-5-20 加入对绑定推荐码的用户商城等级升到3
2021-12-31 加入对积分系统的用户创建
2022-1-4 手机创建用户对积分系统支持，主要用于内网测试
2022-1-20  微信创建,手机创建中对已有用户不做拓新模块的创建处理
*/
        DECLARE  _tmpCardCount  INT DEFAULT     40;   #新建用户初始钻石数
        DECLARE  _tmpJinBiCount BIGINT DEFAULT  0;
        DECLARE  _tmpHeadUrl    VARCHAR(512);
        DECLARE  _tmpPlayerID   INT DEFAULT     0;
        DECLARE  _tmpWXID       VARCHAR(256);
        DECLARE  _tmpPhone      VARCHAR(15);
        DECLARE  _tmpPass       VARCHAR(64);
        
        DECLARE  _tmpChannel    INT DEFAULT     0;
        DECLARE  _tmpUpUserID   INT DEFAULT     0;        #上线ID
        DECLARE  _tmpLevel      INT DEFAULT     3;        #普通会员级别
        DECLARE  _tmpExLevel    INT DEFAULT     0;
        DECLARE  _tmpReser1     INT DEFAULT     1;        #商城级别  如果是扫码绑定要直接升到3
        
        DECLARE  _tmpClubChannel    INT DEFAULT     0; #同时在金币场的俱乐部里是什么ID号
        DECLARE  _tmpClubUserScore  INT DEFAULT     0; #默认分数
         
        #联盟公共俱乐部
        SET _tmpChannel = 666000;
        SET _tmpClubChannel = 10001;  #各个版本不同，这里一定要注意
        SET _tmpClubUserScore = 1000000;
        
        #传入需要绑定代理的ID
        IF $nUpperID <> 0 THEN
                SET _tmpUpUserID = $nUpperID;
                SET _tmpReser1 = 3;
                
                IF NOT EXISTS(SELECT 1 FROM table_agent_info WHERE nPlayerID = $nUpperID) THEN
                        SET _tmpUpUserID = 0;
                        SET _tmpReser1 = 1;
                END IF;
        END IF;
         
        IF $nLoginType = 0 THEN
        #游客创建
        
                #先查没有手机号的机器码
                SELECT nPlayerID, szPass INTO _tmpPlayerID, _tmpPass FROM Table_User WHERE szOpenId = $strOpenID AND phone IS NULL LIMIT 1;
                
                IF _tmpPlayerID>0 THEN
                            UPDATE Table_User SET szPass = $strPass,preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                            
                            SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex , szNickname,szHeadPicUrl
                            INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutNickName,$strOutHeadUrl
                            FROM Table_User WHERE nPlayerID = _tmpPlayerID;
                    
                            SET $intFirstCreate  = 0;
                            SET $strOutErrMsg ='succ' ;
                            INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                            SET $returnVal=1;
                            
                            LEAVE rt;                        
                END IF;
                
                
                #再查有手机号的机器码
                SELECT nPlayerID, LTRIM(RTRIM(phone)),szPass INTO _tmpPlayerID, _tmpPhone, _tmpPass FROM Table_User WHERE szOpenId = $strOpenID AND phone IS NOT NULL LIMIT 1;
                
                IF _tmpPlayerID>0 THEN
                
                    IF $strPass<>_tmpPass THEN   #已经绑了手机并且密码不对的，需要提示其使用手机登录
                        SET $returnVal = 6;  #这里设置为6，是为了和其他错误码相对应
                        SET $strOutErrMsg = CONCAT("该手机已绑定账号[",LEFT(_tmpPhone,3),"****",RIGHT(_tmpPhone,4),"]，\n请重新使用手机账号登录");
                        LEAVE rt;
                    ELSE
                    
                    UPDATE Table_User SET preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                    
                    SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex , szNickname,szHeadPicUrl
                    INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutNickName,$strOutHeadUrl
                    FROM Table_User WHERE nPlayerID = _tmpPlayerID;
            
                    SET $intFirstCreate  = 0;
                    SET $strOutErrMsg ='succ' ;
                    INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                    SET $returnVal=1;
                    
                    END IF;
                                         
                ELSE
                
                    #没有的则新建
                    SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
                
                    INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szOpenId,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4,acctype) 
                    VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strOpenID,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,_tmpReser1,0,_tmpUpUserID,_tmpHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType,1);
                                        
                    SET $strNickName = CONCAT('GU',@@IDENTITY);
                    
                    #加入公共俱乐部
                    SET $intOutPlayerId  = @@IDENTITY;
                    SET $intOutCardCount = _tmpCardCount;
                    SET $intOutJinBi     = _tmpJinBiCount;
                    SET $strOutErrMsg    = 'succ';
                    SET $intFirstCreate  = 1;
                    SET $intOutExtentCode = 0;
                    SET $intOutSex       = 1;
                    SET $strOutNickName  = $strNickName;
                    SET $strOutUserSign  = "";
                    
                    UPDATE Table_User SET szNickname = $strNickName,szThirdAccount = CONCAT('GU',$intOutPlayerId) WHERE nPlayerID=$intOutPlayerId;
                    
                    IF _tmpUpUserID <> 0 THEN
                        UPDATE Table_User SET `BindingTime` = NOW() WHERE nPlayerID=$intOutPlayerId;
                    END IF;
                                    
                    #---------------------------------
                    #加入联盟公共俱乐部
                    INSERT INTO `table_league_club_member` (  `nClubID`,  `nPlayerID`,  `szNickName`,  `nLevel`,  `partner`,  `nStatus`,  `tJoinTime`,  `nScore`,  `nLeCard`, `nFreezeReason`,  `BigWinner`) 
                    VALUES  (    _tmpChannel,   $intOutPlayerId ,   $strNickName,   1,   0,   1,   NOW(),   0,    0,   0,    0 ) ;
                    #---------------------------------
                    #加入普通俱乐部
--                             IF _tmpClubChannel > 0 THEN
--                                 INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore,nExLevel)
--                                  VALUES (_tmpClubChannel,$intOutPlayerId,_tmpUpUserID,_tmpLevel,1,_tmpClubUserScore,_tmpExLevel);
--                             END IF;
                    #---------------------------------
                    
                    INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                    SET $returnVal=1;
                                            
                END IF;
                
        ELSEIF $nLoginType = 1 THEN
        #微信创建
                
                IF EXISTS( SELECT 1 FROM `table_user` WHERE wxid = $strOpenID AND nActive = 1) THEN
                        SELECT nPlayerID INTO _tmpPlayerID FROM Table_User WHERE wxid = $strOpenID AND nActive = 1 LIMIT 1;
                        
                        UPDATE Table_User SET szNickName = $strNickName, szHeadPicUrl = $strHeadUrl, szPass = $strPass,preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                        
                        SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex, szNickname,szHeadPicUrl
                        INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutNickName,$strOutHeadUrl
                        FROM Table_User WHERE nPlayerID = _tmpPlayerID;
            
                        SET $intFirstCreate  = 0;
                        SET $strOutErrMsg ='succ' ;
                        INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                        SET $returnVal=1;
                                      
                ELSE
                        #没有的则新建
                        SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
                        INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4,wxid,acctype) 
                        VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,_tmpReser1,0,_tmpUpUserID,$strHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType,$strOpenID,1);
                                        
                        #加入公共俱乐部
                        SET $intOutPlayerId  = @@IDENTITY;
                        SET $intOutCardCount = _tmpCardCount;
                        SET $intOutJinBi     = _tmpJinBiCount;
                        SET $strOutErrMsg    = 'succ';
                        SET $intFirstCreate  = 1;
                        SET $intOutExtentCode = 0;
                        SET $intOutSex       = 1;
                        SET $strOutNickName  = $strNickName;
                                        SET $strOutHeadUrl   = $strHeadUrl;
                        SET $strOutUserSign  = "";
                        
                        UPDATE Table_User SET szThirdAccount = CONCAT('GU',$intOutPlayerId) WHERE nPlayerID=$intOutPlayerId;
                        
                        IF _tmpUpUserID <> 0 THEN
                                UPDATE Table_User SET `BindingTime` = NOW() WHERE nPlayerID=$intOutPlayerId;
                        END IF;
                                        
                        #---------------------------------
                        #加入联盟公共俱乐部
                        INSERT INTO `table_league_club_member` (  `nClubID`,  `nPlayerID`,  `szNickName`,  `nLevel`,  `partner`,  `nStatus`,  `tJoinTime`,  `nScore`,  `nLeCard`, `nFreezeReason`,  `BigWinner`) 
                        VALUES  (    _tmpChannel,   $intOutPlayerId ,   $strNickName,   1,   0,   1,   NOW(),   0,    0,   0,    0 ) ;
                        #---------------------------------
                        
                        INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                        SET $returnVal=1;
                        
                        IF $nUpperID > 0 THEN
                            #创建积分用户
                            CALL pr_jscore_user_create($intOutPlayerId,$nUpperID,@result);
                        END IF;
                        
                END IF;
        
        ELSEIF $nLoginType = 2 THEN
        #手机创建
                IF EXISTS( SELECT 1 FROM `table_user` WHERE phone = $strPhone AND nActive = 1) THEN
                
--                                 SET $intFirstCreate  = 0;
--                                 SET $returnVal = 0;
--                                 SET $strOutErrMsg = "此手机号码已绑定账户，请更换另一号码进行尝试";
--                                 LEAVE rt;
                        
                        SELECT nPlayerID INTO _tmpPlayerID FROM Table_User WHERE phone = $strPhone AND nActive = 1 LIMIT 1;
                        
                        UPDATE Table_User SET szNickName = $strNickName, szHeadPicUrl = $strHeadUrl, szPass = $strPass,preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                        
                        SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex, szNickname,szHeadPicUrl
                        INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutNickName,$strOutHeadUrl
                        FROM Table_User WHERE nPlayerID = _tmpPlayerID;
            
                        SET $intFirstCreate  = 0;
                        SET $strOutErrMsg ='succ' ;
                        INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                                                                        
                        SET $returnVal=1;
                        
                ELSE
                        #没有的则新建
                        SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
                        INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4,phone,`szThirdPass`,acctype) 
                        VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,_tmpReser1,0,_tmpUpUserID,_tmpHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType,$strPhone,$strPhonepass,1);
                                        
                        SET $strNickName = CONCAT('GU',@@IDENTITY);
                        #加入公共俱乐部
                        SET $intOutPlayerId  = @@IDENTITY;
                        SET $intOutCardCount = _tmpCardCount;
                        SET $intOutJinBi     = _tmpJinBiCount;
                        SET $strOutErrMsg    = 'succ';
                        SET $intFirstCreate  = 1;
                        SET $intOutExtentCode = 0;
                        SET $intOutSex       = 1;
                        SET $strOutNickName  = $strNickName;
                        SET $strOutUserSign  = "";
                        
                        UPDATE Table_User SET szNickname = $strNickName,szThirdAccount = CONCAT('GU',$intOutPlayerId) WHERE nPlayerID=$intOutPlayerId;
                        
                        IF _tmpUpUserID <> 0 THEN
                                UPDATE Table_User SET `BindingTime` = NOW() WHERE nPlayerID=$intOutPlayerId;
                        END IF;
                                        
                        #---------------------------------
                        #加入联盟公共俱乐部
                        INSERT INTO `table_league_club_member` (  `nClubID`,  `nPlayerID`,  `szNickName`,  `nLevel`,  `partner`,  `nStatus`,  `tJoinTime`,  `nScore`,  `nLeCard`, `nFreezeReason`,  `BigWinner`) 
                        VALUES  (    _tmpChannel,   $intOutPlayerId ,   $strNickName,   1,   0,   1,   NOW(),   0,    0,   0,    0 ) ;
                        #---------------------------------
                        
                        INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                        
                        IF $nUpperID > 0 THEN
                            #创建积分用户
                            CALL pr_jscore_user_create($intOutPlayerId,$nUpperID,@result);
                        END IF;
                                                
                        SET $returnVal=1;                         
                                                                        
                END IF;
        ELSE
                SET $strOutErrMsg    = 'type error';
                SET $returnVal=0;
        
        END IF;
        
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_user_recharge_diamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_user_recharge_diamond`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_user_recharge_diamond`(
		IN  $nPlayerID      INT,
                IN  $nAmount        INT,
                OUT $nCard          BIGINT,
		OUT $result         INT
)
RT:BEGIN
/*
当用户充钻入俱乐部账户时，先扣除自身的钻石
*/
DECLARE _errno  INT DEFAULT 0; 
DECLARE _count  INT;
DECLARE _name   VARCHAR(64);
 
DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _errno = 1;
 
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
 
START TRANSACTION;
 
SELECT `szNickName`,nCardCount  INTO _name, _count FROM `table_user` WHERE `nPlayerId` = $nPlayerID FOR UPDATE;
IF _count < $nAmount THEN
    ROLLBACK;
    SET $result = 0;
    LEAVE RT;
END IF;
  
#修改用户自己的钻石
UPDATE `table_user` SET `nCardCount` = @count := nCardCount - $nAmount WHERE `nPlayerId` = $nPlayerID;
 
#注意这里是取变动后的钻石值 
SET $nCard = @count;
  
IF _errno=0 THEN
        COMMIT; 
        SET $result = 1;
ELSE
        ROLLBACK;
        SET $result = 0;
END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_write_diamond_log
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_write_diamond_log`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_write_diamond_log`(
		    IN  $nPlayerID      INT,          #用户ID
		    IN  $nKindID        INT,          #游戏ID  
                    IN  $nClubID        INT,          #俱乐部ID
                    IN  $nAmount        BIGINT,       #变动值
                    IN  $nPlayDiamond   BIGINT,       #变动后玩家身上的值
                    in  $nType          INT,          #类型
                    IN  $szInfo         VARCHAR(32),  #用于某些类型下存储信息
                    IN  $szMark         VARCHAR(256)  #日志
)
RT:BEGIN
/*
写入钻石变动记录
*/
INSERT INTO `table_league_diamond_log` (`nPlayerID`, `nKindID`,  `nClubID`,  `nDiamond`,  `nPlayerDiamond`, `nType`,  `CreateTime`, `szInfo`,  `szRemark`) 
                            VALUES  (    $nPlayerID, $nKindID,   $nClubID,    $nAmount,    $nPlayDiamond,    $nType,      NOW(),    $szInfo,   $szMark   ) ;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_write_gamescore_detail
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_write_gamescore_detail`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_league_write_gamescore_detail`(
			IN  $nPlayerID     INT,
			IN  $nClubID       INT,
			IN  $nKindID       INT,
			IN  $nGameType     INT,
			IN  $nPlayCount    INT,
			IN  $nTableID      INT,
			IN  $nChairID      INT,
			IN  $szToken       VARCHAR(64),
			IN  $nRound        INT,
			IN  $nBaseScore    INT,
			IN  $tStartTime    TIMESTAMP,
			IN  $tEndTime      TIMESTAMP,
			IN  $nResult       INT,
			IN  $nBankID       INT,
            IN  $nPlayBackCode VARCHAR(32)
)
RT:BEGIN
/*
写小局的明细战绩
*/
INSERT INTO `table_league_club_game_score_detail` (  `nClubID`,  `nKindID`,  `nGameType`,  `nPlayCount`,  `nTableID`,  `nChairID`,  `szToken`,  `nRound`,  `nBaseScore`,  `tStartTime`,  `tEndTime`,  `nPlayerID`,  `nResult`,  `nBankID`, `nPlayBackCode`) 
VALUES  (                                           $nClubID,   $nKindID,    $nGameType,    $nPlayCount,   $nTableID,   $nChairID,   $szToken,   $nRound,   $nBaseScore,   $tStartTime,   $tEndTime,   $nPlayerID,   $nResult,   $nBankID, $nPlayBackCode) ;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_write_gamescore_total
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_write_gamescore_total`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_write_gamescore_total`(
			IN  $nPlayerID  INT,
			IN  $nClubID    INT,
			IN  $nTableID   INT,
			IN  $nKindID    INT,
			IN  $nGameType    INT,
			IN  $nPlayCount       INT,
			IN  $szToken       VARCHAR(64),
			IN  $nRound       INT,
			IN  $tStartTime       TIMESTAMP,
			IN  $nTotalResult       INT,
			IN  $nLeCard       INT,
			IN  $BigWinner       INT,
			IN  $Dismiss       INT,
                        IN  $nExtenID      INT,
			IN  $nFake         INT,
                        IN  $szInfo  	   varchar(256)
)
RT:BEGIN
/*
写总局战绩
*/
INSERT INTO table_league_club_game_score_total (  `nClubID`,  `nKindID`,  `nGameType`,  `nPlayCount`,  `nPlayerID`, `nTableID`, `nExtenID`, `szToken`,  `nRound`,  `tStartTime`,  `nTotalResult`,  `nLeCard`,  `BigWinner`,  `Dismiss`, `nFake`, `szInfo`) 
VALUES  (                                          $nClubID,   $nKindID,   $nGameType,   $nPlayCount,   $nPlayerID, $nTableID, $nExtenID,  $szToken,   $nRound,   $tStartTime,   $nTotalResult ,   $nLeCard,   $BigWinner,   $Dismiss, $nFake, $szInfo ) ;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_write_lecard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_write_lecard`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_write_lecard`(
                        IN  $nPlayerID  INT,            #用户ID
			IN  $nClubID    INT,            #俱乐部ID
			IN  $nCount     INT,            #乐卡变动值  可为负
			IN  $nType      INT,            #变动类型   1-赠送增加  2-游戏消耗  3-赠送减少(赠送人)
                        IN  $nKindID 	INT, 		#游戏ID
			IN  $szDesc     VARCHAR(256),   #备注
			OUT $nPlayCount BIGINT,         #玩家变动后的乐卡值
			OUT $result     int             #返回值 1-成功 0-失败
)
RT:BEGIN
/*
写入用户乐卡变动
*/
DECLARE _id   INT DEFAULT 0; 
declare _card BIGINT;
 
#查询用户是否存在
SELECT ID, nLeCard INTO _id, _card FROM table_league_club_member WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1;
IF _id=0 THEN
        SET $result = 0;
        LEAVE RT;
END IF;
  
#不能使乐卡变为负数
IF $nCount < 0 AND _card < ABS($nCount)  THEN
        SET $result = 0;
        LEAVE RT;
END IF;
 
#修改用户的乐卡数额
UPDATE `table_league_club_member` SET `nLeCard` = @card := nLeCard + $nCount WHERE ID = _id;
 
#插入乐卡的日志记录
INSERT INTO `table_league_lescore_log` (  `nPlayerID`,  `nClubID`,  `nKindID`,  `nLeCard`,  `nPlayerLeCard`,  `nType`,  `CreateTime`,  `szRemark`) 
VALUES  (    $nPlayerID,    $nClubID,  $nKindID,    $nCount,    @card,    $nType,    NOW(),    $szDesc  ) ;
 
SET $nPlayCount = @card;
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_write_lecard_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_write_lecard_temp`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_league_write_lecard_temp`(
                        IN  $nPlayerID  INT,            #用户ID
			IN  $nClubID    INT,            #俱乐部ID
			IN  $nCount     INT,            #乐卡变动值  可为负
			IN  $nType      INT,            #变动类型   1-赠送增加  2-游戏消耗  3-赠送减少(赠送人)
                        IN  $nKindID 	INT, 		#游戏ID
			IN  $szDesc     VARCHAR(256),   #备注,
			IN  $time     VARCHAR(256),   #备注,
			OUT $nPlayCount BIGINT,         #玩家变动后的乐卡值
			OUT $result     int             #返回值 1-成功 0-失败
)
RT:BEGIN
/*
写入用户乐卡变动，用于手工补数据
*/
DECLARE _id   INT DEFAULT 0; 
declare _card BIGINT;
 
#查询用户是否存在
SELECT ID, nLeCard INTO _id, _card FROM table_league_club_member WHERE `nClubID` = $nClubID AND `nPlayerID` = $nPlayerID AND `nStatus` = 1;
IF _id=0 THEN
        SET $result = 0;
        LEAVE RT;
END IF;
  
#不能使乐卡变为负数
IF $nCount < 0 AND _card < ABS($nCount)  THEN
        SET $result = 0;
        LEAVE RT;
END IF;
 
#修改用户的乐卡数额
UPDATE `table_league_club_member` SET `nLeCard` = @card := nLeCard + $nCount WHERE ID = _id;
 
#插入乐卡的日志记录
INSERT INTO `table_league_lescore_log` (  `nPlayerID`,  `nClubID`,  `nKindID`,  `nLeCard`,  `nPlayerLeCard`,  `nType`,  `CreateTime`,  `szRemark`) 
VALUES  (    $nPlayerID,    $nClubID,  $nKindID,    $nCount,    @card,    $nType,    $time,    $szDesc  ) ;
 
SET $nPlayCount = @card;
SET $result = 1;
                             
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_write_member_log
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_write_member_log`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_write_member_log`(
		    IN  $nPlayerID      INT,          #用户ID     
                    IN  $nClubID        INT,          #俱乐部ID
                    IN  $szMark         VARCHAR(256)  #日志
)
RT:BEGIN
/*
写入用户变动记录
*/
INSERT INTO table_league_member_log(nClubID, nPlayerID, CreateTime, szRemark) 
VALUE ($nClubID,$nPlayerID,NOW(),$szMark);
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_league_write_user_diamond_log
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_league_write_user_diamond_log`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_league_write_user_diamond_log`(
		IN  $nPlayerID      INT,
		IN  $nClubID        INT,
                IN  $nAmount        INT,
                IN  $nCardCount     BIGINT,
                IN  $nClubCount     BIGINT,
		OUT $result         INT
)
RT:BEGIN
/*
用户充钻入俱乐部后，写日志记录
*/
DECLARE _szmark VARCHAR(256);
SET _szmark  = CONCAT("亲友圈充钻：",$nAmount);
 
CALL pr_league_write_diamond_log($nPlayerID,0,$nClubID,-1*$nAmount,$nCardCount,$nClubCount, 1, NOW(), _szmark);
 
SET $result = 1;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_listzhanji
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_listzhanji`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_listzhanji`(in $szMatchId varchar(32))
begin
     declare v_sql varchar(500);    
	   set @ids=(SELECT CONCAT(szTableId,0)  
               FROM table_match_matchrec  
               WHERE szMatchId=$szMatchId);
		set @SqlStr1=' INSERT INTO table_web_listzhanji (szMatchId, TableId,szPlayerId1,nScore1,szNickname1,szPlayerId2,nScore2,szNickname2,szPlayerId3,nScore3,szNickname3,szPlayerId4,nScore4,szNickname4,szendtime )
									SELECT distinct ';
    set @SqlStr2= ' as szMatchId, TableId,szPlayerId1,nScore1,szNickname1,szPlayerId2,nScore2,szNickname2,szPlayerId3,nScore3,szNickname3,szPlayerId4,nScore4,szNickname4,szendtime 
									FROM table_web_userzhangji 
									WHERE TableId in';
		set @SqlStr=CONCAT(@SqlStr1,'''',$szMatchId,'''',@SqlStr2,'(',@ids,')');

	  prepare totalCount from @SqlStr;
		execute totalCount;
    deallocate prepare totalCount;  
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_LoadZhanJi5
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_LoadZhanJi5`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_LoadZhanJi5`(
in $intPlayerId int
)
BEGIN


  DECLARE _sdate1 VARCHAR(64) DEFAULT date_sub(curdate(),interval 3 day);
  select Idx as '@intOutIdx' ,nTableId as '@intOutTableId',nMyChairId as '@intOutMyChair',nGameId as '@intOutGameID',
                  nChair0Score as '@intChair0Score',nChair1Score as '@intChair1Score',nChair2Score as '@intChair2Score',nChair3Score as '@intChair3Score',
                  nChair4Score as '@intChair4Score',nChair5Score as '@intChair5Score',nChair6Score as '@intChair6Score',nChair7Score as '@intChair7Score',
                  nGameRound as '@intTotalRound',
szChair0Name as '@szChair0Name',szChair1Name as '@szChair1Name',szChair2Name as '@szChair2Name',szChair3Name as '@szChair3Name',
szChair4Name as '@szChair4Name',szChair5Name as '@szChair5Name',szChair6Name as '@szChair6Name',szChair7Name as '@szChair7Name',
szTime as '@szOutTime' from  Table_Web_ZhanJi where nPlayerId = $intPlayerId and szTime>_sdate1 order by szTime desc LIMIT 0,50;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_LoadZhanJiDetailInfo2
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_LoadZhanJiDetailInfo2`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_LoadZhanJiDetailInfo2`(
				in $intPlayerId   int,
				in $intTableId    int
)
BEGIN
		
      
	  select (select nGameId from Table_Web_ZhanJi where nPlayerID = $intPlayerId and nTableId = $intTableId) AS nGameID ,
	          nMyChairId,szEndTime,szRecToken,nRecShareID,
	          szPlayerId1,nArrow1,nScore1,szNickName1,szPlayerId2,nArrow2,nScore2,szNickName2,szPlayerId3,nArrorw3 AS nArrow3,nScore3,szNickName3,szPlayerId4,nArrow4,nScore4,szNickName4,
	          szPlayerId5,nArrow5,nScore5,szNickName5,szPlayerId6,nArrow6,nScore6,szNickName6,szPlayerId7,nArrow7,nScore7,szNickName7,szPlayerId8,nArrow8,nScore8,szNickName8
	         FROM Table_Web_UserZHangJi 
	         where nPlayerID = $intPlayerId and TableId = $intTableId and szRecToken <> '' order by jushu;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_mail_add
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_mail_add`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_mail_add`(
IN $nPlayerId INT,
IN $title VARCHAR(32),
IN $content VARCHAR(256),
IN $nSenderID INT,
IN $nStatus INT
)
RT:BEGIN
	INSERT INTO table_mail(`nPlayerID`, `title`, `content`, `nSenderID`, `nStatus`)
		VALUES($nPlayerId, $title, $content, $nSenderID, $nStatus);
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_mail_check_status
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_mail_check_status`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_mail_check_status`(
IN $nPlayerId INT,
IN $nStatus INT
)
RT:BEGIN
	SELECT ID FROM table_mail WHERE nPlayerId = $nPlayerId AND nStatus = $nStatus LIMIT 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_mail_delete
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_mail_delete`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_mail_delete`(
IN $nPlayerId INT,
IN $ID INT,
IN $nStatus INT
)
RT:BEGIN
  IF $ID > 0 THEN
    DELETE FROM table_mail WHERE nPlayerId = $nPlayerId AND ID = $ID;
  ELSE
    DELETE FROM table_mail WHERE nPlayerId = $nPlayerId AND nStatus = $nStatus;
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_mail_expire
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_mail_expire`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_mail_expire`(
IN $time TIMESTAMP
)
RT:BEGIN
	DELETE FROM table_mail WHERE createTime < $time;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_mail_get_list
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_mail_get_list`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_mail_get_list`(
IN $nPlayerId INT,
IN $nCount INT
)
RT:BEGIN
  SELECT ID, title, nStatus, createTime FROM table_mail 
    WHERE nPlayerId = $nPlayerId
    ORDER BY ID DESC LIMIT $nCount;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_mail_set_status
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_mail_set_status`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_mail_set_status`(
IN $nPlayerId INT,
IN $ID INT,
IN $nStatus INT
)
RT:BEGIN
  UPDATE table_mail SET nStatus = $nStatus WHERE ID = $ID AND nPlayerId = $nPlayerId;
  SELECT ID, title, content, nStatus, createTime FROM table_mail 
    WHERE nPlayerId = $nPlayerId and ID = $ID;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_match_get_cfg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_match_get_cfg`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_match_get_cfg`(
      IN $nClubId INT,
      IN $nServerId INT
 )
BEGIN
 /*
 获取比赛配置
 */
 SELECT nClubId, nGameType, nServerId, nMatchName, nValid, nConfigJson, tCreateTime, nSortId FROM table_match_cfg WHERE nClubId = $nClubId AND nServerId = $nServerId;
 END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_match_get_cfg_list
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_match_get_cfg_list`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_match_get_cfg_list`(
      IN $nClubId INT
 )
BEGIN
 /*
 获取比赛配置列表
 */
 SELECT nClubId, nGameType, nServerId, nMatchName, nValid, nConfigJson, tCreateTime, nSortId FROM table_match_cfg WHERE nClubId = $nClubId;
 END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_match_get_record_detail
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_match_get_record_detail`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_match_get_record_detail`(
     IN $nPlayerId INT
    ,IN $szMatchToken VARCHAR(64)
    ,IN $nDir      INT
    ,IN $nIndex    BIGINT
)
BEGIN
/*
获取用户的比赛某场详细信息
*/
IF $nIndex = 0 THEN
        SELECT ID,UNIX_TIMESTAMP(tStartTime) AS tStartTime,nResultMoney,nMatchRound,nRound,nBankID,nTableID,nChairID,matchName FROM `table_match_game_score_detail` WHERE nPlayerID = $nPlayerId AND szMatchID = $szMatchToken ORDER BY ID DESC LIMIT 10;
ELSE
        SELECT ID,UNIX_TIMESTAMP(tStartTime) AS tStartTime,nResultMoney,nMatchRound,nRound,nBankID,nTableID,nChairID,matchName FROM `table_match_game_score_detail` WHERE nPlayerID = $nPlayerId AND `szMatchID` = $szMatchToken AND ID < $nIndex ORDER BY ID DESC LIMIT 10;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_match_get_record_total
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_match_get_record_total`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_match_get_record_total`(
     IN $nPlayerId INT
    ,IN $nGameType INT
    ,IN $nMatchType INT
    ,IN $nDir      INT
    ,IN $nIndex    BIGINT
)
BEGIN
/*
获取用户的比赛汇总信息
*/
IF $nIndex = 0 THEN
    
        select ID,szMatchID,nMatchType,nServerID, UNIX_TIMESTAMP(tStartTime) AS StartTime,nRank,nReward,matchName,
        (SELECT COUNT(ID) FROM `table_match_game_score_detail` WHERE nPlayerId = tgs.nPlayerId AND szMatchID = tgs.szMatchID) AS total_rounds, 
        (SELECT COUNT(ID) FROM `table_match_game_score_detail` WHERE nPlayerId = tgs.nPlayerId AND szMatchID = tgs.szMatchID AND nResultMoney > 0) AS win_rounds
        from `table_match_game_score` tgs where `nPlayerId` = $nPlayerId AND nGameType = $nGameType order by ID DESC LIMIT 10;
        
ELSE
        SELECT ID,szMatchID,nMatchType,nServerID, UNIX_TIMESTAMP(tStartTime) AS StartTime,nRank,nReward,matchName,
        (SELECT COUNT(ID) FROM `table_match_game_score_detail` WHERE nPlayerId = tgs.nPlayerId AND szMatchID = tgs.szMatchID) AS total_rounds, 
        (SELECT COUNT(ID) FROM `table_match_game_score_detail` WHERE nPlayerId = tgs.nPlayerId AND szMatchID = tgs.szMatchID AND nResultMoney > 0) AS win_rounds
        FROM `table_match_game_score` tgs WHERE `nPlayerId` = $nPlayerId AND nGameType = $nGameType AND ID < $nIndex ORDER BY ID DESC LIMIT 10;
        
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_match_write_game_list
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_match_write_game_list`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_match_write_game_list`(
     IN $nClubID    INT
    ,IN $nGameType  INT
    ,IN $nMatchType INT
    ,IN $nServerID INT
    ,IN $startTime INT
    ,IN $endTime   INT
    ,IN $szMatchID VARCHAR(64)
    ,IN $nTotal    INT
    ,IN $nRobot    INT
    ,IN $nFeeTotal      BIGINT
    ,IN $nFeeGoodsTotal BIGINT
    ,IN $nFeeGoodsID    INT
    ,IN $nRewardTotal   BIGINT
)
BEGIN
/*
写入比赛总表记录
2020-11-9 增加物品报名费合计字段
2020-11-19 增加物品报名费ID字段
*/
INSERT INTO `table_match_game_list` (
  `nClubID`,
  `nGameType`,
  `nMatchType`,
  `nServerID`,
  `tStartTime`,
  `tEndTime`,
  `szMatchID`,
  `nTotal`,
  `nRobot`,
  `nFeeTotal`,
  `nFeeGoodsTotal`,
  `nFeeGoodsID`,
  `nRewardTotal`
) 
VALUES
  (
    $nClubID,
    $nGameType,
    $nMatchType,
    $nServerID,
    FROM_UNIXTIME($startTime),
    FROM_UNIXTIME($endTime),
    $szMatchID,
    $nTotal,
    $nRobot,
    $nFeeTotal,
    $nFeeGoodsTotal,
    $nFeeGoodsID,
    $nRewardTotal
  ) ;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_match_write_record_detail
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_match_write_record_detail`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_match_write_record_detail`(
     IN $nPlayerId INT
    ,IN $nClubID   INT
    ,IN $nGameType INT
    ,IN $nMatchType INT
    ,IN $nServerID  INT
    ,IN $nTableID   INT
    ,IN $nChairID   INT
    ,IN $szMatchID  VARCHAR(64)
    ,IN $nRound     INT
    ,IN $nMatchRound INT
    ,IN $nBaseScore INT
    ,IN $nPlayCount TINYINT
    ,IN $tStartTime VARCHAR(64)
    ,IN $tEndTime   VARCHAR(64)
    ,IN $bRobot     tinyint
    ,IN $szCardData VARCHAR(256)
    ,IN $nEnterScore BIGINT
    ,IN $nBetScore  INT
    ,IN $nValidBet  INT
    ,IN $nResultMoney INT
    ,IN $nPlayerScore BIGINT
    ,IN $nTax       INT
    ,IN $nBankID    INT
    ,IN $szExtChar  text
    ,IN $CardData   TEXT
    ,IN $nMatchStep tinyint
    ,IN $nEliminate INT
    ,IN $nCardData  VARCHAR(256)
	,IN $matchName VARCHAR (256)
)
BEGIN
/*
写入用户的比赛明细信息
*/
INSERT INTO `table_match_game_score_detail` (
  `nPlayerId`,
  `nClubID`,
  `nGameType`,
  `nMatchType`,
  `nServerID`,
  `nTableID`,
  `nChairID`,
  `szMatchID`,
  `nRound`,
  `nMatchRound`,
  `nBaseScore`,
  `nPlayCount`,
  `tStartTime`,
  `tEndTime`,
  `bRobot`,
  `szCardData`,
  `nEnterScore`,
  `nBetScore`,
  `nValidBet`,
  `nResultMoney`,
  `nPlayerScore`,
  `nTax`,
  `nBankID`,
  `szExtChar`,
  `CardData`,
  `nMatchStep`,
  `nEliminate`,
  `nCardData`,
   `matchName`
) 
VALUES
  (
    $nPlayerId,
    $nClubID,
    $nGameType,
    $nMatchType,
    $nServerID,
    $nTableID,
    $nChairID,
    $szMatchID,
    $nRound,
    $nMatchRound,
    $nBaseScore,
    $nPlayCount,
    $tStartTime,
    $tEndTime,
    $bRobot,
    $szCardData,
    $nEnterScore,
    $nBetScore,
    $nValidBet,
    $nResultMoney,
    $nPlayerScore,
    $nTax,
    $nBankID,
    $szExtChar,
    $CardData,
    $nMatchStep,
    $nEliminate,
    $nCardData,
    $matchName
  ) ;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_match_write_record_total
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_match_write_record_total`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_match_write_record_total`(
  IN $nPlayerId INT,
  IN $nClubID INT,
  IN $nGameType INT,
  IN $nMatchType INT,
  IN $nServerID INT,
  IN $startTime INT,
  IN $endTime INT,
  IN $nRank INT,
  IN $nReword BIGINT,
  IN $szMatchID VARCHAR (64),
  IN $nFee INT,
  IN $nFeeGoods INT,
  IN $nFeeGoodsID INT,
  IN $matchName VARCHAR (256)
)
BEGIN
  /*
写入用户的比赛汇总信息
2020-11-9 增加物品报名费字段
2020-11-9 增加物品报名费ID字段
*/
  INSERT INTO `table_match_game_score` (
    `nPlayerId`,
    `nClubID`,
    `nGameType`,
    `nMatchType`,
    `nServerID`,
    `tStartTime`,
    `tEndTime`,
    `nRank`,
    `nReward`,
    `szMatchID`,
    `nFee`,
    `nFeeGoods`,
    `nFeeGoodsID`,
    `matchName`
  ) 
  VALUES
    (
      $nPlayerId,
      $nClubID,
      $nGameType,
      $nMatchType,
      $nServerID,
      FROM_UNIXTIME($startTime),
      FROM_UNIXTIME($endTime),
      $nRank,
      $nReword,
      $szMatchID,
      $nFee,
      $nFeeGoods,
      $nFeeGoodsID,
      $matchName
    ) ;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_match_write_result_detail
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_match_write_result_detail`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_match_write_result_detail`(
     IN $nPlayerId INT
    ,IN $nClubID   INT
    ,IN $nTableID   INT
    ,IN $nChairID   INT
    ,IN $szMatchID  VARCHAR(64)
    ,IN $nRound     INT
    ,IN $nMatchResult TINYINT
    ,IN $nRank      INT
)
BEGIN
/*
写入用户的比赛晋级明细信息
*/
INSERT INTO `table_match_game_result_detail` (
  `nPlayerId`,
  `nClubID`,
  `nTableID`,
  `nChairID`,
  `szMatchID`,
  `nRound`,
  `nMatchResult`,
  `nRank`
) 
VALUES
  (
    $nPlayerId,
    $nClubID,
    $nTableID,
    $nChairID,
    $szMatchID,
    $nRound,
    $nMatchResult,
    $nRank
  ) ;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_misc_binding
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_misc_binding`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_misc_binding`(
		IN $intPlayerId   INT,
		IN $nClubID       INT,
		IN $strPhone      VARCHAR(64),
		IN $strPass       VARCHAR(64),
		OUT $returnVal    INT,
		OUT $strOutErrMsg VARCHAR(256)
)
rt:BEGIN
/*
绑定用户手机，变成正式用户
2019-10-29 增加openid
2019-10-30 增加返回俱乐部ID
2019-12-5  去掉返回俱乐部ID，传入俱乐部ID，不允许同俱乐部内多个手机号绑定
2020-2-28  绑定时不会写入手机openid, 密码存放入szThirdPass
2021-12-14 修改返回字串，以支持多语言版本
*/
	IF EXISTS(SELECT 1 FROM Table_User WHERE phone=$strPhone AND `nChannel` = $nClubID AND nActive = 1) THEN
	#已经存在该手机绑定的账号，不允许再绑定
		SET $strOutErrMsg = 'PR_PHONE_BOUND';
		SET $returnVal = 0;
	ELSEIF NOT EXISTS(SELECT 1 FROM Table_User WHERE nPlayerId = $intPlayerId AND `nChannel` = $nClubID AND nActive = 1) THEN
		SET $strOutErrMsg ='PR_BOUNND_ACCOUNT_ERR';
		SET $returnVal=0;
	ELSE
	
        #新号绑定手机
		UPDATE table_user SET phone = $strPhone, `szThirdPass` = $strPass WHERE nPlayerId = $intPlayerId;
		SET $strOutErrMsg ='PR_BINDING_DONE' ;
		SET $returnVal=1;
	END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_misc_mobile_login
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_misc_mobile_login`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_misc_mobile_login`(
    IN  $strPhone    VARCHAR(64),
    IN  $strPass     VARCHAR(64),
    IN  $nClubID     INT,
    OUT $nPlayerID   INT,
    OUT $returnVal   INT,
    OUT $returnMsg   VARCHAR(256)
)
rt:BEGIN
/*
使用手机验证码登录
2019-10-29 增加openid
2020-2-28  增加俱乐部ID，随机密码,去掉openid,去掉返回密码
2021-12-14 修改返回字串，以支持多语言版本
*/
IF EXISTS(SELECT * FROM Table_User WHERE phone=$strPhone AND `nChannel` = $nClubID AND nActive = 1 ) THEN
        SELECT nPlayerID INTO $nPlayerID FROM Table_User WHERE phone=$strPhone AND `nChannel` = $nClubID AND nActive = 1 LIMIT 1;
        UPDATE table_user SET `szPass` = $strPass WHERE nPlayerId = $nPlayerID;
        
        SET $returnVal = 1;
        SET $returnMsg = "PR_DONE";
ELSE
        SET $nPlayerID = 0;
        SET $returnVal = 0;
        SET $returnMsg = "PR_NOT_FIND_USER";
END IF;
    
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_misc_mobile_pass_login
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_misc_mobile_pass_login`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_misc_mobile_pass_login`(
    IN  $strPhone    VARCHAR(64),
    IN  $szLoginPass VARCHAR(64),
    IN  $strPass     VARCHAR(64),
    IN  $nClubID     INT,
    OUT $nPlayerID   INT,
    OUT $returnVal   INT,
    OUT $returnMsg   VARCHAR(256)
)
rt:BEGIN
/*
使用手机+密码登录，返回ID
2020-2-18 增加对账号不存在的处理, 修改重写openid的处理
2020-2-28 增加随机密码写入，取消返回密码
2021-12-14 修改返回字串，以支持多语言版本
*/
 
SET $nPlayerID = 0;
SET $returnVal = 0;
                
IF EXISTS(SELECT 1 FROM Table_User WHERE phone=$strPhone AND `nChannel` = $nClubID  AND nActive = 1 ) THEN
        IF EXISTS(SELECT 1 FROM Table_User WHERE phone=$strPhone AND `szThirdPass` = $szLoginPass AND `nChannel` = $nClubID AND nActive = 1 ) THEN
                SELECT nPlayerID INTO $nPlayerID FROM Table_User WHERE phone=$strPhone AND `szThirdPass` = $szLoginPass AND `nChannel` = $nClubID AND nActive = 1 LIMIT 1;
                UPDATE table_user SET `szPass` = $strPass WHERE nPlayerId = $nPlayerID;
                SET $returnVal = 1;
                SET $returnMsg = "PR_DONE";        
        ELSE
                SET $returnMsg = "PR_ACCOUNT_PASS_ERROR";               
        END IF;
ELSE
        SET $returnMsg = "PR_ACCOUNT_NOT_EXISTS";
END IF;
    
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_misc_resetpass
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_misc_resetpass`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_misc_resetpass`(
    IN  $strPhone    VARCHAR(64),
    IN  $szNewPass   VARCHAR(64),
    IN  $nClubID     INT,
    OUT $returnVal   INT,
    OUT $returnMsg   VARCHAR(256)
)
rt:BEGIN
/*
重置密码
2020-2-28 密码写到第三方账号的密码字段
2021-12-14 修改返回字串，以支持多语言版本
*/
DECLARE _playid INT;
IF EXISTS(SELECT * FROM Table_User WHERE phone=$strPhone AND `nChannel` = $nClubID AND nActive = 1 ) THEN
        
        SELECT nPlayerID INTO _playid FROM Table_User WHERE phone=$strPhone AND `nChannel` = $nClubID AND nActive = 1 LIMIT 1;
        UPDATE table_user SET szThirdPass = $szNewPass WHERE nPlayerID = _playid;
        SET $returnVal = 1;
        SET $returnMsg = "PR_DONE";
ELSE
        SET $returnVal = 0;
        SET $returnMsg = "PR_NOT_FIND_USER";
END IF;
    
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_owner_achievement_get
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_owner_achievement_get`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_owner_achievement_get`(
 IN $nPlayerID INT(11)
,IN $nClubID INT(11)
,IN $nIndex INT(11)
,OUT $nAllTeamAch BIGINT
,OUT $nAllDirectlyAch BIGINT
,OUT $nAllCommission BIGINT
,OUT $nTotalCount INT
,OUT $retVal INT
,OUT $retMsg VARCHAR(128)
)
RT:BEGIN
/*
用户业绩数据
包括累积佣金，累积团队业绩，累积自营业绩
各个日期的 直属业绩，团队业绩，个人佣金
*/
DECLARE _page   INT;
DECLARE _count  INT;
 
#每页的条数
SET _count = 5;
 
IF $nIndex <= 0 THEN
        SET $nIndex = 1;
END IF;
 
SET _page = ($nIndex-1)*_count;
 
IF NOT EXISTS (SELECT 1 FROM table_clubmember WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID AND nStatus = 1) THEN
 SET $retVal = 0;
 SET $retMsg = "player not exists.";
 LEAVE RT;
END IF;
 
#累计佣金
SELECT IFNULL(SUM(WeekMyRebate),0) INTO $nAllCommission FROM table_pyramid_rebate WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID;
 
#累计团队业绩,累计自营业绩
SELECT IFNULL(SUM(teamWater),0),IFNULL(SUM(directlyWater),0) INTO $nAllTeamAch,$nAllDirectlyAch
FROM table_web_clubmemberproxy WHERE nplayerid = $nPlayerID AND nclubid = $nClubID;
  
#获取按照时间排列的直属业绩，团队业绩，个人佣金
SELECT UNIX_TIMESTAMP(ts.tEffectiveDate) AS tEndTime, tc.directlyWater,tc.teamWater,IFNULL(SUM(ts.WeekMyRebate),0) AS nAmount
FROM table_web_clubmemberproxy tc, table_pyramid_rebate ts 
WHERE tc.nclubid = $nClubID AND ts.WeekMyRebate > 0 AND tc.nplayerid = $nPlayerID AND tc.nclubid=ts.nClubID AND tc.nplayerid=ts.nPlayerID 
AND DATE_FORMAT(tc.tEndTime,"%Y-%m-%d") = DATE_FORMAT(ts.tEffectiveDate,"%Y-%m-%d") GROUP BY DATE_FORMAT(ts.tEffectiveDate,"%Y-%m-%d")
ORDER BY tc.tEndTime DESC LIMIT _page, _count;
 
#求总数
SELECT COUNT(tc.ID) INTO $nTotalCount FROM table_web_clubmemberproxy tc, table_pyramid_rebate ts 
WHERE tc.nclubid = $nClubID AND tc.nplayerid = $nPlayerID AND tc.nclubid=ts.nClubID AND tc.nplayerid=ts.nPlayerID AND ts.WeekMyRebate > 0
AND DATE_FORMAT(tc.tEndTime,"%Y-%m-%d") = DATE_FORMAT(ts.tEffectiveDate,"%Y-%m-%d");
 
SET $retVal = 1;
SET $retMsg = "ok";
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_owner_achievement_get3
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_owner_achievement_get3`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_owner_achievement_get3`(
 IN $nPlayerID INT(11)
,IN $nClubID INT(11)
,IN $nIndex INT(11)
,OUT $nAllTeamAch BIGINT
,OUT $nAllDirectlyAch BIGINT
,OUT $nAllCommission BIGINT
,OUT $nTotalCount INT
,OUT $retVal INT
,OUT $retMsg VARCHAR(128)
)
RT:BEGIN
/*
用户业绩数据
包括累积佣金，累积团队业绩，累积自营业绩
各个日期的 直属业绩，团队业绩，个人佣金
*/
DECLARE _page   INT;
DECLARE _count  INT;
 
#每页的条数
SET _count = 5;
 
IF $nIndex <= 0 THEN
        SET $nIndex = 1;
END IF;
 
SET _page = ($nIndex-1)*_count;
 
IF NOT EXISTS (SELECT 1 FROM table_clubmember WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID AND nStatus = 1) THEN
 SET $retVal = 0;
 SET $retMsg = "player not exists.";
 LEAVE RT;
END IF;
 
#累计佣金
select IFNULL(SUM(WeekMyRebate),0) INTO $nAllCommission FROM table_pyramid_rebate WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID;
 
#累计团队业绩,累计自营业绩
select IFNULL(sum(teamWater),0),IFNULL(SUM(directlyWater),0) INTO $nAllTeamAch,$nAllDirectlyAch
FROM table_web_clubmemberproxy WHERE nplayerid = $nPlayerID AND nclubid = $nClubID ;
  
#获取按照时间排列的直属业绩，团队业绩，个人佣金
SELECT unix_timestamp(ts.CreateTime) as tEndTime, tc.directlyWater,tc.teamWater,IFNULL(SUM(ts.WeekMyRebate),0) as nAmount
FROM table_web_clubmemberproxy tc, table_pyramid_rebate ts 
WHERE tc.nclubid = $nClubID AND tc.nplayerid = $nPlayerID AND tc.nclubid=ts.nClubID AND tc.nplayerid=ts.nPlayerID 
AND DATE_FORMAT(tc.tEndTime,"%Y-%m-%d") = DATE_FORMAT(ts.tEffectiveDate,"%Y-%m-%d") GROUP BY DATE_FORMAT(ts.tEffectiveDate,"%Y-%m-%d")
ORDER BY tc.tEndTime DESC LIMIT _page, _count;
#求总数
select count(tc.ID) into $nTotalCount from table_web_clubmemberproxy tc, table_pyramid_rebate ts 
WHERE tc.nclubid = $nClubID AND tc.nplayerid = $nPlayerID AND tc.nclubid=ts.clubid AND tc.nplayerid=ts.nPlayerID 
AND DATE_FORMAT(tc.tEndTime,"%Y-%m-%d") = DATE_FORMAT(ts.tEffectiveDate,"%Y-%m-%d");
 
SET $retVal = 1;
SET $retMsg = "ok";
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_PayChangeDiamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_PayChangeDiamond`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `Pr_PayChangeDiamond`(
                        in $intPlayerId int,
                        in $prepay_no varchar(256),
                        out $returnVal int
)
returnVal:BEGIN
/*
钻石充值
*/
	declare _out_trade_no varchar(128) default 0;
	declare _PretotalFree,_totalFree,_totalFree2,_playerId,_state,_TotalDiamond,_addDiamond,_tran_error,_counts int  default 0;
	declare _NickName varchar(64);
	declare _Remark varchar(200);
	declare _errno int default 0;
        declare _nLevel int default 0;
	declare continue handler for sqlexception set _errno = 1;
	select out_trade_no, total_fee, nPlayerId into _out_trade_no, _PretotalFree, _playerId from Table_pay_pre where  prepay_no=$prepay_no AND nPlayerId=$intPlayerId;
	
        if not exists(select * from Table_pay_log where out_trade_no=_out_trade_no AND state=0) then
        set $returnVal=1;
        LEAVE returnVal;
        end if;
        if not exists(select * from table_league_club_member where nPlayerID = _playerId and nClubID = 666000) then 
        set $returnVal=2;
        LEAVE returnVal;
        end if;
        select total_fee,total_fee as total_fee2,state into _totalFree,_totalFree2, _state   from Table_pay_log where  out_trade_no=_out_trade_no;
         
	if (_totalFree <= 0 OR _state=1 OR _playerId != $intPlayerId) then
		set $returnVal=3;
		LEAVE returnVal;
	end if;
	
	select reser1 into _nLevel from table_user where nPlayerID = _playerId and accType <1000;
	 
	if not exists (select * from table_league_pay where PayLevel = _nLevel and PayMoney = FLOOR(ABS(_totalFree))) then
		set $returnVal=4;
                LEAVE returnVal;
	end if;
	select PayDimond into _addDiamond from table_league_pay where PayLevel = _nLevel and PayMoney = FLOOR(ABS(_totalFree2));
	select nCardCount into _TotalDiamond from Table_User where  nPlayerId = _playerId;
	set _TotalDiamond = _TotalDiamond + _addDiamond;
	
	start transaction;
	
	UPDATE Table_pay_log SET state= 1, Diamond = _TotalDiamond, diamond_count = _addDiamond WHERE out_trade_no=_out_trade_no;
	UPDATE Table_User SET nCardCount = _TotalDiamond WHERE nPlayerId = _playerId;
	SELECT szNickName into _NickName FROM Table_User WHERE nPlayerId = _playerId;
	
	SET _Remark =CONCAT('线上充值 余额：',_TotalDiamond);
	
	
	CALL pr_league_write_diamond_log($intPlayerId,_totalFree*10,0,_addDiamond,_TotalDiamond,7, '', _Remark);
		
	if _errno=0 THEN
		COMMIT;
	else 
		set _tran_error=1;
		ROLLBACK;
	end if;
	
	if _tran_error>0 then
		set $returnVal= 5;
		LEAVE returnVal;
	end if;
	
	if @result=1 THEN
		select @result into _tran_error;
	end if;
	
	set $returnVal= 6;
	LEAVE returnVal;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_PayChangeDiamond_tmp
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_PayChangeDiamond_tmp`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_PayChangeDiamond_tmp`(
in $intPlayerId int,
in $prepay_no varchar(256),
out $returnVal int
)
returnVal:BEGIN
declare _out_trade_no varchar(128) default 0;

declare _PretotalFree,_totalFree,_totalFree2,_playerId,_state,_TotalDiamond,_addDiamond,_tran_error,_counts int  default 0;


    declare _NickName varchar(64);
    declare _Remark varchar(200);


declare _errno int default 0;

declare continue handler for sqlexception set _errno = 1;

select out_trade_no, total_fee, nPlayerId into _out_trade_no, _PretotalFree, _playerId from Table_pay_pre where  prepay_no=$prepay_no AND nPlayerId=$intPlayerId;
if not exists(select * from Table_pay_log where out_trade_no=_out_trade_no AND state=0) then
set $returnVal=1;
LEAVE returnVal;
end if;

if exists(SELECT 1 from table_user where ExtendCode >0  and nPlayerId =$intPlayerId   ) then
					select total_fee,case when total_fee= 600  then 600
						when total_fee= 1800   then 1840
						when total_fee= 6400   then 6720
						when total_fee= 12800  then 13800
						when total_fee= 29800  then 33400
						when total_fee= 64800  then 77760               
										end as total_fee2,
										state 
				 into _totalFree,_totalFree2, _state   
				 from Table_pay_log 
				 where  out_trade_no=_out_trade_no;
else
	       select total_fee,total_fee as total_fee2,
	                  state 
	       into _totalFree,_totalFree2, _state   
	       from Table_pay_log 
	       where  out_trade_no=_out_trade_no;
end if;


if (_totalFree <= 0 OR _state=1 OR _playerId != $intPlayerId) then
set $returnVal=1;
LEAVE returnVal;
end if;

set _TotalDiamond = (select nCardCount from Table_User where  nPlayerId = _playerId);


set _addDiamond = ABS(_totalFree2/10);
set _TotalDiamond = _TotalDiamond + _addDiamond;

start transaction;
 UPDATE Table_pay_log SET state= 1, Diamond = _TotalDiamond WHERE out_trade_no=_out_trade_no;

 UPDATE Table_User SET nCardCount = _TotalDiamond WHERE nPlayerId = _playerId;

 SELECT szNickName into _NickName FROM Table_User WHERE nPlayerId = _playerId;
SET _Remark =CONCAT('现金购买 余额：',_TotalDiamond);


    INSERT INTO Table_DiamondActionLog(AccountId,szNickName,Count,szRemark,ActionDate) VALUES(_playerId,_NickName,_addDiamond,_Remark,NOW());

select count(1) into _counts from Table_PromoterCount where PlayerId=$intPlayerId;

if _counts is not null and  _counts> 0 then
update Table_PromoterCount set IsPay=1,CreateDate=NOW() where PlayerId=$intPlayerId;
end if;

 if _errno=0 THEN
COMMIT;
 else 
 set _tran_error=1;
 ROLLBACK;
end if;

if _tran_error>0 then
set $returnVal=1;
LEAVE returnVal;
end if;

call Pro_DividedMoney($intPlayerId,_totalFree,@result);
call Pr_Score_AddScoreLimitDay($intPlayerId,4,_totalFree/100,0);
if @result=1 THEN
select @result into _tran_error;
end if;
    
set $returnVal=1;
LEAVE returnVal;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_PayGetDiamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_PayGetDiamond`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_PayGetDiamond`(
		in $intPlayerId int,
    out $intOutTotalDiamond int,
		out $returnVal int
)
BEGIN
			select nCardCount into $intOutTotalDiamond from Table_User where  nPlayerId = $intPlayerId;
			set $returnVal=1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_PayGetDiamondPrice
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_PayGetDiamondPrice`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `Pr_PayGetDiamondPrice`(
        in  $intPlayerId int,
        out $returnVal int
)
returnVal:BEGIN
/*
获取钻石价格
*/
    
    declare _nLevel int default 0;
    if not exists(select * from table_league_club_member where nPlayerID = $intPlayerId and nClubID = 666000) then 
    	set $returnVal=0;
        LEAVE returnVal;
    end if;
    select reser1 into _nLevel from table_user where nPlayerID = $intPlayerId;
    select PayLevel, PayMoney, PayDimond,`GiftCount` from table_league_pay where PayLevel = _nLevel;
    set $returnVal= 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_PaySotreNotifyTrade
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_PaySotreNotifyTrade`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_PaySotreNotifyTrade`(
		in $intTotalFee int,
		in $intPay_type int,
    in $domain_type int,
    in $action varchar(30),
    in $out_trade_no varchar(128),
    in $trade_no varchar(128),
    in $trade_status varchar(60),
    in $create_ip varchar(60),
    in $trade_return_data varchar(1024),
	out $intOutReturnCode int,
	out $returnVal int,
	out $intOutPlayerID int
)
returnVal:BEGIN
					declare _cuPlayerId int default 0;
					declare _cuPlayerName,_prepay_no varchar(128) default '';
					declare	_return_value int;
					
				if exists(select * from Table_pay_log where trade_no=$trade_no AND out_trade_no=$out_trade_no) then
					set $intOutReturnCode = 1;
					set $returnVal = 1;
					set $intOutPlayerID = 0;
					LEAVE returnVal;
				end if;
				
				if exists(select * from Table_pay_pre where out_trade_no=$out_trade_no) then
						select nPlayerId,prepay_no into _cuPlayerId,_prepay_no from Table_pay_pre where  out_trade_no=$out_trade_no;
						set _cuPlayerName = (select szNickName from Table_User where  nPlayerId = _cuPlayerId);

						insert into Table_pay_log(pay_type,action,domain_type,out_trade_no,trade_no,trade_status,trade_return_data,create_ip,create_date,szName,nPlayerId,state,total_fee,Diamond,diamond_count)
			            values($intpay_type, $action, $domain_type,$out_trade_no,$trade_no,$trade_status,$trade_return_data,$create_ip,NOW(),_cuPlayerName,_cuPlayerId,0,$intTotalFee, 0,0);
					
						call Pr_PayChangeDiamond(_cuPlayerId,_prepay_no,@resultVal);
						set $returnVal=@resultVal;
						set $intOutReturnCode = 2;
						set $intOutPlayerID = _cuPlayerId;
						LEAVE returnVal;
				else
						set $intOutReturnCode = 3;
						set $returnVal = 0;
						set $intOutPlayerID = 0;
						LEAVE returnVal;
				end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_PaySotrePreTrade
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_PaySotrePreTrade`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_PaySotrePreTrade`(
		in $intPlayerId int,
		in $intTotalFee int,
		in $out_trade_no varchar(128),
		in $prepay_no     varchar(128),
		out $intOutReturnCode int,
		out $returnVal int
)
returnVal:BEGIN
		
	 if exists(select * from Table_pay_pre where out_trade_no=$out_trade_no AND prepay_no=$prepay_no) then
	    set $intOutReturnCode = 1;
			set $returnVal = 1;
			leave returnVal;
	 end if;
		
	if exists(select * from Table_User where nPlayerId=$intPlayerId) then
			insert into Table_pay_pre(nPlayerId,total_fee,out_trade_no,prepay_no,szTime) values($intPlayerId, $intTotalFee, $out_trade_no,$prepay_no,NOW());
			set $intOutReturnCode = 2;
			set $returnVal = 1;
			leave returnVal;
	else
			set $intOutReturnCode = 3;
			set $returnVal = 1;
			leave returnVal;
	end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pay_bind_player_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pay_bind_player_info`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pay_bind_player_info`(
IN  $nPlayerID  INT,
IN  $nClubID    INT,
IN  $nType      INT,
IN  $szData     VARCHAR(512),
IN  $bankno     VARCHAR(128),
IN  $szName     VARCHAR(32),
OUT $rVal       INT,
OUT $rMsg       VARCHAR(256)
)
RT:BEGIN

IF EXISTS (SELECT 1 FROM table_payment_info WHERE nClubID = $nClubID AND bankno = $bankno ) THEN
    SET $rVal = 0;
    SET $rMsg = "bank info already exists.";
    LEAVE RT;
END IF;
IF EXISTS (SELECT 1 FROM table_payment_info WHERE nClubID = $nClubID AND szName=$szName ) THEN
    SET $rVal = 0;
    SET $rMsg = "bank info already exists.";
ELSE
    INSERT INTO `table_payment_info` ( `nPlayerID`,`nClubID`,`nType`,`szData`,`bankno`,`szName`) VALUES ($nPlayerID,$nClubID,$nType,$szData,$bankno,$szName);
    set $rVal = 1;
    SET $rMsg = "ok";
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pay_bind_player_info2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pay_bind_player_info2`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pay_bind_player_info2`(
IN  $nPlayerID  INT,
IN  $nClubID    INT,
IN  $nType      INT,
IN  $szData     VARCHAR(512),
IN  $bankno     VARCHAR(128),
IN  $szName     VARCHAR(32),
OUT $rVal       INT,
OUT $rMsg       VARCHAR(256)
)
RT:BEGIN

IF EXISTS (SELECT 1 FROM table_payment_info WHERE nClubID = $nClubID AND bankno = $bankno ) THEN
    SET $rVal = 0;
    SET $rMsg = "此银行卡已存在";
    LEAVE RT;
END IF;
IF EXISTS (SELECT 1 FROM table_payment_info WHERE nClubID = $nClubID AND szName=$szName ) THEN
    SET $rVal = 0;
    SET $rMsg = "此绑定用户名已存在";
ELSE
    INSERT INTO `table_payment_info` ( `nPlayerID`,`nClubID`,`nType`,`szData`,`bankno`,`szName`) VALUES ($nPlayerID,$nClubID,$nType,$szData,$bankno,$szName);
    set $rVal = 1;
    SET $rMsg = "绑定成功";
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pay_bind_player_info3
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pay_bind_player_info3`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_pay_bind_player_info3`(
IN  $nPlayerID  INT,
IN  $nClubID    INT,
IN  $nType      INT,
IN  $szData     VARCHAR(512),
IN  $bankno     VARCHAR(128),
IN  $szName     VARCHAR(32),
IN  $banktype   VARCHAR(128),
OUT $rVal       INT,
OUT $rMsg       VARCHAR(256)
)
RT:BEGIN
/*
绑定用户的支付账号等信息
2019-11-23 增加俱乐部和银行卡账号信息,增加是否在同俱乐部内的判断
2019-12-5 增加名字的判断
2020-4-11 增加银行名称
2020-9-21 增加再次绑定判断nstatus
2021-12-14 修改返回字串，以支持多语言版本
*/
 
IF EXISTS (SELECT 1 FROM table_payment_info WHERE nClubID = $nClubID AND bankno = $bankno  AND nStatus = 1) THEN
    SET $rVal = 0;
    SET $rMsg = "PR_BANKCARD_EXISTS";
    LEAVE RT;
END IF;
 
IF EXISTS (SELECT 1 FROM table_payment_info WHERE nClubID = $nClubID AND szName=$szName  AND nStatus = 1 ) THEN
    SET $rVal = 0;
    SET $rMsg = "PR_ACCOUNTS_EXISTS";
ELSE
    INSERT INTO `table_payment_info` ( `nPlayerID`,`nClubID`,`nType`,`szData`,`bankno`,`szName`,`bankname`,`nStatus`) 
    VALUES ($nPlayerID,$nClubID,$nType,$szData,$bankno,$szName,$banktype,1);
    SET $rVal = 1;
    SET $rMsg = "PR_BINDING_DONE";
END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pay_get_player_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pay_get_player_info`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pay_get_player_info`(
 IN  $nPlayerID  INT
,IN  $nClubID  INT
)
RT:BEGIN

select szData from `table_payment_info` where nPlayerID = $nPlayerID AND nClubID = $nClubID;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pay_get_player_info2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pay_get_player_info2`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pay_get_player_info2`(
 IN  $nPlayerID  INT
,IN  $nClubID  INT
)
RT:BEGIN

select szData from `table_payment_info` where nPlayerID = $nPlayerID AND nClubID = $nClubID AND `nStatus` = 1 ORDER BY ID DESC LIMIT 1;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pay_get_record
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pay_get_record`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pay_get_record`(
IN  $nPlayerID  INT,
IN  $nIndex     INT,
IN  $nDir       INT
)
RT:BEGIN

DECLARE _nindex  INT;
IF $nIndex <= 0 THEN
    SELECT ID,szOrder,`nStatus`,`nAmount`,`szOrderInfo`,UNIX_TIMESTAMP(`CreateTime`) AS nTime FROM table_third_order WHERE nType = 2 AND nPlayerID = $nPlayerID ORDER BY ID DESC LIMIT 10; 
ELSE
    IF $nDir = 1 THEN 
        SELECT ID,szOrder,`nStatus`,`nAmount`,`szOrderInfo`,UNIX_TIMESTAMP(`CreateTime`) AS nTime FROM table_third_order WHERE nType = 2 AND nPlayerID = $nPlayerID AND ID < $nIndex ORDER BY ID DESC LIMIT 10;
    ELSE
        SELECT ID,szOrder,`nStatus`,`nAmount`,`szOrderInfo`,UNIX_TIMESTAMP(`CreateTime`) AS nTime FROM table_third_order WHERE nType = 2 AND nPlayerID = $nPlayerID AND ID > $nIndex ORDER BY ID DESC LIMIT 10;
    END IF;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_popularize_get_detail
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_popularize_get_detail`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_popularize_get_detail`(
 IN $nPlayerID INT(11)
,IN $nClubID INT(11)
,IN $nIndex INT(11)
,OUT $nTotalCount INT
,OUT $retVal INT
,OUT $retMsg VARCHAR(128)
)
RT:BEGIN

DECLARE _page   INT;
DECLARE _count  INT;

SET _count = 7;
 
IF $nIndex <= 0 THEN
        SET $nIndex = 1;
END IF;
 
SET _page = ($nIndex-1)*_count;
 
IF NOT EXISTS (SELECT 1 FROM table_clubmember WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID AND nStatus = 1) THEN
 SET $retVal = 0;
 SET $retMsg = "player not exists.";
 LEAVE RT;
END IF;

SELECT nPlayerID,teamWater,water,teamcounts,counts,6days_teamWaters,6days_Waters FROM (
 
 
 SELECT nPlayerID,teamWater,water,teamcounts,counts,6days_teamWaters,6days_Waters FROM (
 SELECT
	proxy.nPlayerID,
	proxy.teamWater,
	proxy.water,
	(SELECT COUNT(ID) FROM table_clubmemberAppLine WHERE nPlayerID = line.nNextID )AS teamcounts,
	
	(SELECT COUNT(appline.ID) FROM table_clubmemberAppLine appline JOIN table_clubmember mem ON appline.nNextID = mem.nPlayerID 
	WHERE mem.nExtenID = proxy.nPlayerID AND mem.nClubID = $nClubID AND appline.nPlayerID = proxy.nPlayerID) AS counts,
	
	(SELECT IFNULL(SUM(teamWater),0) FROM table_web_clubmemberproxy WHERE nClubID = $nClubID AND nPlayerID = proxy.nPlayerID 
    AND tEndTime > DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 DAY),"%Y-%m-%d") 
    AND tEndTime < DATE_FORMAT(NOW(),"%Y-%m-%d")) AS 6days_teamWaters,
    
    (SELECT IFNULL(SUM(Water),0) FROM table_web_clubmemberproxy WHERE nClubID = $nClubID AND nPlayerID = proxy.nPlayerID 
    AND tEndTime > DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 DAY),"%Y-%m-%d") 
    AND tEndTime < DATE_FORMAT(NOW(),"%Y-%m-%d")) AS 6days_Waters
     
FROM
    table_clubmemberappline line
    LEFT JOIN table_clubmember tcm ON tcm.nPlayerID = line.nNextID AND tcm.nClubID = line.nClubID
    LEFT JOIN table_web_clubmemberproxy proxy ON proxy.nPlayerID = line.nNextID AND proxy.nClubID = tcm.nClubID    
WHERE
	tcm.nExtenID    = $nPlayerID
    AND tcm.nClubID = $nClubID
    AND proxy.tEndTime > DATE_FORMAT(NOW(),"%Y-%m-%d")
GROUP BY proxy.nPlayerID ) AS temp1 
 UNION ALL
 
 
SELECT
	line.nNextID,
	0,
	0,
	(SELECT COUNT(ID) FROM table_clubmemberAppLine WHERE nPlayerID = line.nNextID )AS teamcounts,
	
	(SELECT COUNT(appline.ID) FROM table_clubmemberAppLine appline JOIN table_clubmember mem ON appline.nNextID = mem.nPlayerID 
	WHERE mem.nExtenID = member.nPlayerID AND mem.nClubID = $nClubID AND appline.nPlayerID = member.nPlayerID) AS counts,
	
	(SELECT IFNULL(SUM(teamWater),0) FROM table_web_clubmemberproxy WHERE nClubID = $nClubID AND nPlayerID = member.nPlayerID 
    AND tEndTime > DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 DAY),"%Y-%m-%d") 
    AND tEndTime < DATE_FORMAT(NOW(),"%Y-%m-%d")) AS 6days_teamWaters,
    
    (SELECT IFNULL(SUM(Water),0) FROM table_web_clubmemberproxy WHERE nClubID = $nClubID AND nPlayerID = member.nPlayerID 
    AND tEndTime > DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 DAY),"%Y-%m-%d") 
    AND tEndTime < DATE_FORMAT(NOW(),"%Y-%m-%d")) AS 6days_Waters
FROM
	table_clubmemberappline line
    LEFT JOIN table_clubmember member ON member.nPlayerID = line.nNextID AND member.nClubID = line.nClubID
WHERE
	member.nExtenID    = $nPlayerID
    AND member.nClubID = $nClubID
    AND line.nNextID NOT IN
    (
        SELECT
            proxy.nPlayerID
        FROM
            table_clubmemberappline line
            LEFT JOIN table_clubmember tcm ON tcm.nPlayerID = line.nNextID AND tcm.nClubID = line.nClubID
            LEFT JOIN table_web_clubmemberproxy proxy ON proxy.nPlayerID = line.nNextID AND proxy.nClubID = tcm.nClubID    
        WHERE
            tcm.nExtenID    = $nPlayerID
            AND tcm.nClubID = $nClubID
            AND proxy.tEndTime > DATE_FORMAT(NOW(),"%Y-%m-%d")
        GROUP BY proxy.nPlayerID    
    )
    GROUP BY line.nNextID
) tempTotal  
 
ORDER BY (teamWater+water) DESC ,nPlayerID DESC
LIMIT _page, _count;


SELECT COUNT(nPlayerID) INTO $nTotalCount FROM (
 

SELECT nPlayerID FROM (
 SELECT
	proxy.nPlayerID     
 FROM
    table_clubmemberappline line
    LEFT JOIN table_clubmember tcm ON tcm.nPlayerID = line.nNextID AND tcm.nClubID = line.nClubID
    LEFT JOIN table_web_clubmemberproxy proxy ON proxy.nPlayerID = line.nNextID AND proxy.nClubID = tcm.nClubID    
 WHERE
	tcm.nExtenID    = $nPlayerID
    AND tcm.nClubID = $nClubID
    AND proxy.tEndTime > DATE_FORMAT(NOW(),"%Y-%m-%d")
 GROUP BY proxy.nPlayerID ) AS temp1 
 
UNION ALL
 
    SELECT
        line.nNextID
    FROM
        table_clubmemberappline line
        LEFT JOIN table_clubmember member ON member.nPlayerID = line.nNextID AND member.nClubID = line.nClubID
    WHERE
        member.nExtenID    = $nPlayerID
        AND member.nClubID = $nClubID
        AND line.nNextID NOT IN
     (
        SELECT
            proxy.nPlayerID
        FROM
            table_clubmemberappline line
            LEFT JOIN table_clubmember tcm ON tcm.nPlayerID = line.nNextID AND tcm.nClubID = line.nClubID
            LEFT JOIN table_web_clubmemberproxy proxy ON proxy.nPlayerID = line.nNextID AND proxy.nClubID = tcm.nClubID    
        WHERE
            tcm.nExtenID    = $nPlayerID
            AND tcm.nClubID = $nClubID
            AND proxy.tEndTime > DATE_FORMAT(NOW(),"%Y-%m-%d")
        GROUP BY proxy.nPlayerID   
    )
    GROUP BY line.nNextID
) tempTotal;
 
SET $retVal = 1;
SET $retMsg = "ok";
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_popularize_get_detail_by_playerid
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_popularize_get_detail_by_playerid`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_popularize_get_detail_by_playerid`(
 IN $nPlayerID INT(11)
,IN $nNextID INT(11) 
,IN $nClubID INT(11)
,OUT $retVal INT
,OUT $retMsg VARCHAR(128)
)
RT:BEGIN

 
IF NOT EXISTS (SELECT 1 FROM table_clubmember WHERE `nPlayerID` = $nNextID AND `nExtenID` = $nPlayerID AND `nClubID` = $nClubID AND nStatus = 1) THEN
 SET $retVal = 0;
 SET $retMsg = "player not exists.";
 LEAVE RT;
END IF;
IF EXISTS(SELECT 1 FROM table_web_clubmemberproxy WHERE `nClubId` = $nClubID AND `nPlayerId` = $nNextID AND `tEndTime` > DATE_FORMAT(NOW(),"%Y-%m-%d")) THEN

    select nPlayerID,`teamWater`,`water`,
    (select count(ID) FROM table_clubmemberappline WHERE nClubID = $nClubID AND nPlayerID = $nNextID) as teamCounts,
    (SELECT count(line.ID) FROM table_clubmemberAppLine line join table_clubmember mem on line.nPlayerID = $nNextID where mem.nPlayerID = $nNextID AND mem.nClubID = $nClubID ) as counts,
    (SELECT SUM(teamWater) FROM table_web_clubmemberproxy WHERE nClubID = $nClubID AND nPlayerID = $nNextID 
    AND tEndTime > DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 DAY),"%Y-%m-%d") 
    AND tEndTime < DATE_FORMAT(NOW(),"%Y-%m-%d")) as 6days_teamWaters,
    (SELECT sum(Water) FROM table_web_clubmemberproxy WHERE nClubID = $nClubID AND nPlayerID = $nNextID
    AND tEndTime > DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 DAY),"%Y-%m-%d") 
    AND tEndTime < DATE_FORMAT(NOW(),"%Y-%m-%d")) as 6days_Waters
    FROM table_web_clubmemberproxy 
    WHERE  `nClubId` = $nClubID and `nPlayerId` = $nNextID AND `tEndTime` > DATE_FORMAT(NOW(),"%Y-%m-%d");
ELSE

    SELECT 
    $nNextID as nPlayerID,
    0 as teamWater,
    0 as water,
    
    (SELECT COUNT(ID) FROM table_clubmemberappline WHERE nClubID = $nClubID AND nPlayerID = $nNextID) AS teamCounts,
    (SELECT COUNT(line.ID) FROM table_clubmemberAppLine line JOIN table_clubmember mem ON line.nPlayerID = $nNextID WHERE mem.nPlayerID = $nNextID AND mem.nClubID = $nClubID ) AS counts,
    IFNULL((SELECT SUM(teamWater) FROM table_web_clubmemberproxy WHERE nClubID = $nClubID AND nPlayerID = $nNextID 
    AND tEndTime > DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 DAY),"%Y-%m-%d") 
    AND tEndTime < DATE_FORMAT(NOW(),"%Y-%m-%d")),0) AS 6days_teamWaters,
    IFNULL((SELECT SUM(Water) FROM table_web_clubmemberproxy WHERE nClubID = $nClubID AND nPlayerID = $nNextID
    AND tEndTime > DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 DAY),"%Y-%m-%d") 
    AND tEndTime < DATE_FORMAT(NOW(),"%Y-%m-%d")),0) AS 6days_Waters;
END IF;
 
SET $retVal = 1;
SET $retMsg = "ok";
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_popularize_get_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_popularize_get_info`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_popularize_get_info`(
 IN $nPlayerID INT(11)
,IN $nClubID INT(11)
,OUT $nExtenID INT(11)
,OUT $nDirectlyAch BIGINT
,OUT $nTeamAch BIGINT
,OUT $nTeamCount INT
,OUT $nDirectlyCount INT
,OUT $nTodayAdd INT
,OUT $nTodayActive INT
,OUT $retVal INT
,OUT $retMsg VARCHAR(128)
)
RT:BEGIN
/*
用户推广的基本信息
*/
 
IF NOT EXISTS (SELECT 1 FROM table_clubmember WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID AND nStatus = 1) THEN
 SET $retVal = 0;
 SET $retMsg = "player not exists.";
 LEAVE RT;
END IF;
  
SELECT `nExtenID` INTO $nExtenID FROM `table_clubmember` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID AND nStatus = 1;
 
#直属业绩
SELECT IFNULL(SUM(`directlyWater`),0), IFNULL(SUM(`teamWater`),0) INTO $nDirectlyAch,$nTeamAch 
FROM table_web_clubmemberproxy WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID AND tendtime > DATE_FORMAT(NOW(),"%Y-%m-%d");
 
#团队人数
SELECT COUNT(ID) INTO $nTeamCount FROM `table_clubmemberappline` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID;
 
#直属人数
#SELECT COUNT(ID) INTO $nDirectlyCount FROM `table_clubmember` WHERE nExtenID = $nPlayerID AND `nClubID` = $nClubID AND nStatus = 1;
SELECT COUNT(line.ID) INTO $nDirectlyCount FROM table_clubmemberAppLine line JOIN table_clubmember mem ON line.nNextID=mem.nPlayerID 
WHERE mem.nExtenID=$nPlayerID AND mem.nClubID=$nClubID AND line.nPlayerID=$nPlayerID;
 
#今日新增
SELECT COUNT(ID) INTO $nTodayAdd FROM `table_clubmemberappline` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nClubID AND `tJoinTime` > DATE_FORMAT(NOW(),"%Y-%m-%d");

#今日活跃 
SET @tableName=fun_get_table_name_shard('table_clubgamescoredetail', 0);
SET @dateFmat = DATE_FORMAT(NOW(),"%Y-%m-%d");
SET @nTodayActive = 0;
SET @sqlStr=CONCAT("
SELECT SUM(temp.val) into @nTodayActive FROM
(  
SELECT COUNT(DISTINCT(tcg.nPlayerID)) AS val FROM `table_clubmemberappline` tcm 
INNER JOIN ", @tableName, " tcg ON tcm.nNextID = tcg.nPlayerID 
WHERE  tcm.`nPlayerID` = ", $nPlayerID , " AND tcm.`nClubID` = ",$nClubID , " AND tcg.`nClubID` = ",$nClubID , "
AND tcg.tEndTime > '", @dateFmat, "' GROUP BY tcg.nplayerid
)temp ");
#SELECT @sqlStr;
PREPARE stmt_name FROM @sqlStr;
EXECUTE stmt_name;
DEALLOCATE PREPARE stmt_name;
 
SET $nTodayActive=@nTodayActive;
SET $retVal = 1;
SET $retMsg = "ok";
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_PutUserPhone
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_PutUserPhone`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_PutUserPhone`(
 IN  $intPlayerId    INT,
 IN  $phone          varchar(15),
 out $return int
 )
returnVal:BEGIN
 DECLARE   _name    VARCHAR(64) ;
DECLARE   _stryue    VARCHAR(64) ;
DECLARE  _diamond INT;
 IF EXISTS(SELECT 1 FROM table_user WHERE  nPlayerId=$intPlayerId and ifnull(phobindtime,0)>0 and ifnull(phounbindtime,0) >0 ) THEN
 update table_user SET phone =$phone,phobindtime=now() WHERE  nPlayerId=$intPlayerId;
 SET $return=0;
 LEAVE returnVal;
 else
 select szNickName,  nCardCount+30 into  _name,_diamond From table_user WHere nPlayerId = $intPlayerId ;
 update table_user SET phone =$phone,phobindtime=now(),nCardCount=_diamond WHERE  nPlayerId=$intPlayerId;
 SET _stryue = CONCAT("手机绑定 余额：",_diamond);

 CALL Pr_UserDiamondActionLog($intPlayerId,_name,30 ,_stryue);
 SET $return=1;
 LEAVE returnVal;
 END IF;
 END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pyramid_claim
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pyramid_claim`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pyramid_claim`(
IN  $nPlayID    INT,
IN  $nClubID    INT,
OUT $reVal      INT,
OUT $reMsg      VARCHAR(64)
)
rt:BEGIN

DECLARE _score BIGINT;
DECLARE _errno INT DEFAULT 0;
DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _errno = 1;
START TRANSACTION;
SELECT IFNULL(SUM(`WeekMyRebate`),0) INTO _score FROM table_pyramid_rebate WHERE `nPlayerID` = $nPlayID AND `nClubID` = $nClubID AND `ClaimFlag` = 1 FOR UPDATE;
IF _score > 0 THEN
        UPDATE table_pyramid_rebate SET ClaimFlag = 2 WHERE `nPlayerID` = $nPlayID AND `nClubID` = $nClubID AND `ClaimFlag` = 1;
        
        CALL pr_UpdateUserClubScore3(0,$nPlayID,$nClubID,_score,0,26,'','代理提现',@s);
        IF _errno=0 THEN
                COMMIT;
                SET $reVal = 1;
                SET $reMsg = "提取完成";
	ELSE 
                ROLLBACK;
                SET $reVal = 0;
                SET $reMsg = "操作失败";
	END IF;       
        LEAVE rt;
END IF;
COMMIT;
SET $reVal = 0;
SET $reMsg = "暂无返利";
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pyramid_create_examine
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pyramid_create_examine`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pyramid_create_examine`(
IN  $nPlayID    INT,
IN  $nClubID    INT,
IN  $nScore     BIGINT,
IN  $szOrder    VARCHAR(128),
IN  $nAmount    BIGINT,
IN  $szInfo     VARCHAR(256),
IN  $nSubVal    INT,
IN  $szIP       VARCHAR(64),
IN  $nCommission INT,
IN  $szSys      VARCHAR(32),
IN  $szCardNumber   VARCHAR(64),
IN  $szName      VARCHAR(64)
)
rt:BEGIN

INSERT INTO `table_pyramid_examine` (`nPlayerID`,`nClubID`,`nScore`,`szOrder`,`nAmount`, nSubVal ,`nFlag`, `szOrderInfo`, szIP, nCommission,szChannel,szBank,szUserName) 
VALUES                              (  $nPlayID , $nClubID, $nScore, $szOrder, $nAmount, $nSubVal,  1,      $szInfo,      $szIP,$nCommission,$szSys,$szCardNumber,$szName);
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pyramid_get_cash_record
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pyramid_get_cash_record`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pyramid_get_cash_record`(
IN  $nPlayID    INT,
IN  $nClubID    INT,
IN  $nIndex     INT,
OUT $nTotal     INT
)
rt:BEGIN

DECLARE _page1  INT;
DECLARE _count  INT;
SET _count = 6;
IF $nIndex <= 0 THEN
        SET $nIndex = 1;
END iF;
set _page1 = ($nIndex-1)*_count;
select * from `table_pyramid_examine` where `nPlayerID` = $nPlayID and `nClubID` = $nClubID  order by ID DESC limit _page1, _count;
SELECT count(ID) INTO $nTotal FROM `table_pyramid_examine` WHERE `nPlayerID` = $nPlayID AND `nClubID` = $nClubID;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pyramid_get_commission_record_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pyramid_get_commission_record_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pyramid_get_commission_record_temp`(
IN  $nPlayID    INT,
IN  $nClubID    INT,
IN  $nIndex     INT,
OUT $nTotal     INT
)
rt:BEGIN

DECLARE _page1  INT;
DECLARE _count  INT;
SET _count = 10;
IF $nIndex <= 0 THEN
        SET $nIndex = 1;
END IF;
SET _page1 = ($nIndex-1)*_count;
SELECT * FROM `table_clublogscore` WHERE `nPlayerID` = $nPlayID AND `ClubID` = $nClubID AND ntype = 26  ORDER BY ID DESC LIMIT _page1, _count;
SELECT COUNT(ID) INTO $nTotal FROM `table_clublogscore` WHERE `nPlayerID` = $nPlayID AND `ClubID` = $nClubID AND ntype = 26;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pyramid_get_examine
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pyramid_get_examine`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pyramid_get_examine`(
)
rt:BEGIN

























	








    
	
	select * from table_pyramid_examine where nFlag = 3;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pyramid_get_rebate
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pyramid_get_rebate`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_pyramid_get_rebate`(
IN  $nPlayID    INT,
IN  $nClubID    INT,
OUT $nRebate    BIGINT   
)
rt:BEGIN

DECLARE _week int;
set _week = DATE_FORMAT(NOW(),"%w");

select IFNULL(sum(`WeekMyRebate`),0) into $nRebate from table_pyramid_rebate WHERE `nPlayerID` = $nPlayID AND `nClubID` = $nClubID and `ClaimFlag` = 1;

if _week <> 1 then
        select * from `table_pyramid_rebate` where `nPlayerID` = $nPlayID and `nClubID` = $nClubID AND `ClaimFlag` = 0 order by ID DESC limit 1;
end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pyramid_get_subweekbet
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pyramid_get_subweekbet`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pyramid_get_subweekbet`(
IN  $nPlayID    INT,
IN  $nClubID    INT,
IN  $nIndex     INT,
IN  $nDir       INT
)
rt:BEGIN

DECLARE _index INT;
DECLARE _start_time VARCHAR(64);
DECLARE _weekindex INT;
DECLARE _count INT;

SET _count = 14;

IF $nDir < 2 THEN
        SET _index = _index - _count;
ELSE
        SET _index = $nIndex;
END IF;
IF _index < 0 THEN
        SET _index = 0;
END IF;

SET _weekindex = DATE_FORMAT(CURDATE(),'%w');
IF _weekindex=0 THEN
        SET _start_time = CONCAT(SUBDATE( CURDATE(), DATE_FORMAT( CURDATE(),'%w' ) +6 )," 00:00:00");
ELSE
        SET _start_time = CONCAT(SUBDATE( CURDATE(), DATE_FORMAT( CURDATE(),'%w' ) -1 )," 00:00:00");
END IF;
SET @i:=0;
SELECT (@i:=@i+1) AS idx, nPlayerID,szNickName,SUM(nAmount) AS amount FROM table_pyramid_betting WHERE `nExtenID` = $nPlayID AND `nClubID` = $nClubID AND `tEffectiveDate` >= _start_time GROUP BY nPlayerID LIMIT _index,_count;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_pyramid_query_member
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_pyramid_query_member`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_pyramid_query_member`(
IN  $nPlayID    INT,
IN  $nClubID    INT,
OUT $nSubCount  INT,    
OUT $nWeekNew   INT     
)
rt:BEGIN

DECLARE _start_time VARCHAR(64);
DECLARE _weekindex INT;

SELECT IFNULL(COUNT(ID),0) INTO $nSubCount FROM `table_clubmember` WHERE `nExtenID` = $nPlayID AND `nClubID` = $nClubID;

SET _weekindex = DATE_FORMAT(CURDATE(),'%w');
IF _weekindex=0 THEN
        SET _start_time = CONCAT(SUBDATE( CURDATE(), DATE_FORMAT( CURDATE(),'%w' ) +6 )," 00:00:00");
ELSE
        SET _start_time = CONCAT(SUBDATE( CURDATE(), DATE_FORMAT( CURDATE(),'%w' ) -1 )," 00:00:00");
END IF;

SELECT IFNULL(COUNT(ID),0) INTO $nWeekNew FROM `table_clubmember` WHERE `nExtenID` = $nPlayID AND `nClubID` = $nClubID AND `tJoinTime` >= _start_time;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_recharge_update_order_gift
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_recharge_update_order_gift`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_recharge_update_order_gift`(
IN $nExScore    BIGINT,
IN $szOrderID   VARCHAR(128),
OUT $rval       INT,
OUT $msg        VARCHAR(64)
)
rt:BEGIN

IF EXISTS (SELECT 1 FROM `table_third_order` WHERE `szOrder` = $szOrderID) THEN
        UPDATE table_third_order SET `nGiftScore` = $nExScore WHERE `szOrder` = $szOrderID;
        SET $rval = 1;
        SET $msg = "ok";
ELSE
        SET $rval = 0;
        SET $msg = "orderid error";
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_reportLog
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_reportLog`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_reportLog`(
	IN $nplayerid INT,
	IN $tag VARCHAR(64),
	IN $val INT,
	IN $mark VARCHAR(512),
	OUT $returnVal INT
)
RT:BEGIN

  IF NOT EXISTS(SELECT 1 FROM table_user WHERE nplayerid=$nplayerid) THEN 
		SET $returnVal=0;
		LEAVE RT;
  END IF;
  
  INSERT INTO table_report_log(`nplayerid`,`tag`,`val`,`mark`) VALUES($nplayerid,$tag,$val,$mark);
  SET $returnVal=1;
  
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_robot_AddParameter
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_robot_AddParameter`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_robot_AddParameter`(
     IN $wServerID INT,         
	IN $dwServiceMode INT,     
	IN $dwRobotCount INT,      
	IN $dwEnterTime INT,       
	IN $dwLeaveTime INT,       
	IN $dwEnterMinInterval INT, 
	IN $dwEnterMaxInterval INT, 
	IN $dwLeaveMinInterval INT, 
	IN $dwLeaveMaxInterval INT , 
	IN $lTakeMinScore INT,       
	IN $lTakeMaxScore INT,        
        IN $dwSwitchMinInnings INT,  
        IN $dwSwitchMaxInnings INT   
        )
BEGIN
	DECLARE dwBatchID INT DEFAULT 0;
         
     INSERT INTO table_robot_configure (ServerID, ServiceMode, RobotCount,EnterTime,LeaveTime,EnterMinInterval,EnterMaxInterval,LeaveMinInterval,LeaveMaxInterval,TakeMinScore,TakeMaxScore,SwitchMinInnings,SwitchMaxInnings)
                               VALUES ($wServerID, $dwServiceMode, $dwRobotCount, $dwEnterTime,$dwLeaveTime,$dwEnterMinInterval,$dwEnterMaxInterval,$dwLeaveMinInterval,$dwLeaveMaxInterval,$lTakeMinScore,$lTakeMaxScore,$dwSwitchMinInnings,$dwSwitchMaxInnings);
	
		
	
	
        SET dwBatchID=@@identity;	
	
	
	SELECT * FROM table_robot_configure WHERE BatchID=dwBatchID;
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_robot_DeleteParameter
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_robot_DeleteParameter`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_robot_DeleteParameter`(
     IN $dwBatchID INT         
        )
BEGIN
	
         
        
	SELECT * FROM table_robot_configure WHERE BatchID=$dwBatchID;
	
	DELETE FROM table_robot_configure WHERE BatchID=$dwBatchID;
	
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_robot_GetParameter
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_robot_GetParameter`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_robot_GetParameter`(
        IN $wServerID INT								
        )
BEGIN
	
	SELECT * FROM table_robot_configure WHERE ServerID=$wServerID;
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_robot_LoadAndroidConfigure
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_robot_LoadAndroidConfigure`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_robot_LoadAndroidConfigure`(
        
	IN $wServerID INT     
	
	
        )
BEGIN
	
	
	
	SELECT BatchID,ServerID,ServiceMode,RobotCount,EnterTime,LeaveTime,EnterMinInterval,EnterMaxInterval,LeaveMinInterval,
		LeaveMaxInterval,TakeMinScore,TakeMaxScore,SwitchMinInnings,SwitchMaxInnings FROM table_robot_configure
	WHERE ServerID=$wServerID ORDER BY BatchID;
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_robot_LoadRobotUser
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_robot_LoadRobotUser`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_robot_LoadRobotUser`(
        IN $wServerID      INT,     
	IN $dwServiceMode  INT,     
	IN $dwBatchID	   INT,	    
	IN $dwRobotCount   INT	    
        )
BEGIN
	
	declare _lockstatus int;
	declare _errno int default 0;
	declare continue handler for sqlexception set _errno = 1;
	
	
	SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
	start TRANSACTION;
	
	select lockstatus into _lockstatus from table_robot_lockstatus where id=1 for update;
	
	
	UPDATE table_robot_LockInfo SET RobotStatus=0,ServerID=0,BatchID=0 WHERE LockDateTime<=date_sub(now(),interval 13 hour) and RobotStatus = 1;
	
	
	INSERT into table_robot_tempandroids(nPlayerId,LogonPass,BatchID) SELECT nPlayerId,LogonPass,$dwBatchID  FROM table_robot_LockInfo WHERE RobotStatus=0 AND ServerID=0 ORDER by rand() limit $dwRobotCount;
	
	
	UPDATE table_robot_LockInfo a,table_robot_tempandroids b SET RobotStatus=1,a.BatchID=$dwBatchID,ServerID=$wServerID,LockDateTime=now() WHERE a.nPlayerId = b.nPlayerId;
	
	
	SELECT nPlayerId,LogonPass from table_robot_tempandroids where BatchID=$dwBatchID;
	
	
	delete from table_robot_tempandroids where BatchID=$dwBatchID;
	
	if _errno=0 THEN
       commit;
	else 
       rollback;
	end if;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_robot_ModifyParameter
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_robot_ModifyParameter`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_robot_ModifyParameter`(
        IN $dwDatchID INT,	   
	IN $dwServiceMode INT,     
	IN $dwRobotCount INT,      
	IN $dwEnterTime INT,       
	IN $dwLeaveTime INT,       
	IN $dwEnterMinInterval INT, 
	IN $dwEnterMaxInterval INT, 
	IN $dwLeaveMinInterval INT, 
	IN $dwLeaveMaxInterval INT , 
	IN $lTakeMinScore INT,       
	IN $lTakeMaxScore INT,        
        IN $dwSwitchMinInnings INT,  
        IN $dwSwitchMaxInnings INT   
        )
BEGIN
		
	UPDATE table_robot_configure SET ServiceMode=$dwServiceMode,RobotCount=$dwRobotCount,EnterTime=$dwEnterTime,LeaveTime=$dwLeaveTime,
		EnterMinInterval=$dwEnterMinInterval,EnterMaxInterval=$dwEnterMaxInterval,LeaveMinInterval=$dwLeaveMinInterval,
		LeaveMaxInterval=$dwLeaveMaxInterval,TakeMinScore=$lTakeMinScore,TakeMaxScore=$lTakeMaxScore,SwitchMinInnings=$dwSwitchMinInnings,
		SwitchMaxInnings=$dwSwitchMaxInnings
	WHERE BatchID=$dwDatchID;	
	
	SELECT * FROM table_robot_configure WHERE BatchID=$dwBatchID;
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_robot_QueryParameter
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_robot_QueryParameter`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_robot_QueryParameter`(
        IN $wBatchID INT								
        )
BEGIN
	
	SELECT * FROM table_robot_configure WHERE BatchID=$wBatchID;
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Score_AddScore
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Score_AddScore`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_Score_AddScore`(
						 in $nPlayerID int
						,in $nType  	int
						,in $nScore   int
)
returnVal:begin
		
		declare _desc_str VARCHAR(32);
		declare _nScoreTotal int;


		
		select nScoreTotal into  _nScoreTotal from table_user WHERE nplayerid = $nPlayerID;
		IF  $nType >=20 AND _nScoreTotal+$nScore <0 then 

				leave returnVal;
		end if; 
	
	UPDATE table_user SET nScoreTotal = nScoreTotal+$nScore   WHERE nplayerid = $nPlayerID;
		
		if $nType =1 then 
			SET  _desc_str = CONCAT('每日签到 累计积分：',_nScoreTotal+$nScore);
		elseif $nType =2 THEN 
			set  _desc_str = CONCAT('补签 累计积分：',_nScoreTotal+$nScore);
		ELSEIF $nType =3 THEN 
			SET  _desc_str = CONCAT('累计奖励 累计积分：',_nScoreTotal+$nScore);
		ELSEIF $nType =20 THEN 
			SET  _desc_str = CONCAT('商城兑换 消耗积分：',_nScoreTotal+$nScore);
		end if;
		
		
		CALL Pr_Score_Signinlog ($nPlayerID,$nType,$nScore ,_desc_str);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Score_AddScoreLimitDay
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Score_AddScoreLimitDay`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_Score_AddScoreLimitDay`(
						 in $nPlayerID int
						,in $nType  	int
						,in $nScore     	int
						,in $GameID      int
)
begin
		
		declare _desc_str 		VARCHAR(32);
		declare _nScoreTotal 	int;
		DECLARE _nScoreDay 	INT;
		DECLARE _nDayLimit		int;
		DECLARE _nDayTmp		INT;
		
		
		set _nDayLimit = 100;
		
		
		select nScoreDay, nScoreTotal into  _nScoreDay, _nScoreTotal from table_user WHERE nplayerid = $nPlayerID;
		
		
		SET _nDayTmp = $nScore;
		
		
		
		
		
		
		
		UPDATE table_user SET nScoreTotal=nScoreTotal +_nDayTmp  WHERE nplayerid = $nPlayerID;
		
		if $nType = 4 then 
			SET  _desc_str = CONCAT('充值 累计积分：',_nScoreTotal+_nDayTmp);
		elseif $nType =5 THEN 
			set  _desc_str = CONCAT('开房对局 累计积分：',_nScoreTotal+_nDayTmp);
		ELSEIF $nType =6 THEN 
			SET  _desc_str = CONCAT('大赢家 累计积分：',_nScoreTotal+_nDayTmp);
		ELSEIF $nType =7 THEN 
			SET  _desc_str = CONCAT('参与比赛 累计积分：',_nScoreTotal+_nDayTmp);
		ELSEIF $nType =8 THEN 
			SET  _desc_str = CONCAT('比赛对局 累计积分：',_nScoreTotal+_nDayTmp);
		end if;
		
		
		CALL Pr_Score_Signinlog ($nPlayerID,$nType,_nDayTmp ,CONCAT($GameID,_desc_str));
		
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Score_CalcBonus
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Score_CalcBonus`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_Score_CalcBonus`(IN $playid INT)
BEGIN
   	
  DECLARE	_count INT ;
  
  SELECT COUNT(1) INTO _count  FROM table_score_signin WHERE nPlayerID =$playid AND nSignin >=DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY) ;  

	IF _count >= 25 THEN
		UPDATE table_user SET nBonus3 = 1 WHERE  nPlayerID =$playid  AND nBonus3 = 0;
	END IF;
	IF _count >= 15 THEN
		UPDATE table_user SET nBonus2 = 1 WHERE  nPlayerID =$playid  AND nBonus2 = 0;
	END IF;
	IF _count >= 7 THEN
		UPDATE table_user SET nBonus1 = 1 WHERE  nPlayerID =$playid  AND nBonus1 = 0;
	END IF;
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Score_GetBonus
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Score_GetBonus`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_Score_GetBonus`(in $playid int,in $bonus_index int,out $RETURN INT)
returnVal:BEGIN 



		if $bonus_index = 3 then 
				IF EXISTS (SELECT 1 from table_user where nPlayerId =$playid  and nBonus3 =1) THEN
						SET $RETURN = 1;
						CALL Pr_Score_AddScore($playid,3,20);
						UPDATE table_user SET nBonus3 =2 WHERE nPlayerId =$playid;
				ELSE
						SET $RETURN = 0;
						leave returnVal;
				END IF;
		elseif $bonus_index = 2 THEN
				IF EXISTS (SELECT 1 from table_user where nPlayerId =$playid  and nBonus2 =1) THEN
						SET $RETURN = 1;
						CALL Pr_Score_AddScore($playid,3,10);
						UPDATE table_user SET nBonus2 =2 WHERE nPlayerId =$playid;
				ELSE
						SET $RETURN = 0;
						leave returnVal;
				END IF;
		elseif $bonus_index = 1  THEN
				IF EXISTS (SELECT 1 from table_user where nPlayerId =$playid  and nBonus1 =1) THEN
						SET $RETURN = 1;
						CALL Pr_Score_AddScore($playid,3,5);
						UPDATE table_user SET nBonus1 =2 WHERE nPlayerId =$playid;
				ELSE
						SET $RETURN = 0;
						leave returnVal;
				END IF;
		end IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Score_GetScoreData
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Score_GetScoreData`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_Score_GetScoreData`(in $playid int)
BEGIN 
	SELECT nScoreDay,nScoreTotal,nBonus1,nBonus2,nBonus3
	FROM table_user
	WHERE nPlayerID =$playid;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Score_GetSigninData
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Score_GetSigninData`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_Score_GetSigninData`(in $playid int)
BEGIN 

	SELECT 
	DAYOFMONTH(nSignin)
	FROM Table_score_signin
	WHERE nPlayerID =$playid
 and SUBSTR(nSignin FROM 1 FOR 7)  = SUBSTR(CURDATE() FROM 1 FOR 7) ;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Score_Signinlog
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Score_Signinlog`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_Score_Signinlog`(
						 in $nPlayerID int
						,in $nType  int
						,in $nScore     int
						,in $szDesc    varchar(64)
)
begin
			INSERT INTO table_score_log(nPlayerID,nType,nScore,szDesc,nActTime) VALUES($nPlayerID,$nType,$nScore,$szDesc,NOW());
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Score_SigninReplenish
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Score_SigninReplenish`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_Score_SigninReplenish`(in $playid int,out $RETURN int)
returnVal:begin




declare	_count,_nCardCount int ;
declare _NickName varchar(128); 
SELECT count(1) into _count from 
(
SELECT DATE_ADD(curdate(),interval -day(curdate())+1 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+2 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+3 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+4 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+5 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+6 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+7 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+8 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+9 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+10 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+11 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+12 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+13 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+14 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+15 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+16 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+17 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+18 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+19 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+20 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+21 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+22 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+23 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+24 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+25 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+26 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+27 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+28 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+29 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+30 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+31 day) as d   
) dt 
where d <CURDATE()
and d NOT in (
									SELECT nSignin
									from Table_score_signin
									where nPlayerID =$playid
									and nSignin >=DATE_ADD(curdate(),interval -day(curdate())+1 day)
									);
		
		
	        if  _count=0 then
					SET $RETURN=-1;
					LEAVE returnVal;
	        end if;
	        
		SELECT nCardCount,szNickName into _nCardCount,_NickName from table_user where nPlayerId =$playid;

		
		if _nCardCount<_count then 
					set $RETURN=0;
					leave returnVal;
		ELSE

		set $RETURN=1;		
		insert into Table_score_signin (nPlayerID,nSignin) 
		SELECT $playid, d  
from 
(
SELECT DATE_ADD(curdate(),interval -day(curdate())+1 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+2 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+3 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+4 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+5 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+6 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+7 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+8 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+9 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+10 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+11 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+12 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+13 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+14 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+15 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+16 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+17 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+18 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+19 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+20 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+21 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+22 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+23 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+24 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+25 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+26 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+27 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+28 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+29 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+30 day) as d  UNION
SELECT DATE_ADD(curdate(),interval -day(curdate())+31 day) as d   
) dt
		where d <CURDATE() 
		and d NOT in (
									SELECT nSignin
									from Table_score_signin
									where nPlayerID =$playid
									and nSignin >=DATE_ADD(curdate(),interval -day(curdate())+1 day)
									);

		
		CALL Pr_UserDiamondActionLog($playid,_NickName,_count*-1,CONCAT('补签扣钻 ','余额：',_nCardCount-_count));
		UPDATE table_user set nCardCount=_nCardCount-_count where nPlayerId =$playid;
		
		
		CALL Pr_Score_AddScore($playid,2,_count);
		
		
		CALL Pr_Score_CalcBonus($playid);
		
		end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Score_SigninToday
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Score_SigninToday`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_Score_SigninToday`(in $playid int,out $ReturnVal int)
BEGIN 


	IF EXISTS (
		SELECT 1
		FROM Table_score_signin
		WHERE nPlayerID =$playid and nSignin=CURDATE()
		)
	then 
	 set $ReturnVal  =0;
	else 
	 
		insert into Table_score_signin (nPlayerID,nSignin) VALUES ($playid,CURDATE());
		
		
		call Pr_Score_AddScore($playid,1,1);
		
		call Pr_Score_CalcBonus($playid);
		
		set $ReturnVal  =1;
		
	end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_server_game_unlock
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_server_game_unlock`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_server_game_unlock`(   
                IN $table_preid INT
)
rt:BEGIN
/*
用户退出游戏解锁
*/
IF EXISTS (SELECT 1 FROM table_user_gamelock WHERE nTablePreID = $table_preid) THEN
        DELETE FROM table_user_gamelock WHERE  nTablePreID = $table_preid;
        LEAVE rt;
END IF;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_SetActivityRead
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_SetActivityRead`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_SetActivityRead`(IN `$intPlayerId` int,IN `$intActiveId` int)
BEGIN
	update table_activity set nIsRead=1 where nPlayerId=$intPlayerId and nActiveId=$intActiveId;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_set_goods_use_state
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_set_goods_use_state`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_set_goods_use_state`(
	IN $nPlayerID INT,
	IN $nClubID INT,
	IN $nGoodsID INT,
	IN $bUse INT)
BEGIN
	UPDATE table_clubgoods SET bUse = $bUse WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID AND nGoodsID = $nGoodsID;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_set_numerical_param
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_set_numerical_param`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_set_numerical_param`(
  in $serverID int,
  in $clubID int,
  in $triggerPercent int,
  in $backTriggerPercent int,
  in $pumpRatio float,
  in $backRatio float,
  in $specBackTriggerPercent int,
  in $newPlayExpEnterPrecent int,
  in $playCtlPumpTriggerPercent int,
  in $playCtlBackTriggerPercent int,
  in $playerWinLos bigint,
  in $playerValidBet bigint,
  in $testTimes bigint,
  in $pumpTimes bigint,
  in $backTimes bigint,
  in $param1 bigint,
  in $param2 bigint
)
begin

  IF NOT EXISTS (SELECT * FROM table_numerical_param WHERE serverID = $serverID and clubID = $clubID) THEN
    INSERT INTO 
      table_numerical_param(serverID, clubID, triggerPercent, backTriggerPercent, pumpRatio, backRatio, 
      specBackTriggerPercent, newPlayExpEnterPrecent, playCtlPumpTriggerPercent, playCtlBackTriggerPercent, 
      playerWinLos, playerValidBet, testTimes, pumpTimes, backTimes, param1, param2)
    VALUES($serverID, $clubID, $triggerPercent, $backTriggerPercent, $pumpRatio, $backRatio, 
      $specBackTriggerPercent, $newPlayExpEnterPrecent, $playCtlPumpTriggerPercent, $playCtlBackTriggerPercent,
	  $playerWinLos, $playerValidBet, $testTimes, $pumpTimes, $backTimes, $param1, $param2);
  ELSE
    UPDATE table_numerical_param SET
    playerWinLos = $playerWinLos,
    playerValidBet = $playerValidBet,
    testTimes = $testTimes,
    pumpTimes = $pumpTimes,
    backTimes = $backTimes,
    param1 = $param1,
    param2 = $param2 WHERE serverID = $serverID and clubID = $clubID;
  END IF;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_set_player_control
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_set_player_control`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_set_player_control`(
 	IN $nPlayerId INT,
    IN $nResult INT,
    IN $nValid INT
)
BEGIN
	-- 设置玩家控制数据
	IF EXISTS (SELECT * FROM table_webriskcontr_userset WHERE nPlayerId = $nPlayerId and nValid = 1) THEN
		IF $nValid = 2 THEN
			UPDATE table_webriskcontr_userset SET nResult = $nResult, nValid = 2, ModifyTime = NOW() WHERE nPlayerId = $nPlayerId and nValid = 1;
		ELSE
			UPDATE table_webriskcontr_userset SET nResult = $nResult WHERE nPlayerId = $nPlayerId and nValid = 1;
		END IF;
	END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_set_play_back_code
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_set_play_back_code`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_set_play_back_code`(
  IN $playBackCode INT,
  IN $resetFlag INT
)
BEGIN
	IF $resetFlag = 1 THEN
		UPDATE `table_play_back_code` SET `playBackCode` = $playBackCode, lastTime = NOW(), resetTime = NOW() WHERE `ID` = 1;
	ELSE
		UPDATE `table_play_back_code` SET `playBackCode` = $playBackCode, lastTime = NOW() WHERE `ID` = 1;
    END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_set_user_active_status
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_set_user_active_status`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_set_user_active_status`(
	 in $playid int 
	,in $nStat  int
	,IN $mark   VARCHAR(128)
)
RT:BEGIN

update Table_User set `nActive` = $nStat,`strre2` = $mark where nPlayerId = $playid;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_special_update_pass
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_special_update_pass`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_special_update_pass`(
						IN $nPlayerID    INT,
						IN $szNewPass    VARCHAR(64),
						OUT $returnVal   INT,
						OUT $returnMsg   VARCHAR(128)
    )
returnVal:BEGIN

    IF EXISTS(SELECT * FROM Table_User WHERE nPlayerId=$nPlayerID) then
        update Table_User set `szPass` = $szNewPass WHERE nPlayerId = $nPlayerID;
    
        SET $returnVal = 1;
        SET $returnMsg = '更新完成';
    
    else
        
        set $returnVal = 0;
        set $returnMsg = '账号错误';
    
    end if; 
    
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_SubPlayerCard
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_SubPlayerCard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_SubPlayerCard`(
							 in $intPlayerId int,
							 in $intCount int
)
BEGIN
						declare _tmpCardCount1,_tmpCardCount2 int default 0;
						
						

							
							select nCardCount into _tmpCardCount1 from table_user where nPlayerId= $intPlayerId;
							if _tmpCardCount1 >=$intCount THEN
								set _tmpCardCount2 = _tmpCardCount1 - $intCount;
								update Table_User set  nCardCount = _tmpCardCount2 where nPlayerId=$intPlayerId;
							end if;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_SubPlayerPoChanJinBi
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_SubPlayerPoChanJinBi`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_SubPlayerPoChanJinBi`(
							 in $intPlayerId int,
							 in $intCount int
)
BEGIN
						declare _tmpJinBiCount1,_tmpJinBiCount2 int default 0;


						
						
							
							select reser1 into _tmpJinBiCount1 from table_user where nPlayerId= $intPlayerId;
							if _tmpJinBiCount1 >=$intCount then
								set _tmpJinBiCount2 = _tmpJinBiCount1 - $intCount;
								update Table_User set  reser1 = _tmpJinBiCount2 where nPlayerId=$intPlayerId;
							end if;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_sync_diamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_sync_diamond`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_sync_diamond`(
in $nPlayerId  int,
in $nUpdateDiamond  int,
in $nRedisCount int
)
BEGIN

	declare _nCardCount int default 0;
	update table_user set nCardCount = nCardCount + $nUpdateDiamond,updatediamond = updatediamond - $nUpdateDiamond where nPlayerId = $nPlayerId;
	select nCardCount into _nCardCount from table_user where nPlayerId = $nPlayerId;
	if 	_nCardCount <> $nUpdateDiamond then
		insert into table_warn (nPlayerID,nClubID,nMySqlCount,nRedisCount,nType,nAmount) values ($nPlayerId,0,_nCardCount,$nUpdateDiamond,2,$nUpdateDiamond);
	end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_Table_ClubGameScore
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_Table_ClubGameScore`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_Table_ClubGameScore`(
		in $nPlayerID   int,
		in $nClubId   int,
		in $LastRdID int
)
BEGIN

		
		if $LastRdID > 0 then
			
			SELECT M.ID,M.nGameType,M.nClubID,U.szClubName,M.nTableID,M.nBaseScore,M.tEndTime,M.nRound,M.szRoundType
			,M.nMinEnter,M.nMaxEnter,M.nRoomTime,T.nPlayerID,T.nTotalWin,T.nTotalFreeWin
		
			FROM Table_ClubGameScore M
		
			LEFT JOIN Table_ClubGameUserScoreDetail T ON M.ID = T.nTindex and T.nClubID = M.nClubID and T.nTableID = M.nTableID
		
			LEFT JOIN table_clubinfo U ON U.nClubID = M.nClubID
		
			WHERE M.nClubID = $nClubId and T.nPlayerID = $nPlayerID and M.ID < $LastRdID order by M.tEndTime desc LIMIT 10;
			
		else
			
			SELECT M.ID,M.nGameType,M.nClubID,U.szClubName,M.nTableID,M.nBaseScore,M.tEndTime,M.nRound,M.szRoundType
			,M.nMinEnter,M.nMaxEnter,M.nRoomTime,T.nPlayerID,T.nTotalWin,T.nTotalFreeWin
		
			FROM Table_ClubGameScore M
		
			LEFT JOIN Table_ClubGameUserScoreDetail T ON M.ID = T.nTindex and T.nClubID = M.nClubID and T.nTableID = M.nTableID
		
			LEFT JOIN table_clubinfo U ON U.nClubID = M.nClubID
		
			WHERE M.nClubID = $nClubId and T.nPlayerID = $nPlayerID order by M.tEndTime desc LIMIT 10;
			
		end if;
		
		
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_table_club_game_log_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_table_club_game_log_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_table_club_game_log_shard`(
IN $szToken  VARCHAR(64)
,IN $tStartTime TIMESTAMP
,IN $tEndTime TIMESTAMP
,IN $nGameType INT(11)
,IN $nServerID  INT(11)
,IN $LogData text
,IN $CardData VARCHAR(256)
)
BEGIN
	
	set @autoId=fun_get_table_autoid_shard('table_clubgamelog');
	set @tableName=fun_get_table_name_shard('table_clubgamelog', 0);
	
	set @szToken=$szToken,@tStartTime=$tStartTime,@tEndTime=$tEndTime,@nGameType=$nGameType,@nServerID=$nServerID,@LogData=$LogData;
	
	set @sqlStr=concat("insert into ",@tableName," (ID, szToken,tStartTime,tEndTime,nGameType,nServerID,LogData) values (?,?,?,?,?,?,?)");	
	
	PREPARE stmt_name FROM @sqlStr;
	EXECUTE stmt_name using @autoId,@szToken,@tStartTime,@tEndTime,@nGameType,@nServerID,@LogData;
	DEALLOCATE PREPARE stmt_name; 
	/*
    INSERT INTO Table_ClubGameLog 
            (
                szToken,tStartTime,tEndTime,nGameType,nServerID,LogData
            )
    VALUES (
                $szToken,$tStartTime,$tEndTime,$nGameType,$nServerID,$LogData
            );
	*/
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_table_club_game_log_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_table_club_game_log_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_table_club_game_log_temp`(
IN $szToken  VARCHAR(64)
,IN $tStartTime TIMESTAMP
,IN $tEndTime TIMESTAMP
,IN $nGameType INT(11)
,IN $nServerID  INT(11)
,IN $LogData text
,IN $CardData VARCHAR(256)
)
BEGIN

    INSERT INTO Table_ClubGameLog 
            (
                szToken,tStartTime,tEndTime,nGameType,nServerID,LogData
            )
    VALUES (
                $szToken,$tStartTime,$tEndTime,$nGameType,$nServerID,$LogData
            );
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_table_club_hundred_cfg
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_table_club_hundred_cfg`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_table_club_hundred_cfg`(
IN  $Clubid INT	
)
BEGIN

		SELECT M.nClubID,M.nGameType,M.nHundredType,M.nOpen
					
		FROM table_club_hundred_cfg M 
		
		WHERE M.nClubID > 0;
		
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_table_user_playdata
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_table_user_playdata`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_table_user_playdata`(
	IN $nPlayerID INT,
	IN $nPreType INT,
	IN $nGameType INT,
	IN $nTotalRound INT,
	IN $nTotalTable INT,
	IN $InPoolRate INT,
	IN $InPoolWinRate INT,
	IN $AveScore INT,
	IN $AveBetIn INT,
	IN $Score100Round INT,
	IN $VPIP INT,
	IN $PFR INT,
	IN $WatchFlopRate INT,
	IN $WinFlopRate INT,
	IN $SDownRate INT,
	IN $WinSDownRate INT,
	IN $3BET INT,
	IN $CBET INT,
	IN $AFLevel INT,
	IN $CreateTime datetime
)
BEGIN
	INSERT INTO table_user_playdata (
		nPlayerID,
		nPreType,
		nGameType,
		nTotalRound,
		nTotalTable,
		InPoolRate,
		InPoolWinRate,
		AveScore,
		AveBetIn,
		Score100Round,
		VPIP,
		PFR,
		WatchFlopRate,
		WinFlopRate,
		SDownRate,
		WinSDownRate,
		3BET,
		CBET,
		AFLevel,
		CreateTime
	)
VALUES
	(
		$nPlayerID,
		$nPreType,
		$nGameType,
		$nTotalRound,
		$nTotalTable,
		$InPoolRate,
		$InPoolWinRate,
		$AveScore,
		$AveBetIn,
		$Score100Round,
		$VPIP,
		$PFR,
		$WatchFlopRate,
		$WinFlopRate,
		$SDownRate,
		$WinSDownRate,
		$3BET,
		$CBET,
		$AFLevel,
		$CreateTime
	);


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_task_check_same_login_ip
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_task_check_same_login_ip`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_task_check_same_login_ip`(
IN  $nPlayID    INT,
IN  $szip       VARCHAR(64),
IN  $nDay       INT,
OUT $nVal       INT
)
rt:BEGIN

SELECT COUNT(*) INTO $nVal FROM `table_web_loginlog` WHERE loginIp = $szip AND nplayerid <> $nPlayID AND sztime >= DATE_SUB(NOW(),INTERVAL $nDay DAY);

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_task_day_award_action_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_task_day_award_action_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_task_day_award_action_temp`(
IN  $start_time   VARCHAR(64),
IN  $end_time     VARCHAR(64)
)
BEGIN

DECLARE _bets BIGINT DEFAULT 0;
DECLARE _nplayerid INT;
DECLARE _nChannel INT;
DECLARE _nValidBet BIGINT;
DECLARE _done INT DEFAULT 0;
DECLARE _szcontent VARCHAR(256);
DECLARE _szNickName VARCHAR(64);
DECLARE _club_open_flag INT;

DECLARE cur CURSOR FOR SELECT SUM(nValidBet) ,nplayerid FROM Table_ClubGameScoreDetail WHERE tEndTime >= $start_time
AND tEndTime < $end_time GROUP BY nplayerid;
 
DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
 
OPEN cur;
 

read_loop:LOOP 
 
FETCH cur INTO _bets,_nplayerid;
 
IF _done=1 THEN 
	LEAVE read_loop;
END IF;
 
	CALL pr_get_task_day_award_section_value(_bets,@rsection,@dayRebate);						
 	
	IF @dayRebate>0 THEN 
		
		IF EXISTS(SELECT 1 FROM table_user WHERE nPlayerId = _nplayerid) THEN 
            
			SELECT IFNULL(nChannel,0), szNickName INTO _nChannel, _szNickName FROM table_user WHERE nPlayerId = _nplayerid;
			
			IF EXISTS ( SELECT 1 FROM table_club_task_clubdata WHERE nClubID = _nChannel AND nTaskID = 9) THEN
                	
                    SELECT IFNULL(nStatus,0) INTO _club_open_flag FROM table_club_task_clubdata WHERE nClubID = _nChannel AND nTaskID = 9;
                    
                    IF _club_open_flag = 1 THEN
                    
                        
                        CALL pr_UpdateUserClubScore3(0,_nplayerid,_nChannel,@dayRebate,0,24,'','天天投注送豪礼',@outscore);
                        
                        
                        SET _szcontent = CONCAT("恭喜您完成天天投注送豪礼活动，有效投注满",@rsection," 获得奖励",CONVERT( FLOOR(@dayRebate/1000), CHAR),"彩金");
                        
                        CALL pr_mail_add(_nplayerid,"天天投注送豪礼",_szcontent,0,0);
                        
                        
                        select IFNULL(nValidBet,0) into _nValidBet FROM table_club_task_player_data WHErE nPlayerID = _nplayerid AND nClubID = _nChannel LIMIT 1;
                        CALL pr_task_player_add_flow_recdata(_nplayerid,_nChannel,9,@dayRebate,@dayRebate,_nValidBet,1);
                    
                        
                        INSERT INTO table_club_task_complete( `nClubID`,  `nPlayerID`,  `szNickName`,  `nTaskID`, nGameType, `Amount`, `EAmount`, `szMask`,`szMask1`,`szMask2`,`nProperty`) 
                        VALUES  (  _nChannel, _nplayerid,  _szNickName,   9 , 0, @dayRebate, 0, '天天投注送豪礼' , '', '',2) ;
                    END IF;
			END IF;
			
		end if;			
		
	end if;
						

end loop;
 
close cur;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_task_get_complete
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_task_get_complete`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_task_get_complete`(
  in $nplayerid int,
  in $nclubid int,
  in $nmaxid int,
  in $ncount int
)
begin
		
		declare nnomaltaskidbegin int default 10000;
    if $nmaxid > 0 then
        select ID, nTaskID, Amount, szMask, szMask1, szMask2, tCreateTime from table_club_task_complete 
						where nplayerid = $nplayerid and nclubid = $nclubid and ntaskid >= nnomaltaskidbegin and id < $nmaxid 
						order by id desc limit $ncount;
    else
        select ID, nTaskID, Amount, szMask, szMask1, szMask2, tCreateTime from table_club_task_complete 
						where nplayerid = $nplayerid and nclubid = $nclubid and ntaskid >= nnomaltaskidbegin 
						order by id desc limit $ncount;
				select sum(amount) as ntotalaward from table_club_task_complete 
						where nplayerid = $nplayerid and nclubid = $nclubid and ntaskid >= nnomaltaskidbegin;
		end if;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_task_load_player_data
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_task_load_player_data`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_task_load_player_data`(
						IN  $nPlayerID   INT,
						IN  $nChannel    INT,
						OUT $szTaskData  TEXT
    )
rt:BEGIN

SELECT TaskData INTO $szTaskData FROM `table_club_task_player_data` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nChannel LIMIT 1;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_task_player_add_flow_recdata
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_task_player_add_flow_recdata`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_task_player_add_flow_recdata`(
						IN $nPlayerID   INT,
						IN $nChannel    INT,
						IN $nTaskID     INT,
						IN $nAmount     BIGINT,
						IN $nFlow       BIGINT,
						IN $nValidBet   BIGINT,
						IN $nLock       TINYINT
)
rt:BEGIN

DECLARE _targetBet BIGINT;
SELECT `targetBet` INTO _targetBet FROM `table_club_task_recdata` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nChannel ORDER BY ID DESC LIMIT 1;
IF _targetBet IS NULL THEN
        SET _targetBet = $nValidBet;
ELSE
   IF _targetBet < $nValidBet THEN
        SET _targetBet = $nValidBet;
   END IF;
END IF;
SET _targetBet = _targetBet + $nFlow;

INSERT INTO `table_club_task_recdata` ( `nPlayerID`,  `nClubID`,  `nTaskID`,  `Amount`,  `currentBet`,  `targetBet`,  `lockFlag`,  `doneFlag`) 
VALUES                                (  $nPlayerID,   $nChannel,  $nTaskID,   $nAmount,  $nValidBet,    _targetBet,   $nLock,     0  ) ;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_task_player_add_recdata
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_task_player_add_recdata`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_task_player_add_recdata`(
						IN $nPlayerID   INT,
						IN $nChannel    INT,
						IN $nTaskID     INT,
						IN $nAmount     BIGINT,
						IN $nValidBet   BIGINT,
						IN $nFreeze     INT,
						IN $nLock       TINYINT
)
rt:BEGIN

 
DECLARE _targetBet BIGINT;
DECLARE _multiple  INT;
 
SET _multiple = 1;
 
IF $nTaskID = 1 THEN  
        SET _multiple = 5;
elseif $nTaskID = 2 then 
        SET _multiple = 3;
ELSEIF $nTaskID = 8 THEN 
        SET _multiple = 13;
END IF;
 
SELECT `targetBet` INTO _targetBet FROM `table_club_task_recdata` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nChannel ORDER BY ID DESC LIMIT 1;
 
IF _targetBet IS NULL THEN
        SET _targetBet = $nValidBet;
ELSE
   IF _targetBet < $nValidBet THEN
        SET _targetBet = $nValidBet;
   END IF;
END IF;
 

IF $nFreeze = 1 THEN
        SET _targetBet = _targetBet + _multiple * $nAmount;
ELSE
        SET _targetBet = _targetBet + $nAmount;
END IF;
 

INSERT INTO `table_club_task_recdata` ( `nPlayerID`,  `nClubID`,  `nTaskID`,  `Amount`,  `currentBet`,  `targetBet`,  `lockFlag`,  `doneFlag`) 
VALUES                                (  $nPlayerID,   $nChannel,  $nTaskID,   $nAmount,  $nValidBet,    _targetBet,   $nLock,     0  ) ;
 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_task_player_complete
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_task_player_complete`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_task_player_complete`(
                                                IN $nServerID   INT,
						IN $nPlayerID   INT,
						IN $nChannel    INT,
						IN $nTaskID     INT,
						IN $nAmount     BIGINT,
						IN $nEAmount    BIGINT,
						IN $nRedisScore BIGINT,
						IN $nType       INT,
						IN $szOrder     VARCHAR(128),
						IN $Mask        VARCHAR(64),
						IN $Mask1       VARCHAR(64),
						IN $Mask2       VARCHAR(32),
						IN $nGameType   INT
)
rt:BEGIN
 
DECLARE _nickname VARCHAR(64);
DECLARE _tasktype tinyint;
 
SELECT `szNickName` INTO _nickname FROM `table_user` WHERE `nPlayerId` = $nPlayerID;
 
select IFNULL(nTaskType,1) INTO _tasktype FROM table_task_config WHERE nTaskID = $nTaskID;
 
IF $szOrder IS NULL OR $szOrder='' THEN
        SET $szOrder = CONCAT($nChannel,'-',UNIX_TIMESTAMP(NOW()),'-',CEILING(RAND() * 899 + 100));
eLSE
        SET $szOrder = CONCAT($nTaskID,'-',$szOrder);
END IF;
 
IF $nAmount > 0 THEN
        
        CALL pr_UpdateUserClubScore3($nServerID,$nPlayerID,$nChannel,$nAmount,$nRedisScore,$nType,$szOrder,$Mask,@nScore);
END IF;
 
INSERT INTO table_club_task_complete( `nClubID`,  `nPlayerID`,  `szNickName`,  `nTaskID`, nGameType, `Amount`, `EAmount`, `szMask`,`szMask1`,`szMask2`,`nProperty`) 
VALUES  (  $nChannel,    $nPlayerID,  _nickname,   $nTaskID ,   $nGameType, $nAmount,  $nEAmount, $Mask ,$Mask1,$Mask2,_tasktype) ;
 
CALL pr_club_write_third_score_detail_shard(2,$nTaskID,$nChannel,0,0,$szOrder,0,NOW(),NOW(),$nPlayerID,@nScore-$nAmount,0,0,$nAmount,0,$nGameType,$nServerID,$Mask);
                                              
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_task_read_clubdata
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_task_read_clubdata`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_task_read_clubdata`()
BEGIN

select nClubID,nTaskID from table_club_task_clubdata where nStatus = 1;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_task_recharge
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_task_recharge`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_task_recharge`(
				IN $nPlayerID   INT,
				IN $nExScore    BIGINT,
				IN $nBet        BIGINT,
				IN $szOrderID   VARCHAR(128),
				OUT $rval       INT,
				OUT $msg        VARCHAR(64),
				OUT $nAmount    INT
)
RT:BEGIN
/*
充值任务的处理
2019-10-24 增加orderid
2019-10-29 修改目标额度的逻辑，递增模式。
2019-10-30 修改了pr_task_player_add_recdata，导致参数变化
2019-11-15 首充的规则改变，充的积分不再可以扣手续费取出
2019-12-26 增加写邮件记录
2020-3-23 修改活动标识为29
*/
DECLARE _clubid   INT;
DECLARE _validBet BIGINT;
DECLARE _targetBet BIGINT;
DECLARE _awardScore BIGINT;
DECLARE _awardEScore BIGINT;
DECLARE _subScore BIGINT;
DECLARE _samecount INT;
DECLARE _szip VARCHAR(64);
DECLARE _tmpCount INT;
DECLARE _szcontent VARCHAR(256);
SELECT IFNULL(`nChannel`,0),`preLoginIp` INTO _clubid,_szip FROM `table_user` WHERE `nPlayerId` = $nPlayerID;
IF $nBet < 0 THEN 
        #用户离线，从数据库中取有效投注额
        SELECT IFNULL(`nValidBet`,0) INTO _validBet FROM `table_club_task_player_data` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = _clubid;
ELSE
        #有效投注额从服务器传过来
        SET _validBet = $nBet;
END IF;
SET $rval    = 0;
SET $nAmount = 0;
SET $msg     = "";
SELECT COUNT(ID) INTO _tmpCount FROM `table_third_order` WHERE ntype = 3 AND nstatus = 1 AND `nPlayerID` = $nPlayerID AND nClubID = _clubid;
IF _tmpCount >= 1 THEN
        
        #充值额的记录 有效投注额度要加1倍充值额，锁定标记为1，表示不可提前取出
        CALL pr_task_player_add_recdata($nPlayerID,_clubid,0,$nExScore,_validBet,0,1);
        
ELSE
     #要检测这个俱乐部是否有首充奖励任务(2)
     IF EXISTS (SELECT 1 FROM table_club_task_clubdata WHERE nClubID = _clubid AND `nTaskID` = 2 AND `nStatus` = 1) THEN
     
        SELECT COUNT(*) INTO _samecount FROM `table_web_loginlog` WHERE loginIp = _szip AND nplayerid <> $nPlayerID AND sztime >= DATE_SUB(NOW(),INTERVAL 10 DAY);
        
        IF _samecount > 0 then
           #有相同IP，不能获得奖励
           #充值额的记录 有效投注额度要加1倍充值额，锁定标记为1，表示不可提前取出
           CALL pr_task_player_add_recdata($nPlayerID,_clubid,2,$nExScore,_validBet,0,1);
        else
                #可以获得首充奖励
                SET _awardScore  = 0;
                #资讯分为0
                SET _awardEScore = 0;
                SET _subScore = 0;
                
                #大于500只送500
                IF $nExScore >= 500000 THEN
                   SET _awardScore = 500000;
                   SET _subScore = $nExScore - _awardScore;
                ELSE
                   #小于500充多少送多少
                   SET _awardScore = $nExScore;
                END IF;
                
                IF _subScore > 0 THEN
                        #如果有超出500部分，则按照1倍流水记录
                        CALL pr_task_player_add_recdata($nPlayerID,_clubid,0,_subScore,_validBet,0,1);
                END IF;
                
                IF _awardScore > 0 THEN
                        
                        #赠送的记录 赠送部分要额外加同等额度，总和3倍算流水，锁定
                        CALL pr_task_player_add_recdata($nPlayerID,_clubid,2,_awardScore*2,_validBet,1,1);
                        
                        #对应订单中的赠送额更新
                        CALL pr_recharge_update_order_gift(_awardScore,$szOrderID,@rv,@msg);
                        
                        SET _szcontent = CONCAT("首次充值",0+CONVERT( CONVERT($nExScore/1000,DECIMAL(15,2)),CHAR),",获得奖励",0+CONVERT( CONVERT(_awardScore/1000,DECIMAL(15,2)),CHAR),"彩金");
                        
                        #用户不在线时写一封邮件
                        CALL pr_mail_add($nPlayerID,"首充送金",_szcontent,0,0);
                        
                        SET $rval = 2;
                        SET $nAmount = _awardScore;
                        SET $msg = "首充奖励";
                END IF;
                
                #任务完成记录
                CALL pr_task_player_complete(0,$nPlayerID,_clubid,2,_awardScore,_awardEScore,0,29,'','首充奖励','','',0);        
        end if;
     
     END IF;
             
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_task_recharge_online
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_task_recharge_online`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_task_recharge_online`(
				IN $nPlayerID   INT,
				IN $nExScore    BIGINT,
				IN $nBet        BIGINT,
				IN $szOrderID   VARCHAR(128),
				IN $nSameIP     INT,
				OUT $rval       INT,
				OUT $msg        VARCHAR(64),
				OUT $nAmount    INT
)
RT:BEGIN
/*
玩家在线时充值任务的处理
2020-3-23 修改活动标识为29
*/
DECLARE _clubid   INT;
DECLARE _validBet BIGINT;
DECLARE _targetBet BIGINT;
DECLARE _awardScore BIGINT;
DECLARE _awardEScore BIGINT;
DECLARE _subScore BIGINT;
DECLARE _tmpCount INT;
 
SELECT IFNULL(`nChannel`,0) INTO _clubid FROM `table_user` WHERE `nPlayerId` = $nPlayerID;
 
IF $nBet < 0 THEN 
        #用户离线，从数据库中取有效投注额
        SELECT IFNULL(`nValidBet`,0) INTO _validBet FROM `table_club_task_player_data` WHERE `nPlayerID` = $nPlayerID AND `nClubID` = _clubid;
ELSE
        #有效投注额从服务器传过来
        SET _validBet = $nBet;
END IF;
 
SET $rval    = 0;
SET $nAmount = 0;
SET $msg     = "";
 
SELECT COUNT(ID) INTO _tmpCount FROM `table_third_order` WHERE ntype = 3 AND nstatus = 1 AND `nPlayerID` = $nPlayerID AND nClubID = _clubid;
 
IF _tmpCount > 1 THEN
#是否存在充值
        #充值额的记录 有效投注额度要加1倍充值额，锁定标记为1，表示不可提前取出
        CALL pr_task_player_add_recdata($nPlayerID,_clubid,0,$nExScore,_validBet,0,1);
        
ELSE
     #要检测这个俱乐部是否有首充奖励任务(2)
     IF EXISTS (SELECT 1 FROM table_club_task_clubdata WHERE nClubID = _clubid AND `nTaskID` = 2 AND `nStatus` = 1) THEN
     
       IF $nSameIP > 0 THEN
       #有IP一样的，不能得奖励
                #充值额的记录 有效投注额度要加1倍充值额，锁定标记为1，表示不可提前取出
                CALL pr_task_player_add_recdata($nPlayerID,_clubid,0,$nExScore,_validBet,0,1);
                SET $msg = "发现同IP";
       ELSE
       
        #可以获得首充奖励
        SET _awardScore  = 0;
        #资讯分为0
        SET _awardEScore = 0;
        SET _subScore = 0;
        
        #大于500只送500
        IF $nExScore >= 500000 THEN
           SET _awardScore = 500000;
           SET _subScore = $nExScore - _awardScore;
        ELSE
           #小于500充多少送多少
           SET _awardScore = $nExScore;
        END IF;
        
        IF _subScore > 0 THEN
                #如果有超出500部分，则按照1倍流水记录
                CALL pr_task_player_add_recdata($nPlayerID,_clubid,0,_subScore,_validBet,0,1);
        END IF;
        
        IF _awardScore > 0 THEN
                
                #赠送的记录 赠送部分要额外加同等额度，总和3倍算流水，锁定
                CALL pr_task_player_add_recdata($nPlayerID,_clubid,2,_awardScore*2,_validBet,1,1);
                
                #对应订单中的赠送额更新
                CALL pr_recharge_update_order_gift(_awardScore,$szOrderID,@rv,@msg);
                
                SET $rval = 2;
                SET $nAmount = _awardScore;
                SET $msg = "首充奖励";
        END IF;
        
        #任务完成记录
        CALL pr_task_player_complete(0,$nPlayerID,_clubid,2,_awardScore,_awardEScore,0,29,'','首充奖励','','',0);       
       
       END IF;
            
     END IF;
             
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_task_save_player_data
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_task_save_player_data`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_task_save_player_data`(
						IN $nPlayerID   INT,
						IN $nChannel    INT,
						IN $szTaskData  TEXT,
						IN $nBet        BIGINT
    )
rt:BEGIN

IF EXISTS(SELECT 1 FROM table_club_task_player_data WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nChannel) THEN
  UPDATE `table_club_task_player_data` SET TaskData = $szTaskData,nValidBet = $nBet WHERE `nPlayerID` = $nPlayerID AND `nClubID` = $nChannel;
ELSE
  INSERT INTO `table_club_task_player_data` (`nClubID`,  `nPlayerID`,  `TaskData` ,nValidBet ) VALUES ( $nChannel,  $nPlayerID,  $szTaskData ,$nBet ) ;
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_tatolmjrb
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_tatolmjrb`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_tatolmjrb`(
)
begin

INSERT INTO table_totalscore (totime,nPlayerID,mjdjjf,pkdjjf,dyjjf,bsjf,qdjf,czjf,hdjf,qtjf,jrccjf,jrxhjf,jfye,mjnnjf,mjyljf,mjsljf,mjhxjf,mjggjf,mjlljf
						,mjgljf,mjwzjf,pkbzjf,pksyjf,pkssjf,DYJnnjf,DYJyljf,DYJsljf,DYJhxjf,DYJggjf,DYJlljf,DYJgljf,DYJwzjf,DYJbzjf,DYJsyjf,DYJssjf,qdjf7,qdjf15,qdjf20)
SELECT 
date_format(nActTime,'%Y-%m-%d') as ndate , nPlayerID
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)<2000 then nScore ELSE 0 end) as mjdjjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)>2000 then nScore ELSE 0 end) as pkdjjf
,sum(case when nType=6 then nScore ELSE 0 end) as dyjjf
,sum(case when nType=7 or nType=8 then nScore ELSE 0 end) as bsjf
,sum(case when nType<=3 then nScore ELSE 0 end) as qdjf
,sum(case when nType =4 then nScore ELSE 0 end) as czjf
,0 as hdjf
,0 as qtjf
,sum(case when nType <20 then nScore ELSE 0 end) as jrccjf
,sum(case when nType >=20 then nScore ELSE 0 end) as jrxhjf
,sum(nScore) as jfye

,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1001  then nScore ELSE 0 end) as mjnnjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1002  then nScore ELSE 0 end) as mjyljf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1003  then nScore ELSE 0 end) as mjsljf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1004  then nScore ELSE 0 end) as mjhxjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1005  then nScore ELSE 0 end) as mjggjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1007  then nScore ELSE 0 end) as mjlljf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1008  then nScore ELSE 0 end) as mjgljf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1011  then nScore ELSE 0 end) as mjwzjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=2001  then nScore ELSE 0 end) as pkbzjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=2002  then nScore ELSE 0 end) as pksyjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=2003  then nScore ELSE 0 end) as pkssjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1001  then nScore ELSE 0 end) as DYJnnjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1002  then nScore ELSE 0 end) as DYJyljf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1003  then nScore ELSE 0 end) as DYJsljf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1004  then nScore ELSE 0 end) as DYJhxjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1005  then nScore ELSE 0 end) as DYJggjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1007  then nScore ELSE 0 end) as DYJlljf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1008  then nScore ELSE 0 end) as DYJgljf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1011  then nScore ELSE 0 end) as DYJwzjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=2001  then nScore ELSE 0 end) as DYJbzjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=2002  then nScore ELSE 0 end) as DYJsyjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=2003  then nScore ELSE 0 end) as DYJssjf
,sum(case when nType=1 then nScore ELSE 0 end) as qdjf7
,sum(case when nType=2 then nScore ELSE 0 end) as qdjf15
,sum(case when nType=3 then nScore ELSE 0 end) as qdjf20

from table_score_log 
where date_format(nActTime,'%Y-%m-%d') =DATE_SUB(CURDATE(),INTERVAL 1 DAY)
GROUP BY date_format(nActTime,'%Y-%m-%d'),nPlayerID

;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_test
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_test`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_test`(OUT $a INT)
BEGIN






DECLARE _logintime   TIMESTAMP;
select preLoginTime INTO _logintime FROM table_user WHERE nPlayerID=60835;
set $a = UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(_logintime);
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_test2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_test2`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_test2`()
BEGIN

DECLARE _done INT DEFAULT 0;
DECLARE _ID BIGINT DEFAULT 0;
DECLARE _nplayerid INT;
DECLARE _ngameid INT;

DECLARE cur CURSOR FOR 
SELECT id,nplayerid,ngameid FROM table_clublogscore WHERE FLOOR((nGameID/100))=21 
AND CreateTime > "2020-01-22 23:00:00" AND CreateTime < '2020-01-22 23:59:59' 
AND szOrder NOT IN 
(
SELECT CONCAT(cs.szToken,"-",cs.nChairID) FROM Table_ClubGameScoreDetail cs WHERE cs.nGameType = 21 
AND cs.tEndTime > "2020-01-22 23:00:00" AND cs.tEndTime < '2020-01-22 23:59:59'
);
DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
 
OPEN cur;
 

read_loop:LOOP 
 
FETCH cur INTO _ID,_nplayerid,_ngameid;
 
IF _done=1 THEN 
	LEAVE read_loop;
END IF;

select _ID,_nplayerid,_ngameid;

END LOOP;
 
CLOSE cur;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ThirdExchange_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ThirdExchange_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `Pr_ThirdExchange_temp`(
						IN $strCmd VARCHAR(32),
						IN $strAccount VARCHAR(64),
						IN $strPass VARCHAR(64),
						IN $nChannel  INT,
						IN $nAddCoin INT,
						IN $strPay  VARCHAR(64),
						OUT $intOutPlayerId INT,
						OUT $intCoin   INT,
						OUT $intClubID INT,
						OUT $returnVal INT,
						OUT $returnMsg VARCHAR(128)
)
returnVal:BEGIN

DECLARE  _tmpCardCount  INT;
DECLARE  _tmpPass       VARCHAR(64);
DECLARE  _tmpAct        INT;
DECLARE  _tmpClubID     INT;
DECLARE  _tmpCount      INT;
DECLARE  _tmpCID        INT;

DECLARE  _tmp_pre_score INT DEFAULT 20000;
DECLARE  _tmp_flow_limit INT DEFAULT 20000;
DECLARE  _tmp_pre_time TIMESTAMP;
DECLARE  _tmp_balance BIGINT;
DECLARE  _tmp_fee1 BIGINT;
DECLARE  _tmp_fee2 BIGINT;
DECLARE  _tmp_fee3 BIGINT;
DECLARE  _tmp_fee_total BIGINT;
IF EXISTS(SELECT * FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel) THEN
    
    SELECT nplayerid,szThirdPass,nActive INTO $intOutPlayerId, _tmpPass,_tmpAct FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel;
    
    
    IF $strPass <> _tmpPass THEN
        SET $returnVal=2;
        SET $returnMsg = 'password error';
        LEAVE returnVal;
    END IF;
    
    
    IF _tmpAct<>1 THEN
        SET $returnVal=1;
        SET $returnMsg = 'accounts disabled';
        LEAVE returnVal;
    END IF;
    
    SELECT COUNT(*) INTO _tmpCount FROM table_clubinfo WHERE nChannel = $nChannel;
    
    IF _tmpCount < 1 THEN
        
        SET $returnVal=6;
        SET $returnMsg = 'not found club by channel';
        LEAVE returnVal;
    END IF;
    IF _tmpCount > 1 THEN
        
        SET $returnVal=7;
        SET $returnMsg = 'club too much by same channel';
        LEAVE returnVal;
    END IF;
    SELECT nclubid INTO _tmpClubID FROM table_clubinfo WHERE nChannel = $nChannel;
    
    SET $intClubID = _tmpClubID;
    
    IF NOT EXISTS (SELECT * FROM `table_clubmember` WHERE nclubid = _tmpClubID AND nplayerid = $intOutPlayerId)THEN
        SET $returnVal=8;
        SET $returnMsg = 'no member in the club';
        LEAVE returnVal;
    END IF;
    
    SELECT ID INTO _tmpCID FROM `table_clubmember` WHERE nclubid = _tmpClubID AND nplayerid = $intOutPlayerId;
    
    IF $strCmd = 'query' THEN
        SELECT nScore INTO $intCoin FROM table_clubmember WHERE ID = _tmpCID;
        SET $returnVal=0;
        SET $returnMsg = 'success';
        LEAVE returnVal;
    
    ELSEIF $strCmd = 'changadd' THEN
        UPDATE table_clubmember SET nScore = nScore + $nAddCoin WHERE ID = _tmpCID;
        SELECT `nScore` INTO $intCoin FROM table_clubmember WHERE ID = _tmpCID;
        INSERT INTO `table_third_exchange_log` (`nPlayerID`,`nClubID`,`nChannel`,`nType`,`nAmount`,`nScore`,`szPay`,`szDesc`,`CreateTime`) 
        VALUES  (  $intOutPlayerId,  _tmpClubID,  $nChannel,  1,  $nAddCoin,  $intCoin,  $strPay,  '兑入',  NOW()  ) ;
        SET $returnVal=0;
        SET $returnMsg = 'success';
        
        LEAVE returnVal;
    
    ELSEIF $strCmd = 'changdec' THEN
        SELECT nScore INTO _tmpCardCount FROM table_clubmember WHERE ID = _tmpCID;
        IF _tmpCardCount < $nAddCoin THEN
        
            SELECT `nScore` INTO $intCoin FROM table_clubmember WHERE ID = _tmpCID;
            SET $returnVal=3;
            SET $returnMsg = 'coin not enough';
            LEAVE returnVal;
        END IF;
        
        
        SET _tmp_balance = _tmpCardCount - $nAddCoin;
        
        IF EXISTS ( SELECT * FROM table_club_flow_data WHERE nclubid = _tmpClubID AND nPlayerID = $intOutPlayerId AND nStatus=1) THEN
            IF _tmp_balance < _tmp_pre_score THEN
                SELECT CreateTime INTO _tmp_pre_time FROM table_club_flow_data WHERE nclubid = _tmpClubID AND nPlayerID = $intOutPlayerId AND nStatus=1;
                
                
                
                
                
                
                
                
                SELECT IFNULL(SUM(nBetScore),0) INTO _tmp_fee_total FROM table_clubgamescoredetail WHERE nplayerid = $intOutPlayerId AND nclubid=_tmpClubID AND tStartTime > _tmp_pre_time AND nBetScore>0;
                
                IF _tmp_fee_total < _tmp_flow_limit THEN
                     SET $returnVal = 4;
                     SET $returnMsg = 'need more flow game data.';
                     LEAVE returnVal;
                ELSE
                    
                    UPDATE table_club_flow_data SET nStatus = 0 WHERE nclubid = _tmpClubID AND nPlayerID = $intOutPlayerId AND nStatus=1;
                END IF;
                
            END IF;
        END IF;
        
        UPDATE table_clubmember SET nScore = nScore - $nAddCoin WHERE ID = _tmpCID;
        SELECT `nScore` INTO $intCoin FROM table_clubmember WHERE ID = _tmpCID;
        INSERT INTO `table_third_exchange_log` (`nPlayerID`,`nClubID`,`nChannel`,`nType`,`nAmount`,`nScore`,`szPay`,`szDesc`,`CreateTime`) 
        VALUES  (  $intOutPlayerId,  _tmpClubID,  $nChannel,  2,  $nAddCoin,  $intCoin,  $strPay,  '兑出',  NOW()  ) ;
        SET $returnVal=0;
        SET $returnMsg = 'success';
        LEAVE returnVal;
    
    END IF;
    
    SET $returnVal=5;
    SET $returnMsg = 'unknown cmd';
    LEAVE returnVal;
    
ELSE 
    
    SET $returnVal=1;
    SET $returnMsg = 'accounts not exist';
    LEAVE returnVal;
END IF;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ThirdGetGoodsFromWait
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ThirdGetGoodsFromWait`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_ThirdGetGoodsFromWait`(
    IN $nClubID         INT,
    IN $szThirdAccout   varchar(64)
)
rt:BEGIN
/*
获取某人的预先派发的物品
*/


DECLARE done          INT DEFAULT FALSE;
DECLARE  _nIntPlayerID  INT;
DECLARE _orderID  varchar(64);
DECLARE _OpratAccount  varchar(64);
DECLARE _ReMark  varchar(64);
DECLARE  _ID  INT;
DECLARE  _nClubId  INT;
DECLARE  _szThirdAccout   varchar(64);
DECLARE  _nGoodsId  INT;
DECLARE  _num  INT;

DECLARE cur CURSOR FOR select ID, nClubId ,szThirdAccount, nGoodsId, num,OpratAccount, ReMark from table_clubgoodsoperatlogwait where nClubId = $nClubID and szThirdAccount = $szThirdAccout and nState = 0;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

OPEN cur;  

read_loop:LOOP  

    FETCH cur INTO _ID, _nClubId, _szThirdAccout, _nGoodsId, _num, _OpratAccount, _ReMark;

    IF done THEN                    
            LEAVE read_loop;    
    END IF;

        SELECT nPlayerID into _nIntPlayerID FROM Table_User WHERE szThirdAccount = _szThirdAccout AND nChannel = $nClubID;
        
        IF _nIntPlayerID > 10000 THEN
            
            SET _orderID = CONCAT($nClubID,'-',_nIntPlayerID,'-',UNIX_TIMESTAMP(NOW()),'-',CEILING(RAND() * 899 + 100));
            IF NOT EXISTS(SELECT * FROM table_clubgoodsinfor WHERE nGoodsID = _nGoodsId) then
                    ITERATE read_loop;
            END IF;

            IF EXISTS(SELECT * FROM table_clubgoods WHERE nPlayerID =_nIntPlayerID AND nClubID = $nClubID and nGoodsID = _nGoodsId) THEN
                    UPDATE table_clubgoods SET num = @num := num + _num, lastOpTime=now() WHERE nPlayerID=_nIntPlayerID AND nClubID=$nClubID  and nGoodsID = _nGoodsId;
            ELSE
                    INSERT INTO table_clubgoods(nplayerid,nClubID,nGoodsID,num,lastOpTime)
                    VALUES (_nIntPlayerID, $nClubID, _nGoodsId, _num, now());
                    set @num = _num;
            END IF;
                
            IF @num > 999 then 
                set _num = _num - (@num - 999);
                set @num = 999;
                UPDATE table_clubgoods SET num = 999, lastOpTime=now() WHERE nPlayerID=_nIntPlayerID AND nClubID=$nClubID  and nGoodsID = _nGoodsId;
            END IF;

            INSERT INTO table_clubGoodsOperatLog 
                    (orderID,nClubID,nPlayerID,nGoodsID,num,AfterMbNum,CreateTime,nState,nOperatType,OpratAccount,nGameType,nServerID,ReMark)
            VALUES
                    (_orderID,$nClubID,_nIntPlayerID,_nGoodsId,_num,@num,now(),1,3,_OpratAccount,0,0,_ReMark);   

            update table_clubgoodsoperatlogwait set nState = 1, ModifyTime = now() where id = _ID;
            
        END IF;

    END LOOP;
                                            
    CLOSE cur;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ThirdUserCreate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ThirdUserCreate`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `Pr_ThirdUserCreate`(
						IN $strAccount VARCHAR(64),
						IN $strPass VARCHAR(64),
						IN $isCreate VARCHAR(32),
						IN $strPreLoginIp  VARCHAR(64),
						IN $nChannel  INT,
						IN $strUpName VARCHAR(64),
						OUT $intOutPlayerId INT,
						OUT $strOutPass VARCHAR(64),
						OUT $returnVal INT,
						OUT $returnMsg VARCHAR(128),
						OUT $returnExFlag INT
)
returnVal:BEGIN

DECLARE  _tmpCardCount  INT    DEFAULT 0;
DECLARE  _tmpJinBiCount BIGINT DEFAULT 0;
DECLARE  _tmpName       VARCHAR(64);
DECLARE  _tmpPass       VARCHAR(64);
DECLARE  _tmpAct        INT;
DECLARE  _tmpClubID     INT;
DECLARE  _tmpRoundID    INT;
DECLARE  _tmpUpID       INT;
DECLARE  _tmpExID       INT;

SET $returnExFlag = 0;
IF EXISTS(SELECT * FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel) THEN
    
    SELECT szThirdPass,nActive INTO _tmpPass,_tmpAct FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel;
    
    
    IF $strPass <> _tmpPass THEN
        SET $returnVal=2;
        SET $returnMsg = 'password error';
        LEAVE returnVal;
    END IF;
    
    
    IF _tmpAct<>1 THEN
        SET $returnVal=3;
        SET $returnMsg = 'accounts disabled';
        LEAVE returnVal;
    END IF;
    
    SET _tmpRoundID = ROUND(RAND()*99999+(RAND()*8+1)*100000);
    SET _tmpPass = CAST(_tmpRoundID AS CHAR);
    SET $strOutPass = _tmpPass;
    
    
    SELECT nPlayerId INTO $intOutPlayerId FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel;
    
    SELECT nclubid  INTO _tmpClubID FROM table_clubinfo WHERE nChannel = $nChannel;
    
    IF _tmpClubID > 0 THEN
        IF NOT EXISTS (SELECT * FROM Table_ClubMember WHERE nPlayerID=$intOutPlayerId AND nClubID= _tmpClubID )THEN
            
            INSERT INTO Table_ClubMember( nClubID,nPlayerID,nLevel,nStatus,nScore) VALUES (_tmpClubID,$intOutPlayerId,3,1,0);
            
            INSERT INTO table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) VALUES ($intOutPlayerId,502,'欢迎加入游戏','欢迎您来到游戏中,您可点击上分按钮增加俱乐部的积分');
        ELSE
            
            UPDATE Table_ClubMember SET nStatus = 1 WHERE nPlayerID=$intOutPlayerId AND nClubID= _tmpClubID;
        END IF;
    END IF;
    
    
    
    
    
    
    
    
    SELECT nPlayerId INTO _tmpUpID FROM table_user WHERE szThirdAccount = $strUpName AND nChannel = $nChannel;
    
    IF _tmpUpID > 0 THEN
        SELECT nExtenID INTO _tmpExID FROM `table_clubmember` WHERE nClubID = _tmpClubID AND nPlayerID = $intOutPlayerId AND nStatus = 1;
        
        IF _tmpExID = 0 THEN
            UPDATE table_clubmember SET nExtenID = _tmpUpID,tExtenBindingTime = NOW() WHERE nClubID = _tmpClubID AND nPlayerID = $intOutPlayerId AND nStatus = 1;
        END IF;
    ELSE
        
        SET $returnExFlag = 1;
    END IF;
    
    SET $returnVal=0;
    SET $returnMsg = 'success';
    LEAVE returnVal;
    
ELSE 
    
    IF $isCreate <> '1' OR $isCreate IS NULL THEN
        SET $returnVal=1;
        SET $returnMsg = 'accounts not exist';
        LEAVE returnVal;
    END IF;
    
    SET _tmpRoundID = ROUND(RAND()*99999+(RAND()*8+1)*100000);
    SET _tmpPass = CAST(_tmpRoundID AS CHAR);
    
    INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,preLoginTime,preLoginIp,szHeadPicUrl,szThirdAccount,szThirdPass,nChannel) 
    VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,'',DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,CONCAT(CEILING(RAND() * 6)),$strAccount,$strPass,$nChannel);
    
    SET $intOutPlayerId = @@identity;
    SET $strOutPass = _tmpPass;
    SET _tmpName = $strAccount;
    
    UPDATE Table_User SET `szNickName` = _tmpName WHERE nPlayerId = $intOutPlayerId;
    
    SELECT nclubid INTO _tmpClubID FROM table_clubinfo WHERE nChannel = $nChannel;
    IF _tmpClubID > 0 THEN
        
        INSERT INTO Table_ClubMember( nClubID,nPlayerID,nLevel,nStatus,nScore) VALUES (_tmpClubID,$intOutPlayerId,3,1,0);
        INSERT INTO table_user_msg(nPlayerId,nMsgType,sMsgTitle,sMsgBody) VALUES ($intOutPlayerId,502,'欢迎加入游戏','欢迎您来到游戏中,您可点击上分按钮增加俱乐部的积分');
    END IF;
    
    
    
    
    
    
    
    SELECT nPlayerId INTO _tmpUpID FROM table_user WHERE szThirdAccount = $strUpName AND nChannel = $nChannel;
    
    IF _tmpUpID > 0 THEN
        SELECT nExtenID INTO _tmpExID FROM `table_clubmember` WHERE nClubID = _tmpClubID AND nPlayerID = $intOutPlayerId AND nStatus = 1;
        
        IF _tmpExID = 0 THEN
            UPDATE table_clubmember SET nExtenID = _tmpUpID,tExtenBindingTime = NOW() WHERE nClubID = _tmpClubID AND nPlayerID = $intOutPlayerId AND nStatus = 1;
        END IF;
    ELSE
        
        SET $returnExFlag = 1;
    END IF;
        
    SET $returnVal=0;
    SET $returnMsg = 'success';
    LEAVE returnVal;
END IF;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_ThirdUserCreateEx
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_ThirdUserCreateEx`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_ThirdUserCreateEx`(
            IN $strAccount     VARCHAR(64),
            IN $strPreLoginIp  VARCHAR(64),
            IN $nChannel       INT,
            IN $orderid        VARCHAR(128),
            IN $nAmount        BIGINT,
            IN $linecode       VARCHAR(64),
            OUT $intOutPlayerId INT,
            OUT $returnVal INT,
            OUT $returnMsg VARCHAR(128)
)
rt:BEGIN
/*
第三方用户创建账号及登录Ex
2019.4.12 修改昵称的写入内容
2019.5.9  写登录日志
2019.7.12 更新linecode功能 注释发消息操作
2019.9.16 更新用户登录IP和时间到user表中
2019.12.9 登录日志中增加俱乐部ID
*/
DECLARE  _tmpCardCount  INT    DEFAULT 0;
DECLARE  _tmpJinBiCount BIGINT DEFAULT 0;
DECLARE  _tmpName       VARCHAR(64);
DECLARE  _tmpPass       VARCHAR(64);
DECLARE  _tmpAct        INT;
DECLARE  _tmpClubID     INT;
DECLARE  _tmpRoundID    INT;
DECLARE  _tmpUpID       INT;
DECLARE  _tmpLineCode   VARCHAR(64);
DECLARE  _tmpStatus     TINYINT;
IF EXISTS(SELECT * FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel) THEN
    #账号已存在，不需要再创建
    SELECT szThirdPass,nActive INTO _tmpPass,_tmpAct FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel;
    #将登录时间和IP更新到用户表
    UPDATE Table_User SET preLoginIp = $strPreLoginIp,preLoginTime = NOW() WHERE szThirdAccount = $strAccount AND nChannel = $nChannel;
    
    #账号被禁用
    IF _tmpAct<>1 THEN
        SET $returnVal = 3;
        SET $returnMsg = 'accounts disabled';
        LEAVE rt;
    END IF;
    
    SELECT nPlayerId INTO $intOutPlayerId FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel;
    
    #找出俱乐部部长的ID
    SELECT nPlayerID INTO _tmpUpID FROM Table_ClubMember WHERE nClubID = $nChannel AND nLevel = 1 LIMIT 1;
    
    #检测俱乐部中是否已经有此账号
    IF NOT EXISTS (SELECT * FROM Table_ClubMember WHERE nPlayerID=$intOutPlayerId AND nClubID = $nChannel )THEN
        #加入俱乐部中
        INSERT INTO Table_ClubMember( nClubID,nPlayerID,nLevel,nStatus,nScore,nExtenID,LineCode) VALUES ($nChannel,$intOutPlayerId,3,1,0,_tmpUpID,$linecode);
    ELSE
        #存在旧账号，比如退出，删除等 或 LineCode 改变 则更新数据
        SELECT LineCode,nStatus into _tmpLineCode,_tmpStatus FROM Table_ClubMember WHERE nPlayerID=$intOutPlayerId AND nClubID = $nChannel;
        if _tmpStatus <> 1 or $linecode <> _tmpLineCode then
                UPDATE Table_ClubMember SET nStatus = 1,LineCode=$linecode WHERE nPlayerID=$intOutPlayerId AND nClubID = $nChannel;
        END IF;
        
    END IF;
    
    #检测是否已经有此订单
    IF NOT EXISTS(SELECT 1 FROM table_third_order WHERE szOrder = $orderid) THEN
        #写入订单表
        INSERT INTO `table_third_order`(`nPlayerID`,`nClubID`,`nType`,`szOrder`,`nStatus`,`nAmount`,`szDesc`)
        VALUES ($intOutPlayerId,$nChannel,1,$orderid,0,$nAmount,'登录');
    END IF;
    
    INSERT INTO Table_Web_LoginLog(nPlayerId,`nClubID`,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,$nChannel, $strAccount, 1,NOW(),$strPreLoginIp);
    
    SET $returnVal = 0;
    SET $returnMsg = 'success';
    LEAVE rt;
    
ELSE 
    #没有账号，需要创建一个新用户
    
    SET _tmpRoundID = ROUND(RAND()*99999+(RAND()*8+1)*100000);
    SET _tmpPass = CAST(_tmpRoundID AS CHAR);
    
    INSERT INTO Table_User(szNickName,nCardCount,nJinBi,szCreateTime,nActive,szPass,preLoginTime,preLoginIp,szHeadPicUrl,szThirdAccount,szThirdPass,nChannel,nLastClubID) 
    VALUES($strAccount,_tmpCardCount,_tmpJinBiCount,NOW(),1,'',NOW(),$strPreLoginIp,CONCAT(CEILING(RAND() * 6)),$strAccount,_tmpPass,$nChannel,$nChannel);
    
    SET $intOutPlayerId = @@identity;
    #SET _tmpName = $strAccount;
    #UPDATE Table_User SET `szNickName` = _tmpName WHERE nPlayerId = $intOutPlayerId;
    
    #取群主ID
    SELECT nPlayerID INTO _tmpUpID FROM Table_ClubMember WHERE nClubID = $nChannel AND nLevel = 1 LIMIT 1;
    
    #加入俱乐部中
    INSERT INTO Table_ClubMember(szNickName,nClubID,nPlayerID,nLevel,nStatus,nScore,nExtenID,LineCode) VALUES ($strAccount,$nChannel,$intOutPlayerId,3,1,0,_tmpUpID,$linecode);
    
    #检测是否有此订单
    IF NOT EXISTS(SELECT 1 FROM table_third_order WHERE szOrder = $orderid) THEN
        #写入订单表
        INSERT INTO `table_third_order`(`nPlayerID`,`nClubID`,`nType`,`szOrder`,`nStatus`,`nAmount`,`szDesc`)
        VALUES ($intOutPlayerId,$nChannel,1,$orderid,0,$nAmount,'登录');
    END IF;
    
    INSERT INTO Table_Web_LoginLog(nPlayerId,`nClubID`,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,$nChannel, $strAccount, 1,NOW(),$strPreLoginIp);
    
    # 获取玩家预派发数据
    call Pr_ThirdGetGoodsFromWait($nChannel, $strAccount);

    SET $returnVal = 0;
    SET $returnMsg = 'success';
    LEAVE rt;
    
END IF;
  
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_auth_loginkey
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_auth_loginkey`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_auth_loginkey`(
		IN  $nplayerid     INT,
		IN  $szPass        VARCHAR(64),
		IN  $szLoginKey    VARCHAR(32),
		IN  $strPreLoginIp VARCHAR(64),
		OUT $returnVal     INT,
		OUT $strOutMsg     VARCHAR(256),
		OUT $intOutExtentCode INT, 
		OUT $intOutSex      INT,
		OUT $strOutNickName VARCHAR(64),
		OUT $strOutHeadUrl VARCHAR(512),
		OUT $intChannelClubID INT,
		OUT $intClubScore BIGINT,
		OUT $nRobot       TINYINT,
		OUT $nCreateTime  INT,
		OUT $szThirdAccount  VARCHAR(64),
        OUT $szPhone  VARCHAR(15),
        OUT $nStatus  INT
)
rt:BEGIN

 
DECLARE _tmpTime     TIMESTAMP;
DECLARE _tmpToken    VARCHAR(32);
 
IF EXISTS (SELECT 1 FROM table_third_token WHERE nPlayerID = $nplayerid) THEN
    
    SELECT nActive, extendCode , nSex,  szNickName,  szHeadPicUrl,  nLastClubID,bRobot,UNIX_TIMESTAMP(szCreateTime),szThirdAccount,phone
    INTO $nStatus,$intOutExtentCode,$intOutSex,$strOutNickName,$strOutHeadUrl,$intChannelClubID,$nRobot,$nCreateTime,$szThirdAccount,$szPhone
    FROM Table_User WHERE nPlayerId = $nplayerid;
    
    
    IF $nStatus=0 THEN
        SET $returnVal = 4;
        SET $strOutMsg = 'accounts disabled';
        LEAVE rt;
    END IF;
    
    SELECT szToken , CreateTime into _tmpToken, _tmpTime from table_third_token WHERE nPlayerID=$nplayerid;
    
    
    IF NOW() > date_add(_tmpTime,INTERVAL 5 MINUTE) THEN
            SET $returnVal = 5;
            SET $strOutMsg = "token time up";
            LEAVE rt;
    END IF;
    
    
    IF $szLoginKey <> _tmpToken THEN
            SET $returnVal = 3;
            SET $strOutMsg = "token wrong";
            LEAVE rt;    
    END IF;
     
    
    update Table_User set `szPass` = $szPass WHERE nPlayerID = $nplayerid;
    
    
    UPDATE Table_User SET preLoginTime = NOW(), preLoginIp = $strPreLoginIp, onlineSta=1 WHERE nPlayerId = $nplayerid;
    
    
    SELECT IFNULL(nScore,0) INTO $intClubScore FROM table_clubmember WHERE nClubID = $intChannelClubID AND nPlayerID = $nplayerid;
    
    
    INSERT INTO Table_Web_LoginLog(nPlayerId,`nClubID`,szNickName,nAction,szTime,loginIp) VALUES($nplayerid,$intChannelClubID,$szThirdAccount, 1, NOW(),$strPreLoginIp);
    
    
    update table_third_token set szToken = ROUND(RAND()*10000+21265788) WHERE nPlayerID = $nplayerid;
     
    SET $returnVal = 1;
    SET $strOutMsg = "ok";
    
ELSE
    SET $returnVal = 2;
    SET $strOutMsg = "in token table, playid miss";
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_auth_loginkey2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_auth_loginkey2`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_auth_loginkey2`(
		IN  $nplayerid     INT,
		IN  $szPass        VARCHAR(64),
		IN  $szLoginKey    VARCHAR(32),
		IN  $strPreLoginIp VARCHAR(64),
		OUT $returnVal     INT,
		OUT $strOutMsg     VARCHAR(256),
		OUT $intOutExtentCode INT, 
		OUT $intOutSex      INT,
		OUT $strOutNickName VARCHAR(64),
		OUT $strOutHeadUrl VARCHAR(512),
		OUT $intChannelClubID INT,
		OUT $intClubScore BIGINT,
		OUT $nRobot       TINYINT,
		OUT $nCreateTime  INT,
		OUT $szThirdAccount  VARCHAR(64),
        OUT $szPhone  VARCHAR(15),
        OUT $nStatus  INT,
        OUT $nModifyNickname INT
)
rt:BEGIN

 
DECLARE _tmpTime     TIMESTAMP;
DECLARE _tmpToken    VARCHAR(32);
 
IF EXISTS (SELECT 1 FROM table_third_token WHERE nPlayerID = $nplayerid) THEN
    
    SELECT nActive, extendCode , nSex,  szNickName,  szHeadPicUrl,  nLastClubID,bRobot,UNIX_TIMESTAMP(szCreateTime),szThirdAccount,phone,IFNULL(reset3,0)
    INTO $nStatus,$intOutExtentCode,$intOutSex,$strOutNickName,$strOutHeadUrl,$intChannelClubID,$nRobot,$nCreateTime,$szThirdAccount,$szPhone,$nModifyNickname
    FROM Table_User WHERE nPlayerId = $nplayerid;
    
    
    IF $nStatus=0 THEN
        SET $returnVal = 4;
        SET $strOutMsg = 'accounts disabled';
        LEAVE rt;
    END IF;
    
    SELECT szToken , CreateTime into _tmpToken, _tmpTime from table_third_token WHERE nPlayerID=$nplayerid;
    
    
    IF NOW() > date_add(_tmpTime,INTERVAL 5 MINUTE) THEN
            SET $returnVal = 5;
            SET $strOutMsg = "token time up";
            LEAVE rt;
    END IF;
    
    
    IF $szLoginKey <> _tmpToken THEN
            SET $returnVal = 3;
            SET $strOutMsg = "token wrong";
            LEAVE rt;    
    END IF;
     
    
    update Table_User set `szPass` = $szPass WHERE nPlayerID = $nplayerid;
    
    
    UPDATE Table_User SET preLoginTime = NOW(), preLoginIp = $strPreLoginIp, onlineSta=1 WHERE nPlayerId = $nplayerid;
    
    
    SELECT IFNULL(nScore,0) INTO $intClubScore FROM table_clubmember WHERE nClubID = $intChannelClubID AND nPlayerID = $nplayerid;
    
    
    INSERT INTO Table_Web_LoginLog(nPlayerId,`nClubID`,szNickName,nAction,szTime,loginIp) VALUES($nplayerid,$intChannelClubID,$szThirdAccount, 1, NOW(),$strPreLoginIp);
    
    
    update table_third_token set szToken = ROUND(RAND()*10000+21265788) WHERE nPlayerID = $nplayerid;
     
    SET $returnVal = 1;
    SET $strOutMsg = "ok";
    
ELSE
    SET $returnVal = 2;
    SET $strOutMsg = "in token table, playid miss";
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_auth_loginkey3
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_auth_loginkey3`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_third_auth_loginkey3`(
		IN  $nplayerid     INT,
		IN  $szPass        VARCHAR(64),
		IN  $szLoginKey    VARCHAR(32),
		IN  $strPreLoginIp VARCHAR(64),
		IN  $nTblPre       INT,
		OUT $returnVal     INT,
		OUT $strOutMsg     VARCHAR(256),
		OUT $intOutExtentCode INT, 
		OUT $intOutSex      INT,
		OUT $strOutNickName VARCHAR(64),
		OUT $strOutHeadUrl VARCHAR(512),
		OUT $intChannelClubID INT,
		OUT $intClubScore BIGINT,
		OUT $nRobot       TINYINT,
		OUT $nCreateTime  INT,
		OUT $szThirdAccount  VARCHAR(64),
                OUT $szPhone  VARCHAR(15),
                OUT $nStatus  INT,
                OUT $nModifyNickname INT,
                OUT $nTablePre INT
)
rt:BEGIN
/*
第三方登录
*/
 
DECLARE _tmpTime     TIMESTAMP;
DECLARE _tmpToken    VARCHAR(32);
SET $nTablePre = 0;
 
IF EXISTS (SELECT 1 FROM table_third_token WHERE nPlayerID = $nplayerid) THEN
    
    SELECT nActive, extendCode , nSex,  szNickName,  szHeadPicUrl,  nLastClubID,bRobot,UNIX_TIMESTAMP(szCreateTime),szThirdAccount,phone,IFNULL(reset3,0)
    INTO $nStatus,$intOutExtentCode,$intOutSex,$strOutNickName,$strOutHeadUrl,$intChannelClubID,$nRobot,$nCreateTime,$szThirdAccount,$szPhone,$nModifyNickname
    FROM Table_User WHERE nPlayerId = $nplayerid;
    
    
    IF $nStatus=0 THEN
        SET $returnVal = 4;
        SET $strOutMsg = 'accounts disabled';
        LEAVE rt;
    END IF;
    
    SELECT szToken , CreateTime into _tmpToken, _tmpTime from table_third_token WHERE nPlayerID=$nplayerid;
    
    
    IF NOW() > date_add(_tmpTime,INTERVAL 5 MINUTE) THEN
            SET $returnVal = 5;
            SET $strOutMsg = "token time up";
            LEAVE rt;
    END IF;
    
    
    IF $szLoginKey <> _tmpToken THEN
            SET $returnVal = 3;
            SET $strOutMsg = "token wrong";
            LEAVE rt;    
    END IF;
     
    
    update Table_User set `szPass` = $szPass WHERE nPlayerID = $nplayerid;
    
    
    UPDATE Table_User SET preLoginTime = NOW(), preLoginIp = $strPreLoginIp, onlineSta=1 WHERE nPlayerId = $nplayerid;
    
    
    SELECT IFNULL(nScore,0) INTO $intClubScore FROM table_clubmember WHERE nClubID = $intChannelClubID AND nPlayerID = $nplayerid;
    
    
    INSERT INTO Table_Web_LoginLog(nPlayerId,`nClubID`,szNickName,nAction,szTime,loginIp) VALUES($nplayerid,$intChannelClubID,$szThirdAccount, 1, NOW(),$strPreLoginIp);
    
    
    update table_third_token set szToken = ROUND(RAND()*10000+21265788) WHERE nPlayerID = $nplayerid;
    
    
    IF EXISTS(SELECT 1 FROM table_user_gamelock WHERE nPlayerID = $nplayerid LIMIT 1) THEN
 
       SELECT nTablePreID INTO $nTablePre FROM table_user_gamelock WHERE nPlayerID = $nplayerid LIMIT 1; 
 
    ELSE
       
       IF $nTblPre > 0 THEN
          INSERT INTO `table_user_gamelock` ( `nPlayerID`, `nTablePreID`) VALUES  ( $nplayerid, $nTblPre) ;
       END IF;
       SET $nTablePre = 0;
       
    END IF;    
     
    SET $returnVal = 1;
    SET $strOutMsg = "ok";
    
ELSE
    SET $returnVal = 2;
    SET $strOutMsg = "in token table, playid miss";
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_auth_loginkey4
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_auth_loginkey4`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_third_auth_loginkey4`(
		IN  $nplayerid     INT,
		IN  $szPass        VARCHAR(64),
		IN  $szLoginKey    VARCHAR(32),
		IN  $strPreLoginIp VARCHAR(64),
		IN  $nTblPre       INT,
		OUT $returnVal     INT,
		OUT $strOutMsg     VARCHAR(256),
		OUT $intOutExtentCode INT, 
		OUT $intOutSex      INT,
		OUT $strOutNickName VARCHAR(64),
		OUT $strOutHeadUrl VARCHAR(512),
		OUT $intChannelClubID INT,
		OUT $intClubScore BIGINT,
		OUT $nRobot       TINYINT,
		OUT $nCreateTime  INT,
		OUT $szThirdAccount  VARCHAR(64),
                OUT $szPhone  VARCHAR(15),
                OUT $nStatus  INT,
                OUT $nModifyNickname INT,
                OUT $nTablePre INT,
                OUT $history VARCHAR(128)
)
rt:BEGIN
/*
第3方登录时验证token
2019-12-2 增加nStatus返回
2019-12-9 登录日志中增加俱乐部ID
2020-1-9  增加返回昵称修改标志
2020-4-21 增加返回桌子前缀
2020-6-2   增加返回游戏历史记录参数
*/
 
DECLARE _tmpTime     TIMESTAMP;
DECLARE _tmpToken    VARCHAR(32);
SET $nTablePre = 0;
 
IF EXISTS (SELECT 1 FROM table_third_token WHERE nPlayerID = $nplayerid) THEN
    #取玩家的信息
    SELECT nActive, extendCode , nSex,  szNickName,  szHeadPicUrl,  nLastClubID,bRobot,UNIX_TIMESTAMP(szCreateTime),szThirdAccount,phone,IFNULL(reset3,0),gamehistory
    INTO $nStatus,$intOutExtentCode,$intOutSex,$strOutNickName,$strOutHeadUrl,$intChannelClubID,$nRobot,$nCreateTime,$szThirdAccount,$szPhone,$nModifyNickname,$history
    FROM Table_User WHERE nPlayerId = $nplayerid;
    
    #账号被禁用
    IF $nStatus=0 THEN
        SET $returnVal = 4;
        SET $strOutMsg = 'accounts disabled';
        LEAVE rt;
    END IF;
    
    SELECT szToken , CreateTime INTO _tmpToken, _tmpTime FROM table_third_token WHERE nPlayerID=$nplayerid;
    
    #超过生成key时间5分钟
    IF NOW() > DATE_ADD(_tmpTime,INTERVAL 5 MINUTE) THEN
            SET $returnVal = 5;
            SET $strOutMsg = "token time up";
            LEAVE rt;
    END IF;
    
    #token不对
    IF $szLoginKey <> _tmpToken THEN
            SET $returnVal = 3;
            SET $strOutMsg = "token wrong";
            LEAVE rt;    
    END IF;
     
    #密码更新掉
    UPDATE Table_User SET `szPass` = $szPass WHERE nPlayerID = $nplayerid;
    
    #更新登录时间和IP及在线状态
    UPDATE Table_User SET preLoginTime = NOW(), preLoginIp = $strPreLoginIp, onlineSta=1 WHERE nPlayerId = $nplayerid;
    
    #取分数
    SELECT IFNULL(nScore,0) INTO $intClubScore FROM table_clubmember WHERE nClubID = $intChannelClubID AND nPlayerID = $nplayerid;
    
    #插入登录记录
    INSERT INTO Table_Web_LoginLog(nPlayerId,`nClubID`,szNickName,nAction,szTime,loginIp) VALUES($nplayerid,$intChannelClubID,$szThirdAccount, 1, NOW(),$strPreLoginIp);
    
    #把token改掉
    UPDATE table_third_token SET szToken = ROUND(RAND()*10000+21265788) WHERE nPlayerID = $nplayerid;
    
    #检查是否有用户加锁存在
    IF EXISTS(SELECT 1 FROM table_user_gamelock WHERE nPlayerID = $nplayerid LIMIT 1) THEN
 
       SELECT nTablePreID INTO $nTablePre FROM table_user_gamelock WHERE nPlayerID = $nplayerid LIMIT 1; 
 
    ELSE
       #如果需要加锁，则将锁记录写进去
       IF $nTblPre > 0 THEN
          INSERT INTO `table_user_gamelock` ( `nPlayerID`, `nTablePreID`) VALUES  ( $nplayerid, $nTblPre) ;
       END IF;
       SET $nTablePre = 0;
       
    END IF;    
     
    SET $returnVal = 1;
    SET $strOutMsg = "ok";
    
ELSE
    SET $returnVal = 2;
    SET $strOutMsg = "in token table, playid miss";
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_autologin_incoin
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_autologin_incoin`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_autologin_incoin`(
		IN  $nplayerid INT,
		IN  $incoin    INT,
		OUT $clubid    INT,
		OUT $nscore    BIGINT,
		OUT $returnVal INT,
		OUT $strOutMsg VARCHAR(256)
)
BEGIN

DECLARE _channel  INT;
IF EXISTS (SELECT 1 FROM table_user WHERE nPlayerID=$nplayerid AND szThirdAccount IS NOT NULL AND szThirdPass IS NOT NULL AND nChannel IS NOT NULL) THEN
    SELECT `nChannel` INTO _channel FROM table_user WHERE nPlayerID = $nplayerid;
    SELECT nClubID INTO $clubid FROM `table_clubinfo` WHERE `nChannel` = _channel;
    
    
    IF $incoin > 0 THEN
        UPDATE `table_clubmember` SET `nScore` = nScore + $incoin WHERE `nClubID` = $clubid AND `nPlayerID` = $nplayerid;
        SELECT nScore INTO $nscore FROM table_clubmember WHERE `nClubID` = $clubid AND `nPlayerID` = $nplayerid;
    END IF;
    
    SET $returnVal = 1;
    SET $strOutMsg = "ok";
    
ELSE
    SET $returnVal = 0;
    SET $strOutMsg = "playerid error.";
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_autologin_incoin_ex
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_autologin_incoin_ex`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_autologin_incoin_ex`(
		IN  $nplayerid INT,
		IN  $incoin    INT,
		OUT $clubid    INT,
		OUT $nscore    BIGINT,
		OUT $returnVal INT,
		OUT $strOutMsg VARCHAR(256)
)
rt:BEGIN

DECLARE _channel  INT;
IF EXISTS (SELECT 1 FROM table_user WHERE nPlayerID=$nplayerid AND szThirdAccount IS NOT NULL AND szThirdPass IS NOT NULL AND nChannel IS NOT NULL) THEN
    SELECT `nChannel` INTO _channel FROM table_user WHERE nPlayerID = $nplayerid;
    SELECT nClubID INTO $clubid FROM `table_clubinfo` WHERE `nChannel` = _channel;
    
    
    IF $incoin > 0 THEN
        UPDATE `table_clubmember` SET `nScore` = nScore + $incoin WHERE `nClubID` = $clubid AND `nPlayerID` = $nplayerid;
        SELECT nScore INTO $nscore FROM table_clubmember WHERE `nClubID` = $clubid AND `nPlayerID` = $nplayerid;
    END IF;
    
    SET $returnVal = 0;
    SET $strOutMsg = "ok";
    
ELSE
    SET $returnVal = 1;
    SET $strOutMsg = "playerid error.";
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_change_cash_order_status
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_change_cash_order_status`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_change_cash_order_status`(
		IN  $orderid   VARCHAR(128)
)
rt:BEGIN

DECLARE _tmpDesc VARCHAR(64);
IF NOT EXISTS (SELECT 1 FROM Table_ClubLogScore WHERE szorder = $orderid AND nType = 22) THEN
    LEAVE rt;
END IF;
        
SET _tmpDesc = CONCAT("客户提现 完成时间:",DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"));
UPDATE Table_ClubLogScore set nType = 28, szDesc = _tmpDesc WHERE szOrder = $orderid AND nType = 22;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_create_order_by_ID
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_create_order_by_ID`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_create_order_by_ID`(
                        IN $playerId       INT,
                        IN $nChannel       INT,
                        IN $orderid        VARCHAR(128),
                        IN $nAmount        INT,
                        IN $nActType       INT,
                        IN $strOrderInfo   VARCHAR(256),
                        IN $strDesc        VARCHAR(32),
                        IN $nSubVal        INT,
                        IN $strChannel     VARCHAR(32),
                        OUT $intOutReturn  INT,
                        OUT $strOutMsg     VARCHAR(256)
)
returnVal:BEGIN

DECLARE _ncount     INT;       
DECLARE _prescore   BIGINT;    

IF EXISTS(SELECT 1 FROM Table_User WHERE nPlayerId = $playerId AND nChannel = $nChannel) THEN
           
    
    IF EXISTS(SELECT 1 FROM table_third_order WHERE szOrder = $orderid) THEN
        SET $intOutReturn = 0;
        SET $strOutMsg = "order exists";
        LEAVE returnVal;
    ELSE
        IF $nActType = 3 THEN
                SET _ncount = 0;
                
                
                
                
                
                SELECT nScore INTO _prescore FROM table_clubmember WHERE nPlayerId = $playerId AND nClubID = $nChannel;
                
                INSERT INTO `table_third_order`(`nPlayerID`,`nClubID`,`nRechargeCount`,`szChannel`,`nPreScore`,`nType`,`szOrder`,`nStatus`,`nAmount`,nSubVal,`szOrderInfo`,`szDesc`)
                VALUES ($playerId,$nChannel,_ncount,$strChannel,_prescore,$nActType,$orderid,0,$nAmount,$nSubVal,$strOrderInfo,$strDesc);
        
        ELSE
                
                INSERT INTO `table_third_order`(`nPlayerID`,`nClubID`,`nType`,`szOrder`,`nStatus`,`nAmount`,nSubVal,`szOrderInfo`,`szDesc`)
                VALUES ($playerId,$nChannel,$nActType,$orderid,0,$nAmount,$nSubVal,$strOrderInfo,$strDesc);
                
        END IF;
        
        IF $nActType = 4 THEN 
            
            UPDATE table_pyramid_examine SET nFlag = 7 WHERE szorder = $orderid;
        END IF;
        
        SET $intOutReturn = 1;
        SET $strOutMsg = "ok";
        LEAVE returnVal;
    END IF;
ELSE 
	
	SET $intOutReturn = 2;
	SET $strOutMsg = "user not exists";
    LEAVE returnVal;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_create_order_by_ID2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_create_order_by_ID2`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_create_order_by_ID2`(
                        IN $playerId       INT,
                        IN $nChannel       INT,
                        IN $orderid        VARCHAR(128),
                        IN $nAmount        INT,
                        IN $nActType       INT,
                        IN $strOrderInfo   VARCHAR(256),
                        IN $strDesc        VARCHAR(32),
                        IN $nSubVal        INT,
                        IN $strChannel     VARCHAR(32),
                        IN $nPayVal        INT,
                        OUT $intOutReturn  INT,
                        OUT $strOutMsg     VARCHAR(256)
)
returnVal:BEGIN

DECLARE _ncount     INT;       
DECLARE _prescore   BIGINT;    

IF EXISTS(SELECT 1 FROM Table_User WHERE nPlayerId = $playerId AND nChannel = $nChannel) THEN
           
    
    IF EXISTS(SELECT 1 FROM table_third_order WHERE szOrder = $orderid) THEN
        SET $intOutReturn = 0;
        SET $strOutMsg = "order exists";
        LEAVE returnVal;
    ELSE
        IF $nActType = 3 THEN
                SET _ncount = 0;
                
                
                
                
                
                SELECT nScore INTO _prescore FROM table_clubmember WHERE nPlayerId = $playerId AND nClubID = $nChannel;
                
                INSERT INTO `table_third_order`(`nPlayerID`,`nClubID`,`nRechargeCount`,`szChannel`,`nPreScore`,`nType`,`szOrder`,`nStatus`,`nAmount`,nSubVal,`szOrderInfo`,`szDesc`)
                VALUES ($playerId,$nChannel,$nPayVal,$strChannel,_prescore,$nActType,$orderid,0,$nAmount,$nSubVal,$strOrderInfo,$strDesc);
        
        ELSE
                
                INSERT INTO `table_third_order`(`nPlayerID`,`nClubID`,`nType`,`szOrder`,`nStatus`,`nAmount`,nSubVal,`szOrderInfo`,`szDesc`)
                VALUES ($playerId,$nChannel,$nActType,$orderid,0,$nAmount,$nSubVal,$strOrderInfo,$strDesc);
                
        END IF;
        
        IF $nActType = 4 THEN 
            
            UPDATE table_pyramid_examine SET nFlag = 7 WHERE szorder = $orderid;
        END IF;
        
        SET $intOutReturn = 1;
        SET $strOutMsg = "ok";
        LEAVE returnVal;
    END IF;
ELSE 
	
	SET $intOutReturn = 2;
	SET $strOutMsg = "user not exists";
    LEAVE returnVal;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_exchange_uplevel
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_exchange_uplevel`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_exchange_uplevel`(
    IN  $nChannel       INT,
    IN  $UserName       VARCHAR(64),
    IN  $Pass           VARCHAR(64),
    IN  $OldUp          VARCHAR(64),
    IN  $NewUp          VARCHAR(64),
    OUT $returnVal      INT,
    OUT $returnMsg      VARCHAR(64),
    OUT $nPlayID        INT
    )
returnVal:BEGIN
  
DECLARE  _tmpPass       VARCHAR(64);
DECLARE  _extid         int;
DECLARE  _ClubID        INT;
DECLARE  _PlayerID      INT;
DECLARE  _OldPlayerID   INT;
DECLARE  _NewPlayerID   INT;
IF not EXISTS(SELECT * FROM Table_User WHERE szThirdAccount = $UserName and szThirdPass = $Pass AND nChannel = $nChannel) THEN
    SET $returnVal = 1;
    set $returnMsg = '帐号不存在';
    LEAVE returnVal;
end if;

select szThirdPass,nPlayerID into _tmpPass,_PlayerID from Table_User WHERE szThirdAccount = $UserName AND nChannel = $nChannel;

SELECT nPlayerID INTO _OldPlayerID FROM Table_User WHERE szThirdAccount = $OldUp AND nChannel = $nChannel;

SELECT nPlayerID INTO _NewPlayerID FROM Table_User WHERE szThirdAccount = $NewUp AND nChannel = $nChannel;
set $nPlayID = _PlayerID;
if _tmpPass <> $Pass then
    SET $returnVal = 2;
    SET $returnMsg = '密码错误';
    LEAVE returnVal;
end if;
SELECT nclubid INTO _ClubID FROM table_clubinfo WHERE nChannel = $nChannel;
if _ClubID is null then
    SET $returnVal = 3;
    SET $returnMsg = '俱乐部错误';
    LEAVE returnVal;
end if;
IF _OldPlayerID IS NULL THEN
    SET $returnVal = 4;
    SET $returnMsg = '旧上线用户不存在';
    LEAVE returnVal;
END IF;

select nExtenID into _extid from Table_ClubMember where nPlayerID = _PlayerID and nClubID = _ClubID and nStatus = 1;
if _extid <> _OldPlayerID then
    SET $returnVal = 5;
    SET $returnMsg = '旧上线用户不符';
    LEAVE returnVal;
end if;

if _NewPlayerID IS NULL THEN
    SET $returnVal = 10;
    SET $returnMsg = '需要重新更新数据';
    LEAVE returnVal;
else
    update Table_ClubMember set nExtenID = _NewPlayerID ,tExtenBindingTime = NOW() where nPlayerID = _PlayerID AND nClubID = _ClubID AND nStatus = 1;
end if;
    SET $returnVal = 0;
    SET $returnMsg = '重置完成';
    
  END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_free_user_reg_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_free_user_reg_info`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_free_user_reg_info`(
    IN $intPlayerId INT,
    IN $intClubId   INT,
    out $uname      varchar(64),
    OUT $upass      VARCHAR(64),
    OUT $myname     VARCHAR(64),
    out $channelid  int,
    OUT $returnVal  INT
    )
returnVal:BEGIN
  
    DECLARE _UpPlayID INT;
    DECLARE _MyName   VARCHAR(64);
    
    set _MyName = CONCAT("user_",CAST($intPlayerId AS CHAR));
    
    
    select nExtenID into _UpPlayID from table_clubmember where nPlayerId = $intPlayerId and nClubID = $intClubId and nStatus = 1;
    
    
    select szThirdAccount,szThirdPass,nChannel into $uname,$upass,$channelid from table_user where nPlayerId = _UpPlayID;
    
    
    update table_user set szThirdAccount = _MyName where nPlayerId = $intPlayerId;
    
    set $myname = _MyName;
    
    set $returnVal = 1;
    
  END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_club_game_config
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_club_game_config`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_club_game_config`(
				 IN  $clubid INT
)
RT:BEGIN

select 
config.`KindID` AS KindID,
config.`GameName` AS GameName,
config.`IconUrl` AS IconUrl,
tclub.`nStatus` AS nStatus
FROM `table_club_game_cfg` tclub, `table_game_config` config
WHERE tclub.nClubID = $clubid AND tclub.`nGameType` = config.`KindID`;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_exchange_log
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_exchange_log`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_exchange_log`(
                IN $intPlayerId INT,
                IN $intIndex    INT,
                IN $intDir      INT
    )
returnVal:BEGIN

    DECLARE _sdate1 VARCHAR(64) DEFAULT date_sub(curdate(),interval 30 day);
    if $intIndex = 0 then
        SELECT ID,CreateTime,szPay,nType FROM table_third_exchange_log where nPlayerID = $intPlayerId and CreateTime>_sdate1 ORDER BY id DESC LIMIT 0,10;
        LEAVE returnVal;
    END IF;
    
    if $intDir=2 then
        
        SELECT ID,CreateTime,szPay,nType FROM table_third_exchange_log WHERE nPlayerID = $intPlayerId AND ID < $intIndex and CreateTime>_sdate1 ORDER BY id DESC LIMIT 0,10;
        
    else 
        
        SELECT ID,CreateTime,szPay,nType FROM table_third_exchange_log WHERE nPlayerID = $intPlayerId AND ID > $intIndex AND CreateTime>_sdate1 ORDER BY id DESC LIMIT 0,10;
        
    end if;
    
    
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_gamelog
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_gamelog`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_gamelog`(
						in  $stoken  VARCHAR(64),
						OUT $retVal INT
)
returnVal:BEGIN

if exists (SELECT 1 FROM table_clubgamelog where `szToken` = $stoken ) then
    SELECT `LogData` FROM table_clubgamelog WHERE `szToken` = $stoken limit 1;
    set $retVal = 0;
else
    
    set $retVal = 16;
end if;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_gamescore_by_time2_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_gamescore_by_time2_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_third_get_gamescore_by_time2_shard`(
						IN  $stime  VARCHAR(64),
						IN  $etime  VARCHAR(64),
						IN  $clubid INT,
						OUT $retVal INT
)
returnVal:BEGIN
	/*
	返回第3方流水表数据
	*/
	DECLARE  _tmpC  INT    DEFAULT 0;
	 
	SELECT TIMESTAMPDIFF(MINUTE,$stime,$etime) INTO _tmpC;
	 
	#检测是否超过20分钟，如果区间太大则不处理
	IF _tmpC > 20 THEN  
		SET $retVal = 1;
		LEAVE returnVal;
	END IF;

	SELECT (DATEDIFF($etime,$stime))  into @intervals;
	#当天的数据
	if @intervals=0 then
		
		set @table_third_score_detail=fun_get_table_name_shard_byDate("table_third_score_detail",$etime);
		
		set @sqlStr=CONCAT("SELECT 
			   DataType,
			   SubDataType,
			   cs.szToken AS GameID, 
			   IFNULL(cs.Accounts,'') AS Accounts, 
			   cs.nServerID AS ServerID, 
			   cs.nGameType AS KindID, 
			   cs.nTableID AS TableID,
			   cs.nChairID AS ChairID,
			   cs.nPlayCount AS UserCount, 
			   cs.CardData AS CardValue,
			   cs.nEnterScore /1000 AS CurScore,
			   cs.nValidBet/1000 AS CellScore, 
			   cs.nBetScore/1000 AS AllBet,
			   cs.nResultMoney/1000 AS Profit,
			   cs.nTax/1000 AS Revenue , 
			   DATE_FORMAT(cs.tStartTime,'%Y-%m-%d %T') AS GameStartTime,  
			   DATE_FORMAT(cs.tEndTime,'%Y-%m-%d %T') AS GameEndTime, 
			   cs.nCLubID AS ChannelID, 
			   cs.LineCode AS LineCode 
	
				FROM ",@table_third_score_detail, " cs
				WHERE cs.`nClubID` = ",$clubid, " 
				AND cs.tEndTime >= '",$stime, "'
				AND cs.tEndTime <= '",$etime, "' 
				ORDER BY cs.tEndTime;
			");
			
		#select  @sqlStr;
		PREPARE stmt_name FROM @sqlStr; 
		EXECUTE stmt_name;
		DEALLOCATE PREPARE stmt_name;	
		
	#跨天的数据	
	ELSE 

		set @table_third_score_detail_begin=fun_get_table_name_shard_byDate("table_third_score_detail",$stime);
		set @table_third_score_detail_end=fun_get_table_name_shard_byDate("table_third_score_detail",$etime);
		
		set @sqlStrExtend=CONCAT("select DataType,SubDataType,GameID,Accounts,ServerID,KindID,TableID,ChairID,UserCount,CardValue,
			CurScore,CellScore,AllBet,Profit,Revenue,GameStartTime,GameEndTime,ChannelID,LineCode 
			from (
				SELECT 
				   DataType,
				   SubDataType,
				   cs.szToken AS GameID, 
				   IFNULL(cs.Accounts,'') AS Accounts, 
				   cs.nServerID AS ServerID, 
				   cs.nGameType AS KindID, 
				   cs.nTableID AS TableID,
				   cs.nChairID AS ChairID,
				   cs.nPlayCount AS UserCount, 
				   cs.CardData AS CardValue,
				   cs.nEnterScore /1000 AS CurScore,
				   cs.nValidBet/1000 AS CellScore, 
				   cs.nBetScore/1000 AS AllBet,
				   cs.nResultMoney/1000 AS Profit,
				   cs.nTax/1000 AS Revenue, 
				   DATE_FORMAT(cs.tStartTime,'%Y-%m-%d %T') AS GameStartTime,  
				   DATE_FORMAT(cs.tEndTime,'%Y-%m-%d %T') AS GameEndTime, 
				   cs.nCLubID AS ChannelID, 
				   cs.LineCode AS LineCode
				
				FROM ",@table_third_score_detail_begin," cs
				WHERE cs.`nClubID` = ",$clubid, " 
				AND cs.tEndTime >= '",$stime,"' 
				
				union all
				
				SELECT 
				   DataType,
				   SubDataType,
				   cs.szToken AS GameID, 
				   IFNULL(cs.Accounts,'') AS Accounts, 
				   cs.nServerID AS ServerID, 
				   cs.nGameType AS KindID, 
				   cs.nTableID AS TableID,
				   cs.nChairID AS ChairID,
				   cs.nPlayCount AS UserCount, 
				   cs.CardData AS CardValue,
				   cs.nEnterScore /1000 AS CurScore,
				   cs.nValidBet/1000 AS CellScore, 
				   cs.nBetScore/1000 AS AllBet,
				   cs.nResultMoney/1000 AS Profit,
				   cs.nTax/1000 AS Revenue , 
				   DATE_FORMAT(cs.tStartTime,'%Y-%m-%d %T') AS GameStartTime,  
				   DATE_FORMAT(cs.tEndTime,'%Y-%m-%d %T') AS GameEndTime, 
				   cs.nCLubID AS ChannelID, 
				   cs.LineCode AS LineCode
				
				FROM ",@table_third_score_detail_end, " cs
				WHERE cs.`nClubID` = ",$clubid, " 
				AND cs.tEndTime <= '",$etime,"'
				
			) tempResult  ORDER BY GameEndTime desc 
			
		");
		#select  @sqlStrExtend;
		PREPARE stmt_name_extend FROM @sqlStrExtend; 
		EXECUTE stmt_name_extend;
		DEALLOCATE PREPARE stmt_name_extend;	

	END IF;

	SET $retVal = 0;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_gamescore_by_time2_shard_test
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_gamescore_by_time2_shard_test`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_third_get_gamescore_by_time2_shard_test`(
						IN  $stime  VARCHAR(64),
						IN  $etime  VARCHAR(64),
						IN  $clubid INT,
						OUT $retVal INT
)
returnVal:BEGIN
	/*
	返回第3方流水表数据
	*/
	DECLARE  _tmpC  INT    DEFAULT 0;
	 
	SELECT TIMESTAMPDIFF(MINUTE,$stime,$etime) INTO _tmpC;
	 
	#检测是否超过20分钟，如果区间太大则不处理
	IF _tmpC > 20 THEN  
		SET $retVal = 1;
		LEAVE returnVal;
	END IF;

	SELECT (DATEDIFF($etime,$stime))  into @intervals;
	#当天的数据
	if @intervals=0 then
		
		set @table_third_score_detail=fun_get_table_name_shard_byDate("table_third_score_detail",$etime);
		
		set @sqlStr=CONCAT("SELECT 
			   DataType,
			   SubDataType,
			   cs.szToken AS GameID, 
			   IFNULL(cs.Accounts,'') AS Accounts, 
			   cs.nServerID AS ServerID, 
			   cs.nGameType AS KindID, 
			   cs.nTableID AS TableID,
			   cs.nChairID AS ChairID,
			   cs.nPlayCount AS UserCount, 
			   cs.CardData AS CardValue,
			   cs.nEnterScore /1000 AS CurScore,
			   cs.nValidBet/1000 AS CellScore, 
			   cs.nBetScore/1000 AS AllBet,
			   cs.nResultMoney/1000 AS Profit,
			   cs.nTax/1000 AS Revenue , 
			   DATE_FORMAT(cs.tStartTime,'%Y-%m-%d %T') AS GameStartTime,  
			   DATE_FORMAT(cs.tEndTime,'%Y-%m-%d %T') AS GameEndTime, 
			   cs.nCLubID AS ChannelID, 
			   cs.LineCode AS LineCode 
	
				FROM ",@table_third_score_detail, " cs
				WHERE cs.`nClubID` = ",$clubid, " 
				AND cs.tEndTime >= '",$stime, "'
				AND cs.tEndTime <= '",$etime, "' 
				ORDER BY cs.tEndTime;
			");
			
		select  @sqlStr;
		PREPARE stmt_name FROM @sqlStr; 
		EXECUTE stmt_name;
		DEALLOCATE PREPARE stmt_name;	
		
	#跨天的数据	
	ELSE 

		set @table_third_score_detail_begin=fun_get_table_name_shard_byDate("table_third_score_detail",$stime);
		set @table_third_score_detail_end=fun_get_table_name_shard_byDate("table_third_score_detail",$etime);
		
		set @sqlStrExtend=CONCAT("select DataType,SubDataType,GameID,Accounts,ServerID,KindID,TableID,ChairID,UserCount,CardValue,
			CurScore,CellScore,AllBet,Profit,Revenue,GameStartTime,GameEndTime,ChannelID,LineCode 
			from (
				SELECT 
				   DataType,
				   SubDataType,
				   cs.szToken AS GameID, 
				   IFNULL(cs.Accounts,'') AS Accounts, 
				   cs.nServerID AS ServerID, 
				   cs.nGameType AS KindID, 
				   cs.nTableID AS TableID,
				   cs.nChairID AS ChairID,
				   cs.nPlayCount AS UserCount, 
				   cs.CardData AS CardValue,
				   cs.nEnterScore /1000 AS CurScore,
				   cs.nValidBet/1000 AS CellScore, 
				   cs.nBetScore/1000 AS AllBet,
				   cs.nResultMoney/1000 AS Profit,
				   cs.nTax/1000 AS Revenue, 
				   DATE_FORMAT(cs.tStartTime,'%Y-%m-%d %T') AS GameStartTime,  
				   DATE_FORMAT(cs.tEndTime,'%Y-%m-%d %T') AS GameEndTime, 
				   cs.nCLubID AS ChannelID, 
				   cs.LineCode AS LineCode
				
				FROM ",@table_third_score_detail_begin," cs
				WHERE cs.`nClubID` = ",$clubid, " 
				AND cs.tEndTime >= '",$stime,"' 
				
				union all
				
				SELECT 
				   DataType,
				   SubDataType,
				   cs.szToken AS GameID, 
				   IFNULL(cs.Accounts,'') AS Accounts, 
				   cs.nServerID AS ServerID, 
				   cs.nGameType AS KindID, 
				   cs.nTableID AS TableID,
				   cs.nChairID AS ChairID,
				   cs.nPlayCount AS UserCount, 
				   cs.CardData AS CardValue,
				   cs.nEnterScore /1000 AS CurScore,
				   cs.nValidBet/1000 AS CellScore, 
				   cs.nBetScore/1000 AS AllBet,
				   cs.nResultMoney/1000 AS Profit,
				   cs.nTax/1000 AS Revenue , 
				   DATE_FORMAT(cs.tStartTime,'%Y-%m-%d %T') AS GameStartTime,  
				   DATE_FORMAT(cs.tEndTime,'%Y-%m-%d %T') AS GameEndTime, 
				   cs.nCLubID AS ChannelID, 
				   cs.LineCode AS LineCode
				
				FROM ",@table_third_score_detail_end, " cs
				WHERE cs.`nClubID` = ",$clubid, " 
				AND cs.tEndTime <= '",$etime,"'
				
			) tempResult  ORDER BY GameEndTime desc 
			
		");
		#select  @sqlStrExtend;
		PREPARE stmt_name_extend FROM @sqlStrExtend; 
		EXECUTE stmt_name_extend;
		DEALLOCATE PREPARE stmt_name_extend;	

	END IF;

	SET $retVal = 0;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_gamescore_by_time2_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_gamescore_by_time2_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_gamescore_by_time2_temp`(
						IN  $stime  VARCHAR(64),
						IN  $etime  VARCHAR(64),
						IN  $clubid INT,
						OUT $retVal INT
)
returnVal:BEGIN

DECLARE  _tmpC  INT    DEFAULT 0;
 
SELECT TIMESTAMPDIFF(MINUTE,$stime,$etime) INTO _tmpC;
 

IF _tmpC > 20 THEN  
    SET $retVal = 1;
    LEAVE returnVal;
END IF;
 
SELECT 
       DataType,
       SubDataType,
       cs.szToken AS GameID, 
       IFNULL(cs.Accounts,'') AS Accounts, 
       cs.nServerID AS ServerID, 
       cs.nGameType AS KindID, 
       cs.nTableID AS TableID,
       cs.nChairID AS ChairID,
       cs.nPlayCount AS UserCount, 
       cs.CardData AS CardValue,
       cs.nEnterScore /1000 AS CurScore,
       cs.nValidBet/1000 AS CellScore, 
       cs.nBetScore/1000 AS AllBet,
       cs.nResultMoney/1000 AS Profit,
       cs.nTax/1000 AS Revenue , 
       DATE_FORMAT(cs.tStartTime,"%Y-%m-%d %T") AS GameStartTime,  
       DATE_FORMAT(cs.tEndTime,"%Y-%m-%d %T") AS GameEndTime, 
       cs.nCLubID AS ChannelID, 
       cs.LineCode AS LineCode
 
FROM table_third_score_detail cs
WHERE cs.`nClubID` = $clubid 
AND cs.tEndTime >= $stime 
AND cs.tEndTime <= $etime 
ORDER BY cs.tEndTime;
 
SET $retVal = 0;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_gamescore_by_time_and_page_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_gamescore_by_time_and_page_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_gamescore_by_time_and_page_temp`(
						IN  $stime  VARCHAR(64),
						IN  $etime  VARCHAR(64),
						IN  $clubid INT,
						IN  $npage  INT,
						IN  $singelPageCount INT,
						OUT $totalcount INT,
						OUT $pagecount INT,
						OUT $retVal INT
)
returnVal:BEGIN

 
DECLARE  _tmpC        INT    DEFAULT 0;
DECLARE  _tmp_page    INT    DEFAULT 0;
DECLARE  _page_count  INT    DEFAULT 0;
DECLARE  _default_page_count  INT    DEFAULT 0;

SET _default_page_count = 1000;
SET $totalcount = 0;

IF $singelPageCount > _default_page_count THEN
    SET _page_count = _default_page_count;
ELSE
    SET _page_count = $singelPageCount;
END IF;

SET $pagecount = _page_count;
 
SELECT TIMESTAMPDIFF(MINUTE,$stime,$etime) INTO _tmpC;
 

IF _tmpC > 60*24 THEN  
    SET $retVal = 1;
    LEAVE returnVal;
END IF;
 

IF $npage < 1 THEN
    SET $retVal = 2;
    LEAVE returnVal;
END IF;
 
SET _tmp_page = ($npage - 1)*_page_count;
 

select count(ID) INTO $totalcount FROM Table_ClubGameScoreDetail WHERE `nClubID`= $clubid AND tEndTime >= $stime AND tEndTime <= $etime;
 

SELECT CONCAT(cs.szToken,"-",cs.nChairID) AS GameID, 
       IFNULL(tc.szNickName,'') AS Accounts, 
       cs.nServerID AS ServerID, 
       cs.nGameType AS KindID, 
       cs.nTableID AS TableID,
       cs.nChairID AS ChairID,
       cs.nPlayCount AS UserCount, 
       cs.CardData AS CardValue,
       cs.nEnterScore /1000 AS CurScore,
       cs.nValidBet/1000 AS CellScore, 
       cs.nBetScore/1000 AS AllBet,
       cs.nResultMoney/1000 AS Profit,
       cs.nTax/1000 AS Revenue , 
       DATE_FORMAT(cs.tStartTime,"%Y-%m-%d %T") AS GameStartTime,  
       DATE_FORMAT(cs.tEndTime,"%Y-%m-%d %T") AS GameEndTime, 
       cs.nCLubID AS ChannelID, 
       tc.LineCode AS LineCode
 
FROM Table_ClubGameScoreDetail cs,`table_clubmember` tc 
WHERE tc.`nClubID`=cs.`nClubID` 
AND tc.`nPlayerID`= cs.`nPlayerID` 
AND cs.tEndTime >= $stime 
AND cs.tEndTime <= $etime 
AND cs.nCLubID = $clubid 
ORDER BY cs.tEndTime LIMIT _tmp_page,_page_count;
 
SET $retVal = 0;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_gamescore_by_time_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_gamescore_by_time_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_gamescore_by_time_temp`(
						IN  $stime  VARCHAR(64),
						IN  $etime  VARCHAR(64),
						IN  $clubid INT,
						OUT $retVal INT
)
returnVal:BEGIN

DECLARE  _tmpC  INT    DEFAULT 0;
 
SELECT TIMESTAMPDIFF(MINUTE,$stime,$etime) INTO _tmpC;
 

IF _tmpC > 20 THEN  
    SET $retVal = 1;
    LEAVE returnVal;
END IF;
 
SELECT CONCAT(cs.szToken,"-",cs.nChairID) AS GameID, IFNULL(tc.szNickName,'') AS Accounts, 
       cs.nServerID AS ServerID, 
       cs.nGameType AS KindID, 
       cs.nTableID AS TableID,
       cs.nChairID AS ChairID,
       cs.nPlayCount AS UserCount, 
       cs.CardData AS CardValue,
       cs.nEnterScore /1000 AS CurScore,
       cs.nValidBet/1000 AS CellScore, 
       cs.nBetScore/1000 AS AllBet,
       cs.nResultMoney/1000 AS Profit,
       cs.nTax/1000 AS Revenue , 
       DATE_FORMAT(cs.tStartTime,"%Y-%m-%d %T") AS GameStartTime,  
       DATE_FORMAT(cs.tEndTime,"%Y-%m-%d %T") AS GameEndTime, 
       cs.nCLubID AS ChannelID, 
       tc.LineCode AS LineCode
 
FROM Table_ClubGameScoreDetail cs,`table_clubmember` tc 
WHERE tc.`nClubID`=cs.`nClubID` 
AND tc.`nPlayerID`= cs.`nPlayerID` 
AND cs.tEndTime >= $stime 
AND cs.tEndTime <= $etime 
AND cs.nCLubID = $clubid 
ORDER BY cs.tEndTime;
 
SET $retVal = 0;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_linecode_scores
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_linecode_scores`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_linecode_scores`(
					in  $nClubID  INT,
					in  $szCode   VARCHAR(64)
)
rt:BEGIN

if $szCode = "0" then

        SELECT SUM(nscore)/1000 as ts,linecode FROM table_clubmember WHERE nclubid = $nClubID AND brobot = 0 GROUP BY linecode;
else

        SELECT SUM(nscore)/1000 as ts,linecode FROM table_clubmember WHERE nclubid = $nClubID AND linecode = $szCode;
end if;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_master_info
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_master_info`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_master_info`(
    IN $intPlayerId INT,
    out $ndiamond   int,
    OUT $clubscore  INT,
    OUT $returnVal  INT
    )
returnVal:BEGIN
  
    DECLARE _tmpChannel     INT; 
    DECLARE _tmpClubID      INT;
    DECLARE _tmpMasterID    INT;
    IF not EXISTS (SELECT 1 FROM table_user WHERE nPlayerID=$intPlayerId AND szThirdAccount IS NOT NULL AND szThirdPass IS NOT NULL AND nChannel IS NOT NULL) THEN
        
		SET $returnVal = 2;
		LEAVE returnVal;
	END IF;
	
	select nChannel into _tmpChannel from table_user WHERE nPlayerID=$intPlayerId;
	
	if NOT EXISTS (select 1 from table_clubinfo where nChannel = _tmpChannel) then
        
		SET $returnVal = 3;
		LEAVE returnVal;
	end if;
	
	select nClubID into _tmpClubID FROM table_clubinfo WHERE nChannel = _tmpChannel;
	select nPlayerID into _tmpMasterID from table_clubmember where nClubID = _tmpClubID and nStatus =1 and nLevel = 1;
	
	if _tmpMasterID is null then
        
		SET $returnVal = 4;
		LEAVE returnVal;
	end if;
	
	select nCardCount into $ndiamond from table_user where nPlayerID=_tmpMasterID;
	select nScore into $clubscore from table_clubmember WHERE nClubID = _tmpClubID AND nStatus =1 AND nPlayerID = $intPlayerId;
    
    set $returnVal = 1;
    
  END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_playerid_by_account
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_playerid_by_account`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_playerid_by_account`(
						IN $strAccount VARCHAR(64),
						IN $nChannel   INT,
						IN $orderid    VARCHAR(128),
						IN $nAmount    bigINT,
						in $scode      int,
						OUT $intOutPlayerId INT,
						out $nActive   int
)
returnVal:BEGIN

DECLARE  _tmpDesc  VARCHAR(64);
DECLARE  _tmpAct   INT;
IF EXISTS(SELECT * FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel) THEN
    
    
    SELECT nplayerid, nActive INTO $intOutPlayerId,$nActive FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel;
    
    
    if $nActive = 0 then
        LEAVE returnVal;
    end if;
    
    if $scode = 2 then
        set _tmpAct  = 1;
        set _tmpDesc = "上分";
    else
        SET _tmpAct  = 2;
        SET _tmpDesc = "下分";
    end if;
    
    
    IF NOT EXISTS(SELECT 1 FROM table_third_order WHERE szOrder = $orderid) THEN
        
        INSERT INTO `table_third_order`(`nPlayerID`,`nClubID`,`nType`,`szOrder`,`nStatus`,`nAmount`,`szDesc`)
        VALUES ($intOutPlayerId,$nChannel,_tmpAct,$orderid,0,$nAmount,_tmpDesc);
    END IF;
    
ELSE 
    
    SET $intOutPlayerId = 0;
    set $nActive = 0;
    LEAVE returnVal;
END IF;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_playerid_by_account2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_playerid_by_account2`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_playerid_by_account2`(
						IN $strAccount VARCHAR(64),
						IN $nChannel   INT,
						IN $orderid    VARCHAR(128),
						IN $nAmount    bigINT,
						in $scode      int,
						OUT $intOutPlayerId INT,
						out $nActive   int,
						OUT $val       INT
)
returnVal:BEGIN

DECLARE  _tmpDesc  VARCHAR(64);
DECLARE  _tmpAct   INT;
SET $val = 0;
IF EXISTS(SELECT * FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel) THEN
    
    
    SELECT nplayerid, nActive INTO $intOutPlayerId,$nActive FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel;
    
    
    if $nActive = 0 then
        LEAVE returnVal;
    end if;
    
    if $scode = 2 then
        set _tmpAct  = 1;
        set _tmpDesc = "上分";
    else
        SET _tmpAct  = 2;
        SET _tmpDesc = "下分";
    end if;
    
    
    IF $scode = 3 THEN
    
        IF EXISTS(SELECT 1 FROM table_user_gamelock WHERE nPlayerID = $intOutPlayerId) THEN
                
                INSERT INTO `table_third_order`(`nPlayerID`,`nClubID`,`nType`,`szOrder`,`nStatus`,`nAmount`,`szDesc`)
                VALUES ($intOutPlayerId,$nChannel,_tmpAct,$orderid,2,$nAmount,_tmpDesc);
                
                SET $val = 39;
                LEAVE returnVal;
        END IF;
    
    END IF;
    
    
    IF NOT EXISTS(SELECT 1 FROM table_third_order WHERE szOrder = $orderid) THEN
        
        INSERT INTO `table_third_order`(`nPlayerID`,`nClubID`,`nType`,`szOrder`,`nStatus`,`nAmount`,`szDesc`)
        VALUES ($intOutPlayerId,$nChannel,_tmpAct,$orderid,0,$nAmount,_tmpDesc);
    END IF;
    
ELSE 
    
    SET $intOutPlayerId = 0;
    set $nActive = 0;
    LEAVE returnVal;
END IF;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_playerid_by_data
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_playerid_by_data`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_playerid_by_data`(
						IN $strAccount VARCHAR(64),
						IN $strPass    VARCHAR(64),
						IN $nChannel   INT,
						OUT $intOutPlayerId INT
)
returnVal:BEGIN

DECLARE  _tmpPass       VARCHAR(64);
IF EXISTS(SELECT * FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel) THEN
    
    
    SELECT nplayerid,szThirdPass INTO $intOutPlayerId, _tmpPass FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel;
    
    
    IF $strPass <> _tmpPass THEN
        SET $intOutPlayerId = 0;
        LEAVE returnVal;
    END IF;
 
ELSE 
    
    SET $intOutPlayerId = 0;
    LEAVE returnVal;
END IF;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_player_scorelog_by_time
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_player_scorelog_by_time`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_player_scorelog_by_time`(
						IN  $stime  VARCHAR(64),
						IN  $etime  VARCHAR(64),
						OUT $retVal INT
)
returnVal:BEGIN

DECLARE _tmpC INT DEFAULT 0;
 
SELECT TIMESTAMPDIFF(MINUTE,$stime,$etime) INTO _tmpC;
 

IF _tmpC > 20 THEN  
    SET $retVal = 1;
    LEAVE returnVal;
END IF;
 
SELECT 
ts.ID AS ID, 
tu.`szThirdAccount` AS Accounts,
ts.`nPlayerID` AS PlayerID, 
ts.`nGameID` AS nGameType,
ts.`szOrder` AS szOrder,
ts.`nType` AS nType,
ts.`nSubType` AS nSubType,
0+CONVERT( CONVERT(ts.nAmount/1000,DECIMAL(15,2)),CHAR) AS nAmount,
0+CONVERT( CONVERT(ts.nScore/1000,DECIMAL(15,2)),CHAR) AS nScore,
ts.`szDesc` AS szDesc,
ts.CreateTime AS CreateTime
FROM table_clublogscore ts, `table_user` tu
WHERE ts.CreateTime >= $stime AND ts.CreateTime <= $etime 
AND ts.nPlayerID = tu.nPlayerID
ORDER BY ts.ID;
 
SET $retVal = 0;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_player_scorelog_by_time2_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_player_scorelog_by_time2_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_third_get_player_scorelog_by_time2_shard`(
						IN  $stime  VARCHAR(64),
						IN  $etime  VARCHAR(64),
						IN  $nClubID INT,
						OUT $retVal INT
)
RT:BEGIN

	DECLARE _tmpC INT DEFAULT 0;
	 
	SELECT TIMESTAMPDIFF(MINUTE,$stime,$etime) INTO _tmpC;
	 
	IF _tmpC > 20 THEN  
			SET $retVal = 1;
			LEAVE RT;
	END IF;

	SELECT (DATEDIFF($etime,$stime))  into @intervals;
	#当天的数据
	if @intervals=0 then
		set @table_clublogscore=fun_get_table_name_shard_byDate("table_clublogscore", $etime);
		
		set @sqlStr=CONCAT("
			SELECT 
				ts.ID AS ID, 
				tu.`szThirdAccount` AS Accounts,
				ts.`nPlayerID` AS PlayerID, 
				ts.`nGameID` AS nServerID,
				ts.`szOrder` AS szOrder,
				ts.`nType` AS nType,
				ts.`nSubType` AS nSubType,
				0+CONVERT( CONVERT(ts.nAmount/1000,DECIMAL(15,2)),CHAR) AS nAmount,
				0+CONVERT( CONVERT(ts.nScore/1000,DECIMAL(15,2)),CHAR) AS nScore,
				ts.`szDesc` AS szDesc,
				ts.CreateTime AS CreateTime 
			FROM ",@table_clublogscore, " ts, `table_user` tu 
			WHERE ts.CreateTime >= '",$stime, "' 
				AND ts.CreateTime <= '",$etime, "' 
				AND ts.nPlayerID = tu.nPlayerID 
				AND ts.clubid = ",$nClubID, "  
				AND ts.nType < 90 
				ORDER BY ts.ID;
		");
		
		#select  @sqlStr;
		PREPARE stmt_name FROM @sqlStr; 
		EXECUTE stmt_name;
		DEALLOCATE PREPARE stmt_name;	
		
	#跨天的数据	
	ELSE 

		set @table_clublogscore_begin=fun_get_table_name_shard_byDate("table_clublogscore",$stime);
		set @table_clublogscore_end=fun_get_table_name_shard_byDate("table_clublogscore",$etime);
		set @sqlStrExtend=CONCAT("
			select
				ID,
				Accounts,
				PlayerID,
				nServerID,
				szOrder,
				nType,
				nSubType,
				nAmount,
				nScore,
				szDesc,
				CreateTime
			from (
				SELECT 
					ts.ID AS ID, 
					tu.`szThirdAccount` AS Accounts,
					ts.`nPlayerID` AS PlayerID, 
					ts.`nGameID` AS nServerID,
					ts.`szOrder` AS szOrder,
					ts.`nType` AS nType,
					ts.`nSubType` AS nSubType,
					0+CONVERT( CONVERT(ts.nAmount/1000,DECIMAL(15,2)),CHAR) AS nAmount,
					0+CONVERT( CONVERT(ts.nScore/1000,DECIMAL(15,2)),CHAR) AS nScore,
					ts.`szDesc` AS szDesc,
					ts.CreateTime AS CreateTime
				FROM ",@table_clublogscore_begin, " ts, `table_user` tu
				WHERE ts.CreateTime >= '",$stime, "' AND ts.nPlayerID = tu.nPlayerID AND ts.clubid = ",$nClubID, " AND ts.nType < 90	
				
				union all	
			
				SELECT 
					ts.ID AS ID, 
					tu.`szThirdAccount` AS Accounts,
					ts.`nPlayerID` AS PlayerID, 
					ts.`nGameID` AS nServerID,
					ts.`szOrder` AS szOrder,
					ts.`nType` AS nType,
					ts.`nSubType` AS nSubType,
					0+CONVERT( CONVERT(ts.nAmount/1000,DECIMAL(15,2)),CHAR) AS nAmount,
					0+CONVERT( CONVERT(ts.nScore/1000,DECIMAL(15,2)),CHAR) AS nScore,
					ts.`szDesc` AS szDesc,
					ts.CreateTime AS CreateTime
				FROM ",@table_clublogscore_end, " ts, `table_user` tu
				WHERE ts.CreateTime <= '",$etime, "' AND ts.nPlayerID = tu.nPlayerID AND ts.clubid = ",$nClubID, " AND ts.nType < 90	
				
				) tempResult  ORDER BY tempResult.ID
		");
		
		#select  @sqlStrExtend;
		PREPARE stmt_name_extend FROM @sqlStrExtend; 
		EXECUTE stmt_name_extend;
		DEALLOCATE PREPARE stmt_name_extend;	
	
	END IF;	

SET $retVal = 0;	
		
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_player_scorelog_by_time2_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_player_scorelog_by_time2_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_player_scorelog_by_time2_temp`(
						IN  $stime  VARCHAR(64),
						IN  $etime  VARCHAR(64),
						IN  $nClubID INT,
						OUT $retVal INT
)
RT:BEGIN

DECLARE _tmpC INT DEFAULT 0;
 
SELECT TIMESTAMPDIFF(MINUTE,$stime,$etime) INTO _tmpC;
 

IF _tmpC > 20 THEN  
    SET $retVal = 1;
    LEAVE RT;
END IF;
 
SELECT 
ts.ID AS ID, 
tu.`szThirdAccount` AS Accounts,
ts.`nPlayerID` AS PlayerID, 
ts.`nGameID` AS nServerID,
ts.`szOrder` AS szOrder,
ts.`nType` AS nType,
ts.`nSubType` AS nSubType,
0+CONVERT( CONVERT(ts.nAmount/1000,DECIMAL(15,2)),CHAR) AS nAmount,
0+CONVERT( CONVERT(ts.nScore/1000,DECIMAL(15,2)),CHAR) AS nScore,
ts.`szDesc` AS szDesc,
ts.CreateTime AS CreateTime
FROM table_clublogscore ts, `table_user` tu
WHERE ts.CreateTime >= $stime AND ts.CreateTime <= $etime 
AND ts.nPlayerID = tu.nPlayerID
AND ts.clubid = $nClubID
AND ts.nType < 90
ORDER BY ts.ID;
 
SET $retVal = 0;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_record_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_record_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_record_temp`(
						IN $nChannel    INT,
						IN $nIndex      INT,
						IN $nMax        INT,
						OUT $returnVal  INT,
						OUT $returnMsg  VARCHAR(128)
    )
returnVal:BEGIN

    DECLARE  _clubid  int;
    
    select nClubID into _clubid from table_clubinfo where nChannel = $nChannel;
    
    if _clubid is NULL then
        SET $returnVal = 1;
        SET $returnMsg = 'clubid error';
        LEAVE returnVal;
    end if;
    
    SET $returnVal = 0;
    SET $returnMsg = 'get record successfully';
    
    if $nIndex < 0 then
        set $nIndex = 0;
    end if;
    
    if $nMax > 50 then 
        set $nMax = 50;
    end if;
    
    select ID AS nIndex, nClubID, nGameType,nTableID,nRound, nPlayerID, nBetScore, nResult as nWinResult, nPlayerScore, nTax AS nServiceCharge , UNIX_TIMESTAMP(tEndTime) as CreateTime
    from table_clubgamescoredetail where nClubID = _clubid and id >= $nIndex limit $nMax;
    
    
    
    
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_service_record_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_service_record_temp`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_service_record_temp`(
						IN $nChannel    INT,
						IN $nIndex      INT,
						IN $nMax        INT,
						OUT $returnVal  INT,
						OUT $returnMsg  VARCHAR(128)
    )
returnVal:BEGIN

    DECLARE  _clubid  int;
    
    select nClubID into _clubid from table_clubinfo where nChannel = $nChannel;
    
    if _clubid is NULL then
        SET $returnVal = 1;
        SET $returnMsg = 'clubid error';
        LEAVE returnVal;
    end if;
    
    SET $returnVal = 0;
    SET $returnMsg = 'get record successfully';
    
    if $nIndex < 0 then
        set $nIndex = 0;
    end if;
    
    if $nMax > 50 then 
        set $nMax = 50;
    end if;
    
    select ID as nIndex ,nPlayerID,clubid as nClubID,nAmount as nService,UNIX_TIMESTAMP(CreateTime) as CreateTime from Table_ClubLogScore where ClubID = _clubid and ntype = 14 and id >= $nIndex limit $nMax;
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_tasklog_by_time
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_tasklog_by_time`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_third_get_tasklog_by_time`(
						IN  $stime  VARCHAR(64),
						IN  $etime  VARCHAR(64),
						in  $clubid int,
						OUT $retVal INT
)
returnVal:BEGIN

DECLARE  _tmpC  INT    DEFAULT 0;
DECLARE  _maximum varchar(32) DEFAULT '2020-02-27 16:29:47';
 
IF unix_timestamp($stime) > UNIX_TIMESTAMP(_maximum) THEN
        SET $retVal = 0;
        leave returnVal;
END IF;
 
IF unix_timestamp($etime) > UNIX_TIMESTAMP(_maximum) THEN
        SET $etime = _maximum;
END IF;
 
SELECT TIMESTAMPDIFF(MINUTE,$stime,$etime) into _tmpC;


if _tmpC > 60 then  
    set $retVal = 1;
    leave returnVal;
end if;
 
SELECT ID,`szNickName` as Accounts ,`nTaskID` as TaskID, nGameType, 0+CONVERT( CONVERT(Amount/1000,DECIMAL(15,2)),char) AS Amount, EAmount,`szMask` as Mask,tCreateTime as CreateTime

FROM table_club_task_complete WHERE nClubID = $clubid AND tCreateTime >= $stime AND tCreateTime <= $etime order by ID;
 
SET $retVal = 0;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_tasklog_by_time_test
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_tasklog_by_time_test`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_third_get_tasklog_by_time_test`(
						IN  $stime  VARCHAR(64),
						IN  $etime  VARCHAR(64),
						in  $clubid int,
						OUT $retVal INT,
						out $etimes varchar(64)
)
returnVal:BEGIN

DECLARE  _tmpC  INT    DEFAULT 0;
DECLARE  _maximum varchar(32) DEFAULT '2020-02-27 16:29:47';
 
IF unix_timestamp($stime) > UNIX_TIMESTAMP(_maximum) THEN
        SET $retVal = 0;
        leave returnVal;
END IF;
 
IF unix_timestamp($etime) > UNIX_TIMESTAMP(_maximum) THEN
        SET $etime = _maximum;
END IF;
 
SELECT TIMESTAMPDIFF(MINUTE,$stime,$etime) into _tmpC;

if _tmpC > 60 then  
    set $retVal = 1;
    leave returnVal;
end if;
 
SELECT ID,`szNickName` as Accounts ,`nTaskID` as TaskID, nGameType, 0+CONVERT( CONVERT(Amount/1000,DECIMAL(15,2)),char) AS Amount, EAmount,`szMask` as Mask,tCreateTime as CreateTime

FROM table_club_task_complete_test WHERE nClubID = $clubid AND tCreateTime >= $stime AND tCreateTime <= $etime order by ID;
 
SET $retVal = 0;
set $etimes = $etime;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_get_user
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_get_user`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_get_user`(
    IN $intPlayerId INT,
    out $uname varchar(64),
    OUT $upass VARCHAR(64),
    out $channelid int,
    OUT $returnVal INT
    )
returnVal:BEGIN
  
    
    select szThirdAccount,szThirdPass,nChannel into $uname,$upass,$channelid from table_user where nPlayerId = $intPlayerId;
    
    set $returnVal = 1;
    
  END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_load_playdata
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_load_playdata`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_load_playdata`(
		IN  $nplayerid INT,
		IN  $incoin    INT,
		OUT $nClubID   INT,
		OUT $returnVal INT,
		OUT $strOutMsg VARCHAR(256)
)
BEGIN

DECLARE _channel  INT;
IF EXISTS (SELECT 1 FROM table_user WHERE nPlayerID=$nplayerid AND szThirdAccount IS NOT NULL AND szThirdPass IS NOT NULL AND nChannel IS NOT NULL) THEN
    SELECT `nChannel` INTO _channel FROM table_user WHERE nPlayerID=$nplayerid;
    SELECT nClubID INTO $nClubID FROM `table_clubinfo` WHERE `nChannel` = _channel;
    
    
    IF $incoin > 0 THEN
        UPDATE `table_clubmember` SET `nScore` = nScore + $incoin WHERE `nClubID` = $nClubID AND `nPlayerID` = $nplayerid;
    END IF;
    
    SELECT `szPass`,`nSex`,`szNickName`,`szHeadPicUrl`,`nChannel`,`extendCode` FROM table_user WHERE nPlayerID=$nplayerid;
    
    SET $returnVal = 1;
    SET $strOutMsg = "ok";
    
ELSE
    SET $returnVal = 0;
    SET $strOutMsg = "playerid error.";
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_load_playdata_ex
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_load_playdata_ex`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_load_playdata_ex`(
		IN  $nplayerid INT,
		IN  $incoin    BIGINT,
		IN  $orderid   VARCHAR(128),
		IN  $nClubID   INT,
		OUT $returnVal INT,
		OUT $strOutMsg VARCHAR(256),
		out $nClubIcon int,
		OUT $strClubName  VARCHAR(32),
		OUT $szLoginKey VARCHAR(32)
		
)
rt:BEGIN

DECLARE _incoin bigint;
DECLARE _intype INT;
DECLARE _clubcoin BIGINT;
DECLARE _preuscore BIGINT;
DECLARE _uscore BIGINT;
DECLARE _flag_ok   int;
DECLARE _flag_fail INT;
DECLARE _tmpActType INT;
DECLARE _tmpDesc    VARCHAR(64);
set _flag_ok = 1;
SET _flag_fail = 2;
IF EXISTS (SELECT 1 FROM table_user WHERE nPlayerID=$nplayerid AND nChannel = $nClubID) THEN
    
    
    IF $incoin > 0 THEN
        
        
        if EXISTS(select 1 from table_third_order where szorder = $orderid and nStatus = 0)then
            select nAmount,nType into _incoin,_intype from table_third_order WHERE szorder = $orderid;
            
            
            if _intype <> 1 then 
                UPDATE table_third_order SET nStatus = _flag_fail WHERE szorder = $orderid;
                SET $returnVal = 29;  
                SET $strOutMsg = "nType error";
                LEAVE rt;
            end if;
            
            
            if _incoin <> $incoin then
                UPDATE table_third_order SET nStatus = _flag_fail WHERE szorder = $orderid;
                SET $returnVal = 29;
                SET $strOutMsg = "Amount error";
                LEAVE rt;            
            end if;
            
            
            select nScore into _clubcoin from table_clubinfo where nClubID = $nClubID;
            
            if _clubcoin < $incoin then
                UPDATE table_third_order SET nStatus = _flag_fail WHERE szorder = $orderid;
                SET $returnVal = 1002;   
                SET $strOutMsg = "club score low";
                LEAVE rt;
            end if;
            
            
            select nScore into _preuscore FROM table_clubmember WHERE `nClubID` = $nClubID AND `nPlayerID` = $nplayerid;
            
            update table_clubinfo set nScore = @nClubScore := nScore - $incoin where nClubID = $nClubID;
            SET _clubcoin = @nClubScore;
            SET _tmpActType = 20;
            SET _tmpDesc = '会员登录上分';
            
            
            CALL pr_UpdateUserClubScore3(0,$nplayerid,$nClubID,$incoin,0,_tmpActType,$orderid,_tmpDesc,@outscore);
            
            
            CALL pr_club_changeLogClubPlatformScore($nClubID,0,0,-$incoin,_clubcoin,_tmpActType,0,_tmpDesc,$orderid,$nplayerid,0);
            
            SET _uscore = @outscore;
            
            
            INSERT INTO table_third_exchange_log (  `nPlayerID`,  `nClubID`,  `nChannel`,  `nType`,  `szOrder`,  `nAmount`,  `nPreScore`,  `nScore`,  `szPay`,  `szDesc`) 
            VALUES  ($nplayerid,   $nClubID,   $nClubID,   1,   $orderid ,    $incoin,    _preuscore,   _uscore,   $incoin ,  _tmpDesc  ) ;
            
            UPDATE table_third_order SET nStatus = _flag_ok WHERE szorder = $orderid;
                        
        else
            
            SET $returnVal = 26;
            SET $strOutMsg = "orderid error";
            leave rt;
        end if;
        
    else
        
        IF EXISTS(SELECT 1 FROM table_third_order WHERE szorder = $orderid AND nStatus = 0)THEN
            UPDATE table_third_order SET nStatus = _flag_ok WHERE szorder = $orderid;
        end if;
        
    END IF;
    
    SELECT szClubName,nIconID INTO $strClubName ,$nClubIcon FROM table_clubinfo WHERE nClubID = $nClubID AND nStatus = 1;
    SELECT MD5(CONCAT($nplayerid,UNIX_TIMESTAMP(NOW()))) into $szLoginKey;
    
    
    IF (SELECT 1 FROM table_third_token WHERE nPlayerID = $nplayerid) THEN
        UPDATE table_third_token SET szToken = $szLoginKey,CreateTime = NOW() WHERE nPlayerID = $nplayerid;
    ELSE
        INSERT INTO `table_third_token` (  `szToken`,  `nPlayerID`) VALUES  ($szLoginKey,$nplayerid) ;
    END IF;
    




    
    SET $returnVal = 0;
    SET $strOutMsg = "ok";
    
ELSE
    SET $returnVal = 35;
    SET $strOutMsg = "playerid error.";
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_make_cash_order
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_make_cash_order`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_third_make_cash_order`(
		IN  $orderid   VARCHAR(128),
		IN  $opType    INT,           
		OUT $nscore    BIGINT,
		OUT $nAddScore BIGINT,
		OUT $returnVal INT,
		OUT $strOutMsg VARCHAR(256)
)
rt:BEGIN
DECLARE _incoin      BIGINT;
DECLARE _intype      INT;
DECLARE _clubcoin    BIGINT;
DECLARE _preuscore   BIGINT;
DECLARE _uscore      BIGINT  DEFAULT 0;
DECLARE _tmpDesc     VARCHAR(64);
DECLARE _tmpActType  INT;
DECLARE _tmpLogType  INT;
DECLARE _flag_ok     INT;
DECLARE _flag_fail   INT;
DECLARE _flag_commited INT;
DECLARE _flag_val    INT;
DECLARE _flag_delay  INT;
DECLARE _flag_delay_ok  INT;
DECLARE _nStatus     INT;
DECLARE _examineFlag     INT;
DECLARE _exFlag_delay    INT;
DECLARE _exFlag_delay_ok INT;
DECLARE _playerId    INT;
DECLARE _nChannel    INT;
DECLARE _nSub        INT;
DECLARE _commission  INT;
DECLARE errno        INT DEFAULT 0;
DECLARE _oldDesc     VARCHAR(128);
DECLARE _mark2       VARCHAR(128);
DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET errno = 1;
SET _flag_ok       = 1;
SET _flag_fail     = 2;
SET _flag_commited = 3;
SET _flag_val      = 0;
SET $nAddScore     = 0;
SET _flag_delay    = 5;   
SET _flag_delay_ok = 6;   
set _exFlag_delay = 8;    
set _exFlag_delay_ok = 9; 
IF NOT EXISTS (SELECT 1 FROM table_third_order WHERE szorder = $orderid) THEN
    SET $nscore    = 0;
    SET $returnVal = 26;
    SET $strOutMsg = CONCAT("orderid not exists.");
    LEAVE rt;
END IF;
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
START TRANSACTION;
        
SELECT nAmount,nType, nplayerId, nClubID, nStatus,szDesc INTO _incoin, _intype, _playerId, _nChannel,_nStatus,_oldDesc FROM table_third_order WHERE szorder = $orderid FOR UPDATE;
SELECT nFlag,szMark2 INTO _examineFlag, _mark2 FROM table_pyramid_examine WHERE szorder = $orderid FOR UPDATE;
IF _nStatus = _flag_ok THEN 
    COMMIT;
    SET $nscore    = 0;
    SET $returnVal = 26;
    SET $strOutMsg = CONCAT("order already done. status=",_nStatus);
    LEAVE rt;
END IF;
IF _nStatus = _flag_fail THEN 
    IF _intype = 4 THEN 
        IF $opType = 2 THEN 
            IF _examineFlag = 5 THEN 
                SET _oldDesc = CONCAT(_oldDesc,"_超时到达_",DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"));
                UPDATE table_third_order SET szDesc = _oldDesc WHERE szorder = $orderid;
                SET _mark2 = CONCAT(_mark2,"超时到达_",DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"));
                UPDATE table_pyramid_examine SET szMark2 = _mark2 WHERE szorder = $orderid;
                COMMIT;
                SET $nscore = 0;
                SET $returnVal = 3;
                SET $strOutMsg = "overtime arrive";
                LEAVE rt;            
            ELSE
                
                COMMIT;
                SET $nscore    = 0;
                SET $returnVal = 26;
                SET $strOutMsg = CONCAT("order is error. _examineFlag=",_examineFlag);        
                LEAVE rt;           
            END IF;
        ELSE
            
            COMMIT;
            SET $nscore    = 0;
            SET $returnVal = 26;
            SET $strOutMsg = CONCAT("order is error. opType=",$opType);        
            LEAVE rt;
        END IF;
    ELSE
        
        COMMIT;
        SET $nscore    = 0;
        SET $returnVal = 26;
        SET $strOutMsg = CONCAT("order is fail. status=",_nStatus);
        LEAVE rt;    
    END IF;
    
END IF;
SET $nAddScore = _incoin;
        
IF _incoin <= 0 THEN
        UPDATE table_third_order SET nStatus = _flag_fail WHERE szorder = $orderid;
        COMMIT;
        SET $nscore = 0;
        SET $returnVal = 31;   
        SET $strOutMsg = "score must than 0";
        LEAVE rt;
END IF;
IF _intype = 3 THEN   
    IF $opType = 2 THEN  
            
            IF _nStatus = _flag_delay THEN
            
                SET _oldDesc = CONCAT(_oldDesc,"_超时到达");
                UPDATE table_third_order SET `ConfirmTime` = NOW(),nStatus = _flag_delay_ok,szDesc = _oldDesc WHERE szorder = $orderid;
                COMMIT;
                SET $nscore = 0;
                SET $returnVal = 3;
                SET $strOutMsg = "overtime arrive";
                LEAVE rt;
            ELSEIF _nStatus = 4 THEN 
                SET _oldDesc = CONCAT(_oldDesc,"_超时到达_",DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"));
                UPDATE table_third_order SET szDesc = _oldDesc WHERE szorder = $orderid;
                COMMIT;
                SET $nscore = 0;
                SET $returnVal = 3;
                SET $strOutMsg = "overtime arrive";
                LEAVE rt;
                
            ELSEIF _nStatus = 0 THEN 
            
                
                UPDATE table_clubinfo SET nScore = @clubscore := nScore - _incoin WHERE nClubID = _nChannel;
                SET _clubcoin   = @clubscore;
                SET _tmpLogType = 1;
                SET _tmpActType = 23;
                SET _tmpDesc    = '充值上分';
                SET _flag_val   = _flag_ok;       
                
                CALL pr_UpdateUserClubScore3(0,_playerId,_nChannel,_incoin,0,_tmpActType,$orderid,_tmpDesc,@outscore);
                CALL pr_club_changeLogClubPlatformScore(_nChannel,0,0,-_incoin,_clubcoin,_tmpActType,0,_tmpDesc,$orderid,_playerId,0);
                UPDATE table_third_order SET `ConfirmTime` = NOW(),nStatus = _flag_val WHERE szorder = $orderid;
                               
            END IF;
    END IF;
    
ELSEIF _intype = 4 THEN 
    IF $opType = 1 THEN 
            
            
            UPDATE table_clubinfo SET nScore = @clubscore := nScore + _incoin WHERE nClubID = _nChannel;
            SET _clubcoin = @clubscore;
            SET _tmpLogType = 2;
            SET _tmpActType = 22;
            SET _tmpDesc    = '兑换下分';
            SET _flag_val   = _flag_commited;  
            
            
            CALL pr_club_changeLogClubPlatformScore(_nChannel,0,0,_incoin,_clubcoin,_tmpActType,0,_tmpDesc,$orderid,_playerId,0);
            
            UPDATE table_third_order SET nStatus = _flag_val WHERE szorder = $orderid;
            
    ELSEIF $opType = 2 THEN 
                        
            IF _nStatus = _flag_delay and _examineFlag = _exFlag_delay THEN 
            
                SET _oldDesc = CONCAT(_oldDesc,"_超时到达");
                UPDATE table_third_order SET `ConfirmTime` = NOW(),nStatus = _flag_delay_ok,szDesc = _oldDesc WHERE szorder = $orderid;
                SET _mark2 = CONCAT("超时到达_",DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"));
                UPDATE table_pyramid_examine SET nFlag = _exFlag_delay_ok,szMark2 = _mark2 WHERE szorder = $orderid;
                
                SELECT nScore INTO _uscore FROM table_clubmember WHERE nPlayerID = _playerId AND nClubID=_nChannel;
                
                CALL pr_club_changeLogClubScore3_shard(0,_playerId,_nChannel,-_incoin,_uscore,28,$orderid,'客户提现');
                
                COMMIT;
                SET $nscore = 0;
                SET $returnVal = 3;
                SET $strOutMsg = "overtime arrive";
                LEAVE rt;
                
            ELSEIF _nStatus = _flag_fail AND _examineFlag = 5 THEN 
                SET _oldDesc = CONCAT(_oldDesc,"_超时到达_",DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"));
                UPDATE table_third_order SET szDesc = _oldDesc WHERE szorder = $orderid;
                SET _mark2 = CONCAT("超时到达_",DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"));
                UPDATE table_pyramid_examine SET szMark2 = _mark2 WHERE szorder = $orderid;
                COMMIT;
                SET $nscore = 0;
                SET $returnVal = 3;
                SET $strOutMsg = "overtime arrive";
                LEAVE rt;
            
            ELSEIF _nStatus = 3 AND _examineFlag = 7 THEN   
                
                UPDATE table_third_order SET nStatus = _flag_ok,`ConfirmTime` = NOW() WHERE szorder = $orderid;
                
                UPDATE table_pyramid_examine SET nFlag = 4 WHERE szorder = $orderid;
                
                
                SELECT nSubVal,nAmount INTO _nSub,_commission FROM table_third_order WHERE szorder = $orderid;
                SELECT nScore INTO _uscore FROM table_clubmember WHERE nPlayerID = _playerId AND nClubID=_nChannel;
                            
                IF _nSub > 0 THEN
                    CALL pr_club_task_deduction(_playerId,_nChannel,_nSub);
                END IF;
                
                
                CALL pr_club_changeLogClubScore3_shard(0,_playerId,_nChannel,-_commission,_uscore,28,$orderid,'客户提现');
                
                COMMIT; 
                
                SET $nscore    = 0;
                SET $returnVal = 0;
                SET $strOutMsg = "ok";
                LEAVE rt;
            END IF;
            
    END IF;
    
END IF;
SELECT nScore INTO $nscore FROM table_clubmember WHERE `nClubID` = _nChannel AND `nPlayerID` = _playerId;
IF errno=0 THEN
    COMMIT; 
    SET $returnVal = 0;
    SET $strOutMsg = "ok";
ELSE
    ROLLBACK; 
    SET $nscore    = 0;
    SET $returnVal = 27;
    SET $strOutMsg = "db error rollback";
END IF;
        
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_make_order
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_make_order`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_make_order`(
		IN  $nplayerid INT,
		IN  $orderid   VARCHAR(128),
		IN  $nClubID   INT,
		OUT $nscore    BIGINT,
		OUT $returnVal INT,
		OUT $strOutMsg VARCHAR(256)
)
rt:BEGIN

DECLARE _incoin      BIGINT;
DECLARE _intype      INT;
DECLARE _clubcoin    BIGINT;
DECLARE _preuscore   BIGINT;
DECLARE _uscore      BIGINT;
DECLARE  _tmpDesc    VARCHAR(64);
DECLARE  _tmpActType INT;
DECLARE  _tmpLogType INT;
DECLARE _flag_ok     INT;
DECLARE _flag_fail   INT;
DECLARE _logintime   timestamp;
DECLARE errno        INT DEFAULT 0;

DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET errno = 1;
SET _flag_ok   = 1;
SET _flag_fail = 2;
IF NOT EXISTS (SELECT 1 FROM table_user WHERE nPlayerID=$nplayerid AND nChannel = $nClubID) THEN
    SET $nscore    = 0;
    SET $returnVal = 35;
    SET $strOutMsg = "playerid error";
    LEAVE rt;
END IF;

IF NOT EXISTS(SELECT 1 FROM table_third_order WHERE szorder = $orderid AND nStatus = 0)THEN
        
        SET $nscore = 0;
        SET $returnVal = 26;
        SET $strOutMsg = "orderid error";
        LEAVE rt;
END IF;

SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
START TRANSACTION;
 
SELECT nAmount,nType INTO _incoin,_intype FROM table_third_order WHERE szorder = $orderid FOR UPDATE;
IF _incoin <= 0 THEN
        UPDATE table_third_order SET nStatus = _flag_fail WHERE szorder = $orderid;
        COMMIT;
        SET $nscore = 0;
        SET $returnVal = 31;   
        SET $strOutMsg = "score must than 0";
        LEAVE rt;
END IF;
IF _intype = 1 THEN  
    
    SELECT nScore INTO _clubcoin FROM table_clubinfo WHERE nClubID = $nClubID;
    
    IF _clubcoin < _incoin THEN
        UPDATE table_third_order SET nStatus = _flag_fail WHERE szorder = $orderid;
	COMMIT;
	
        SET $nscore = 0;
        SET $returnVal = 1002;   
        SET $strOutMsg = "club score low";
        LEAVE rt;
    END IF;
  
    
    SELECT nScore INTO _preuscore FROM table_clubmember WHERE `nClubID` = $nClubID AND `nPlayerID` = $nplayerid;
    
    
    UPDATE table_clubinfo SET nScore = @nClubScore := nScore - _incoin WHERE nClubID = $nClubID;
    SET _clubcoin = @nClubScore;
     
    SET _tmpLogType = 1;
    SET _tmpActType = 20;
    SET _tmpDesc = '会员上分';
    
    CALL pr_UpdateUserClubScore3(0,$nplayerid,$nClubID,_incoin,0,_tmpActType,$orderid,_tmpDesc,@outscore);
    CALL pr_club_changeLogClubPlatformScore($nClubID,0,0,-_incoin,_clubcoin,_tmpActType,0,_tmpDesc,$orderid,$nplayerid,0);
    
ELSEIF _intype = 2 THEN  
    
    select IFNULL(preLoginTime,0) into _logintime from table_user where nPlayerID=$nplayerid AND nChannel = $nClubID FOR UPDATE;
    
    IF (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(_logintime)) < 5 THEN
        UPDATE table_third_order SET nStatus = _flag_fail WHERE szorder = $orderid;
        COMMIT;
        SET $nscore = 0;
        SET $returnVal = 45;   
        SET $strOutMsg = "too busy";
        LEAVE rt;
    END IF;
    
    
    SELECT nScore,nScore INTO _uscore,_preuscore FROM table_clubmember WHERE `nClubID` = $nClubID AND `nPlayerID` = $nplayerid FOR UPDATE;
    
    IF _uscore < _incoin THEN
        UPDATE table_third_order SET nStatus = _flag_fail WHERE szorder = $orderid;
	COMMIT;
        SET $nscore = 0;
        SET $returnVal = 38;   
        SET $strOutMsg = "user score low";
        LEAVE rt;
    END IF;
    
    
    UPDATE table_clubinfo SET nScore = @nClubScore := nScore + _incoin WHERE nClubID = $nClubID;
    
    SET _clubcoin = @nClubScore;
    
    SET _tmpLogType = 2;
    SET _tmpActType = 21;
    SET _tmpDesc = '会员下分';
    
    CALL pr_UpdateUserClubScore3(0,$nplayerid,$nClubID,-_incoin,0,_tmpActType,$orderid,_tmpDesc,@outscore);
    CALL pr_club_changeLogClubPlatformScore($nClubID,0,0,_incoin,_clubcoin,_tmpActType,0,_tmpDesc,$orderid,$nplayerid,0);
    
ELSE
        UPDATE table_third_order SET nStatus = _flag_fail WHERE szorder = $orderid;
        COMMIT;
        
        SET $nscore = 0;
        SET $returnVal = 29;   
        SET $strOutMsg = "order type error";
        LEAVE rt;
END IF;
 
SET $nscore = @outscore;
 

INSERT INTO table_third_exchange_log (`nPlayerID`,  `nClubID`,  `nChannel`,  `nType`,  `szOrder`,  `nAmount`,  `nPreScore`,  `nScore`,  `szPay`,  `szDesc`) 
VALUES($nplayerid,   $nClubID,   $nClubID,   _tmpLogType,   $orderid ,  _incoin,    _preuscore,   $nscore,  _incoin , _tmpDesc ) ;
 
IF errno=0 THEN
    COMMIT; 
    
    UPDATE table_third_order SET nStatus = _flag_ok WHERE szorder = $orderid;    
    SET $returnVal = 0;
    SET $strOutMsg = "ok";
ELSE
    ROLLBACK; 
    SET $nscore    = 0;
    SET $returnVal = 27;
    SET $strOutMsg = "db error rollback";
END IF;
        
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_make_uplevel
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_make_uplevel`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_make_uplevel`(
						IN $nChannel    INT,
						IN $strAccount  VARCHAR(64),
						IN $strPass     VARCHAR(64),
						IN $strUpUser   VARCHAR(64),
						IN $strUpPass   VARCHAR(64),
						OUT $returnVal  INT,
						OUT $returnMsg  VARCHAR(128)
    )
returnVal:BEGIN

    DECLARE  _clubid  INT;
    DECLARE  _playid1 INT;
    DECLARE  _playid2 INT;
    
    DECLARE  _tmpCardCount  INT    DEFAULT 0;
    DECLARE  _tmpJinBiCount BIGINT DEFAULT 0;
    
    IF EXISTS(SELECT * FROM table_clubinfo WHERE  nStatus = 1 AND nChannel = $nChannel )THEN
        
        SELECT nClubID into _clubid FROM table_clubinfo WHERE  nStatus = 1 AND nChannel = $nChannel;
        select nPlayerId into _playid1 from `table_user` where szThirdAccount = $strAccount and szThirdPass = $strPass and nChannel = $nChannel;
        SELECT nPlayerId INTO _playid2 FROM `table_user` WHERE szThirdAccount = $strUpUser AND nChannel = $nChannel;
        
        if _playid1 is null then
            SET $returnVal = 2;
            SET $returnMsg = 'player1 error';
            LEAVE returnVal;
        end if;
        
        if _playid2 is NULL then
            
            INSERT INTO Table_User(nCardCount,nJinBi,szNickName,szCreateTime,nActive,szPass,preLoginTime,preLoginIp,szHeadPicUrl,szThirdAccount,szThirdPass,nChannel) 
            VALUES(_tmpCardCount,_tmpJinBiCount,$strUpUser,NOW(),1,'',DATE_SUB(NOW(),INTERVAL 1 DAY),'','',$strUpUser,$strUpPass,$nChannel);
            SELECT nPlayerId INTO _playid2 FROM `table_user` WHERE szThirdAccount = $strUpUser AND szThirdPass = $strUpPass AND nChannel = $nChannel;
            
            
            INSERT INTO Table_ClubMember( nClubID,nPlayerID,nLevel,nStatus,nScore) VALUES (_clubid,_playid2,3,1,0);
            
            UPDATE Table_ClubMember SET nExtenID = _playid2,tExtenBindingTime = NOW() WHERE nClubID = _clubid AND nPlayerID = _playid1 AND nStatus = 1;
            
            
            SET $returnVal = 10;
            
        else
        
            
            UPDATE Table_ClubMember SET nExtenID = _playid2,tExtenBindingTime = NOW() WHERE nClubID = _clubid AND nPlayerID = _playid1 AND nStatus = 1;
            
            SET $returnVal = 0;
            
        END IF;
        SET $returnMsg = 'successfully';
    
    ELSE
    
        SET $returnVal = 1;
        SET $returnMsg = 'club error';
        LEAVE returnVal;
    END IF;
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_modify_pass
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_modify_pass`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_modify_pass`(
						IN $intPlayID   INT,
						IN $nChannel    INT,
						IN $strAccount  VARCHAR(64),
						IN $strPass     VARCHAR(64),
						IN $strNewUser  VARCHAR(64),
						IN $strNewPass  VARCHAR(64),
						OUT $returnVal  INT,
						OUT $returnMsg  VARCHAR(128)
    )
returnVal:BEGIN

    DECLARE  _account  VARCHAR(64);
    DECLARE  _pass     VARCHAR(64);
    
    IF EXISTS(SELECT * FROM table_user WHERE nPLayerId = $intPlayID AND nActive = 1)THEN
        
        SELECT szThirdPass,szThirdAccount INTO _pass,_account FROM table_user WHERE nPLayerId = $intPlayID;
        
        IF $strPass<>'' and _pass <> '' and  _pass <> $strPass THEN
            SET $returnVal = 2;
            SET $returnMsg = 'password  error';
            LEAVE returnVal;
        END IF;
        IF  _account <> $strAccount THEN
            SET $returnVal = 2;
            SET $returnMsg = 'account error';
            LEAVE returnVal;
        END IF;
        
        update table_user set szThirdAccount=$strNewUser,szNickName=$strNewUser,szThirdPass=$strNewPass,nChannel=$nChannel where nPLayerId = $intPlayID;
        SET $returnVal = 0;
        SET $returnMsg = 'modify password successfully';
    
    ELSE
        SET $returnVal = 1;
        SET $returnMsg = 'acount error';
        LEAVE returnVal;
    END IF;
    
    END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_player_alldec
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_player_alldec`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_player_alldec`(
		IN  $nplayerid INT,
		IN  $channel   INT,
		OUT $nCoin    INT,
		OUT $nClubID   INT,
		OUT $returnVal INT,
		OUT $strOutMsg VARCHAR(256)
)
rt:BEGIN

IF EXISTS (SELECT 1 FROM table_user WHERE nPlayerID=$nplayerid AND szThirdAccount IS NOT NULL AND szThirdPass IS NOT NULL AND nChannel IS NOT NULL) THEN
    
    SELECT nClubID INTO $nClubID FROM `table_clubinfo` WHERE `nChannel` = $channel;
    
    
    select nScore into $nCoin from table_clubmember WHERE `nClubID` = $nClubID AND `nPlayerID` = $nplayerid;
    
    UPDATE `table_clubmember` SET `nScore` = 0 WHERE `nClubID` = $nClubID AND `nPlayerID` = $nplayerid;
    
    SET $returnVal = 0;
    SET $strOutMsg = "成功";
    
ELSE
    SET $returnVal = 1;
    SET $strOutMsg = "账号不存在";
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_query_order
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_query_order`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_query_order`(
		IN  $orderid   VARCHAR(128),
		OUT $nAmount   BIGINT,
		OUT $nStatus   INT,
		OUT $returnVal INT,
		OUT $strOutMsg VARCHAR(256)
)
rt:BEGIN

DECLARE  _tmps   INT;
IF EXISTS (SELECT 1 FROM table_third_order WHERE szorder = $orderid) THEN
    
    select nAmount,nStatus into $nAmount,_tmps from table_third_order WHERE szorder = $orderid;
    
    if _tmps = 0 then
        set $nStatus = 3; 
    ELSEIF _tmps = 4 OR _tmps < 0 THEN
        SET $nStatus = 2; 
    ELSEIF _tmps >= 5 THEN
        SET $nStatus = 2; 
    else
        set $nStatus = _tmps;
    end if;
    
    SET $returnVal = 0;
    SET $strOutMsg = "ok";
    
ELSE
    set $nStatus   = -1;
    SET $returnVal = 26;  
    SET $strOutMsg = "orderid error";
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_query_user
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_query_user`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_query_user`(
						IN $strAccount VARCHAR(64),
						IN $nChannel   INT,
						out $nScode    bigINT,
						OUT $intOutPlayerId INT
)
returnVal:BEGIN

IF EXISTS(SELECT * FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel) THEN
    
    SELECT nplayerid INTO $intOutPlayerId FROM Table_User WHERE szThirdAccount = $strAccount AND nChannel = $nChannel;
    select nscore into $nScode from Table_clubmember where nplayerid = $intOutPlayerId and nClubID = $nChannel;
    
ELSE 
    
    SET $intOutPlayerId = 0;
    SET $nScode = -1;
    LEAVE returnVal;
END IF;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_score_exchange_diamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_score_exchange_diamond`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_score_exchange_diamond`(
    IN $intPlayerId INT,
    IN $ndiamond    INT,
    OUT $nMadiamond INT,
    OUT $clubscore  INT,
    OUT $returnVal  INT
    )
returnVal:BEGIN
  
    DECLARE _tmpChannel     INT; 
    DECLARE _tmpClubID      INT;
    DECLARE _tmpMasterID    INT;
    DECLARE _tmpMasterDia   INT;
    DECLARE _tmpMyDiamond   INT;
    DECLARE _tmpNeedScore   INT;
    
    DECLARE _tmpRate        int DEFAULT 100; 
    DECLARE _tmpUserScore   INT;
        
    IF NOT EXISTS (SELECT 1 FROM table_user WHERE nPlayerID=$intPlayerId AND szThirdAccount IS NOT NULL AND szThirdPass IS NOT NULL AND nChannel IS NOT NULL) THEN
        
		SET $returnVal = 2;
		LEAVE returnVal;
	END IF;
	
	SELECT nChannel INTO _tmpChannel FROM table_user WHERE nPlayerID=$intPlayerId;
	
	IF NOT EXISTS (SELECT 1 FROM table_clubinfo WHERE nChannel = _tmpChannel) THEN
        
		SET $returnVal = 3;
		LEAVE returnVal;
	END IF;
	
	SELECT nClubID INTO _tmpClubID FROM table_clubinfo WHERE nChannel = _tmpChannel;
	SELECT nPlayerID INTO _tmpMasterID FROM table_clubmember WHERE nClubID = _tmpClubID AND nStatus =1 AND nLevel = 1;
	
	IF _tmpMasterID IS NULL THEN
        
		SET $returnVal = 4;
		LEAVE returnVal;
	END IF;
    
    
    select nExchangeDiamond into _tmpRate from Table_ClubInfo where nClubID = _tmpClubID;
	
	SELECT nCardCount INTO _tmpMasterDia FROM table_user WHERE nPlayerID=_tmpMasterID;
	if _tmpMasterDia < $ndiamond then
        
		SET $returnVal = 5;
		LEAVE returnVal;
	end if;
	
    
    set _tmpNeedScore = $ndiamond * _tmpRate;
	
	SELECT nScore INTO _tmpUserScore FROM table_clubmember WHERE nClubID = _tmpClubID AND nStatus =1 AND nPlayerID = $intPlayerId;
	
	if _tmpUserScore < _tmpNeedScore then
        
		SET $returnVal = 6;
		LEAVE returnVal;
	end if;
	
	
	update table_user set nCardCount = nCardCount - $ndiamond WHERE nPlayerID=_tmpMasterID;
	
	UPDATE table_user SET nCardCount = nCardCount + $ndiamond WHERE nPlayerID=$intPlayerId;
	
	update table_clubmember set nScore = nScore - _tmpNeedScore WHERE nClubID = _tmpClubID AND nStatus =1 AND nPlayerID = $intPlayerId;  
    SELECT nScore INTO $clubscore FROM table_clubmember WHERE nClubID = _tmpClubID AND nStatus =1 AND nPlayerID = $intPlayerId;    
    SELECT nCardCount INTO $nMadiamond FROM table_user WHERE nPlayerID=_tmpMasterID;
    
    select nCardCount into _tmpMyDiamond FROM table_user WHERE nPlayerID=$intPlayerId;
    
    
	INSERT INTO Table_clublogDiamond(nPlayerID,nAmount,nScore,nType,nTaxRate,szDesc,clubid) 
    VALUES(_tmpMasterID, $ndiamond , $nMadiamond , 10 ,_tmpNeedScore,'积分换钻石扣除',_tmpClubID);
    
	INSERT INTO Table_clublogDiamond(nPlayerID,nAmount,nScore,nType,nTaxRate,szDesc,clubid) 
    VALUES($intPlayerId, $ndiamond , _tmpMyDiamond , 11 ,_tmpNeedScore,'积分换钻石获得',_tmpClubID);
    
    
    CALL Pr_club_changeLogClubScore2($intPlayerId,0,0,_tmpNeedScore,17,0,'积分换钻石扣除',_tmpClubID);
    
    
    call Pro_Web_AddEnterPriseLog(_tmpClubID,48,$intPlayerId,0,concat('用户:',$intPlayerId,' 在俱乐部[',_tmpClubID,']中使用 ',_tmpNeedScore,' 积分兑换 ',$ndiamond,'钻石') );
    
    SET $returnVal = 1;
    
  END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_update_order_score
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_update_order_score`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_update_order_score`(
IN $nPlayerID INT,
IN $orderid VARCHAR(128),
OUT $exScore BIGINT
)
rt:BEGIN

DECLARE _nScore  BIGINT DEFAULT 0;
DECLARE _nClubID INT DEFAULT 0;

SELECT nAmount, nClubID INTO _nScore ,_nClubID FROM `table_third_order` WHERE nPlayerID = $nPlayerID AND nStatus = 1 AND szOrder = $orderid;
IF _nScore > 0 THEN
    
    UPDATE table_clubmember SET nScore = nScore + _nScore WHERE nPlayerID = $nPlayerID AND nClubID = _nClubID;
    UPDATE table_third_order SET nStatus = 4 WHERE nPlayerID = $nPlayerID AND nStatus = 1 AND szOrder = $orderid;
    
    SET $exScore = _nScore;
    LEAVE rt;
    
ELSE
    SET $exScore = 0;
    LEAVE rt;
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_third_update_order_status
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_third_update_order_status`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_third_update_order_status`(
		IN  $orderid   VARCHAR(128),
		IN  $nstatus   INT,
		OUT $returnVal INT,
		OUT $strOutMsg VARCHAR(256)
)
rt:BEGIN

IF EXISTS (SELECT 1 FROM table_third_order WHERE szorder = $orderid) THEN
    UPDATE table_third_order SET nStatus = $nstatus WHERE szorder = $orderid;
    SET $returnVal = 0;
    SET $strOutMsg = "ok";
ELSE
    SET $returnVal = 1;
    SET $strOutMsg = "orderid error";
END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_time_update_order_status
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_time_update_order_status`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_time_update_order_status`(
)
rt:BEGIN

	UPDATE table_pyramid_examine bodys INNER JOIN 
	(
	SELECT b.szOrder FROM table_pyramid_examine a 
	INNER JOIN table_third_order b ON a.szOrder=b.szOrder WHERE a.nFlag = 7 AND b.nStatus = 0 AND (b.CreateTime BETWEEN DATE_SUB(NOW(),INTERVAL 90 MINUTE) AND DATE_SUB(NOW(),INTERVAL 60 MINUTE))
	)temp ON bodys.szOrder=temp.szOrder SET bodys.nFlag = 8, bodys.szRemark = '第三方超时';
	UPDATE table_pyramid_examine bodys INNER JOIN 
	(
	SELECT b.szOrder FROM table_pyramid_examine a 
	INNER JOIN table_third_order b ON a.szOrder=b.szOrder  WHERE a.nFlag = 7 AND  b.nStatus = 3 AND (b.CreateTime BETWEEN DATE_SUB(NOW(),INTERVAL 90 MINUTE) AND DATE_SUB(NOW(),INTERVAL 60 MINUTE))
	)temp ON bodys.szOrder=temp.szOrder SET bodys.nFlag = 8, bodys.szRemark = '第三方超时';
	UPDATE table_third_order SET nStatus = 5 WHERE nStatus = 0 AND (`CreateTime` BETWEEN DATE_SUB(NOW(),INTERVAL 90 MINUTE) AND DATE_SUB(NOW(),INTERVAL 60 MINUTE));
	UPDATE table_third_order SET nStatus = 5 WHERE nStatus = 3 AND (`CreateTime` BETWEEN DATE_SUB(NOW(),INTERVAL 90 MINUTE) AND DATE_SUB(NOW(),INTERVAL 60 MINUTE));
    
    UPDATE table_third_order SET nStatus = 2 WHERE nStatus = 5 AND nType = 3 AND `CreateTime` < DATE_SUB(NOW(),INTERVAL 23 HOUR);
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totalAddUser
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totalAddUser`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pr_totalAddUser`(
)
BEGIN
					
					set @ttime=date_sub(curdate(),interval 1 day);
					set @starttime=concat(date_sub(curdate(),interval 1 day) ,' 00:00:00');
					set @endtime=concat(date_sub(curdate(),interval 1 day) ,' 23:59:59');
					if not exists(select szTime from Table_Web_TotalAddUser where szTime=@startTime) then 
								SELECT count(nPlayerID) into @dayAddCount 
								FROM Table_User tuser where  tuser.bRobot=0 and tuser.szCreateTime >=@starttime AND tuser.szCreateTime <=@endtime;
															
							
							insert into Table_Web_TotalAddUser(szTime, newUser,MaxCount,MinCount,MaxTime,MinTime)
							select @startTime, @dayAddCount,MaxCount,MinCount,
							(SELECT date_format(szTime,'%H:%i') FROM Table_Web_TotalInLine_min max WHERE max.`online` = temp.MaxCount AND @tTime= DATE_FORMAT(temp.szTime,'%Y-%m-%d') LIMIT 0,1) MaxTime,
							(SELECT date_format(szTime,'%H:%i') FROM Table_Web_TotalInLine_min min WHERE min.`online` = temp.MinCount AND @tTime= DATE_FORMAT(temp.szTime,'%Y-%m-%d') LIMIT 0,1) MinTime
							from (
								select 
											szTime,
											MAX(`online`) MaxCount,
											MIN(`online`) MinCount  
								from table_web_totalinline_min 
								where szTime>=@startTime and szTime<=@endTime
							)temp;
					end if;
					
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_totalBigGame
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_totalBigGame`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_totalBigGame`()
BEGIN

declare _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 00:00:00');
declare _EndDate  varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 23:59:59');

DECLARE _nTotalUp,_nTotalPlayerCount,_nTotalRound,_nTotalbet,_nBankResult,_nTax INT  DEFAULT 0;
DECLARE _clubid INT;
DECLARE _szClubName VARCHAR(30);
DECLARE _tDate DATE;

declare done int default false;

declare cur cursor for select DISTINCT nclubid from Table_ClubBigGameScore where  tEndTime >=_StartDate and tEndTime <=_EndDate;
declare continue handler for not found set done = true;   
				
    
  set _tDate=DATE_SUB(CURDATE(),INTERVAL 1 day);

	open cur;  
					
	read_loop:loop  
	fetch cur into _clubid; 
	    if done then  
		    leave read_loop;    
		end if;  
		
    SELECT szClubName    INTO _szClubName
    from table_clubinfo where nClubID=_clubid;

  
	select count(*) INTO _nTotalUp 
	from Table_ClubBigGameScore 
	where nclubid=_clubid and nBankID=1 and  tEndTime >=_StartDate and tEndTime <=_EndDate;
	
  
	select count(*),IFNULL(sum(nTotalPlayerCount),0),IFNULL(sum(nTotalbet),0),IFNULL(sum(nBankResult),0),IFNULL(sum(nTax),0) 
    INTO _nTotalRound,_nTotalPlayerCount,_nTotalbet,_nBankResult,_nTax
    from Table_ClubBigGameScore 
    where nclubid=_clubid  and  tEndTime >=_StartDate and tEndTime <=_EndDate;
           
	IF NOT EXISTS (select 1 from table_web_totalBigGame where ClubID=_clubid and	tDate=_tDate) THEN
        INSERT INTO table_web_totalBigGame(tDate,ClubID,szClubName,nTotalUp,nTotalPlayerCount,nTotalRound,nTotalbet,nBankResult,nTax)
        VALUES(_tDate,_clubid,_szClubName,_nTotalUp,_nTotalPlayerCount,_nTotalRound,_nTotalbet,_nBankResult,_nTax);
    ELSE
        UPDATE table_web_totalBigGame 
        SET nTotalUp=_nTotalUp,nTotalPlayerCount=_nTotalPlayerCount,nTotalRound=_nTotalRound, nTotalbet=_nTotalbet,
            nBankResult=_nBankResult,nTax=_nTax
        WHERE ClubID=_clubid and tDate=_tDate;
	END IF;

	end loop;
					
	close cur;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totaldaojuditail
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totaldaojuditail`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_totaldaojuditail`()
begin
 
	 declare _curDiffDate VARCHAR(30) default CONCAT(CURDATE(),' 00:00:00');
	 declare _oldDiffDate VARCHAR(30) default CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00');
INSERT into table_totaldaojuditail (Todate,xianhua,jidan,feiwen,tuoxie,pijiu,zhadan )
SELECT 
		_oldDiffDate as Todate,
		IFNULL(sum(CASE when SUBSTR(szRemark FROM 1 FOR 1) =1 then Count ELSE 0 END ),0) as xianhua,
		IFNULL(sum(CASE when SUBSTR(szRemark FROM 1 FOR 1) =2 then Count ELSE 0 END ),0) as jidan,
		IFNULL(sum(CASE when SUBSTR(szRemark FROM 1 FOR 1) =3 then Count ELSE 0 END ),0) as feiwen,
		IFNULL(sum(CASE when SUBSTR(szRemark FROM 1 FOR 1) =4 then Count ELSE 0 END ),0) as tuoxie,
		IFNULL(sum(CASE when SUBSTR(szRemark FROM 1 FOR 1) =5 then Count ELSE 0 END ),0) as pijiu,
		IFNULL(sum(CASE when SUBSTR(szRemark FROM 1 FOR 1) =6 then Count ELSE 0 END ),0) as zhadan
 FROM table_diamondactionlog 
 WHERE szRemark like '%道具%'
 and ActionDate >=_oldDiffDate
 and ActionDate <_curDiffDate;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totalDayDiamondLog
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totalDayDiamondLog`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_totalDayDiamondLog`(
)
begin
					 
					declare _curDiffDate  varchar(30) default CONCAT(CURDATE(),' 00:00:00');

					


					
					declare _nPlayerID,_nCardCount int default 0; 
					declare _EnterPriseID varchar(40);
					declare _BalanceMoney int;
					
					declare done int default false;
					
					declare cur cursor for select nPlayerID, nCardCount FROM Table_User;
					declare cur1 cursor for select EnterPriseID, BalanceMoney FROM EnterPrise;
					
					
					declare continue handler for not found set done = true;   
					
					open cur;  
					
					read_loop:loop  
					
					fetch cur into _nPlayerID,_nCardCount;  
					
					if done then  
							leave read_loop;    
					end if;  
					
								insert into Table_Web_DayTotal(EnterPriseID, nPlayerId, typeTag, nDaimond, szTime) values(0, _nPlayerID,0,_nCardCount,CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00')); 
					
					end loop;
					
					close cur;
				




			
				set done=false;
				
				open cur1;  
				
				read_loop:loop  
				
				fetch cur1 into _EnterPriseID,_BalanceMoney;  
				
				if done then  
						leave read_loop;    
				end if;  
				
							insert into Table_Web_DayTotal(EnterPriseID, nPlayerId, typeTag, nDaimond, szTime) values(_EnterPriseID, 0,1,_BalanceMoney, CONCAT(date_sub(CURDATE(),interval 1 day) ,' 00:00:00'));
				
				end loop;
				
				close cur1;
				


			
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totaldiamonddetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totaldiamonddetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_totaldiamonddetail`()
begin

 declare 
  _PlayExpend
 ,_ShareExpend
 ,_RegistExpend
 ,_BindExpend 
 ,_totalzs
 ,_todaytotalzs
 ,_todaytotaldl
 ,_phonebindingzs
 ,_xp
 ,_nmatchall
 ,_shydj
 int default 0;
 
	 declare _curDiffDate VARCHAR(30) default CONCAT(CURDATE(),' 00:00:00');
	 declare _oldDiffDate VARCHAR(30) default CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00');
	 
 SELECT abs(sum(Count))  into _PlayExpend
 FROM table_diamondactionlog 
 WHERE (szRemark like '扣房卡%' OR szRemark like '代理开房%'  OR szRemark like '解散代理开房%')
 and ActionDate >=_oldDiffDate
 and ActionDate <_curDiffDate; 
  
 SELECT  abs(sum(Count))  into _xp
 FROM table_diamondactionlog 
 WHERE szRemark like '%洗牌%'
 and ActionDate >=_oldDiffDate
 and ActionDate <_curDiffDate;
  
 
SELECT abs(sum(Count)) into _nmatchall
from table_diamondactionlog
where (szRemark like '%参赛%' or szRemark like '%退赛%')
 and ActionDate >=_oldDiffDate
 and ActionDate <_curDiffDate;

 SELECT sum(Count)*-1 into _ShareExpend
 FROM table_diamondactionlog 
 WHERE szRemark like '微信分享%'
 and ActionDate >=_oldDiffDate
 and ActionDate <_curDiffDate;
  
 
 SELECT count(1)*-36  into _RegistExpend
 from table_user  
 WHERE szCreateTime >=_oldDiffDate
 and szCreateTime <_curDiffDate;
 
 
 SELECT abs(sum(Count))*-1  into _BindExpend
 FROM table_diamondactionlog 
 WHERE szRemark like '绑定推荐码%'
 and ActionDate >=_oldDiffDate
 and ActionDate <_curDiffDate;

SELECT abs(sum(Count))*-1  into _phonebindingzs
 FROM table_diamondactionlog 
 WHERE szRemark like '手机绑定%'
 and ActionDate >=_oldDiffDate
 and ActionDate <_curDiffDate;

SELECT abs(sum(Count))   into _shydj
 FROM table_diamondactionlog 
 WHERE szRemark like '%道具%'
 and ActionDate >=_oldDiffDate
 and ActionDate <_curDiffDate;
 
 SELECT SUM(nCardCount) into _totalzs
 FROM table_user ; 
 
 
 SELECT SUM(nCardCount) 
 into _todaytotalzs
 FROM table_user 
 where nPlayerId in
 (SELECT nPlayerId FROM table_web_loginlog 
 WHERE 1=1
 and szTime >=_oldDiffDate
 and szTime <_curDiffDate);
 
 
 SELECT count(DISTINCT nPlayerId)
 into _todaytotaldl
  FROM table_web_loginlog 
 WHERE 1=1
 and szTime >=_oldDiffDate
 and szTime <_curDiffDate;
 
 
 INSERT INTO table_web_diamonddetail (Todate,nnmj,ylmj,slmj,hxmj,ggmj,lzmj,glmj,wzmj,bzbp,sybp,sszbp,kj4,kj8,kj16,ddzbp)
 SELECT 
 date_sub(CURDATE(),interval 1 day) as Todate,
 sum(case when nGameId =1001 then 
        CASE WHEN sj=2 AND DD>=SJ  then rs*6 
 WHEN sj=2 AND DD<SJ  then rs*6/2 
 WHEN sj=4 AND DD>=SJ then rs*8
 WHEN sj=4 AND DD<SJ then rs*8/2
 WHEN sj=8 AND DD>=SJ then rs*16 
 WHEN sj=8 AND DD<SJ then rs*16/2
 end
         else 0 end 
     ) as nnmj,
 sum(case when nGameId =1002 then 
        CASE WHEN sj=2 AND DD>=SJ  then rs*6 
 WHEN sj=2 AND DD<SJ  then rs*6/2 
 WHEN sj=4 AND DD>=SJ then rs*8
 WHEN sj=4 AND DD<SJ then rs*8/2
 WHEN sj=8 AND DD>=SJ then rs*16 
 WHEN sj=8 AND DD<SJ then rs*16/2
 end
         else 0 end 
     ) as ylmj
 ,sum(case when nGameId =1003 then 
        CASE WHEN sj=2 AND DD>=SJ  then rs*6 
 WHEN sj=2 AND DD<SJ  then rs*6/2 
 WHEN sj=4 AND DD>=SJ then rs*8
 WHEN sj=4 AND DD<SJ then rs*8/2
 WHEN sj=8 AND DD>=SJ then rs*16 
 WHEN sj=8 AND DD<SJ then rs*16/2
 end
         else 0 end 
      ) as slmj 
 ,sum(case when nGameId =1004 then 
        CASE WHEN sj=2 AND DD>=SJ  then rs*6 
 WHEN sj=2 AND DD<SJ  then rs*6/2 
 WHEN sj=4 AND DD>=SJ then rs*8
 WHEN sj=4 AND DD<SJ then rs*8/2
 WHEN sj=8 AND DD>=SJ then rs*16 
 WHEN sj=8 AND DD<SJ then rs*16/2
 end
         else 0 end 
      ) as hxmj 
 ,sum(case when nGameId =1005 then 
        CASE WHEN sj=2 AND DD>=SJ  then rs*6 
 WHEN sj=2 AND DD<SJ  then rs*6/2 
 WHEN sj=4 AND DD>=SJ then rs*8
 WHEN sj=4 AND DD<SJ then rs*8/2
 WHEN sj=8 AND DD>=SJ then rs*16 
 WHEN sj=8 AND DD<SJ then rs*16/2
 end
         else 0 end 
     ) as ggmj 
 ,sum(case when nGameId =1007 then 
        CASE WHEN sj=2 AND DD>=SJ  then rs*6 
 WHEN sj=2 AND DD<SJ  then rs*6/2 
 WHEN sj=4 AND DD>=SJ then rs*8
 WHEN sj=4 AND DD<SJ then rs*8/2
 WHEN sj=8 AND DD>=SJ then rs*16 
 WHEN sj=8 AND DD<SJ then rs*16/2
 end
         else 0 end 
     ) as lzmj 
 ,sum(case when nGameId =1008 then 
        CASE WHEN sj=2 AND DD>=SJ  then rs*6 
 WHEN sj=2 AND DD<SJ  then rs*6/2 
 WHEN sj=4 AND DD>=SJ then rs*8
 WHEN sj=4 AND DD<SJ then rs*8/2
 WHEN sj=8 AND DD>=SJ then rs*16 
 WHEN sj=8 AND DD<SJ then rs*16/2
 end
         else 0 end 
     ) as glmj 
 ,sum(case when nGameId =1011 then 
        CASE WHEN sj=2 AND DD>=SJ  then rs*6 
 WHEN sj=2 AND DD<SJ  then rs*6/2 
 WHEN sj=4 AND DD>=SJ then rs*8
 WHEN sj=4 AND DD<SJ then rs*8/2
 WHEN sj=8 AND DD>=SJ then rs*16 
 WHEN sj=8 AND DD<SJ then rs*16/2
 end
         else 0 end 
     ) as wzmj     
 ,sum(case when nGameId =2001 then 
        CASE WHEN sj=7.5 AND DD>=SJ  then rs*4 
 WHEN sj=7.5 AND DD<SJ  then rs*4/2 
 WHEN sj=15 AND DD>=SJ then rs*4
 WHEN sj=15 AND DD<SJ then rs*4/2
 WHEN sj=30 AND DD>=SJ then rs*10
 WHEN sj=30 AND DD<SJ then rs*10/2
 WHEN sj=45 AND DD>=SJ then rs*14 
 WHEN sj=45 AND DD<SJ then rs*14/2
 WHEN sj=60 AND DD>=SJ then rs*20
 WHEN sj=60 AND DD<SJ then rs*20/2
 end
         else 0 end 
     ) as bzbp 
 ,sum(case when nGameId =2002 then 
        CASE WHEN sj=5 AND DD>=SJ  then rs*2 
 WHEN sj=5 AND DD<SJ  then rs*2/2 
 WHEN sj=10 AND DD>=SJ then rs*4
 WHEN sj=10 AND DD<SJ then rs*4/2
 WHEN sj=15 AND DD>=SJ then rs*6 
 WHEN sj=15 AND DD<SJ then rs*6/2
 end
         else 0 end 
     ) as sybp 
 ,sum(case when nGameId =2003 then 
        CASE WHEN sj=5 AND DD>=SJ  then rs*2 
 WHEN sj=5 AND DD<SJ  then rs*2/2 
 WHEN sj=10 AND DD>=SJ then rs*6
 WHEN sj=10 AND DD<SJ then rs*6/2
 WHEN sj=15 AND DD>=SJ then rs*8 
 WHEN sj=15 AND DD<SJ then rs*8/2
 WHEN sj=30 AND DD>=SJ then rs*16 
 WHEN sj=30 AND DD<SJ then rs*16/2
 end
         else 0 end 
     ) as sszbp  
 ,
 SUM( 
  CASE WHEN sj=2 AND DD>=SJ  then rs*6 
 WHEN sj=2 AND DD<SJ  then rs*6/2 
 ELSE 0  
 end  )
   AS kj4
 ,
 SUM(
  CASE 
 WHEN sj=4 AND DD>=SJ then rs*8
 WHEN sj=4 AND DD<SJ then rs*8/2
 ELSE 0  
 end )
 AS kj8
 ,
 SUM(
  CASE WHEN sj=8 AND DD>=SJ then rs*16 
 WHEN sj=8 AND DD<SJ then rs*16/2
 ELSE 0 
 end )
 AS kj16 
    ,sum(case when nGameId =2005 then 
        CASE WHEN sj=3 AND DD>=SJ  then 3*10 
 WHEN sj=3 AND DD<SJ  then 3*10/2 
 WHEN sj=6 AND DD>=SJ then 3*20
 WHEN sj=6 AND DD<SJ then 3*20/2
 WHEN sj=10 AND DD>=SJ then 3*30 
 WHEN sj=10 AND DD<SJ then 3*30/2
 end
         else 0 end 
     ) as ddzbp 
 FROM 
 (
 SELECT nGameId,nTableId,count(1) rs,max(nGameRound) dd,max(nTotalRound)/2 sj
 from table_web_zhanji 
 where szTime >=_oldDiffDate
 and szTime <_curDiffDate
   GROUP BY nGameId,nTableId 
 ) A ;
 
 update table_web_diamonddetail  set PlayExpend  =_PlayExpend ,ShareExpend =_ShareExpend,RegistExpend=_RegistExpend,BindExpend=_BindExpend
                                    ,totalzs=_totalzs,todaytotalzs=_todaytotalzs,todaytotaldl=_todaytotaldl,phonebindingzs=_phonebindingzs,xp=IFNULL(_xp,0),alltotall=IFNULL(_xp,0)+IFNULL(_PlayExpend,0)+IFNULL(_nmatchall,0)+IFNULL(_shydj,0),nmatchall=IFNULL(_nmatchall,0),shydj=IFNULL(_shydj,0)
  where Todate = date_sub(CURDATE(),interval 1 day);
 
 end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_totalgame
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_totalgame`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_totalgame`()
BEGIN

declare _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 00:00:00');
declare _EntDate  varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 23:59:59');

DECLARE _ClubRoom INT;
DECLARE _ClubRound INT;
DECLARE _diamondRoom int;
DECLARE _diamondRound int;
DECLARE _GoldRoom int;
DECLARE _GoldRound INT;
DECLARE _tDate DATE;


set _tDate=DATE_SUB(CURDATE(),INTERVAL 1 day);



select count(*),ifnull(sum(nTotalRound),0) INTO _diamondRoom,_diamondRound from table_web_zhanji where tEndTime BETWEEN _StartDate AND _EntDate;


select count(*) ,ifnull(sum(T.nRound),0) INTO _GoldRoom,_GoldRound
from Table_ClubGameScore T
 JOIN Table_ClubInfo C on T.nClubID=C.nClubID and C.bIsPublic=1 and C.nStatus=1
where T.tEndTime BETWEEN _StartDate AND _EntDate;


select count(*) ,ifnull(sum(T.nRound),0) INTO _ClubRoom,_ClubRound
from Table_ClubGameScore T
 JOIN Table_ClubInfo C on T.nClubID=C.nClubID and C.bIsPublic=0 and C.nStatus=1
where T.tEndTime BETWEEN _StartDate AND _EntDate;

 IF NOT EXISTS (select 1 from table_web_totalgame where	tDate=_tDate) THEN
         
        INSERT into table_web_totalgame(tDate,ClubRoom,ClubRound,DiamondRoom,DiamondRound,GoldRoom,GoldRound)
        VALUES(_tDate,_ClubRoom,_ClubRound,_diamondRoom,_diamondRound,_GoldRoom,_GoldRound);
   ELSE
         UPDATE table_web_totalgame 
         SET ClubRoom=_ClubRoom,ClubRound=_ClubRound,diamondRoom=_diamondRoom,diamondRound=_diamondRound,GoldRoom=_GoldRoom,GoldRound=_GoldRound
         WHERE tDate=_tDate;
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_totalgamedetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_totalgamedetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_totalgamedetail`()
BEGIN

declare _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 00:00:00');
declare _EndDate  varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 23:59:59');

DECLARE _clubid INT;
DECLARE _clubname VARCHAR(30);
DECLARE _Room INT DEFAULT 0;
DECLARE _Round INT DEFAULT 0;
DECLARE _tDate DATE;

			declare done int default false;
      
	    declare cur cursor for select nClubID ,szClubName FROM Table_ClubInfo where bIsPublic=0 and nStatus=1 order by nClubID;
			declare continue handler for not found set done = true;   
				
       
       set _tDate=DATE_SUB(CURDATE(),INTERVAL 1 day);

					open cur;  
					
					read_loop:loop  
					fetch cur into _clubid,_clubname;  
					if done then  
							leave read_loop;    
					end if;  
					  
				    iF NOT EXISTS ( select 1 from Table_ClubGameScore where nClubID=_clubid and tEndTime BETWEEN _StartDate AND _EndDate) THEN
				       set _Room=0;
				       SET _Round=0;
				     ELSE
               select COUNT(*),IFNULL(SUM(nRound),0) INTO _Room, _Round from Table_ClubGameScore where nClubID=_clubid and tEndTime BETWEEN _StartDate AND _EndDate;
		        END IF;
            IF NOT EXISTS (select 1 from table_web_totalgamedetail where	ClubID=_clubid and tDate=_tDate) THEN
               INSERT INTO table_web_totalgamedetail(tDate,clubname,clubid,Room,Round)
               VALUES(_tDate,_clubname,_clubid,_Room,_Round);
             ELSE
               UPDATE table_web_totalgamedetail 
               SET Room=_Room,Round=_Round
               WHERE ClubID=_clubid and tDate=_tDate;
            END IF;
					  
					end loop;
					
					close cur;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totalGameRoundStat
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totalGameRoundStat`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_totalGameRoundStat`(
)
begin
					 
					declare _curDiffDate  varchar(30) default CONCAT(CURDATE(),' 00:00:00');
					declare _tmpTableCount,_tmpRound,_gameId int default 0;

					
					declare done int default false;
					
					declare cur cursor for SELECT GameID FROM Table_GameID;
					
					
					declare continue handler for not found set done = true;   
					
					open cur;  
					
					read_loop:loop  
					
					fetch cur into _gameId;  
					
					if done then  
							leave read_loop;    
					end if;  
					
					 select count(TableId) into _tmpRound from Table_Web_UserZHangJi where Table_Web_UserZHangJi.szEndTime>= CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00')
																															AND Table_Web_UserZHangJi.szEndTime< _curDiffDate
																															AND Table_Web_UserZHangJi.nGameId = _gameId;
					
					select count(t.v) into _tmpTableCount from (
					select TableId as v from Table_Web_UserZHangJi where Table_Web_UserZHangJi.szEndTime>= CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00')
                                                                          AND Table_Web_UserZHangJi.szEndTime< _curDiffDate
                                                                          AND Table_Web_UserZHangJi.nGameId = _gameId group by TableId
                                                                          ) t;

					insert into Table_Web_GameRoundStat(szTime, GameID, TableCount, Round) values(CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00'), _gameId,_tmpTableCount,_tmpRound);


					
					end loop;
					
					close cur;

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_totalGold
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_totalGold`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_totalGold`()
BEGIN
  
	declare _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 00:00:00');
  declare _EndDate  varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 23:59:59');

  DECLARE _nType,_TotalAmount INT DEFAULT 0;
  DECLARE _szDesc VARCHAR(256);
  DECLARE _tDate DATE;
  DECLARE _nType1,_nType2,_nType3,_nType4,_nType5,_nType6,_nType7,_nType8,_nType9,_nType10,_nType11,_nType12 BIGINT DEFAULT 0;

  set _tDate=DATE_SUB(CURDATE(),INTERVAL 1 day);
  

    select IFNULL(sum(if(nType=1,nAmount,0)),0) ,
	  IFNULL(sum(if(nType=2,nAmount,0)),0),
	  IFNULL(sum(if(nType=3,nAmount,0)),0),
      IFNULL(sum(if(nType=4,nAmount,0)),0),
      IFNULL(sum(if(nType=5,nAmount,0)),0),
      IFNULL(sum(if(nType=6,nAmount,0)),0),
      IFNULL(sum(if(nType=7,nAmount,0)),0),
      IFNULL(sum(if(nType=8,nAmount,0)),0),
      IFNULL(sum(if(nType=9,nAmount,0)),0),
      IFNULL(sum(if(nType=10,nAmount,0)),0),
      IFNULL(sum(if(nType=11,nAmount,0)),0),
      IFNULL(sum(if(nType=12,nAmount,0)),0) 
      INTO _nType1,_nType2,_nType3,_nType4,_nType5,_nType6,_nType7,_nType8,_nType9,_nType10,_nType11,_nType12
      from table_clubloggold 
       WHERE CreateTime >= _StartDate AND CreateTime<=_EndDate;

  IF NOT EXISTS (select 1 from table_web_totalGold where	tDate=_tDate) THEN
         
      INSERT INTO table_web_totalGold(tDate,nType1,nType2,nType3,nType4,nType5,nType6,nType7,nType8,nType9,nType10,nType11,nType12)
       VALUES(_tDate,_nType1,_nType2,_nType3,_nType4,_nType5,_nType6,_nType7,_nType8,_nType9,_nType10,_nType11,_nType12);
     ELSE
      update table_web_totalGold set nType1=_nType1,nType2=_nType2,nType3=_nType3,nType4=_nType4,nType5=_nType5,nType6=_nType6,
             nType7=_nType7,nType8=_nType8,nType9=_nType9,nType10=_nType10,nType11=_nType11,nType12=_nType12
          where	tDate=_tDate;

  end IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totalHaveLog
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totalHaveLog`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pr_totalHaveLog`(
)
begin
		
		set @CurdateComon=CURDATE();
		
    set @curDiffDate=CONCAT(@CurdateComon,' 00:00:00');
		
		set @startszTime=(CONCAT(date_sub(@CurdateComon,interval 1 day),' 00:00:00'));
		if not exists(select Idx from Table_Web_HaveLog where szTime = @startszTime) then
				
				SELECT count(nPlayerID) into @dayAddCount FROM Table_User tuser where  tuser.bRobot=0 and tuser.szCreateTime >=@startszTime AND tuser.szCreateTime <@curDiffDate;
				
				SELECT count(nPlayerID) into @dayAddCountValid 
				FROM Table_User tuser where  tuser.bRobot=0 and tuser.szCreateTime >=@startszTime AND tuser.szCreateTime <@curDiffDate
															and exists (SELECT log.nPlayerID FROM table_clubgamescoredetail log 
																					where log.bRobot=0 and log.nPlayerID=tuser.nPlayerId and log.tEndTime >= @startszTime AND log.tEndTime < @curDiffDate
																				 );
				insert into Table_Web_HaveLog(szTime,nextHave,threeHave,sevenHave,monthHave,dayAddCount,dayAddCountValid) values(@startszTime,-1,-1,-1,-1,@dayAddCount,@dayAddCountValid);
		end if;


   
				 set @szCreateTime2=(CONCAT(date_sub(@CurdateComon,interval 2 day),' 00:00:00'));
				 set @szCreateTime1=(CONCAT(date_sub(@CurdateComon,interval 1 day),' 00:00:00'));
				 SELECT dayAddCount,dayAddCountValid into @AddUserCount1,@AddUserCountValid1 FROM Table_Web_HaveLog where  szTime=@szCreateTime2 limit 0,1;
				 
				 if @AddUserCount1>0 then 
							select count(tuser.nPlayerId) into @totalLoginCount1 from Table_User tuser 
							where  tuser.bRobot=0 and tuser.szCreateTime >=@szCreateTime2 AND tuser.szCreateTime <@szCreateTime1
																		and exists (SELECT log.nPlayerID FROM Table_Web_LoginLog log 
																								where log.nPlayerId=tuser.nPlayerId and log.szTime >= @szCreateTime1 AND log.szTime < @curDiffDate
																							 );
							set @tmpNextRate1 = TRUNCATE((@totalLoginCount1 * 100)/@AddUserCount1,0);
							update Table_Web_HaveLog set nextHave = @tmpNextRate1 where  szTime =@szCreateTime2;
				 end if;
				
				  if @AddUserCountValid1>0 then 
							select count(tuser.nPlayerId) into @totalLoginCount1 from Table_User tuser 
							where  tuser.bRobot=0 and tuser.szCreateTime >=@szCreateTime2 AND tuser.szCreateTime <@szCreateTime1
																		and exists (SELECT log.nPlayerID FROM table_clubgamescoredetail log 
																								where log.bRobot=0 and log.nPlayerID=tuser.nPlayerId and log.tEndTime >= @szCreateTime1 AND log.tEndTime < @curDiffDate
																							 );
							set @tmpNextRate1 = TRUNCATE((@totalLoginCount1 * 100)/@AddUserCountValid1,0);
							update Table_Web_HaveLog set nextHaveValid = @tmpNextRate1 where  szTime =@szCreateTime2;
				 end if;
	


	
				set @szCreateTime4=(CONCAT(date_sub(@CurdateComon,interval 4 day),' 00:00:00'));
				set @szCreateTime3=(CONCAT(date_sub(@CurdateComon,interval 3 day),' 00:00:00'));
				SELECT dayAddCount,dayAddCountValid into @AddUserCount2,@AddUserCountValid2 FROM Table_Web_HaveLog where  szTime=@szCreateTime4 limit 0,1;
				
				if @AddUserCount2>0 then 
							select count(tuser.nPlayerId) into @totalLoginCount2 from Table_User tuser 
							where  tuser.bRobot=0 and tuser.szCreateTime >=@szCreateTime4 AND tuser.szCreateTime <@szCreateTime3
																		and exists (SELECT log.nPlayerID FROM Table_Web_LoginLog log 
																								where log.nPlayerId=tuser.nPlayerId and log.szTime >= @szCreateTime1 AND log.szTime < @curDiffDate
																							 );				
							set @tmpNextRate2 = TRUNCATE((@totalLoginCount2 * 100)/@AddUserCount2,0);
							update Table_Web_HaveLog set threeHave = @tmpNextRate2 where  szTime =@szCreateTime4;
				 end if;
				
				if @AddUserCountValid2>0 then 
							select count(tuser.nPlayerId) into @totalLoginCount2 from Table_User tuser 
							where  tuser.bRobot=0 and tuser.szCreateTime >=@szCreateTime4 AND tuser.szCreateTime <@szCreateTime3
																		and exists (SELECT log.nPlayerID FROM table_clubgamescoredetail log 
																								where log.bRobot=0 and log.nPlayerID=tuser.nPlayerId and log.tEndTime >= @szCreateTime1 AND log.tEndTime < @curDiffDate
																							 );				
							set @tmpNextRate2 = TRUNCATE((@totalLoginCount2 * 100)/@AddUserCountValid2,0);
							update Table_Web_HaveLog set threeHaveValid = @tmpNextRate2 where  szTime =@szCreateTime4;
				 end if;
	

	
					set @szCreateTime8=(CONCAT(date_sub(@CurdateComon,interval 8 day),' 00:00:00'));
					set @szCreateTime7=(CONCAT(date_sub(@CurdateComon,interval 7 day),' 00:00:00'));		
					SELECT dayAddCount,dayAddCountValid into @AddUserCount3,@AddUserCountValid3 FROM Table_Web_HaveLog where  szTime=@szCreateTime8 limit 0,1;
					
					if @AddUserCount3>0 then 
							select count(tuser.nPlayerId) into @totalLoginCount3 from Table_User tuser 
							where  tuser.bRobot=0 and tuser.szCreateTime >=@szCreateTime8 AND tuser.szCreateTime <@szCreateTime7
																		and exists (SELECT log.nPlayerID FROM Table_Web_LoginLog log 
																								where log.nPlayerId=tuser.nPlayerId and log.szTime >= @szCreateTime1 AND log.szTime < @curDiffDate
																							 );				
							set @tmpNextRate3 = TRUNCATE((@totalLoginCount3 * 100)/@AddUserCount3,0);
							update Table_Web_HaveLog set sevenHave = @tmpNextRate3 where  szTime =@szCreateTime8;
				 end if;
				
					if @AddUserCountValid3>0 then 
						select count(tuser.nPlayerId) into @totalLoginCount3 from Table_User tuser 
						where  tuser.bRobot=0 and tuser.szCreateTime >=@szCreateTime8 AND tuser.szCreateTime <@szCreateTime7
																	and exists (SELECT log.nPlayerID FROM table_clubgamescoredetail log 
																								where log.bRobot=0 and log.nPlayerID=tuser.nPlayerId and log.tEndTime >= @szCreateTime1 AND log.tEndTime < @curDiffDate
																						 );				
						set @tmpNextRate3 = TRUNCATE((@totalLoginCount3 * 100)/@AddUserCountValid3,0);
						update Table_Web_HaveLog set sevenHaveValid = @tmpNextRate3 where  szTime =@szCreateTime8;
				 end if;
	

	
					set @monthTime=date_sub(@CurdateComon,interval 1 month);
					set @szCreateTime31=CONCAT(date_sub(@monthTime,interval 1 day),' 00:00:00');
					set @szCreateTime30=CONCAT(@monthTime,' 00:00:00');
					SELECT dayAddCount,dayAddCountValid into @AddUserCount4,@AddUserCountValid4 FROM Table_Web_HaveLog where  szTime=@szCreateTime31 limit 0,1;
					
					if @AddUserCount4>0 then 
							select count(tuser.nPlayerId) into @totalLoginCount4 from Table_User tuser 
							where  tuser.bRobot=0 and tuser.szCreateTime >=@szCreateTime31 AND tuser.szCreateTime <@szCreateTime30
																		and exists (SELECT log.nPlayerID FROM Table_Web_LoginLog log 
																								where log.nPlayerId=tuser.nPlayerId and log.szTime >= @szCreateTime1 AND log.szTime < @curDiffDate
																							 );				
							set @tmpNextRate4 = TRUNCATE((@totalLoginCount4 * 100)/@AddUserCount4,0);
							update Table_Web_HaveLog set monthHave = @tmpNextRate4 where  szTime =@szCreateTime31;
					end if;
					
						if @AddUserCountValid4>0 then 
							select count(tuser.nPlayerId) into @totalLoginCount4 from Table_User tuser 
							where  tuser.bRobot=0 and tuser.szCreateTime >=@szCreateTime31 AND tuser.szCreateTime <@szCreateTime30
																		and exists (SELECT log.nPlayerID FROM table_clubgamescoredetail log 
																								where log.bRobot=0 and log.nPlayerID=tuser.nPlayerId and log.tEndTime >= @szCreateTime1 AND log.tEndTime < @curDiffDate
																							 );				
							set @tmpNextRate4 = TRUNCATE((@totalLoginCount4 * 100)/@AddUserCountValid4,0);
							update Table_Web_HaveLog set monthHaveValid = @tmpNextRate4 where  szTime =@szCreateTime31;
					end if;
	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totalMatchAward
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totalMatchAward`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_totalMatchAward`()
BEGIN
declare _YDate varchar(30) default date_sub(CURDATE(),INTERVAL 1 DAY);
INSERT into table_totalMatchAward(totime,tMatchType,1Y,5Y,10Y,20Y,50Y,1000d,1YL,5YL,10YL,20YL,50YL,1000DL,Total)
SELECT 

 _YDate CreateTime,"人满比赛" as 比赛类型,


 IFNULL(sum(case when B.nAwardNum =1  and B.nAwardType=3 THEN 1 else 0 end),0)          as  一元奖励,

 0 as 5元奖励,

 IFNULL(sum(case when B.nAwardNum =10 and B.nAwardType=3 THEN 1 else 0 end),0)           as  10元奖励,

 0 as 20元奖励,

 0 as 50元奖励,

 IFNULL(sum(case when B.nAwardType=2 THEN 1 else 0 end),0)   as  1000老友豆,

 IFNULL(sum(case when B.nAwardNum =1  and B.nAwardType=3 THEN 1 else 0 end)*1,0) as  一元奖励价值,

 0 as 5元奖励价值,

 IFNULL(sum(case when B.nAwardNum =10 and B.nAwardType=3 THEN 1 else 0 end)*10,0) as  10元奖励价值,

 0 as 20元奖励价值,

 0 as 50元奖励价值,

 IFNULL(sum(case when B.nAwardType=2 THEN 1 else 0 end)*1,0) as  1000老友豆 ,

 IFNULL(sum(case when B.nAwardNum =1  and B.nAwardType=3 THEN 1 else 0 end)*1,0)+
 IFNULL(sum(case when B.nAwardNum =10 and B.nAwardType=3 THEN 1 else 0 end)*10,0)
 + IFNULL(sum(case when B.nAwardType=2 THEN 1 else 0 end)*1,0) as Total
 
FROM table_match_userrec  A LEFT JOIN table_user_rewards B ON A.nMsgId= B.nMsgId
WHERE nMatchType =1   
and nSatate =5        
AND DATE_FORMAT(CreateTime,'%Y-%m-%d')=_YDate
union all
SELECT 
_YDate CreateTime,"定时开赛" as 比赛类型,

 ifnull(sum(case when B.nAwardNum =1 THEN 1 else 0 end),0)  as 一元奖励,

 ifnull(sum(case when B.nAwardNum =5 THEN 1 else 0 end),0)  as 5元奖励,

 ifnull(sum(case when B.nAwardNum =10 THEN 1 else 0 end),0) as 10元奖励,

 ifnull(sum(case when B.nAwardNum =20 THEN 1 else 0 end),0) as 20元奖励,

 ifnull(sum(case when B.nAwardNum =50 THEN 1 else 0 end),0) as 50元奖励,

 0 as 1000老友豆,

 ifnull(sum(case when B.nAwardNum =1 THEN 1 else 0 end)*1,0)  as  一元奖励价值,

 ifnull(sum(case when B.nAwardNum =5 THEN 1 else 0 end)*5,0)  as  5元奖励价值,

 ifnull(sum(case when B.nAwardNum =10 THEN 1 else 0 end)*10,0) as  10元奖励价值,

 ifnull(sum(case when B.nAwardNum =20 THEN 1 else 0 end)*20,0) as  20元奖励价值,

 ifnull(sum(case when B.nAwardNum =50 THEN 1 else 0 end)*50,0) as  50元奖励价值,

 0 as 1000老友豆,

 ifnull(sum(B.nAwardNum),0)
FROM table_match_userrec A 
LEFT JOIN table_user_rewards B ON A.nMsgId= B.nMsgId
WHERE nMatchType =2   
and nSatate =5 
and B.nAwardType=3
and a.nIsRboot =0
AND DATE_FORMAT(CreateTime,'%Y-%m-%d')=_YDate;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totalmatchrec
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totalmatchrec`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_totalmatchrec`()
BEGIN
declare _YDate varchar(30) default date_sub(CURDATE(),INTERVAL 1 DAY);
INSERT INTO table_totalmatchrec (totime,tMatchType,zszkscs,zszcsrs,zszbmfy,zszhjrs,zszbmrs,zsztsrs,zszqsrs,zsrebocount )

	SELECT _YDate as totime,T.比赛类型,COUNT(1) AS 钻石总参赛数,SUM(T.参赛人数),SUM(T.总报名费),SUM(T.获奖人数),SUM(T.报名人数),SUM(T.退赛人数),SUM(T.缺赛人数),SUM(T.机器人数量)
from 
(


		SELECT a.szMatchId,
					case when a.nMatchType =1 then '人满比赛' 
							 when a.nMatchType =2  then '定时开赛' 
					end as 比赛类型	 
					 ,a.szMatchName as 比赛名称
					 ,case when a.nPayType =1 then '钻石场' when a.nPayType =2 then '老友豆场' end as 支付类型
					 ,a.nPayNum as 报名费用
					 ,count(DISTINCT CASE when  nSatate=4 AND nIsRboot =0 then B.nPlayerId else null end) as 参赛人数
					 ,SUM(CASE when nSatate=5 AND nMsgId<>0 then 1 else 0 end) as 获奖人数
					 ,CASE 
							WHEN nGameType = 1001 THEN '南宁麻将'
							WHEN nGameType = 1002 THEN '玉林麻将'
							WHEN nGameType = 1003 THEN '上林麻将'
							WHEN nGameType = 1004 THEN '横县麻将'
							WHEN nGameType = 1005 THEN '贵港麻将'
							WHEN nGameType = 1007 THEN '柳州麻将'
							WHEN nGameType = 1008 THEN '桂林麻将'
							WHEN nGameType = 1011 THEN '梧州麻将'
							WHEN nGameType = 2001 THEN '八张'
							WHEN nGameType = 2002 THEN '水鱼'
							WHEN nGameType = 2003 THEN '十三张'
							WHEN nGameType = 2005 THEN '斗地主'
						END AS 游戏类型
					 ,a.BeginTime as 开始时间
					 ,a.EndTime   as  结束时间
					 ,timediff(a.EndTime,a.BeginTime) as '比赛时间'
					 ,a.nPayNum*count(DISTINCT CASE when nSatate=4 AND nIsRboot =0 then B.nPlayerId else null end)+a.nPayNum*count(DISTINCT CASE when nSatate=3 then B.nPlayerId else NULL end ) as 总报名费
					 ,(count(DISTINCT CASE when nSatate=2 then B.nPlayerId else NULL end )-D.nPlayerId)/count(DISTINCT CASE when nSatate=1 then B.nPlayerId else NULL end)*100*1 as 退赛率
					 ,count(DISTINCT CASE when nSatate=1 then B.nPlayerId else NULL end) as 报名人数
					 ,count(DISTINCT CASE when nSatate=3 then B.nPlayerId else NULL end ) as 缺赛人数
					 ,count(DISTINCT CASE when nSatate=2 then B.nPlayerId else NULL end )-D.nPlayerId as 退赛人数
					 ,count(CASE when nSatate=5 AND nIsRboot=1 then B.nPlayerId else NULL end )as 机器人数量
		FROM
				table_match_matchrec a 
				LEFT JOIN table_match_userrec b on a.szMatchId = b.szMatchId
				LEFT JOIN 
				(
						SELECT M.szMatchId,
							COUNT(DISTINCT   M.nPlayerId ) nPlayerId
						FROM 
							(
									SELECT DISTINCT 
											e.szMatchId,
											nPlayerId    
									from table_match_matchrec e
									LEFT JOIN table_match_userrec f on e.szMatchId = f.szMatchId
									where nSatate=4   
							) M
				INNER JOIN 
							(
									SELECT DISTINCT
											e.szMatchId,
											nPlayerId    
									from table_match_matchrec e
									LEFT JOIN table_match_userrec f on e.szMatchId = f.szMatchId
									where nSatate=2   
							) N
						ON M.szMatchId = N.szMatchId AND M.nPlayerId = N.nPlayerId
						GROUP BY M.szMatchId
				) D ON D.szMatchId = A.szMatchId
				where DATE_FORMAT(a.BeginTime,'%Y-%m-%d')=_YDate
				GROUP BY 
				a.szMatchId,case when a.nMatchType = 1 then '人满比赛' when a.nMatchType = 2  then '定时开赛'end, a.szMatchName
				,case when a.nPayType = 1 then '钻石场' when a.nPayType = 2 then '老友豆场'end
				,nGameType
				,a.BeginTime
				,a.EndTime
				,timediff(a.EndTime, a.BeginTime)
) T
GROUP BY T.比赛类型	;
		
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totalOnlineHours
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totalOnlineHours`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_totalOnlineHours`(
)
begin
declare _tmpTotal int  default 0;
select count(*)+1000  into _tmpTotal from Table_User where onlineSta = 1 and (nPlayerId >6768 or nPlayerId < 5889);
insert into Table_Web_TotalInLine_hours(szTime, `online`) values(NOW(), _tmpTotal);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totalOnlineMin
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totalOnlineMin`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `Pr_totalOnlineMin`(
		
)
begin
declare _tmpTotal int  default 0;
select count(*)+1000  into _tmpTotal from Table_User 
where onlineSta = 1 and bRobot=0;

insert into Table_Web_TotalInLine_min(szTime, `online`) values(NOW(), _tmpTotal);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totalOnlineMin2
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totalOnlineMin2`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_totalOnlineMin2`( in $total int )
begin
insert into Table_Web_TotalInLine_min(szTime, `online`) values(NOW(), $total);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_totalprofit
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_totalprofit`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_totalprofit`()
BEGIN
   
	declare _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 00:00:00');
  declare _EndDate  varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 23:59:59');

  DECLARE _GameGive,_GameGive100 INT DEFAULT 0;
  DECLARE _dDate DATE;

  set _dDate=DATE_SUB(CURDATE(),INTERVAL 1 day);
 
  select IFNULL(SUM(nAmount),0) INTO  _GameGive 
  from table_ClubLogScore 
  where nType=7 and CreateTime >=_StartDate and CreateTime <=_EndDate;
  select IFNULL(SUM(nAmount),0) INTO  _GameGive100
  from table_ClubLogScore 
  where nType=12 and CreateTime >=_StartDate and CreateTime <=_EndDate;
  IF _GameGive IS NULL or LENGTH(_GameGive)=0 THEN
     set _GameGive=0;
   end if;
  IF _GameGive100 IS NULL or LENGTH(_GameGive100)=0 THEN
     set _GameGive100=0;
  end if;
  IF NOT EXISTS (select 1 from table_web_totalprofit where	tDate=_dDate) THEN
         INSERT INTO table_web_totalprofit(tDate,GameGive,GameGive100)
         VALUES(_dDate,_GameGive,_GameGive100);
     ELSE
         UPDATE table_web_totalprofit SET GameGive=_GameGive, GameGive100=_GameGive100
         WHERE tDate=_dDate;
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_totalprofitdetail
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_totalprofitdetail`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_totalprofitdetail`()
BEGIN
	 
	declare _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 00:00:00');
  declare _EndDate  varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 23:59:59');

  DECLARE _GameGive,_GameGive100,_nWinnerRoyaltyRate,_nBigRoomRoyaltyRate INT DEFAULT 0;
  DECLARE _clubid INT;
  DECLARE _szClubName VARCHAR(32);
  DECLARE _dDate DATE;

   	declare done int default false;
      
	    declare cur cursor for select DISTINCT clubid from table_ClubLogScore where (nType=7 or nType=12) and CreateTime >=_StartDate and CreateTime <=_EndDate;
			declare continue handler for not found set done = true;   
				
       
       set _dDate=DATE_SUB(CURDATE(),INTERVAL 1 day);

					open cur;  
					
					read_loop:loop  
					fetch cur into _clubid;  
					if done then  
							leave read_loop;    
					end if;  
					  
           SELECT szClubName,nWinnerRoyaltyRate,nBigRoomRoyaltyRate 
           INTO _szClubName,_nWinnerRoyaltyRate,_nBigRoomRoyaltyRate
           from table_clubinfo where nClubID=_clubid;

				    
           select IFNULL(SUM(nAmount),0) INTO  _GameGive 
              from table_ClubLogScore 
             where nType=7 and clubid=_clubid  and CreateTime >=_StartDate and CreateTime <=_EndDate;
           select IFNULL(SUM(nAmount),0) INTO  _GameGive100
           from table_ClubLogScore 
           where nType=12 and clubid=_clubid  and CreateTime >=_StartDate and CreateTime <=_EndDate;
           IF _GameGive IS NULL or LENGTH(_GameGive)=0 THEN
            set _GameGive=0;
              end if;
           IF _GameGive100 IS NULL or LENGTH(_GameGive100)=0 THEN
             set _GameGive100=0;
           end if;

           IF NOT EXISTS (select 1 from table_web_totalprofitdetail where clubid=_clubid and	tDate=_dDate) THEN
         INSERT INTO table_web_totalprofitdetail(tDate,ClubID,szClubName,nWinnerRoyaltyRate,GameGive,nBigRoomRoyaltyRate,GameGive100)
         VALUES(_dDate,_clubid,_szClubName,_nWinnerRoyaltyRate,_GameGive,_nBigRoomRoyaltyRate,_GameGive100);
     ELSE
         UPDATE table_web_totalprofitdetail SET nWinnerRoyaltyRate=_nWinnerRoyaltyRate,nBigRoomRoyaltyRate=_nBigRoomRoyaltyRate,GameGive=_GameGive, GameGive100=_GameGive100
         WHERE clubid=_clubid and tDate=_dDate;
  END IF;
 
					end loop;
					
					close cur; 

 
  

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_totalrow
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_totalrow`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_totalrow`(out `$counts` bigint)
RT:BEGIN
    
   DECLARE _TABLE_NAME VARCHAR(30);
   DECLARE _counts BIGINT DEFAULT 0;


			declare done int default false;
      declare cur cursor for select TABLE_NAME from information_schema.`TABLES` where TABLE_SCHEMA='niuniu_db';
			declare continue handler for not found set done = true;   
			






			open cur;  
					
				read_loop:loop  
				fetch cur into _TABLE_NAME;  
				if done then  
					leave read_loop;    
				end if;  
				    set @strSqlCount=CONCAT('select count(*) into @tmps from ',_TABLE_NAME);
					prepare totalCount from @strSqlCount;
					execute totalCount;
					
					set _counts=_counts+@tmps;

					
				end loop;
					
			close cur;


			set $counts=_counts;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totalscore
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totalscore`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_totalscore`(
)
begin

INSERT INTO table_totalscore (totime,nPlayerID,mjdjjf,pkdjjf,dyjjf,bsjf,qdjf,czjf,hdjf,qtjf,jrccjf,jrxhjf,jfye,mjnnjf,mjyljf,mjsljf,mjhxjf,mjggjf,mjlljf
						,mjgljf,mjwzjf,pkbzjf,pksyjf,pkssjf,DYJnnjf,DYJyljf,DYJsljf,DYJhxjf,DYJggjf,DYJlljf,DYJgljf,DYJwzjf,DYJbzjf,DYJsyjf,DYJssjf,qdjf7,qdjf15,qdjf20)
SELECT 
date_format(nActTime,'%Y-%m-%d') as ndate , nPlayerID
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)<2000 then nScore ELSE 0 end) as mjdjjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)>2000 then nScore ELSE 0 end) as pkdjjf
,sum(case when nType=6 then nScore ELSE 0 end) as dyjjf
,sum(case when nType=7 or nType=8 then nScore ELSE 0 end) as bsjf
,sum(case when nType<=3 then nScore ELSE 0 end) as qdjf
,sum(case when nType =4 then nScore ELSE 0 end) as czjf
,0 as hdjf
,0 as qtjf
,sum(case when nType <20 then nScore ELSE 0 end) as jrccjf
,sum(case when nType >=20 then nScore ELSE 0 end) as jrxhjf
,sum(nScore) as jfye

,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1001  then nScore ELSE 0 end) as mjnnjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1002  then nScore ELSE 0 end) as mjyljf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1003  then nScore ELSE 0 end) as mjsljf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1004  then nScore ELSE 0 end) as mjhxjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1005  then nScore ELSE 0 end) as mjggjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1007  then nScore ELSE 0 end) as mjlljf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1008  then nScore ELSE 0 end) as mjgljf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=1011  then nScore ELSE 0 end) as mjwzjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=2001  then nScore ELSE 0 end) as pkbzjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=2002  then nScore ELSE 0 end) as pksyjf
,sum(case when nType=5 and SUBSTR(szDesc FROM 1 FOR 4)=2003  then nScore ELSE 0 end) as pkssjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1001  then nScore ELSE 0 end) as DYJnnjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1002  then nScore ELSE 0 end) as DYJyljf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1003  then nScore ELSE 0 end) as DYJsljf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1004  then nScore ELSE 0 end) as DYJhxjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1005  then nScore ELSE 0 end) as DYJggjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1007  then nScore ELSE 0 end) as DYJlljf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1008  then nScore ELSE 0 end) as DYJgljf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=1011  then nScore ELSE 0 end) as DYJwzjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=2001  then nScore ELSE 0 end) as DYJbzjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=2002  then nScore ELSE 0 end) as DYJsyjf
,sum(case when nType=6 and SUBSTR(szDesc FROM 1 FOR 4)=2003  then nScore ELSE 0 end) as DYJssjf
,sum(case when nType=1 then nScore ELSE 0 end) as qdjf7
,sum(case when nType=2 then nScore ELSE 0 end) as qdjf15
,sum(case when nType=3 then nScore ELSE 0 end) as qdjf20

from table_score_log 
where date_format(nActTime,'%Y-%m-%d') =DATE_SUB(CURDATE(),INTERVAL 1 DAY)
GROUP BY date_format(nActTime,'%Y-%m-%d'),nPlayerID

;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_totalTableLog
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_totalTableLog`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_totalTableLog`(
)
begin

declare _tmpStartTable,_tmpJushu,_tmpStartTableMNN,_tmpJushuMNN,_tmpStartTableMYL,_tmpJushuMYL
,_tmpStartTableMSL,_tmpJushuMSL,_tmpStartTableMHX,_tmpJushuMHX,_tmpStartTableMGG,_tmpJushuMGG
,_tmpStartTableMLS,_tmpJushuMLS,_tmpStartTableMLZ,_tmpJushuMLZ,_tmpStartTableMGL,_tmpJushuMGL
,_tmpStartTablePBZ,_tmpJushuPBZ,_tmpStartTablePSY,_tmpJushuPSY,_tmpStartTablePSSZ,_tmpJushuPSSZ,_playerId
,_tmpJushuMWZ,_tmpStartTableMWZ,_tmpStartTablePDDZ,_tmpJushuPDDZ
 int default 0;


declare _playerNickName varchar(64) default '';

declare _curDiffDate VARCHAR(30) default CONCAT(CURDATE(),' 00:00:00');

declare _RechargeTotal decimal(18,2) default 0; 

declare _PrepaidValue  int default 0; 

declare _Dayrecharge int default 0; 

declare _DateLanding int default 0; 

declare _DayToll int default 0; 

declare _NewDaypeople int default 0; 

declare _oldDiffDate VARCHAR(30) default CONCAT(date_sub(CURDATE(),interval 1 day),' 00:00:00');



declare done int default false;

declare cur cursor for SELECT nPlayerID FROM Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
and szEndTime< _curDiffDate group by nPlayerId;

declare continue handler for not found set done = true; 

open cur;  

read_loop:loop  

fetch cur into _playerId;  

if done then  
leave read_loop;    
end if;  

select  count(*) into _tmpJushu from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate
                                                                  AND nPlayerID= _playerId;

select count(*) into _tmpStartTable from Table_Web_UserZHangJi where szEndTime>=_oldDiffDate
AND szEndTime< _curDiffDate 
AND nPlayerID =_playerId 
AND szPlayerId1 = nPlayerID 
AND jushu = 1;

select count(*) into _tmpJushuMNN from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=1001 
                                                                  AND nPlayerID =_playerId;

  select count(*) into _tmpStartTableMNN from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
AND szEndTime< _curDiffDate
AND nPlayerID = _playerId
AND szPlayerId1 = nPlayerID
AND jushu = 1 AND nGameId=1001;

select count(*) into _tmpJushuMYL from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=1002
                                                                  AND nPlayerID = _playerId;

select count(*) into _tmpStartTableMYL from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
AND szEndTime< _curDiffDate
AND nPlayerID = _playerId 
AND szPlayerId1 = nPlayerID
AND jushu = 1 AND nGameId=1002;

select count(*) into _tmpJushuMSL from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=1003
                                                                  AND nPlayerID =_playerId ;

select count(*) into _tmpStartTableMSL from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate 
AND szEndTime< _curDiffDate
AND nPlayerID =_playerId 
AND szPlayerId1 = nPlayerID
AND jushu = 1 AND nGameId=1003;

select count(*) into _tmpJushuMHX from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=1004
                                                                  AND nPlayerID =_playerId;

select count(*) into _tmpStartTableMHX from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
AND szEndTime< _curDiffDate
AND nPlayerID =_playerId
AND szPlayerId1 =nPlayerID
AND jushu = 1 AND nGameId=1004;

select count(*) into _tmpJushuMGG from Table_Web_UserZHangJi where szEndTime>=_oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=1005
                                                                  AND nPlayerID =_playerId;

select count(*) into _tmpStartTableMGG from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate 
AND szEndTime< _curDiffDate
AND nPlayerID =_playerId
AND szPlayerId1 = nPlayerID
AND jushu = 1 AND nGameId=1005;

select count(*) into _tmpJushuMLS from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=1006
                                                                  AND nPlayerID = _playerId;

select count(*) into _tmpStartTableMLS from Table_Web_UserZHangJi where szEndTime>=_oldDiffDate
AND szEndTime< _curDiffDate
AND nPlayerID =_playerId
AND szPlayerId1 = nPlayerID
AND jushu = 1 AND nGameId=1006;

select count(*) into _tmpJushuMLZ from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=1007
                                                                  AND nPlayerID =_playerId;

select count(*) into _tmpStartTableMLZ from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
AND szEndTime< _curDiffDate
AND nPlayerID =_playerId
AND szPlayerId1 =nPlayerID
AND jushu = 1 AND nGameId=1007;

select count(*) into _tmpJushuMGL from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=1008
                                                                  AND nPlayerID =_playerId;

select count(*) into _tmpStartTableMGL from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
AND szEndTime< _curDiffDate
AND nPlayerID =_playerId
AND szPlayerId1 = nPlayerID
AND jushu = 1 AND nGameId=1008;

           select count(*) into _tmpJushuMWZ from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=1011
                                                                  AND nPlayerID =_playerId;

select count(*) into _tmpStartTableMWZ from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
AND szEndTime< _curDiffDate
AND nPlayerID =_playerId
AND szPlayerId1 = nPlayerID
AND jushu = 1 AND nGameId=1011;


select count(*) into _tmpJushuPBZ from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=2001
                                                                  AND nPlayerID = _playerId;

select count(*) into _tmpStartTablePBZ from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate 
AND szEndTime< _curDiffDate
AND nPlayerID = _playerId 
AND szPlayerId1 =nPlayerID
AND jushu = 1 AND nGameId=2001;

select count(*) into _tmpJushuPSY from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=2002
                                                                  AND nPlayerID = _playerId;

select count(*) into _tmpStartTablePSY from Table_Web_UserZHangJi where szEndTime>=_oldDiffDate 
AND szEndTime< _curDiffDate
AND nPlayerID = _playerId
AND szPlayerId1 = nPlayerID
AND jushu = 1 AND nGameId=2002;

select count(*) into _tmpJushuPSSZ from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=2003
                                                                  AND nPlayerID = _playerId;

select count(*) into _tmpStartTablePSSZ from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
AND szEndTime< _curDiffDate
AND nPlayerID = _playerId 
AND szPlayerId1 = nPlayerID
AND jushu = 1 AND nGameId=2003;

select count(*) into _tmpJushuPDDZ from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
                                                                  AND szEndTime< _curDiffDate AND nGameId=2005
                                                                  AND nPlayerID = _playerId;

select count(*) into _tmpStartTablePDDZ from Table_Web_UserZHangJi where szEndTime>= _oldDiffDate
AND szEndTime< _curDiffDate
AND nPlayerID = _playerId 
AND szPlayerId1 = nPlayerID
AND jushu = 1 AND nGameId=2005;



if  _tmpJushu > 0 or _tmpStartTable > 0 then 
 select szNickName into _playerNickName from Table_User where nPlayerId=_playerId;

 insert into Table_Web_TableLog
 (
szTime, nPlayerId,szNickName, startTable,startGame,TableMnn,GameMnn,TableMyl,GameMyl,
TableMsl,GameMsl,TableMhx,GameMhx,TableMgg,GameMgg,TableMls,GameMls,
TableMlz,GameMlz,TableMgl,GameMgl,TablePbz,GamePbz,TablePsy,GamePsy,
TablePssz,GamePssz,TableMwz,GameMwz,TablePddz,GamePddz)
 values
(
_oldDiffDate,_playerId,_playerNickName,_tmpStartTable,_tmpJushu,_tmpStartTableMNN,_tmpJushuMNN,_tmpStartTableMYL,_tmpJushuMYL,
_tmpStartTableMSL,_tmpJushuMSL,_tmpStartTableMHX,_tmpJushuMHX,_tmpStartTableMGG,_tmpJushuMGG,_tmpStartTableMLS,_tmpJushuMLS,
_tmpStartTableMLZ,_tmpJushuMLZ,_tmpStartTableMGL,_tmpJushuMGL,_tmpStartTablePBZ,_tmpJushuPBZ,_tmpStartTablePSY,_tmpJushuPSY,
_tmpJushuPSSZ,_tmpStartTablePSSZ,_tmpStartTableMWZ,_tmpJushuMWZ,_tmpStartTablePDDZ,_tmpJushuPDDZ
  );
end if;

end loop;

close cur;


insert into EffectiveNumber_DayLog
(
 Sum,MnnSum,MylSum,MslSum,MhxSum,MggSum,MlsSum,
 MlzSum,MglSum,PbzSum,PsySum,PsszSum,MwzSum,PddzSum,CreateTime
)
 select COUNT(*) as 'yxyh',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=1001 group by nPlayerId)a) as 'Mnnmjrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=1002 group by nPlayerId)a) as 'Mylmjrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=1003 group by nPlayerId)a) as 'Mslmjrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=1004 group by nPlayerId)a) as 'Mhxmjrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=1005 group by nPlayerId)a) as 'Mggmjrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=1006 group by nPlayerId)a) as 'Mlsmjrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=1007 group by nPlayerId)a) as 'Mlzmjrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=1008 group by nPlayerId)a) as 'Mglmjrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=2001 group by nPlayerId)a) as 'Pbzrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=2002 group by nPlayerId)a) as 'Psyrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=2003 group by nPlayerId)a) as 'Psszrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=1011 group by nPlayerId)a) as 'Mwzmjrs',
(SELECT count(*) from(SELECT nPlayerId FROM Table_Web_UserZHangJi where szEndTime>_oldDiffDate and szEndTime<_curDiffDate and nGameId=2005 group by nPlayerId)a) as 'Pddzrs',
_oldDiffDate
from 
 (SELECT nPlayerID FROM Table_Web_UserZHangJi where nGameId is not null and szEndTime>_oldDiffDate and szEndTime<_curDiffDate group by nPlayerId)t;


 select SUM(total_fee),COUNT(*) into _RechargeTotal,_PrepaidValue from Table_pay_log where create_date>_oldDiffDate and create_date<_curDiffDate;


 select COUNT(*) into _Dayrecharge from(select nPlayerId from Table_pay_log where create_date>_oldDiffDate and create_date<_curDiffDate group by nPlayerId)a;

 
 select COUNT(*) into _DateLanding from(select nPlayerId from Table_Web_LoginLog where szTime>_oldDiffDate and szTime<_curDiffDate and nAction=1 group by nPlayerId)a;


 select COUNT(*) into _DayToll from(select PlayerId from Table_PromoterCount where CreateDate>_oldDiffDate and CreateDate<_curDiffDate group by PlayerId)a;

  
 select COUNT(*) into _NewDaypeople from(select nPlayerId from Table_User where szCreateTime>_oldDiffDate and szCreateTime<_curDiffDate group by nPlayerId)a;


 INSERT INTO RechargeStatistics(CreateTime,RechargeTotal,PrepaidValue ,DayRecharge,Rate,ARPU,NewDayToll,NewDayRate)
 VALUES(_oldDiffDate,_RechargeTotal,_PrepaidValue,_Dayrecharge,(_Dayrecharge/_DateLanding),(_RechargeTotal/_Dayrecharge),_DayToll,_NewDaypeople);
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UpdateGoods
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UpdateGoods`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `Pr_UpdateGoods`(
    IN $nPlayerID INT,
    IN $nClubID INT,
    IN $nGoodsID INT,
    IN $num INT,
    IN $bUse INT,
    IN $renewal INT,
    IN $expireTime INT,
    IN $nGameType INT,
    IN $nServerID INT,
    IN $nOperatType INT,
    IN $ReMark VARCHAR(64),
    IN $orderID VARCHAR(64),
    IN $nPrice INT,
    OUT $nOutNum INT)
BEGIN
	DECLARE expireTime_ TIMESTAMP DEFAULT NULL;
    IF NOT EXISTS (SELECT ID FROM table_clubgoods WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID AND nGoodsID = $nGoodsID) THEN
        INSERT INTO table_clubgoods(nPlayerID, nClubID, nGoodsID, num, bUse, renewal, expireTime, lastOpTime)
        VALUES($nPlayerID, $nClubID, $nGoodsID, $num, $bUse, $renewal, DATE_ADD(NOW(), INTERVAL $expireTime SECOND), NOW());
        SET $nOutNum = $num;
    ELSEIF $expireTime > 0 THEN
		SELECT expireTime INTO expireTime_ FROM table_clubgoods WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID AND nGoodsID = $nGoodsID;
        IF expireTime_ IS NULL OR expireTime_ < NOW() THEN
			SET expireTime_ = NOW();
        END IF;
        SET expireTime_ = DATE_ADD(expireTime_, INTERVAL $expireTime SECOND);
        UPDATE table_clubgoods SET expireTime = expireTime_, lastOpTime = NOW() WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID AND nGoodsID = $nGoodsID;
        SET $nOutNum = 1;
	ELSE
		UPDATE table_clubgoods SET num = @num := num + $num, lastOpTime = NOW() WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID AND nGoodsID = $nGoodsID;
		SET $nOutNum = @num;
    END IF;
    IF $nOutNum <= 0 THEN
        DELETE FROM table_clubgoods WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID AND nGoodsID = $nGoodsID;
    END IF;
    INSERT INTO table_clubGoodsOperatLog(orderID, nClubID, nPlayerID, nGoodsID, nPrice, num, AfterMbNum, CreateTime, nState, nOperatType, OpratAccount, nGameType, nServerID, ReMark)
    VALUES($orderID, $nClubID, $nPlayerID, $nGoodsID, $nPrice, $num, $nOutNum , NOW(), 1, $nOperatType, $nPlayerID, $nGameType, $nServerID, $ReMark); 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_UpdateReward
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_UpdateReward`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_UpdateReward`(in $intPlayerId int,in $intMsgId bigint)
BEGIN
	declare Type int;
	declare Num int;
	declare _nCardCount int;
	declare _nJinBi bigint;
	declare _done int default 0;
	declare cur cursor for select nAwardType,nAwardNum from table_user_rewards where nMsgId=$intMsgId;
	declare continue handler for not found set _done=1;
	SELECT nCardCount,nJinBi INTO _nCardCount,_nJinBi FROM table_user where nPlayerId=$intPlayerId;
	open cur;
	REPEAT
		fetch cur into type,Num;
		if not _done then
			if Type=1 then 
				update table_user set nCardCount=nCardCount+Num where nPlayerId=$intPlayerId;
				UPDATE table_user_rewards SET nReward=1 WHERE nMsgId=$intMsgId  and nAwardType = 1 ;
				INSERT into Table_DiamondActionLog (AccountId,Count,szRemark)  VALUES ($intPlayerId,Num,CONCAT('系统邮件 余额:',_nCardCount+Num));
			elseif Type=2 then 
				update table_user set nJinBi=nJinBi +Num where nPlayerId=$intPlayerId;
				UPDATE table_user_rewards SET nReward=1 WHERE nMsgId=$intMsgId and  nAwardType = 2;
				INSERT into table_goldactionlog (AccountId,Count,szRemark)  VALUES ($intPlayerId,Num,CONCAT('系统邮件 余额:',_nJinBi+Num));
			end if;
		end if;
	until _done end repeat;
	close cur;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_UpdateUserClubScore
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_UpdateUserClubScore`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_UpdateUserClubScore`(
in $nPlayerID int,
in $nClubID  int,
in $nScore bigint
)
BEGIN
 

	DECLARE myID BIGINT DEFAULT 0;
	SELECT ID INTO myID FROM table_clubmember where nPlayerID=$nPlayerID and nClubID=$nClubID and nStatus=1;
	update table_clubmember set nScore = nScore + $nScore where ID = myID;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_UpdateUserClubScore2
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_UpdateUserClubScore2`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_UpdateUserClubScore2`(
IN $nGameID INT,
IN $nTableID  INT,
IN $nGameType  INT,
IN $nPlayerID INT,
IN $nClubID  INT,
IN $nScore BIGINT,
IN $nRedisScore BIGINT,
IN $nType INT
)
BEGIN

UPDATE table_clubmember SET nScore = @nScore := nScore+$nScore WHERE nPlayerID=$nPlayerID AND nClubID=$nClubID;
 

IF @nScore <> $nRedisScore THEN
	 
	 INSERT INTO table_warn (nPlayerID,nClubID,nMySqlCount,nRedisCount,nType,nAmount) VALUES ($nPlayerID,$nClubID,@nScore,$nRedisScore,$nType,$nScore);
END IF;

IF $nGameType > 100 THEN
    CALL Pr_club_changeLogClubScore2($nPlayerID,$nGameID,$nTableID,$nScore,IF($nScore>0,11,10),0,IF($nScore>0,'百人场游戏获得','百人场游戏消耗'),$nClubID);
ELSE
    CALL Pr_club_changeLogClubScore2($nPlayerID,$nGameID,$nTableID,$nScore,IF($nScore>0,5,6),0,IF($nScore>0,'游戏获得','游戏消耗'),$nClubID);
END IF;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_UpdateUserClubScore3
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_UpdateUserClubScore3`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_UpdateUserClubScore3`(
IN $nServerID INT,
IN $nPlayerID INT,
IN $nClubID   INT,
IN $nScore    BIGINT,
IN $nRedisScore BIGINT,
IN $nType      INT,
IN $szOrder    VARCHAR(128),
IN $szMarks    VARCHAR(256),
OUT $nOutScore BIGINT
)
BEGIN
/*
更新用户积分, 并读取更新后的nScore值
2019-10-17增加服务器ID
2020-6-9 增加对分表的支持
*/
UPDATE table_clubmember SET nScore = @nScore := nScore + $nScore WHERE nPlayerID=$nPlayerID AND nClubID=$nClubID;
 
#如果和游戏中算出的用户身上的分不一致，则进行警告记录
IF @nScore <> $nRedisScore AND $nRedisScore<>0 THEN
   #插入一条警告记录
   INSERT INTO table_warn (nPlayerID,nClubID,nMySqlCount,nRedisCount,nType,nAmount) VALUES ($nPlayerID,$nClubID,@nScore,$nRedisScore,$nType,$nScore);
END IF;
#写到用户积分变动的日志表中
CALL pr_club_changeLogClubScore3_shard($nServerID,$nPlayerID,$nClubID,$nScore,@nScore,$nType,$szOrder,$szMarks);
#返回更新后的积分 
SET $nOutScore = @nScore;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_update_goods_num
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_update_goods_num`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `pr_update_goods_num`(
)
RT:begin 
  # 每次操作200行
  declare _interval_num int default 200;
  declare _interval_begin int default 1;
  declare _interval_end int default 200;
	set @nGoodsID=1;
  # 取最大的id
  select id into @maxId from table_clubgoods where nGoodsID=@nGoodsID order by id desc limit 1;
  WHILE 1>0 DO
    # 根据主键每次更新200行，大事务拆分成小事务
    update table_clubgoods set num = 0 where nGoodsID=@nGoodsID and (id between _interval_begin and _interval_end) and id <=@maxId and num > 0;
    set _interval_begin = _interval_begin+_interval_num;
    set _interval_end = _interval_end+_interval_num;
    # 循环结束
    if _interval_begin > @maxId then
      LEAVE RT;
    end if;
  END WHILE; 
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_update_player_gamehistory
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_update_player_gamehistory`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_update_player_gamehistory`(
IN  $nPlayerId  INT,
IN  $gametype INT
)
RT:BEGIN
/*
更新玩家的游戏历史
*/
DECLARE _lastGameType INT;
SELECT nGameType INTO _lastGameType FROM `table_user_game_history` WHERE nPlayerId = $nPlayerId order by `CreateTime` desc limit 1;
IF _lastGameType IS NULL OR _lastGameType <> $gametype THEN
    #添加一条记录
    INSERT INTO `table_user_game_history` (  `nPlayerID`,  `nGameType`) VALUES  ( $nPlayerId ,  $gametype );
    
END IF;
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_update_table_user_nLastClubID
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_update_table_user_nLastClubID`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_update_table_user_nLastClubID`()
RT:BEGIN 
  # 每次操作200行
  DECLARE _interval_num INT DEFAULT 200;
  DECLARE _interval_begin INT DEFAULT 1;
  DECLARE _interval_end INT DEFAULT 200;
  # 取最大的nPlayerId
  SELECT nPlayerId INTO @maxId FROM table_user ORDER BY nPlayerId DESC LIMIT 1;
  WHILE 1>0 DO
    # 根据主键每次更新200行，大事务拆分成小事务
    UPDATE table_user SET nLastClubID = 666000  WHERE (nPlayerId BETWEEN _interval_begin AND _interval_end) AND nPlayerId <=@maxId AND nLastClubID = 0 AND acctype IN (11,1);
		# update table_user set nLastClubID = 666000 where nLastClubID = 0 and acctype in (11,1);
    SET _interval_begin = _interval_begin+_interval_num;
    SET _interval_end = _interval_end+_interval_num;
    # 循环结束
    IF _interval_begin > @maxId THEN
      LEAVE RT;
    END IF;
  END WHILE; 
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_update_user_clubscore
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_update_user_clubscore`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_update_user_clubscore`(
in $nPlayerID int,
IN $nClubID   INT,
OUT $nScore   BIGINT
)
BEGIN
 
select nScore into $nScore from table_clubmember where nPlayerID = $nPlayerID and nClubId = $nClubID;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_update_user_club_score_and_third_log
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_update_user_club_score_and_third_log`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_update_user_club_score_and_third_log`(
IN $nServerID INT,
IN $nPlayerID INT,
IN $nClubID   INT,
IN $nScore    BIGINT,
IN $nRedisScore BIGINT,
IN $nType      INT,
IN $szMarks    VARCHAR(256),
IN $nDataType    INT,
IN $nSubDataType INT,
IN $nTableID     INT,
IN $nChairID     INT,
IN $szToken      VARCHAR(64),
IN $nPlayCount   TINYINT,
IN $tStartTime   TIMESTAMP,
IN $tEndTime     TIMESTAMP,
IN $nEnterScore  BIGINT,
IN $nBetScore    INT,
IN $nValidBet    INT,
IN $nResultMoney INT,
IN $nTax         INT,
IN $nGameType    INT,
IN $CardData     TEXT,
OUT $nOutScore BIGINT
)
BEGIN
/*
更新用户积分,写积分变动记录和第3方帐变记录， 返回更新后的nScore值
*/
 
UPDATE table_clubmember SET nScore = @nScore := nScore + $nScore WHERE nPlayerID=$nPlayerID AND nClubID=$nClubID;
 
#如果和游戏中算出的用户身上的分不一致，则进行警告记录
IF @nScore <> $nRedisScore AND $nRedisScore<>0 THEN
   #插入一条警告记录
   INSERT INTO table_warn (nPlayerID,nClubID,nMySqlCount,nRedisCount,nType,nAmount) VALUES ($nPlayerID,$nClubID,@nScore,$nRedisScore,$nType,$nScore);
END IF;
 
#写到用户积分变动的日志表中
CALL pr_club_changeLogClubScore3_shard($nServerID,$nPlayerID,$nClubID,$nScore,@nScore,$nType,$szToken,$szMarks);
 
#写第3方帐变信息表
CALL pr_club_write_third_score_detail_shard($nDataType,$nSubDataType,$nClubID,$nTableID,$nChairID,$szToken,$nPlayCount,
                                            $tStartTime,$tEndTime,$nPlayerID,$nEnterScore,$nBetScore,$nValidBet, 
                                            $nScore, $nTax, $nGameType,$nServerID,$CardData);
#返回更新后的积分 
SET $nOutScore = @nScore;
    
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_update_user_diamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_update_user_diamond`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_update_user_diamond`(
in $nPlayerId  int,
out $nUpdateDiamond  int
)
BEGIN

	SET $nUpdateDiamond = 0;
	select updatediamond into $nUpdateDiamond from table_user where nPlayerId=$nPlayerId and updatediamond<>0;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserAccountCreate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserAccountCreate`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `Pr_UserAccountCreate`(
		IN $strPass VARCHAR(64),
		IN $strNickName VARCHAR(64),
		IN $strPreLoginIp  VARCHAR(64),
		IN $strOpenID VARCHAR(256),
		in $nCreate   int,
		OUT $intOutPlayerId INT,
		OUT $intOutCardCount INT,
		OUT $intOutJinBi BIGINT,
		OUT $intOutScore INT,
		OUT $intOutExtentCode INT,
		OUT $intFirstCreate   INT,
		OUT $intOutSex INT,
		OUT $strOutPass VARCHAR(64),
		OUT $strOutNickName VARCHAR(64),
		OUT $strOutHeadUrl VARCHAR(512),
		OUT $strOutUserSign  VARCHAR(256),
		OUT $strOutErrMsg VARCHAR(256),
		OUT $returnVal INT
)
rt:BEGIN

			DECLARE  _tmpCardCount  INT DEFAULT     0;
			DECLARE  _tmpJinBiCount BIGINT DEFAULT  0;
			DECLARE  _tmpHeadUrl    VARCHAR(512);
			DECLARE  _tmpPlayerID   INT DEFAULT     0;
			DECLARE  _tmpChannel    INT DEFAULT     0;
			DECLARE  _tmpClubMaterID INT;
			DECLARE  _tmpScore INT DEFAULT 100000000;
			
			select nPlayerID into _tmpPlayerID from Table_User WHERE `szThirdAccount` = $strNickName AND `szThirdPass` = $strPass AND nChannel = $strOpenID;
			
			
			if _tmpPlayerID > 0 then
                set $strOutPass = MD5(123456 + RAND() * 999999);
                UPDATE Table_User SET szPass = $strOutPass,preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                
                SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex , szPass, szNickname,szHeadPicUrl
                INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutPass,$strOutNickName,$strOutHeadUrl
                FROM Table_User WHERE nPlayerId = _tmpPlayerID;
		
                SET $intFirstCreate  = 0;
                SET $strOutErrMsg ='succ' ;
                INSERT INTO Table_Web_LoginLog(nPlayerId,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId, $strNickName, 1,NOW(),$strPreLoginIp);
                SET $returnVal=1;
                leave rt;
			else
                
                
                if $nCreate = 0 then
                    
                    SET $returnVal = 0;
                    SET $strOutErrMsg = '账号不存在';
                    LEAVE rt;
                
                end if;
                
                
                SELECT `CreatePlayerID` INTO _tmpClubMaterID FROM table_clubinfo WHERE nCLubID = $strOpenID;
                
                IF _tmpClubMaterID IS NULL THEN
                    SET $returnVal = 0;
                    SET $strOutErrMsg = '渠道ID错误';
                    LEAVE rt;
                END IF;
			
                SET $strOutPass = MD5(123456 + RAND() * 999999);
                SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
                
                INSERT INTO Table_User(nCardCount,nJinBi,szNickname,szPass,szCreateTime,nActive,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,szThirdAccount,szThirdPass,nChannel,nLastClubID) 
                VALUES(_tmpCardCount,_tmpJinBiCount,$strNickName,$strOutPass,NOW(),1,NOW(),$strPreLoginIp,1,2000,0,0,_tmpHeadUrl,$strNickName,$strPass,$strOpenID,$strOpenID);
                
                SET $intOutPlayerId  = @@IDENTITY;
                SET $intOutCardCount = _tmpCardCount;
                SET $intOutJinBi     = _tmpJinBiCount;
                SET $intFirstCreate  = 1;
                SET $intOutExtentCode = 0;
                SET $intOutSex       = 1;
                SET $strOutNickName  = $strNickName;
                SET $strOutUserSign  = "";
                
                
                INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore) VALUES ($strOpenID,$intOutPlayerId,_tmpClubMaterID,3,1,_tmpScore);
                
                INSERT INTO Table_Web_LoginLog(nPlayerId,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId, $strNickName, 1,NOW(),$strPreLoginIp);
                
                SET $returnVal=1;
                SET $strOutErrMsg = '账号创建成功';
                LEAVE rt;
                
			end if;
			
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserBindPhone
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserBindPhone`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_UserBindPhone`(
		in $intPlayerId int,
		in $strPhone varchar(64),
		in $strPass varchar(64),
		out $strOutErrMsg varchar(256),
		out $returnVal int
)
returnVal:BEGIN

			
	
	IF EXISTS(SELECT 1 FROM Table_User WHERE phone=$strPhone) THEN
		
		
		SET $strOutErrMsg ='手机号已被使用！' ;
		SET $returnVal=0;
		
	else
		update table_user set phone = $strPhone,szPass = MD5($strPass) where nPlayerId = $intPlayerId;
		set $returnVal=1;
		SET $strOutErrMsg ='成功升级账号！' ;
	end if;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserCreate
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserCreate`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_UserCreate`(
		in  $strPass varchar(64),
		out $intOutPlayerId int,
		out $intOutCardCount int,
		out $intOutVip int,
		out $strOutErrMsg varchar(256),
		out $returnVal int
)
begin
			declare  _tmpCardCount int default 0;
			insert into Table_User(nCardCount,nVip,szCreateTime,nActive,szPass) values(_tmpCardCount,0,NOW(),1,$strPass);
			select $intOutPlayerId = @@identity;
			select $intOutCardCount = _tmpCardCount;
			select $intOutVip = 0;
			select $strOutErrMsg ='succ';
			set $returnVal=1;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserDiamondActionLog
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserDiamondActionLog`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_UserDiamondActionLog`(
						 in $AccountID int
						,in $NickName  varchar(128)
						,in $Count     int
						,in $Remark    varchar(64)
)
begin
			INSERT INTO Table_DiamondActionLog(AccountId,szNickName,Count,szRemark,ActionDate) VALUES($AccountID,$NickName,$Count,$Remark,NOW());
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserGetDiamondAndJinBi
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserGetDiamondAndJinBi`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `Pr_UserGetDiamondAndJinBi`(
					in   $intPlayerId       int,
					out  $intDiamond      	INT,
					out  $intJinBi		    bigint,
					OUT  $szNickName        varchar(64),
					out  $returnVal         int
)
returnVal:begin

    DECLARE _counts  INT    DEFAULT 0;
    DECLARE _jinbi   bigint DEFAULT 0;
    
    IF EXISTS (SELECT 1 FROM Table_User WHERE nPlayerId = $intPlayerId ) then
            
        SELECT nCardCount ,nJinBi , szNickName INTO _counts ,_jinbi,$szNickName FROM Table_User WHERE nPlayerId=$intPlayerId;
        
        set $intDiamond = _counts;
        SET $intJinBi   = _jinbi;
        set $returnVal  = 1;
        
        leave returnVal;
        
    else
    
        set $returnVal=0;
        leave returnVal;
            
    end if;
    
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserGetrRwardLog
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserGetrRwardLog`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_UserGetrRwardLog`(
 in $nPlayerId int
,in $NickName  varchar(128)
,in $rewardname varchar(300)
,in $Count     int
)
begin
INSERT INTO Table_GetrRwardLog(nPlayerId,szNickName,rewardname,Count,ActionDate) VALUES($nPlayerId,$NickName,$rewardname,$Count,NOW());
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserLogin13
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserLogin13`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `Pr_UserLogin13`(
						IN $intPlayerId INT,
						IN $strPass VARCHAR(64),
						IN $strNickName VARCHAR(64),
						IN $strPreLoginIp  VARCHAR(64),
						IN $strHeadURL VARCHAR(384),
						OUT $intOutExtentCode INT, 
						OUT $intOutSex INT,
						OUT $strOutNickName VARCHAR(64),
						OUT $strOutHeadUrl VARCHAR(512),
						OUT $strOutErrMsg VARCHAR(256),
						OUT $returnVal    INT,
						OUT $intChannelClubID INT,
						OUT $intClubScore BIGINT,
						OUT $nRobot       TINYINT,
						OUT $nCreateTime  INT,
						OUT $szThirdAccount  VARCHAR(64),
						OUT $szPhone  VARCHAR(15),
						OUT $nStatus  INT,
						OUT $nModifyNickname INT
)
returnVal:BEGIN

DECLARE  _UserID   INT DEFAULT     0;
DECLARE  _tmpPass  VARCHAR(64);
 
SET $intChannelClubID = 0;
 
IF NOT EXISTS(SELECT 1 FROM Table_User WHERE nPlayerId=$intPlayerId ) THEN
    SET $strOutErrMsg ='账号错误';
    SET $returnVal= 0;
    LEAVE returnVal;
END IF;
SELECT nActive, extendCode , nSex,  szNickName,  szHeadPicUrl,  nLastClubID,bRobot,UNIX_TIMESTAMP(szCreateTime),`szThirdAccount`,phone,IFNULL(reset3,0),szPass
   INTO $nStatus,$intOutExtentCode,$intOutSex,$strOutNickName,$strOutHeadUrl,$intChannelClubID,$nRobot,$nCreateTime,$szThirdAccount,$szPhone,$nModifyNickname,_tmpPass
   FROM Table_User WHERE nPlayerId = $intPlayerId;
   
IF  _tmpPass <> $strPass THEN
   SET $strOutErrMsg ='验证无效';
   SET $returnVal= 2;
   LEAVE returnVal;
END IF;
IF $nStatus = 0 THEN
   SET $strOutErrMsg ='账号被禁用';
   SET $returnVal= 4;
   LEAVE returnVal;
END IF;
      
UPDATE Table_User SET preLoginTime = NOW(), preLoginIp = $strPreLoginIp, onlineSta=1 WHERE nPlayerId = $intPlayerId;
                
SELECT IFNULL(nScore,0) INTO $intClubScore FROM table_clubmember WHERE nClubID = $intChannelClubID AND nPlayerID = $intPlayerId;
        
INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intPlayerId,$intChannelClubID,$strNickName, 1,NOW(),$strPreLoginIp);
                                        
SET $returnVal= 1;
LEAVE returnVal;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserLogin14
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserLogin14`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `Pr_UserLogin14`(
						IN $intPlayerId INT,
						IN $strPass VARCHAR(64),
						IN $strNickName VARCHAR(64),
						IN $strPreLoginIp  VARCHAR(64),
						IN $strHeadURL VARCHAR(384),
						IN $nTablePreID INT,
						OUT $intOutExtentCode INT, 
						OUT $intOutSex INT,
						OUT $strOutNickName VARCHAR(64),
						OUT $strOutHeadUrl VARCHAR(512),
						OUT $strOutErrMsg VARCHAR(256),
						OUT $returnVal    INT,
						OUT $intChannelClubID INT,
						OUT $intClubScore BIGINT,
						OUT $nRobot       TINYINT,
						OUT $nCreateTime  INT,
						OUT $szThirdAccount  VARCHAR(64),
						OUT $szPhone  VARCHAR(15),
						OUT $nStatus  INT,
						OUT $nModifyNickname INT,
						OUT $nTid INT
)
returnVal:BEGIN

DECLARE  _UserID   INT DEFAULT     0;
DECLARE  _tmpPass  VARCHAR(64);
 
SET $intChannelClubID = 0;
 
IF NOT EXISTS(SELECT 1 FROM Table_User WHERE nPlayerId=$intPlayerId ) THEN
    SET $strOutErrMsg ='账号错误';
    SET $returnVal= 0;
    LEAVE returnVal;
END IF;
SELECT nActive, extendCode , nSex,  szNickName,  szHeadPicUrl,  nLastClubID,bRobot,UNIX_TIMESTAMP(szCreateTime),`szThirdAccount`,phone,IFNULL(reset3,0),szPass
   INTO $nStatus,$intOutExtentCode,$intOutSex,$strOutNickName,$strOutHeadUrl,$intChannelClubID,$nRobot,$nCreateTime,$szThirdAccount,$szPhone,$nModifyNickname,_tmpPass
   FROM Table_User WHERE nPlayerId = $intPlayerId;
   
IF  _tmpPass <> $strPass THEN
   SET $strOutErrMsg ='验证无效';
   SET $returnVal= 2;
   LEAVE returnVal;
END IF;
IF $nStatus = 0 THEN
   SET $strOutErrMsg ='账号被禁用';
   SET $returnVal= 4;
   LEAVE returnVal;
END IF;
      
UPDATE Table_User SET preLoginTime = NOW(), preLoginIp = $strPreLoginIp, onlineSta=1 WHERE nPlayerId = $intPlayerId;
                
SELECT IFNULL(nScore,0) INTO $intClubScore FROM table_clubmember WHERE nClubID = $intChannelClubID AND nPlayerID = $intPlayerId;
        
INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intPlayerId,$intChannelClubID,$strNickName, 1,NOW(),$strPreLoginIp);

IF EXISTS(SELECT 1 FROM table_user_gamelock WHERE nPlayerID = $intPlayerId LIMIT 1) THEN
 
   SELECT nTablePreID INTO $nTid FROM table_user_gamelock WHERE nPlayerID = $intPlayerId LIMIT 1; 
 
ELSE
    
    IF $nTablePreID > 0 THEN
        INSERT INTO `table_user_gamelock` (  `nPlayerID`,  `nTablePreID`) VALUES  ( $intPlayerId, $nTablePreID) ;
    END IF;
    
    SET $nTid = 0;
    
END IF;
                                        
SET $returnVal= 1;
LEAVE returnVal;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserLogin15
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserLogin15`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `Pr_UserLogin15`(
						IN $intPlayerId INT,
						IN $strPass VARCHAR(64),
						IN $strNickName VARCHAR(64),
						IN $strPreLoginIp  VARCHAR(64),
						IN $strHeadURL VARCHAR(384),
						IN $nTablePreID INT,
						OUT $intOutExtentCode INT, 
						OUT $intOutSex INT,
						OUT $strOutNickName VARCHAR(64),
						OUT $strOutHeadUrl VARCHAR(512),
						OUT $strOutErrMsg VARCHAR(256),
						OUT $returnVal    INT,
						OUT $intChannelClubID INT,
						OUT $intClubScore BIGINT,
						OUT $nRobot       TINYINT,
						OUT $nCreateTime  INT,
						OUT $szThirdAccount  VARCHAR(64),
						OUT $szPhone  VARCHAR(15),
						OUT $nStatus  INT,
						OUT $nModifyNickname INT,
						OUT $nTid INT,
						OUT $nDiamond INT
)
returnVal:BEGIN
/*
登录
2019-3-19  增加了 table_user.nLastClubID 记录最后进入的俱乐部，注意在更新旧系统时，需要将原来表中的 nLastClubID 设置为其运营俱乐部，否则会查不到俱乐部分数
2019-3-20  查询俱乐部名称等，按照最后的俱乐部ID来查找
2019-3-29  去掉了传入登录类型，返回增加了机器人标志
2019-5-30  去掉无用字段，简化代码
2019-7-9   增加返回第三方账号
2019-10-17 增加返回手机号
2019-11-22 登录日志增加俱乐部ID
2019-12-2  增加返回nStatus
2019-12-4  账号禁用返回2
2020-1-3   增加返回昵称修改标志
2020-2-28  修改了账号的判定，增加了密码不对的返回
2020-4-21  返回桌子前缀
2020-4-22  增加桌子前缀写入参数
2020-6-2   增加返回游戏历史记录参数
2020-11-24 去掉了戏历史记录参数，增加返回用户的钻石数
2021-12-14 修改返回字串，以支持多语言版本
*/
DECLARE  _UserID   INT DEFAULT     0;
DECLARE  _tmpPass  VARCHAR(64);
 
SET $intChannelClubID = 0;
 
IF NOT EXISTS(SELECT 1 FROM Table_User WHERE nPlayerId=$intPlayerId ) THEN
    SET $strOutErrMsg ='PR_ACCOUNT_NOT_EXISTS';
    SET $returnVal= 0;
    LEAVE returnVal;
END IF;
 
SELECT nActive, extendCode , nSex,  szNickName,  szHeadPicUrl,  nLastClubID,bRobot,UNIX_TIMESTAMP(szCreateTime),`szThirdAccount`,phone,IFNULL(reset3,0),szPass,`nCardCount`
   INTO $nStatus,$intOutExtentCode,$intOutSex,$strOutNickName,$strOutHeadUrl,$intChannelClubID,$nRobot,$nCreateTime,$szThirdAccount,$szPhone,$nModifyNickname,_tmpPass,$nDiamond
   FROM Table_User WHERE nPlayerId = $intPlayerId;
   
IF  _tmpPass <> $strPass THEN
   SET $strOutErrMsg ='PASSERROR';
   SET $returnVal= 2;
   LEAVE returnVal;
END IF;
 
IF $nStatus = 0 THEN
   SET $strOutErrMsg ='PR_ACCOUNT_DISABLE';
   SET $returnVal= 4;
   LEAVE returnVal;
END IF;
      
UPDATE Table_User SET preLoginTime = NOW(), preLoginIp = $strPreLoginIp, onlineSta=1 WHERE nPlayerId = $intPlayerId;
                
SELECT IFNULL(nScore,0) INTO $intClubScore FROM table_clubmember WHERE nClubID = $intChannelClubID AND nPlayerID = $intPlayerId;
        
INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intPlayerId,$intChannelClubID,$strNickName, 1,NOW(),$strPreLoginIp);
 
#检查是否有用户加锁存在
IF EXISTS(SELECT 1 FROM table_user_gamelock WHERE nPlayerID = $intPlayerId LIMIT 1) THEN
 
   SELECT nTablePreID INTO $nTid FROM table_user_gamelock WHERE nPlayerID = $intPlayerId LIMIT 1; 
 
ELSE
    #如果需要加锁，则将锁记录写进去
    IF $nTablePreID > 0 THEN
        INSERT INTO `table_user_gamelock` (  `nPlayerID`,  `nTablePreID`) VALUES  ( $intPlayerId, $nTablePreID) ;
    END IF;
    
    SET $nTid = 0;
    
END IF;
                                        
SET $returnVal= 1;
LEAVE returnVal;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserSetOnlineSta
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserSetOnlineSta`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_UserSetOnlineSta`(
					in $intPlayerId int,
					in $intSta int,
					out $strOutErrMsg varchar(256),
					out $returnVal int
)
returnVal:begin
					declare _tmpActive int default 1; 
					declare _tmpPreLoginIp,_tempStrNickName varchar(64);
										
					if exists(select * from Table_User where nPlayerId=$intPlayerId) then
							select nActive into _tmpActive from Table_User where nPlayerId=$intPlayerId;
							if 1= _tmpActive then
									update Table_User set  onlineSta=$intSta where nPlayerId=$intPlayerId;
									select preLoginIp,szNickname into _tmpPreLoginIp, _tempStrNickName from Table_User where nPlayerId=$intPlayerId;
									
									insert into Table_Web_LoginLog(nPlayerId,szNickName,nAction,szTime,loginIp) values($intPlayerId, _tempStrNickName, $intSta,NOW(),_tmpPreLoginIp);
									set $returnVal=1;
									leave returnVal;
							else
									set $strOutErrMsg ='账号已经被冻结。';
									set $returnVal=0;
									leave returnVal;
							end if;
					else
							set $strOutErrMsg ='账号错误。';
							set $returnVal=0;
							leave returnVal;
					end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserUpdateSex
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserUpdateSex`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_UserUpdateSex`(
			in $intPlayerId int,
			in $intSex int
)
begin

        declare _tmpActive int;          
        
        IF EXISTS (SELECT * FROM Table_User WHERE nPlayerId=$intPlayerId) then
                SELECT nActive into _tmpActive FROM  Table_User WHERE nPlayerId=$intPlayerId;
                IF 1= _tmpActive THEN
                    UPDATE Table_User SET nSex =$intSex WHERE nPlayerId=$intPlayerId;
                end if;
        end if;         
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserUpdateSign
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserUpdateSign`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_UserUpdateSign`(
			in $intPlayerId int,
			in $strSign varchar(256)
)
begin

        declare _tmpActive int;           
        IF EXISTS (SELECT * FROM Table_User WHERE nPlayerId=$intPlayerId) then
                SELECT nActive into _tmpActive FROM  Table_User WHERE nPlayerId=$intPlayerId;
                IF 1= _tmpActive THEN
                        UPDATE Table_User SET szSign =$strSign WHERE nPlayerId=$intPlayerId;
                end if;
        end if;         
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserUpdateVerifyHeadPicUrl
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserUpdateVerifyHeadPicUrl`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_UserUpdateVerifyHeadPicUrl`(IN `$nPlayerId` int,IN `$szHeadUrl` varchar(512))
BEGIN


    update table_user set szHeadPicUrl = $szHeadUrl where nPlayerId=$nPlayerId;
        
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserWeiXinCreate7
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserWeiXinCreate7`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `Pr_UserWeiXinCreate7`(
						in $strOpenId varchar(128),
						in $strPass varchar(64),
						in $strNickName varchar(64),
						in $strPreLoginIp  varchar(64),
						in $strHeadURL TEXT,
						IN $intSex INT,
						out $intOutPlayerId int,
						out $intOutCardCount int,
						out $intOutJinBi bigint,
						OUT $intOutScore INT,
						out $intOutExtentCode int,
						out $intFirstCreate   int,
						OUT $intOutSex INT,
						OUT $strOutPass VARCHAR(64),
						OUT $strOutNickName VARCHAR(64),
						OUT $strOutHeadUrl VARCHAR(512),
						OUT $strOutUserSign VARCHAR(256),
						out $strOutErrMsg varchar(256),
						out $returnVal int
)
returnVal:begin

	declare  _tmpCardCount int default 30;
	declare  _tmpJinBiCount bigint default 2000;
	declare  _tmpPhone VARCHAR(15);
	
	set $intFirstCreate = 0;
	set $strOutUserSign = '';
	if exists(select * from Table_User where szOpenId=$strOpenId) then
		
		SELECT phone into _tmpPhone from Table_User WHERE szOpenId=$strOpenId;
		
		if _tmpPhone is null or _tmpPhone = '' then 
			
			SET $returnVal=2;
			LEAVE returnVal;
		end if;
		
		update Table_User set szPass = $strPass ,nSex = $intSex,szNickname = $strNickName, preLoginTime = NOW(), preLoginIp=$strPreLoginIp, szHeadPicUrl=$strHeadURL,onlineSta=1 where  szOpenId=$strOpenId; 
		
		select nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex , szPass, szNickname,szHeadPicUrl
		into $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutPass,$strOutNickName,$strOutHeadUrl
		from Table_User where szOpenId=$strOpenId;
		
		set $strOutErrMsg ='succ' ;
		insert into Table_Web_LoginLog(nPlayerId,szNickName,nAction,szTime,loginIp) values($intOutPlayerId, $strNickName, 1,NOW(),$strPreLoginIp);
		set $returnVal=1;
		Leave returnVal;
	else 
		
		SET $returnVal=2;
		LEAVE returnVal;
		
		insert into Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szOpenId,szNickname,preLoginTime,preLoginIp,szHeadPicUrl,onlineSta,reser1,extendCode) 
		values(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strOpenId,$strNickName,NOW(),$strPreLoginIp,$strHeadURL,1,2000,0);
		set $intOutPlayerId = @@identity;
		set $intOutCardCount = _tmpCardCount;
		set $intOutJinBi = _tmpJinBiCount;
		set $strOutErrMsg ='succ' ;
		set $intOutExtentCode=0;
		set $intFirstCreate = 1;
		
		
		insert into Table_Web_LoginLog(nPlayerId,szNickName,nAction,szTime,loginIp) values($intOutPlayerId, $strNickName, 1,NOW(),$strPreLoginIp);
		
		set $returnVal=1;
		Leave returnVal;
	end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserYouKeCreate6
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserYouKeCreate6`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `Pr_UserYouKeCreate6`(
		IN $strPass VARCHAR(64),
		IN $strNickName VARCHAR(64),
		IN $strPreLoginIp  VARCHAR(64),
		IN $strOpenID VARCHAR(256),
		IN $nClubID INT,
		IN $nUpperID INT,
		IN $nOsType INT,
		OUT $intOutPlayerId INT,
		OUT $intOutCardCount INT,
		OUT $intOutJinBi BIGINT,
		OUT $intOutScore INT,
		OUT $intOutExtentCode INT,
		OUT $intFirstCreate   INT,
		OUT $intOutSex INT,
		OUT $strOutPass VARCHAR(64),
		OUT $strOutNickName VARCHAR(64),
		OUT $strOutHeadUrl VARCHAR(512),
		OUT $strOutUserSign  VARCHAR(256),
		OUT $strOutErrMsg VARCHAR(256),
		OUT $returnVal INT
)
rt:BEGIN

        DECLARE  _tmpCardCount  INT DEFAULT     0;
        DECLARE  _tmpJinBiCount BIGINT DEFAULT  0;
        DECLARE  _tmpHeadUrl    VARCHAR(512);
        DECLARE  _tmpPlayerID   INT DEFAULT     0;
        
        DECLARE  _tmpChannel    INT DEFAULT     0;
        DECLARE  _tmpUpUserID   INT DEFAULT     0;        
        DECLARE  _tmpLevel      INT DEFAULT     3;        
        DECLARE  _tmpUserScore  INT DEFAULT     0;        
        DECLARE  _tmpExLevel    INT DEFAULT     0;
        
        
        
        
        IF $nClubID = 0 OR $nClubID = 10001 THEN
           SET _tmpChannel = 10001;  
        ELSE
           
           SET _tmpChannel = $nClubID;
           SET _tmpUserScore = 0;
        END IF;
        
        IF NOT EXISTS(SELECT 1 FROM `table_clubinfo` WHERE `nClubID` = _tmpChannel AND `nStatus` = 1) THEN
        
           SET $returnVal = 0;
           SET $strOutErrMsg = "俱乐部不存在";
           
           LEAVE rt;
        END IF;
        
        IF $nUpperID > 0 THEN
                
                SET _tmpUpUserID = $nUpperID;
                select IFNULL(`nExLevel`,1) into _tmpExLevel from `table_clubmember` where nClubID = _tmpChannel AND `nPlayerID` = _tmpUpUserID;
                SET _tmpExLevel = _tmpExLevel + 1;
        ELSE
                
                SELECT nPlayerID INTO _tmpUpUserID FROM `table_clubmember` WHERE nClubID = _tmpChannel AND nLevel = 1;
                SET _tmpExLevel = 2;
        END IF;
        
        
        IF $strOpenID IS NULL OR (LENGTH($strOpenID)<8) THEN
        
                SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
            
                
                INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szOpenId,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4) 
                VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strOpenID,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,2000,0,0,_tmpHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType);
                                
                SET $strNickName = CONCAT('GU',@@IDENTITY);
                
                
                SET $intOutPlayerId  = @@IDENTITY;
                SET $intOutCardCount = _tmpCardCount;
                SET $intOutJinBi     = _tmpJinBiCount;
                SET $strOutErrMsg    = 'succ' ;
                SET $intFirstCreate  = 1;
                SET $intOutExtentCode = 0;
                SET $intOutSex       = 1;
                SET $strOutPass      = $strPass;
                SET $strOutNickName  = $strNickName;
                SET $strOutUserSign  = "";
                
                UPDATE Table_User SET szNickname = $strNickName,szThirdAccount = CONCAT('GU',$intOutPlayerId),szThirdPass='123456', nChannel = _tmpChannel WHERE nPlayerID=$intOutPlayerId;
                
                
                
                IF _tmpChannel > 0 THEN
                    INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore,nExLevel) VALUES (_tmpChannel,@@IDENTITY,_tmpUpUserID,_tmpLevel,1,_tmpUserScore,_tmpExLevel);
                END IF;
                
                
                INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                
                
                
                
                SET $returnVal=1;
            
        ELSE
                
                SELECT nPlayerID INTO _tmpPlayerID FROM Table_User WHERE szOpenId = $strOpenID and nChannel = _tmpChannel LIMIT 1;
                
                IF _tmpPlayerID>0 THEN  
                    
                    IF EXISTS (SELECT 1 FROM Table_User WHERE nPlayerID = _tmpPlayerID AND phone is NOT NULL) THEN
                        
                        SET $returnVal = 6;  
                        SET $strOutErrMsg = "该手机已绑定账号，请重新使用账号密码登录";
                        LEAVE rt;
                    ELSE
                        
                        UPDATE Table_User SET szPass = $strPass,preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                    
                        SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex , szPass, szNickname,szHeadPicUrl
                        INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutPass,$strOutNickName,$strOutHeadUrl
                        FROM Table_User WHERE nPlayerID = _tmpPlayerID;
            
                        SET $intFirstCreate  = 0;
                        SET $strOutErrMsg ='succ' ;
                        INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                        SET $returnVal=1;                              
                    END IF;
                
                ELSE
                    
                    SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
                
                    INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szOpenId,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4) 
                    VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strOpenID,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,2000,0,0,_tmpHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType);
                                        
                    SET $strNickName = CONCAT('GU',@@IDENTITY);
                    
                    
                    SET $intOutPlayerId  = @@IDENTITY;
                    SET $intOutCardCount = _tmpCardCount;
                    SET $intOutJinBi     = _tmpJinBiCount;
                    SET $strOutErrMsg    = 'succ';
                    SET $intFirstCreate  = 1;
                    SET $intOutExtentCode = 0;
                    SET $intOutSex       = 1;
                    SET $strOutPass      = $strPass;
                    SET $strOutNickName  = $strNickName;
                    SET $strOutUserSign  = "";
                    
                    UPDATE Table_User SET szNickname = $strNickName,szThirdAccount = CONCAT('GU',$intOutPlayerId),szThirdPass='123456', nChannel = _tmpChannel WHERE nPlayerID=$intOutPlayerId;
                    
                    
                    
                    IF _tmpChannel > 0 THEN
                        INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore,nExLevel) VALUES (_tmpChannel,@@IDENTITY,_tmpUpUserID,_tmpLevel,1,_tmpUserScore,_tmpExLevel);
                    END IF;
                    
                    
                    INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                    SET $returnVal=1;
                
                END IF;
			
        END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserYouKeCreate7
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserYouKeCreate7`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_UserYouKeCreate7`(
        IN $nLoginType  INT,
		IN $strPass     VARCHAR(64),
		IN $strNickName VARCHAR(64),
		IN $strPreLoginIp  VARCHAR(64),
		IN $strOpenID   VARCHAR(256),
		IN $nClubID     INT,
		IN $nUpperID    INT,
		IN $nOsType     INT,
		IN $strPhone    VARCHAR(15),
		IN $strPhonepass    VARCHAR(64),
		OUT $intOutPlayerId INT,
		OUT $intOutCardCount INT,
		OUT $intOutJinBi BIGINT,
		OUT $intOutScore INT,
		OUT $intOutExtentCode INT,
		OUT $intFirstCreate   INT,
		OUT $intOutSex        INT,
		OUT $strOutNickName  VARCHAR(64),
		OUT $strOutHeadUrl   VARCHAR(512),
		OUT $strOutUserSign  VARCHAR(256),
		OUT $strOutErrMsg    VARCHAR(256),
		OUT $returnVal       INT
)
rt:BEGIN
/*
2019-11-8  产生级别设定
2019-11-13 将创建时的IP写入有关字段,游客不加初始分
2019-11-22 登录日志增加俱乐部ID
2019-12-14 对找到了openid的账号检测手机是否绑定，如果绑定了需要重新登录
2020-1-11  修改创建账号时昵称都改为GU+ID
2020-1-14  增加系统类型数据
2020-2-17  支持微信，手机的创建
2020-2-19  手机注册时检测有没有该俱乐部的游客，如果有则覆盖这个游客
2020-2-28  增加手机注册时的密码，写到第三方账号的字段里
*/
        DECLARE  _tmpCardCount  INT DEFAULT     0;
        DECLARE  _tmpJinBiCount BIGINT DEFAULT  0;
        DECLARE  _tmpHeadUrl    VARCHAR(512);
        DECLARE  _tmpPlayerID   INT DEFAULT     0;
        DECLARE  _tmpWXID       VARCHAR(256);
        DECLARE  _tmpPhone      VARCHAR(15);
        DECLARE  _tmpPass       VARCHAR(64);
        
        DECLARE  _tmpChannel    INT DEFAULT     0;
        DECLARE  _tmpUpUserID   INT DEFAULT     0;        #上线ID
        DECLARE  _tmpLevel      INT DEFAULT     3;        #普通会员级别
        DECLARE  _tmpUserScore  INT DEFAULT     0;        #默认分数
        DECLARE  _tmpExLevel    INT DEFAULT     0;
        
        #----------------------
        #设置渠道ID
        IF $nClubID = 0 OR $nClubID = 10017 THEN
           SET _tmpChannel = 10017;  #各个版本不同，这里一定要注意
        ELSE
           #其他俱乐部不给初始分数
           SET _tmpChannel = $nClubID;
           SET _tmpUserScore = 0;
        END IF;
        
        -- 给测试的10004直接加分
        if _tmpChannel = 10004 then
             SET _tmpUserScore = 10000000;
        end if;
        
        IF NOT EXISTS(SELECT 1 FROM `table_clubinfo` WHERE `nClubID` = _tmpChannel AND `nStatus` = 1) THEN
           SET $returnVal = 0;
           SET $strOutErrMsg = "俱乐部不存在";
           LEAVE rt;
        END IF;
        
        IF $nUpperID > 0 THEN
                #设置传入的上线ID
                SET _tmpUpUserID = $nUpperID;
                SELECT IFNULL(`nExLevel`,1) INTO _tmpExLevel FROM `table_clubmember` WHERE nClubID = _tmpChannel AND `nPlayerID` = _tmpUpUserID;
                SET _tmpExLevel = _tmpExLevel + 1;
        ELSE
                #取群主做为上线
                SELECT nPlayerID INTO _tmpUpUserID FROM `table_clubmember` WHERE nClubID = _tmpChannel AND nLevel = 1;
                SET _tmpExLevel = 2;
        END IF;
        #----------------------
        
        IF $nLoginType<>2 AND ( $strOpenID IS NULL OR (LENGTH($strOpenID)<8) ) THEN
        
                SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
            
                #正式版使用
                INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szOpenId,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4) 
                VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strOpenID,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,2000,0,0,_tmpHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType);
                                
                SET $strNickName = CONCAT('GU',@@IDENTITY);
                
                #加入公共俱乐部
                SET $intOutPlayerId  = @@IDENTITY;
                SET $intOutCardCount = _tmpCardCount;
                SET $intOutJinBi     = _tmpJinBiCount;
                SET $strOutErrMsg    = 'succ' ;
                SET $intFirstCreate  = 1;
                SET $intOutExtentCode = 0;
                SET $intOutSex       = 1;
                SET $strOutNickName  = $strNickName;
                SET $strOutUserSign  = "";
                
                UPDATE Table_User SET szNickname = $strNickName,szThirdAccount = CONCAT('GU',$intOutPlayerId), nChannel = _tmpChannel WHERE nPlayerID=$intOutPlayerId;
                
                #---------------------------------
                #直接把游客加进俱乐部
                IF _tmpChannel > 0 THEN
                    INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore,nExLevel) VALUES (_tmpChannel,@@IDENTITY,_tmpUpUserID,_tmpLevel,1,_tmpUserScore,_tmpExLevel);
                END IF;
                #---------------------------------
                
                INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
               
                SET $returnVal=1;
            
        ELSE
                IF $nLoginType = 0 THEN
                #游客创建
                
                        #先查没有手机号的机器码
                        SELECT nPlayerID, szPass INTO _tmpPlayerID, _tmpPass FROM Table_User WHERE szOpenId = $strOpenID AND nChannel = _tmpChannel AND phone IS NULL LIMIT 1;
                        
                        IF _tmpPlayerID>0 THEN
                                    UPDATE Table_User SET szPass = $strPass,preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                                    
                                    SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex , szNickname,szHeadPicUrl
                                    INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutNickName,$strOutHeadUrl
                                    FROM Table_User WHERE nPlayerID = _tmpPlayerID;
                            
                                    SET $intFirstCreate  = 0;
                                    SET $strOutErrMsg ='succ' ;
                                    INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                                    SET $returnVal=1;
                                    LEAVE rt;                        
                        END IF;
                        
                        
                        #再查有手机号的机器码
                        SELECT nPlayerID, LTRIM(RTRIM(phone)),szPass INTO _tmpPlayerID, _tmpPhone, _tmpPass FROM Table_User WHERE szOpenId = $strOpenID AND nChannel = _tmpChannel AND phone IS NOT NULL LIMIT 1;
                        
                        IF _tmpPlayerID>0 THEN
                        
                            IF $strPass<>_tmpPass THEN   #已经绑了手机并且密码不对的，需要提示其使用手机登录
                                SET $returnVal = 6;  #这里设置为6，是为了和其他错误码相对应
                                SET $strOutErrMsg = CONCAT("该手机已绑定账号[",LEFT(_tmpPhone,3),"****",RIGHT(_tmpPhone,4),"]，\n请重新使用手机账号登录");
                                LEAVE rt;
                            ELSE
                            
                            UPDATE Table_User SET preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                            
                            SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex , szNickname,szHeadPicUrl
                            INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutNickName,$strOutHeadUrl
                            FROM Table_User WHERE nPlayerID = _tmpPlayerID;
                    
                            SET $intFirstCreate  = 0;
                            SET $strOutErrMsg ='succ' ;
                            INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                            SET $returnVal=1;                          
                            END IF;
                                                 
                        ELSE
                        
                            #没有的则新建
                            SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
                        
                            INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szOpenId,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4) 
                            VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strOpenID,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,2000,0,0,_tmpHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType);
                                                
                            SET $strNickName = CONCAT('GU',@@IDENTITY);
                            
                            #加入公共俱乐部
                            SET $intOutPlayerId  = @@IDENTITY;
                            SET $intOutCardCount = _tmpCardCount;
                            SET $intOutJinBi     = _tmpJinBiCount;
                            SET $strOutErrMsg    = 'succ';
                            SET $intFirstCreate  = 1;
                            SET $intOutExtentCode = 0;
                            SET $intOutSex       = 1;
                            SET $strOutNickName  = $strNickName;
                            SET $strOutUserSign  = "";
                            
                            UPDATE Table_User SET szNickname = $strNickName,szThirdAccount = CONCAT('GU',$intOutPlayerId), nChannel = _tmpChannel WHERE nPlayerID=$intOutPlayerId;
                            
                            #---------------------------------
                            #直接把游客加进俱乐部
                            IF _tmpChannel > 0 THEN
                                INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore,nExLevel) VALUES (_tmpChannel,@@IDENTITY,_tmpUpUserID,_tmpLevel,1,_tmpUserScore,_tmpExLevel);
                            END IF;
                            #---------------------------------
                            
                            INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                            SET $returnVal=1;
                                                    
                        END IF;
                        
                ELSEIF $nLoginType = 1 THEN
                #微信创建
                        
                        IF EXISTS( SELECT 1 FROM `table_user` WHERE wxid = $strOpenID AND nChannel = _tmpChannel AND nActive = 1) THEN
                                SELECT nPlayerID INTO _tmpPlayerID FROM Table_User WHERE wxid = $strOpenID AND nChannel = _tmpChannel AND nActive = 1 LIMIT 1;
                                
                                UPDATE Table_User SET szPass = $strPass,preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                                
                                SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex, szNickname,szHeadPicUrl
                                INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutNickName,$strOutHeadUrl
                                FROM Table_User WHERE nPlayerID = _tmpPlayerID;
                    
                                SET $intFirstCreate  = 0;
                                SET $strOutErrMsg ='succ' ;
                                INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                                SET $returnVal=1;
                        ELSE
                                #没有的则新建
                                SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
                                INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4,wxid) 
                                VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,2000,0,0,_tmpHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType,$strOpenID);
                                                
                                SET $strNickName = CONCAT('GU',@@IDENTITY);
                                #加入公共俱乐部
                                SET $intOutPlayerId  = @@IDENTITY;
                                SET $intOutCardCount = _tmpCardCount;
                                SET $intOutJinBi     = _tmpJinBiCount;
                                SET $strOutErrMsg    = 'succ';
                                SET $intFirstCreate  = 1;
                                SET $intOutExtentCode = 0;
                                SET $intOutSex       = 1;
                                SET $strOutNickName  = $strNickName;
                                SET $strOutUserSign  = "";
                                
                                UPDATE Table_User SET szNickname = $strNickName,szThirdAccount = CONCAT('GU',$intOutPlayerId), nChannel = _tmpChannel WHERE nPlayerID=$intOutPlayerId;
                                
                                #---------------------------------
                                #直接把游客加进俱乐部
                                IF _tmpChannel > 0 THEN
                                INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore,nExLevel) VALUES (_tmpChannel,@@IDENTITY,_tmpUpUserID,_tmpLevel,1,_tmpUserScore,_tmpExLevel);
                                END IF;
                                #---------------------------------
                                
                                INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                                SET $returnVal=1;                        
                        END IF;
                
                ELSEIF $nLoginType = 2 THEN
                #手机创建
                        IF EXISTS( SELECT 1 FROM `table_user` WHERE phone = $strPhone AND nChannel = _tmpChannel AND nActive = 1) THEN
                                SET $intFirstCreate  = 0;
                                SET $returnVal = 0;
                                SET $strOutErrMsg = "此手机号码已绑定账户，请更换另一号码进行尝试";
                                LEAVE rt;                        
                        ELSE
                                #没有的则新建
                                SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
                                INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4,phone,`szThirdPass`) 
                                VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,2000,0,0,_tmpHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType,$strPhone,$strPhonepass);
                                                
                                SET $strNickName = CONCAT('GU',@@IDENTITY);
                                #加入公共俱乐部
                                SET $intOutPlayerId  = @@IDENTITY;
                                SET $intOutCardCount = _tmpCardCount;
                                SET $intOutJinBi     = _tmpJinBiCount;
                                SET $strOutErrMsg    = 'succ';
                                SET $intFirstCreate  = 1;
                                SET $intOutExtentCode = 0;
                                SET $intOutSex       = 1;
                                SET $strOutNickName  = $strNickName;
                                SET $strOutUserSign  = "";
                                
                                UPDATE Table_User SET szNickname = $strNickName,szThirdAccount = CONCAT('GU',$intOutPlayerId), nChannel = _tmpChannel WHERE nPlayerID=$intOutPlayerId;
                                #---------------------------------
                                #直接把游客加进俱乐部
                                IF _tmpChannel > 0 THEN
                                INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore,nExLevel) VALUES (_tmpChannel,@@IDENTITY,_tmpUpUserID,_tmpLevel,1,_tmpUserScore,_tmpExLevel);
                                END IF;
                                #---------------------------------
                                
                                INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                                SET $returnVal=1;                         
                                                                                
                        END IF;
                
                END IF;
        
        END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_UserYouKeCreate8
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_UserYouKeCreate8`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `Pr_UserYouKeCreate8`(
                IN $nLoginType  INT,
		IN $strPass     VARCHAR(64),
		IN $strNickName VARCHAR(64),
		IN $strHeadUrl  VARCHAR(512),
		IN $strPreLoginIp  VARCHAR(64),
		IN $strOpenID   VARCHAR(256),
		IN $nClubID     INT,
		IN $nUpperID    INT,
		IN $nOsType     INT,
		IN $strPhone    VARCHAR(15),
		IN $strPhonepass    VARCHAR(64),
		OUT $intOutPlayerId INT,
		OUT $intOutCardCount INT,
		OUT $intOutJinBi BIGINT,
		OUT $intOutScore INT,
		OUT $intOutExtentCode INT,
		OUT $intFirstCreate   INT,
		OUT $intOutSex        INT,
		OUT $strOutNickName  VARCHAR(64),
		OUT $strOutHeadUrl   VARCHAR(512),
		OUT $strOutUserSign  VARCHAR(256),
		OUT $strOutErrMsg    VARCHAR(256),
		OUT $returnVal       INT
)
rt:BEGIN
/*
2019-11-8  产生级别设定
2019-11-13 将创建时的IP写入有关字段,游客不加初始分
2019-11-22 登录日志增加俱乐部ID
2019-12-14 对找到了openid的账号检测手机是否绑定，如果绑定了需要重新登录
2020-1-11  修改创建账号时昵称都改为GU+ID
2020-1-14  增加系统类型数据
2020-2-17  支持微信，手机的创建
2020-2-19  手机注册时检测有没有该俱乐部的游客，如果有则覆盖这个游客
2020-2-28  增加手机注册时的密码，写到第三方账号的字段里
2020-9-11  对微信的头像进行支持
*/
        DECLARE  _tmpCardCount  INT DEFAULT     0;
        DECLARE  _tmpJinBiCount BIGINT DEFAULT  0;
        DECLARE  _tmpHeadUrl    VARCHAR(512);
        DECLARE  _tmpPlayerID   INT DEFAULT     0;
        DECLARE  _tmpWXID       VARCHAR(256);
        DECLARE  _tmpPhone      VARCHAR(15);
        DECLARE  _tmpPass       VARCHAR(64);
        
        DECLARE  _tmpChannel    INT DEFAULT     0;
        DECLARE  _tmpUpUserID   INT DEFAULT     0;        #上线ID
        DECLARE  _tmpLevel      INT DEFAULT     3;        #普通会员级别
        DECLARE  _tmpUserScore  INT DEFAULT     10000000; #默认分数
        DECLARE  _tmpExLevel    INT DEFAULT     0;
        
        #----------------------
        #设置渠道ID
        IF $nClubID = 0 OR $nClubID = 10001 THEN
           SET _tmpChannel = 10001;  #各个版本不同，这里一定要注意
        ELSE
           #其他俱乐部不给初始分数
           SET _tmpChannel = $nClubID;
           SET _tmpUserScore = 0;
        END IF;
        
        IF NOT EXISTS(SELECT 1 FROM `table_clubinfo` WHERE `nClubID` = _tmpChannel AND `nStatus` = 1) THEN
           SET $returnVal = 0;
           SET $strOutErrMsg = "俱乐部不存在";
           LEAVE rt;
        END IF;
        
        IF $nUpperID > 0 THEN
                #设置传入的上线ID
                SET _tmpUpUserID = $nUpperID;
                SELECT IFNULL(`nExLevel`,1) INTO _tmpExLevel FROM `table_clubmember` WHERE nClubID = _tmpChannel AND `nPlayerID` = _tmpUpUserID;
                SET _tmpExLevel = _tmpExLevel + 1;
        ELSE
                #取群主做为上线
                SELECT nPlayerID INTO _tmpUpUserID FROM `table_clubmember` WHERE nClubID = _tmpChannel AND nLevel = 1;
                SET _tmpExLevel = 2;
        END IF;
        #----------------------
        
		#不是手机注册, 机器码是空的或者是很短的
        IF $nLoginType<>2 AND ( $strOpenID IS NULL OR (LENGTH($strOpenID)<8) ) THEN
        
                SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
            
                #正式版使用
                INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szOpenId,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4) 
                VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strOpenID,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,2000,0,0,_tmpHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType);
                                
                SET $strNickName = CONCAT('GU',@@IDENTITY);
                
                #加入公共俱乐部
                SET $intOutPlayerId  = @@IDENTITY;
                SET $intOutCardCount = _tmpCardCount;
                SET $intOutJinBi     = _tmpJinBiCount;
                SET $strOutErrMsg    = 'succ' ;
                SET $intFirstCreate  = 1;
                SET $intOutExtentCode = 0;
                SET $intOutSex       = 1;
                SET $strOutNickName  = $strNickName;
                SET $strOutUserSign  = "";
                
                UPDATE Table_User SET szNickname = $strNickName,szThirdAccount = CONCAT('GU',$intOutPlayerId), nChannel = _tmpChannel WHERE nPlayerID=$intOutPlayerId;
                
                #---------------------------------
                #直接把游客加进俱乐部
                IF _tmpChannel > 0 THEN
                    INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore,nExLevel) VALUES (_tmpChannel,@@IDENTITY,_tmpUpUserID,_tmpLevel,1,_tmpUserScore,_tmpExLevel);
                END IF;
                #---------------------------------
                
                INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
               
                SET $returnVal=1;
            
        ELSE
                IF $nLoginType = 0 THEN
                #游客创建
                
                        #先查没有手机号的机器码
                        SELECT nPlayerID, szPass INTO _tmpPlayerID, _tmpPass FROM Table_User WHERE szOpenId = $strOpenID AND nChannel = _tmpChannel AND phone IS NULL LIMIT 1;
                        
                        IF _tmpPlayerID>0 THEN
                                    UPDATE Table_User SET szPass = $strPass,preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                                    
                                    SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex , szNickname,szHeadPicUrl
                                    INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutNickName,$strOutHeadUrl
                                    FROM Table_User WHERE nPlayerID = _tmpPlayerID;
                            
                                    SET $intFirstCreate  = 0;
                                    SET $strOutErrMsg ='succ' ;
                                    INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                                    SET $returnVal=1;
                                    LEAVE rt;                        
                        END IF;
                        
                        
                        #再查有手机号的机器码
                        SELECT nPlayerID, LTRIM(RTRIM(phone)),szPass INTO _tmpPlayerID, _tmpPhone, _tmpPass FROM Table_User WHERE szOpenId = $strOpenID AND nChannel = _tmpChannel AND phone IS NOT NULL LIMIT 1;
                        
                        IF _tmpPlayerID>0 THEN
                        
                            IF $strPass<>_tmpPass THEN   #已经绑了手机并且密码不对的，需要提示其使用手机登录
                                SET $returnVal = 6;  #这里设置为6，是为了和其他错误码相对应
                                # This mobile phone number is bound to an account. Please log in again with your mobile account
                                SET $strOutErrMsg = CONCAT("FMT:'该手机已绑定账号[",LEFT(_tmpPhone,3),"****",RIGHT(_tmpPhone,4),"]，\n请重新使用手机账号登录','This mobile phone number is bound to an account[",
                                LEFT(_tmpPhone,3),"****",RIGHT(_tmpPhone,4),"]，\nPlease log in again with your mobile account");
                                LEAVE rt;
                            ELSE
                            
                            UPDATE Table_User SET preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                            
                            SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex , szNickname,szHeadPicUrl
                            INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutNickName,$strOutHeadUrl
                            FROM Table_User WHERE nPlayerID = _tmpPlayerID;
                    
                            SET $intFirstCreate  = 0;
                            SET $strOutErrMsg ='succ' ;
                            INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                            SET $returnVal=1;                          
                            END IF;
                                                 
                        ELSE
                        
                            #没有的则新建
                            SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
                        
                            INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szOpenId,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4) 
                            VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strOpenID,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,2000,0,0,_tmpHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType);
                                                
                            SET $strNickName = CONCAT('GU',@@IDENTITY);
                            
                            #加入公共俱乐部
                            SET $intOutPlayerId  = @@IDENTITY;
                            SET $intOutCardCount = _tmpCardCount;
                            SET $intOutJinBi     = _tmpJinBiCount;
                            SET $strOutErrMsg    = 'succ';
                            SET $intFirstCreate  = 1;
                            SET $intOutExtentCode = 0;
                            SET $intOutSex       = 1;
                            SET $strOutNickName  = $strNickName;
                            SET $strOutUserSign  = "";
                            
                            UPDATE Table_User SET szNickname = $strNickName,szThirdAccount = CONCAT('GU',$intOutPlayerId), nChannel = _tmpChannel WHERE nPlayerID=$intOutPlayerId;
                            
                            #---------------------------------
                            #直接把游客加进俱乐部
                            IF _tmpChannel > 0 THEN
                                INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore,nExLevel) VALUES (_tmpChannel,@@IDENTITY,_tmpUpUserID,_tmpLevel,1,_tmpUserScore,_tmpExLevel);
                            END IF;
                            #---------------------------------
                            
                            INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                            SET $returnVal=1;
                                                    
                        END IF;
                        
                ELSEIF $nLoginType = 1 THEN
                #微信创建
                        
                        IF EXISTS( SELECT 1 FROM `table_user` WHERE wxid = $strOpenID AND nChannel = _tmpChannel AND nActive = 1) THEN
                                SELECT nPlayerID INTO _tmpPlayerID FROM Table_User WHERE wxid = $strOpenID AND nChannel = _tmpChannel AND nActive = 1 LIMIT 1;
                                
                                UPDATE Table_User SET szNickName = $strNickName, szHeadPicUrl = $strHeadUrl, szPass = $strPass,preLoginIp = $strPreLoginIp,preLoginTime = NOW(),onlineSta=1 WHERE nPlayerID = _tmpPlayerID;
                                
                                SELECT nPlayerId,nCardCount,nJinBi, score, extendCode,szSign ,nSex, szNickname,szHeadPicUrl
                                INTO $intOutPlayerId ,$intOutCardCount,$intOutJinBi, $intOutScore, $intOutExtentCode,$strOutUserSign,$intOutSex,$strOutNickName,$strOutHeadUrl
                                FROM Table_User WHERE nPlayerID = _tmpPlayerID;
                    
                                SET $intFirstCreate  = 0;
                                SET $strOutErrMsg ='succ' ;
                                INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                                SET $returnVal=1;
                        ELSE
                                #没有的则新建
                                SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
                                INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4,wxid) 
                                VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,2000,0,0,$strHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType,$strOpenID);
                                                
                                #加入公共俱乐部
                                SET $intOutPlayerId  = @@IDENTITY;
                                SET $intOutCardCount = _tmpCardCount;
                                SET $intOutJinBi     = _tmpJinBiCount;
                                SET $strOutErrMsg    = 'succ';
                                SET $intFirstCreate  = 1;
                                SET $intOutExtentCode = 0;
                                SET $intOutSex       = 1;
                                SET $strOutNickName  = $strNickName;
								SET $strOutHeadUrl   = $strHeadUrl;
                                SET $strOutUserSign  = "";
                                
                                UPDATE Table_User SET szThirdAccount = CONCAT('GU',$intOutPlayerId), nChannel = _tmpChannel WHERE nPlayerID=$intOutPlayerId;
                                
                                #---------------------------------
                                #直接把游客加进俱乐部
                                IF _tmpChannel > 0 THEN
									INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore,nExLevel) VALUES (_tmpChannel,@@IDENTITY,_tmpUpUserID,_tmpLevel,1,_tmpUserScore,_tmpExLevel);
                                END IF;
                                #---------------------------------
                                
                                INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                                SET $returnVal=1;                        
                        END IF;
                
                ELSEIF $nLoginType = 2 THEN
                #手机创建
                        IF EXISTS( SELECT 1 FROM `table_user` WHERE phone = $strPhone AND nChannel = _tmpChannel AND nActive = 1) THEN
                                SET $intFirstCreate  = 0;
                                SET $returnVal = 0;
                                SET $strOutErrMsg = "PR_PHONE_BOUND";
                                LEAVE rt;                        
                        ELSE
                                #没有的则新建
                                SET _tmpHeadUrl = CONCAT(CEILING(RAND() * 6));
                                INSERT INTO Table_User(nCardCount,nJinBi,szCreateTime,nActive,szPass,szNickname,preLoginTime,preLoginIp,onlineSta,reser1,reser2,extendCode,szHeadPicUrl,nLastClubID,strre1,reset4,phone,`szThirdPass`) 
                                VALUES(_tmpCardCount,_tmpJinBiCount,NOW(),1,$strPass,$strNickName,DATE_SUB(NOW(),INTERVAL 1 DAY),$strPreLoginIp,1,2000,0,0,_tmpHeadUrl,_tmpChannel,$strPreLoginIp,$nOsType,$strPhone,$strPhonepass);
                                                
                                SET $strNickName = CONCAT('GU',@@IDENTITY);
                                #加入公共俱乐部
                                SET $intOutPlayerId  = @@IDENTITY;
                                SET $intOutCardCount = _tmpCardCount;
                                SET $intOutJinBi     = _tmpJinBiCount;
                                SET $strOutErrMsg    = 'succ';
                                SET $intFirstCreate  = 1;
                                SET $intOutExtentCode = 0;
                                SET $intOutSex       = 1;
                                SET $strOutNickName  = $strNickName;
                                SET $strOutUserSign  = "";
                                
                                UPDATE Table_User SET szNickname = $strNickName,szThirdAccount = CONCAT('GU',$intOutPlayerId), nChannel = _tmpChannel WHERE nPlayerID=$intOutPlayerId;
                                #---------------------------------
                                #直接把游客加进俱乐部
                                IF _tmpChannel > 0 THEN
                                INSERT INTO Table_ClubMember( nClubID,nPlayerID,nExtenID,nLevel,nStatus,nScore,nExLevel) VALUES (_tmpChannel,@@IDENTITY,_tmpUpUserID,_tmpLevel,1,_tmpUserScore,_tmpExLevel);
                                END IF;
                                #---------------------------------
                                
                                INSERT INTO Table_Web_LoginLog(nPlayerId,nClubID,szNickName,nAction,szTime,loginIp) VALUES ($intOutPlayerId,_tmpChannel,$strNickName, 1,NOW(),$strPreLoginIp);
                                SET $returnVal=1;                         
                                                                                
                        END IF;
                
                END IF;
        
        END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_user_advise
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_user_advise`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_user_advise`(
	IN $nPlayerID INT,
	IN $nClubID INT,
	IN $msg varchar(256)
)
BEGIN
   insert into table_club_custom_msg (nPlayerID,nClubID,szMsg) values ($nPlayerID,$nClubID,$msg);
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_user_check_phonenum
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_user_check_phonenum`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_user_check_phonenum`(
    IN  $strPhone    VARCHAR(64),
    IN  $nClubID     INT,
    OUT $returnVal   INT
    )
returnVal:BEGIN
  
    
    IF EXISTS(SELECT * FROM Table_User WHERE phone=$strPhone AND `nChannel` = $nClubID and nActive = 1 ) THEN
        SET $returnVal = 0;
    ELSE
        SET $returnVal = 1;
    end if;
    
    
  END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_user_game_lock
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_user_game_lock`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_user_game_lock`(
                IN $playid      INT,
                IN $table_preid INT,
                OUT $tid        INT,
                OUT $rval       INT
)
rt:BEGIN

/*
如果玩家已有相同的锁，则成功返回
*/
IF EXISTS (SELECT 1 FROM table_user_gamelock WHERE nTablePreID = $table_preid and nPlayerID = $playid) THEN
        SELECT nTablePreID INTO $tid FROM table_user_gamelock WHERE nPlayerID = $playid LIMIT 1;
        SET $rval = 1; #重新锁也是成功的
        LEAVE rt;
END IF;

/*
用户进入游戏加锁
*/
IF EXISTS (SELECT 1 FROM table_user_gamelock WHERE nPlayerID = $playid) THEN
        SELECT nTablePreID INTO $tid FROM table_user_gamelock WHERE nPlayerID = $playid LIMIT 1;
        SET $rval = 2; #存在游戏锁定桌子
        LEAVE rt;
END IF;
 
INSERT INTO `table_user_gamelock` (  `nPlayerID`,  `nTablePreID`) VALUES  ( $playid, $table_preid) ;
#锁定成功
SET $rval = 1;
SET $tid = 0;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_user_game_unlock
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_user_game_unlock`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_user_game_unlock`(
                IN $playid      INT,
                IN $table_preid INT,
                OUT $rval       INT
)
rt:BEGIN

IF EXISTS (SELECT 1 FROM table_user_gamelock WHERE nPlayerID = $playid AND nTablePreID = $table_preid) THEN
        DELETE FROM table_user_gamelock WHERE nPlayerID = $playid AND nTablePreID = $table_preid;
        SET $rval = 1; 
        LEAVE rt;
END IF;
 

SET $rval = 2;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_user_qurey_realinfo
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_user_qurey_realinfo`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_user_qurey_realinfo`(
			in  $nPlayerID int,
			OUT $strRealName varchar(32),
			OUT $strIDCard   VARCHAR(128)
)
RT:begin
/*
查询用户实名认证信息
*/
 
#该用户不存在
IF NOT EXISTS (SELECT * FROM Table_User WHERE nPlayerId=$nPlayerID) then
    LEAVE RT;
END IF;
    
SELECT  realName, perID INTO $strRealName, $strIDCard FROM Table_User WHERE nPlayerId = $nPlayerID;
  
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_user_update_nickname
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_user_update_nickname`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_user_update_nickname`(
			in $intPlayerId int,
			in $strNickName varchar(64),
			OUT $szNick     VARCHAR(64),
			OUT $retVal     INT,
			OUT $retMsg     VARCHAR(256)
)
RT:begin

DECLARE _nFlag INT;
 
IF NOT EXISTS (SELECT * FROM Table_User WHERE nPlayerId=$intPlayerId) then
    SET $retVal = 0;
    SET $retMsg = "该用户不存在";
    SET $szNick = "";
    LEAVE RT;
END IF;
SELECT szNickName INTO $szNick FROM Table_User WHERE nPlayerId=$intPlayerId;
 
SELECT IFNULL(reset3,0) into _nFlag FROM Table_User WHERE nPlayerId=$intPlayerId;
 
IF _nFlag > 0 THEN
    SET $retVal = 3;
    SET $retMsg = "您已修改过昵称，不能再次修改";
    LEAVE RT;
END IF;
 
IF EXISTS (SELECT 1 FROM Table_User WHERE szNickName = $strNickName) THEN
    SET $retVal = 2;
    SET $retMsg = "昵称已被占用";
    LEAVE RT;
END IF;
    
UPDATE Table_User SET `szNickName` = $strNickName, reset3 = 1 WHERE nPlayerId = $intPlayerId;
SET $retVal = 1;
SET $szNick = $strNickName;
SET $retMsg = "修改成功";    
                             
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_user_update_realname
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_user_update_realname`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` PROCEDURE `pr_user_update_realname`(
			in $intPlayerId int,
			in $strRealName varchar(32),
			IN $strIDCard   VARCHAR(128),
			OUT $retVal     INT
)
RT:begin
/*
用户实名认证
*/
DECLARE _nFlag INT;
#该用户不存在
IF NOT EXISTS (SELECT * FROM Table_User WHERE nPlayerId=$intPlayerId) then
    SET $retVal = 0;
    LEAVE RT;
END IF;
    
UPDATE Table_User SET `realName` = $strRealName, perID = $strIDCard WHERE nPlayerId = $intPlayerId;
SET $retVal = 1;
  
                             
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_web_totalDiamond
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_web_totalDiamond`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_web_totalDiamond`()
BEGIN
  
	declare _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 00:00:00');
  declare _EndDate  varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 23:59:59');

  DECLARE _nType,_TotalAmount INT DEFAULT 0;
  DECLARE _szDesc VARCHAR(256);
  DECLARE _tDate DATE;
   DECLARE _nType1,_nType2,_nType3,_nType4,_nType5 BIGINT DEFAULT 0;

  set _tDate=DATE_SUB(CURDATE(),INTERVAL 1 day);
  
  select IFNULL(sum(if(nType=1,nAmount,0)),0) ,
	  IFNULL(sum(if(nType=2,nAmount,0)),0),
	  IFNULL(sum(if(nType=3,nAmount,0)),0),
      IFNULL(sum(if(nType=4,nAmount,0)),0),
      IFNULL(sum(if(nType=5,nAmount,0)),0)
      INTO _nType1,_nType2,_nType3,_nType4,_nType5
      from table_clublogdiamond 
       WHERE CreateTime >= _StartDate AND CreateTime<=_EndDate;
 IF NOT EXISTS (select 1 from table_web_totalDiamond where	tDate=_tDate) THEN
         
      INSERT INTO table_web_totalDiamond(tDate,nType1,nType2,nType3,nType4,nType5)
       VALUES(_tDate,_nType1,_nType2,_nType3,_nType4,_nType5);
     ELSE
      update table_web_totalDiamond set nType1=_nType1,nType2=_nType2,nType3=_nType3,nType4=_nType4,nType5=_nType5
          where	tDate=_tDate;

  end IF;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_web_totalnew
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_web_totalnew`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_web_totalnew`()
BEGIN
      
      declare _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 00:00:00');
      declare _EndDate  varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 23:59:59');
      DECLARE _id1,_id2,_id3,_id4,_id5,_id6,_nPlayerID,_daylogin,_dayactive,_daynewuser,_daynewclub INT;
      DECLARE _dDate DATE;

      declare done int default false;
      
	    declare cur cursor for select nPlayerID1,nPlayerID2,nPlayerID3,nPlayerID4,nPlayerID5,nPlayerID6 
                         from table_web_zhanji where tEndTime >=_StartDate and tEndTime <=_EndDate;
      declare cur2 cursor for select DISTINCT nPlayerID from Table_ClubBigGameScoreDetail where tEndTime >=_StartDate and tEndTime <=_EndDate;

      declare cur3 cursor for select DISTINCT nPlayerID from Table_ClubGameScoreDetail where tEndTime >=_StartDate and tEndTime <=_EndDate;

			declare continue handler for not found set done = true;

       set _dDate=DATE_SUB(CURDATE(),INTERVAL 1 day);
       
       CREATE TABLE `totaltmp` (
         `Playerid` int(11) NOT NULL,
         PRIMARY KEY (`Playerid`),
         KEY `idex_Playerid` (`Playerid`)
         );
					open cur;  
					read_loop:loop  
					fetch cur into _id1,_id2,_id3,_id4,_id5,_id6;  
					if done then  
							leave read_loop;    
					end if;  
             IF NOT EXISTS (select 1 from totaltmp where	Playerid=_id1) THEN
                INSERT INTO totaltmp(Playerid) values(_id1);
             END IF;
             IF NOT EXISTS (select 1 from totaltmp where	Playerid=_id2) THEN
                INSERT INTO totaltmp(Playerid) values(_id2);
             END IF;
             IF NOT EXISTS (select 1 from totaltmp where	Playerid=_id3) THEN
                INSERT INTO totaltmp(Playerid) values(_id3);
             END IF;
             IF NOT EXISTS (select 1 from totaltmp where	Playerid=_id4) THEN
                INSERT INTO totaltmp(Playerid) values(_id4);
             END IF;
             IF NOT EXISTS (select 1 from totaltmp where	Playerid=_id5) THEN
                INSERT INTO totaltmp(Playerid) values(_id5);
             END IF;
             IF NOT EXISTS (select 1 from totaltmp where	Playerid=_id6) THEN
                INSERT INTO totaltmp(Playerid) values(_id6);
             END IF;
					end loop;
					close cur;

          set done=false;
          open cur2;  
					read_loop:loop  
					fetch cur2 into _nPlayerID;  
					if done then  
							leave read_loop;    
					end if;  
             IF NOT EXISTS (select 1 from totaltmp where	Playerid=_nPlayerID) THEN
                INSERT INTO totaltmp(Playerid) values(_nPlayerID);
             END IF;
            
					end loop;
					close cur2;

          set done=false;
          open cur3;  
					read_loop:loop  
					fetch cur3 into _nPlayerID;  
					if done then  
							leave read_loop;    
					end if;  
             IF NOT EXISTS (select 1 from totaltmp where	Playerid=_nPlayerID) THEN
                INSERT INTO totaltmp(Playerid) values(_nPlayerID);
             END IF;
            
					end loop;
          close cur3;
       
      select count(*) INTO _dayactive from totaltmp;
      select count(DISTINCT nPlayerid) INTO _daylogin from table_web_loginlog where szTime >=_StartDate and szTime <=_EndDate;
      select count(*) INTO _daynewuser from table_user where szCreateTime >=_StartDate and szCreateTime <=_EndDate;
      select COUNT(*) INTO _daynewclub from table_clubinfo where CreateTime >=_StartDate and CreateTime <=_EndDate;    

      IF NOT EXISTS (select 1 from table_web_activenew where	tDate=_dDate) THEN
         INSERT INTO table_web_activenew(tDate,daylogin,dayactive,daynewuser,daynewclub) VALUES(_dDate,_daylogin,_dayactive,_daynewuser,_daynewclub);
        ELSE
        update table_web_activenew set daylogin=_daylogin,dayactive=_dayactive,daynewuser=_daynewuser,daynewclub=_daynewclub
        where	tDate=_dDate;
      END IF;
      
      DROP TABLE IF EXISTS `totaltmp`;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_web_totalScore
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_web_totalScore`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `pr_web_totalScore`()
BEGIN
  
	declare _StartDate varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 00:00:00');
  declare _EndDate  varchar(30) default CONCAT(DATE_SUB(CURDATE(),INTERVAL 1 day),' 23:59:59');

  DECLARE _nType,_TotalAmount INT DEFAULT 0;
  DECLARE _szDesc VARCHAR(256);
  DECLARE _tDate DATE;
   DECLARE _nType1,_nType2,_nType3,_nType4,_nType5,_nType6,_nType7,_nType8,_nType9,_nType10,_nType11,_nType12,_nType13 BIGINT DEFAULT 0;

  set _tDate=DATE_SUB(CURDATE(),INTERVAL 1 day);
  

     select IFNULL(sum(if(nType=1,nAmount,0)),0) ,
	  IFNULL(sum(if(nType=2,nAmount,0)),0),
	  IFNULL(sum(if(nType=3,nAmount,0)),0),
      IFNULL(sum(if(nType=4,nAmount,0)),0),
      IFNULL(sum(if(nType=5,nAmount,0)),0),
      IFNULL(sum(if(nType=6,nAmount,0)),0),
      IFNULL(sum(if(nType=7,nAmount,0)),0),
      IFNULL(sum(if(nType=8,nAmount,0)),0),
      IFNULL(sum(if(nType=9,nAmount,0)),0),
      IFNULL(sum(if(nType=10,nAmount,0)),0),
      IFNULL(sum(if(nType=11,nAmount,0)),0),
      IFNULL(sum(if(nType=12,nAmount,0)),0),
      IFNULL(sum(if(nType=13,nAmount,0)),0)
      INTO _nType1,_nType2,_nType3,_nType4,_nType5,_nType6,_nType7,_nType8,_nType9,_nType10,_nType11,_nType12,_nType13
      from Table_ClubLogScore
       WHERE CreateTime >= _StartDate AND CreateTime<=_EndDate;
  IF NOT EXISTS (select 1 from table_web_totalScore where	tDate=_tDate) THEN
         
     INSERT INTO table_web_totalScore(tDate,nType1,nType2,nType3,nType4,nType5,nType6,nType7,nType8,nType9,nType10,nType11,nType12,nType13)
       VALUES(_tDate,_nType1,_nType2,_nType3,_nType4,_nType5,_nType6,_nType7,_nType8,_nType9,_nType10,_nType11,_nType12,_nType13);
   ELSE
     update table_web_totalScore set nType1=_nType1,nType2=_nType2,nType3=_nType3,nType4=_nType4,nType5=_nType5,nType6=_nType6,
             nType7=_nType7,nType8=_nType8,nType9=_nType9,nType10=_nType10,nType11=_nType11,nType12=_nType12,nType13=_nType13
          where	tDate=_tDate;
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_WriteExternCode2
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_WriteExternCode2`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_WriteExternCode2`(
					in $intPlayerId int,
					in $intExternCode int,
					out $strOutErrMsg varchar(256),
                                        out $intAddDiamond int,
					out $returnVal int
                    
)
returnVal:begin

					declare _intRealExternID,_PromoterCount int default 0;
					declare _EnterPriseID,_NickName varchar(64);
                                        declare _nCardCount int default 0;
                                        declare _AddDiamond int default 68;
					
					if ($intExternCode <= 100000) then
						set $strOutErrMsg = '请输入正确的6位推荐码';
						set $returnVal=0;
						leave returnVal;
					end if;
				if ((exists(select * from AccountInfo where ExtendCode=$intExternCode)) or (exists(select * from EnterPrise where ExtendCode=$intExternCode))) then
							update Table_User set nCardCount = nCardCount +_AddDiamond, extendCode= $intExternCode, BindingTime=NOW() where  nPlayerId=$intPlayerId; 
							set $strOutErrMsg = 'OK';
							set $intAddDiamond = _AddDiamond;	
							SELECT szNickName,nCardCount INTO _NickName,_nCardCount FROM TABLE_USER WHERE nPlayerId = $intPlayerId;
							CALL Pr_UserDiamondActionLog($intPlayerId,_NickName,_AddDiamond,CONCAT('绑定推荐码 ','余额：',_nCardCount));
							select EnterPriseID into _EnterPriseID from EnterPrise where ExtendCode= $intExternCode;
							select COUNT(1) into _PromoterCount from Table_PromoterCount where PlayerId=$intPlayerId and EnterPriseID=_EnterPriseID;
						
						if _PromoterCount=0 then
		          
							insert into Table_PromoterCount(PlayerId, EnterPriseID, szNickName, IsAdd, IsValid, IsPay) 
							values($intPlayerId, _EnterPriseID,_NickName, 1,0,0);
							
						end if;
						set $returnVal=1;
						leave returnVal;
				else
						set $strOutErrMsg = '推荐码错误，请重新输入';
						set $returnVal=0;
						leave returnVal;
				end if;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_WriteTaxRecord2_shard
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_WriteTaxRecord2_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_WriteTaxRecord2_shard`(
IN $nServerID INT,
in $nPlayerId int,
in $nGameId   int,
in $nTableID  int,
in $nAmount   int,
in $nType     int, 
in $nTaxRate  int,
in $szDesc    varchar(256),
in $nClubID   int,
in $FreeFee   int
)
RT:begin
	
	set @myscore=0;
	set @clubscore=0;
	set @bRobot=0;

	select nScore into @myscore from table_clubmember where nPlayerID = $nPlayerId and nClubID=$nClubID LIMIT 1;
	
	select nScore into @clubscore from table_clubinfo where nClubID = $nClubID;
			
	select bRobot into @bRobot from table_user where nPlayerId = $nPlayerId;
	
	IF @bRobot=0 THEN
		
		set @nAmount=-$nAmount,@szOrder=NULL,@operateID=NULL,@nSubType=0;
		
		call pr_club_changeLogClubScore3_comman($nPlayerID,$nGameId,$nTableID,@nAmount,@szOrder,@operateID,@myscore,$nType,@nSubType,$nTaxRate,$szDesc,$nClubID,@bRobot);
			
		INSERT INTO Table_ClubLogPlatformScore (nClubID,nGameID,nTableID,nAmount,nScore,nType,nTaxRate,szDesc,sourceid) VALUES ($nClubID,$nGameId,$nTableID,$nAmount,@clubscore,$nType,$nTaxRate,$szDesc,$nPlayerId);
	
	end IF;
	
    
    IF $FreeFee=1 AND @bRobot = 0 THEN
       
		set @szOrder=null,@operateID=NULL,@nTaxRate=0,@nSubType=0,@nType=16,@szDesc='返还服务费';
		
		call pr_club_changeLogClubScore3_comman($nPlayerID,$nGameId,$nTableID,$nAmount,@szOrder,@operateID,@myscore,@nType,@nSubType,@nTaxRate,@szDesc,$nClubID,@bRobot);
		
		INSERT INTO Table_ClubLogPlatformScore(nClubID,nGameID,nTableID,nAmount,nScore,nType,nTaxRate,szDesc,sourceid) VALUES ($nClubID,$nGameId,$nTableID,$nAmount,@clubscore,13,0,'返还服务费',$nPlayerId);
    
	END IF;		
		
		
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_WriteTaxRecord2_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_WriteTaxRecord2_temp`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_WriteTaxRecord2_temp`(
IN $nServerID INT,
in $nPlayerId int,
in $nGameId   int,
in $nTableID  int,
in $nAmount   int,
in $nType     int, 
in $nTaxRate  int,
in $szDesc    varchar(256),
in $nClubID   int,
in $FreeFee   int
)
RT:begin

    DECLARE _myid           INT;
    DECLARE _empty_id       INT;
    DECLARE _myscore        BIGINT;
    DECLARE _clubscore      BIGINT;
    DECLARE _bRobot         INT DEFAULT 0;
    
    SET _myscore = 0;
    SET _clubscore = 0;
    
    select ID, nScore into _myid, _myscore from table_clubmember where nPlayerID = $nPlayerId and nClubID=$nClubID LIMIT 1;
    select nScore into _clubscore from table_clubinfo where nClubID = $nClubID;
		
    
    
	
    select bRobot into _bRobot from table_user where nPlayerId = $nPlayerId;
    
    
    IF _bRobot=0 THEN
        insert into Table_ClubLogScore(nPlayerID,nGameID,nTableID,nAmount,nScore,nType,nTaxRate,szDesc,clubid,bRobot) values ($nPlayerId,$nGameId,$nTableID,-$nAmount,_myscore,$nType,$nTaxRate,$szDesc,$nClubID,_bRobot);
	INSERT INTO Table_ClubLogPlatformScore (nClubID,nGameID,nTableID,nAmount,nScore,nType,nTaxRate,szDesc,sourceid) VALUES ($nClubID,$nGameId,$nTableID,$nAmount,_clubscore,$nType,$nTaxRate,$szDesc,$nPlayerId);
    end IF;
	
    
    IF $FreeFee=1 AND _bRobot = 0 THEN
        
        
        INSERT INTO Table_ClubLogScore(nPlayerID,nGameID,nTableID,nAmount,nScore,nType,nTaxRate,szDesc,clubid,bRobot) VALUES ($nPlayerId,$nGameId,$nTableID,$nAmount,_myscore,16,0,'返还服务费',$nClubID,_bRobot);
        
        
        INSERT INTO Table_ClubLogPlatformScore(nClubID,nGameID,nTableID,nAmount,nScore,nType,nTaxRate,szDesc,sourceid) VALUES ($nClubID,$nGameId,$nTableID,$nAmount,_clubscore,13,0,'返还服务费',$nPlayerId);
    END IF;	
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_WriteUserZhanJi3
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_WriteUserZhanJi3`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_WriteUserZhanJi3`(
					in $GameId  int,
					in $TableId int,
					in $nPlayerID int,
					in $szNickName varchar(64), 
					in $szStartTime varchar(30),
					in $szEndTime varchar(30),
					in $szRecToken varchar(256), 
					in $nDiFen int,
					in $jushu int,
					in $totalJu int,
					in $fuju  int,
					in $fuType int, 
					in $fuFangShi int, 
					in $zhangjia int,
					in $szPlayerId1 int,
					in $nArrow1 int,
					in $nScore1 int,
					in $szNickname1 varchar(64), 
					in $szPlayerId2 int,
					in $nArrow2 int,
					in $nScore2 int,
					in $szNickName2 varchar(64), 
					in $szPlayerId3 int,
					in $nArrorw3 int,
					in $nScore3 int,
					in $szNickName3 varchar(64), 
					in $szPlayerId4 int,
					in $nArrow4 int,
					in $nScore4 int,
					in $szNickName4 varchar(64), 
					in $szPlayerId5 int,
					in $nArrow5 int,
					in $nScore5 int,
					in $szNickName5 varchar(64), 
					in $szPlayerId6 int,
					in $nArrow6 int,
					in $nScore6 int,
					in $szNickName6 varchar(64), 
					in $szPlayerId7 int,
					in $nArrow7 int,
					in $nScore7 int,
					in $szNickName7 varchar(64), 
					in $szPlayerId8 int,
					in $nArrow8 int,
					in $nScore8 int,
					in $szNickName8 varchar(64), 
					
					in $minggan1 int,
					in $minggan2 int,
					in $minggan3 int,
					in $minggan4 int,
					in $minggan5 int,
					in $minggan6 int,
					in $minggan7 int,
					in $minggan8 int,
					
					in $angan1 int,
					in $angan2 int,
					in $angan3 int,
					in $angan4 int, 
					in $angan5 int,
					in $angan6 int,
					in $angan7 int,
					in $angan8 int, 
					
					in $nMyChairId int,
					in $nIsEndJu int,
					out $intOutIdx int,
					out $returnVal int
)
begin

		insert into Table_Web_UserZhangJi(
	            nGameId,TableId,nPlayerID,szNickName, szStartTime,szEndTime,nDiFen,jushu,fuju,
							fuType, fuFangShi, zhangjia,szPlayerId1,nArrow1,nScore1,szNickname1, szPlayerId2,nArrow2,
							nScore2,szNickName2, szPlayerId3,nArrorw3,nScore3,szNickName3, szPlayerId4,nArrow4,nScore4,
							szNickName4,szPlayerId5,nArrow5,nScore5,szNickName5,szPlayerId6,nArrow6,nScore6,szNickName6, 
							szPlayerId7,nArrow7,nScore7,szNickName7, szPlayerId8,nArrow8,nScore8,szNickName8,minggan1,
							minggan2,minggan3,minggan4,minggan5,minggan6,minggan7,minggan8,angan1,angan2,
							angan3,angan4,angan5,angan6,angan7,angan8,totalJu,nMyChairId,szRecToken)
		values(
		        $GameId,$TableId ,$nPlayerID ,LTRIM(RTRIM($szNickName)),$szStartTime,$szEndTime,$nDiFen,$jushu,$fuju,
						$fuType,$fuFangShi,$zhangjia,$szPlayerId1,$nArrow1,$nScore1,LTRIM(RTRIM($szNickname1)),$szPlayerId2,$nArrow2,
						$nScore2,LTRIM(RTRIM($szNickName2)),$szPlayerId3,$nArrorw3,$nScore3,LTRIM(RTRIM($szNickName3)),$szPlayerId4,$nArrow4,$nScore4,
						LTRIM(RTRIM($szNickName4)),$szPlayerId5,$nArrow5,$nScore5,LTRIM(RTRIM($szNickName5)),$szPlayerId6,$nArrow6,$nScore6,LTRIM(RTRIM($szNickName6)),
						$szPlayerId7,$nArrow7,$nScore7,LTRIM(RTRIM($szNickName7)),$szPlayerId8,$nArrow8,$nScore8,LTRIM(RTRIM($szNickName8)),$minggan1,
						$minggan2,$minggan3,$minggan4,$minggan5,$minggan6,$minggan7,$minggan8,$angan1,$angan2,
						$angan3,$angan4,$angan5,$angan6,$angan7,$angan8,$totalJu,$nMyChairId,LTRIM(RTRIM($szRecToken)) 
				);
			set $intOutIdx = @@identity;
			if $nIsEndJu = 1 then
					insert into Table_Web_UserTableZhangJi(nPlayerId,nTableId,szStartTime,szEndTime,JuShu,FuJu,winRate,userIdx)
									values($nPlayerID,$TableId, $szStartTime,$szEndTime,$jushu,$fuju ,0,$intOutIdx);
			end if;
			
						
						call Pr_Score_AddScoreLimitDay($nPlayerID,5,1,$GameId);	
			
		set $returnVal=1;
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_WriteVipScore
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_WriteVipScore`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_WriteVipScore`(
					in $intPlayerId int,
					in $intScore int
)
begin
			insert into Table_VipPlayerScore(nPlayerId,nScore,szTime) values($intPlayerId,$intScore,NOW());
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for Pr_WriteZhanJi3
-- ----------------------------
DROP PROCEDURE IF EXISTS `Pr_WriteZhanJi3`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Pr_WriteZhanJi3`(
			in $intPlayerId int,
			in $intGameId int,
			in $intTableId int,
			IN $intGameRound INT,
			IN $intTotalRound INT,
			in $intMyChairId int,
			in $intChair0Score int,
			in $intChair1Score int,
			in $intChair2Score int,
			in $intChair3Score int,
			in $intChair4Score int,
			in $intChair5Score int,
			in $intChair6Score int,
			in $intChair7Score int,
			
			in $szChair0Name varchar(64),
			in $szChair1Name varchar(64),
			in $szChair2Name varchar(64),
			in $szChair3Name varchar(64),
			in $szChair4Name varchar(64),
			in $szChair5Name varchar(64),
			in $szChair6Name varchar(64),
			in $szChair7Name varchar(64),
			in $strTime varchar(64),
			out $intOutIdx int,
			out $returnVal int
)
begin
			declare _counts  int default 0;	
			insert into Table_Web_ZhanJi(nPlayerId,nGameId,nTableId,nMyChairId,
	                                nChair0Score,nChair1Score,nChair2Score,nChair3Score,
	                                nChair4Score,nChair5Score,nChair6Score,nChair7Score,
	                                szChair0Name,szChair1Name,szChair2Name,szChair3Name,szChair4Name,szChair5Name,szChair6Name,szChair7Name,
	                                szTime,nGameRound,nTotalRound) 
			values($intPlayerId,$intGameId,$intTableId,$intMyChairId,$intChair0Score,$intChair1Score,$intChair2Score,$intChair3Score,
									$intChair4Score,$intChair5Score,$intChair6Score,$intChair7Score,
									LTRIM(RTRIM($szChair0Name)),LTRIM(RTRIM($szChair1Name)),LTRIM(RTRIM($szChair2Name)),LTRIM(RTRIM($szChair3Name)),
									LTRIM(RTRIM($szChair4Name)),LTRIM(RTRIM($szChair5Name)),LTRIM(RTRIM($szChair6Name)),LTRIM(RTRIM($szChair7Name)),
									LTRIM(RTRIM($strTime)),$intGameRound,$intTotalRound);
			set $intOutIdx = @@identity;

			select count(1) into _counts from Table_PromoterCount where PlayerId=$intPlayerId;
			
			if _counts > 0 then
					update Table_PromoterCount set IsValid=1 where PlayerId=$intPlayerId;
			end if;
			set $returnVal=1;
			
end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_write_finance_rcd
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_write_finance_rcd`;
DELIMITER ;;
CREATE DEFINER=`djc_user`@`%` PROCEDURE `pr_write_finance_rcd`(
IN $nPlatformID  INT,
IN $nPlayerID    INT,
IN $orderid      VARCHAR(128),
IN $nAmount      BIGINT,
IN $nDir         INT,
IN $szJson       TEXT,
OUT $returnVal   INT,
OUT $strOutMsg   VARCHAR(256)
)
RT:BEGIN

DECLARE _order_json TEXT;
SET _order_json = '';

IF NOT EXISTS (SELECT 1 FROM `table_third_order` WHERE `szOrder` = $orderid ) THEN
    SET $returnVal = 0;
    SET $strOutMsg = 'not find order record';
    LEAVE RT;
END IF;
IF $nDir = 1 THEN 
    SELECT `szOrderInfo` INTO _order_json FROM table_third_order WHERE `szOrder` = $orderid;
END IF;
insert into `table_finance_record` (`nPlatformID`,`nPlayerID`,`szOrder`,`amount`,`nType`,`userData`,`callbackData`) 
values                             ($nPlatformID,  $nPlayerID, $orderid, $nAmount, $nDir, _order_json,  $szJson ) ;
SET $returnVal = 1;
SET $strOutMsg = 'ok';
	
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_xfk_task_award
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_xfk_task_award`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_xfk_task_award`(
    IN $nPlayerID INT,
    IN $nClubID INT,
    IN $nTaskID INT,
    IN $tCreateTime TIMESTAMP)
BEGIN
    UPDATE table_club_task_complete SET nAwardType = 1, tFinishTime = NOW() 
        WHERE nPlayerID = $nPlayerID AND nClubID = $nClubID AND nTaskID = $nTaskID AND tCreateTime = $tCreateTime;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for pr_xfk_task_complate
-- ----------------------------
DROP PROCEDURE IF EXISTS `pr_xfk_task_complate`;
DELIMITER ;;
CREATE DEFINER=`dengpengcheng`@`%` PROCEDURE `pr_xfk_task_complate`(
    IN $nPlayerID INT,
    IN $nClubID INT,
    IN $szNickName VARCHAR(64),
    IN $nTaskID INT,
    IN $nGameType INT,
    IN $szMask VARCHAR(64),
    IN $tCreateTime TIMESTAMP)
BEGIN
    INSERT INTO table_club_task_complete(`nClubID`,`nPlayerID`,`szNickName`,`nTaskID`,`nGameType`,
        `Amount`,`EAmount`,`szMask`,`szMask1`,`szMask2`,`tCreateTime`,`nProperty`,`nAwardType`)
        VALUES($nClubID,$nPlayerID,$szNickName,$nTaskID,$nGameType,0,0,$szMask,"","",$tCreateTime,1,0);
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for SetRobotHead
-- ----------------------------
DROP PROCEDURE IF EXISTS `SetRobotHead`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `SetRobotHead`(IN `$startID` int,IN `$endID` int)
BEGIN
    DECLARE i int default $startID;
    DECLARE pID int DEFAULT  0;

    DECLARE records int DEFAULT 1;
    
    DECLARE cur_users cursor for select nplayerId from table_user where nplayerID>=$startID and nplayerID <=$endID;
    DECLARE CONTINUE HANDLER FOR NOT FOUND set records = 0;

    open cur_users;
    FETCH cur_users INTO pID;
    
    WHILE records != 0 DO
        UPDATE table_user set szHeadPicUrl = concat(ceiling(rand() * 6)) where nPlayerId = pID;
        FETCH cur_users INTO pID;
        set i = i + 1;
    END while;

    close cur_users;
            
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for SplitToTable
-- ----------------------------
DROP PROCEDURE IF EXISTS `SplitToTable`;
DELIMITER ;;
CREATE DEFINER=`lxb_user`@`%` PROCEDURE `SplitToTable`(

	in _SplitString varchar(2000),
	in _Separator varchar(20)
)
BEGIN 
						declare _index int;
				
				drop temporary table if exists tmp_strs;  
				create temporary table tmp_strs(  
					id int unsigned  not null  auto_increment primary key,
					`value` varchar(2000) DEFAULT 0 
				);
				set _index = locate(_Separator,_SplitString);  
				while _index>0  do
						insert into tmp_strs(`value`) values(left(_SplitString,_index-1));
						set _SplitString =substr(_SplitString from _index+1);  
						set _index = locate(_Separator,_SplitString);  
				end while;  
				
				if length(_SplitString) >= 0 and _SplitString<>'' then  
						insert into tmp_strs(`value`) values(_SplitString);  
				end if;  
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for test_20201028
-- ----------------------------
DROP PROCEDURE IF EXISTS `test_20201028`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `test_20201028`()
RT:begin




	select IFNULL(nScore,0) into @myscore from table_clubmember where nPlayerID = 0 and nClubID=0 LIMIT 1;
	
	select IFNULL(nScore,0) into @clubscore from table_clubinfo where nClubID = 0;
			
	select IFNULL(bRobot,0) into @bRobot from table_user where nPlayerId = 0;

	select @myscore;
	select @clubscore;
	select @bRobot;

end
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for test_20210809
-- ----------------------------
DROP PROCEDURE IF EXISTS `test_20210809`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `test_20210809`(
)
RT:BEGIN
/*
写入用户乐卡变动
*/
DECLARE _id   INT default 0; 
DECLARE _card BIGINT;
#查询用户是否存在
SELECT IFNULL(ID,0), nLeCard INTO _id, _card FROM table_league_club_member WHERE `nClubID` = 0 AND `nPlayerID` = 0 AND `nStatus` = 1;
select _id;       
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for fun_get_table_autoid_shard
-- ----------------------------
DROP FUNCTION IF EXISTS `fun_get_table_autoid_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `fun_get_table_autoid_shard`(	
		$tableName VARCHAR(50)
	) RETURNS bigint(20)
returnVal:BEGIN
		
		IF $tableName = 'table_clublogscore' THEN
		
			INSERT INTO get_table_clublogscore_id () values ();
			return @@identity;
			
		ELSEIF $tableName = 'table_clubgamescoredetail' THEN
		
			INSERT INTO get_table_clubgamescoredetail_id () values ();
			return @@identity;
		
		ELSEIF $tableName = 'table_clubgamelog' THEN
		
			INSERT INTO get_table_clubgamelog_id () values ();
			return @@identity;
			
		ELSEIF $tableName = 'table_third_score_detail' THEN	
		
			INSERT INTO get_table_third_score_detail_id () values ();
			return @@identity;
			
		END IF;	
		
	end
;;
DELIMITER ;

-- ----------------------------
-- Function structure for fun_get_table_name_shard
-- ----------------------------
DROP FUNCTION IF EXISTS `fun_get_table_name_shard`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `fun_get_table_name_shard`(
		/*
			$days=0 当天日期
			$days=1 昨日日期
		*/
		$tableName VARCHAR(50),
		$days INT
	) RETURNS varchar(50) CHARSET utf8mb4
BEGIN
			SET @newDate=REPLACE(DATE_SUB(CURDATE(),INTERVAL $days DAY),'-','');
			RETURN CONCAT($tableName,@newDate);
	END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for fun_get_table_name_shard_byDate
-- ----------------------------
DROP FUNCTION IF EXISTS `fun_get_table_name_shard_byDate`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `fun_get_table_name_shard_byDate`(
	/*
		$tableName:表名
		$dateTime  日期
		RETURNS:比如:table_users20200526
	*/
	$tableName VARCHAR(50),
	$dateTime VARCHAR(30)
) RETURNS varchar(50) CHARSET utf8mb4
BEGIN
		SET @newDate=REPLACE(DATE_FORMAT($dateTime,'%Y-%m-%d'),'-','');
		RETURN CONCAT($tableName,@newDate);
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for Fun_Web_GetNewTableName
-- ----------------------------
DROP FUNCTION IF EXISTS `Fun_Web_GetNewTableName`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` FUNCTION `Fun_Web_GetNewTableName`(
	/*
		$tableName:表名
		$days=0 当天日期
		$days=1 昨日日期
		RETURNS:比如:table_users20200526
	*/
	$tableName VARCHAR(50),
	$days INT
) RETURNS varchar(50) CHARSET utf8mb4
BEGIN
		SET @newDate=REPLACE(DATE_SUB(CURDATE(),INTERVAL $days DAY),'-','');
		RETURN CONCAT($tableName,@newDate);
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for Fun_Web_GetNewTableNameByDate
-- ----------------------------
DROP FUNCTION IF EXISTS `Fun_Web_GetNewTableNameByDate`;
DELIMITER ;;
CREATE DEFINER=`web_user`@`%` FUNCTION `Fun_Web_GetNewTableNameByDate`(
	/*
		$tableName:表名
		$dateTime  日期
		RETURNS:比如:table_users20200526
	*/
	$tableName VARCHAR(50),
	$dateTime VARCHAR(30)
) RETURNS varchar(50) CHARSET utf8mb4
BEGIN
		SET @newDate=REPLACE(DATE_FORMAT($dateTime,'%Y-%m-%d'),'-','');
		RETURN CONCAT($tableName,@newDate);
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for get_rand_score
-- ----------------------------
DROP FUNCTION IF EXISTS `get_rand_score`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `get_rand_score`(_nRound int) RETURNS int(11)
BEGIN
        DECLARE _result INT;
        SET _result = FLOOR(1 + (RAND() * _nRound));
        RETURN _result;
END
;;
DELIMITER ;

-- ----------------------------
-- Event structure for auto_create_day_table
-- ----------------------------
DROP EVENT IF EXISTS `auto_create_day_table`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `auto_create_day_table` ON SCHEDULE EVERY 1 MONTH STARTS '2020-06-01 10:00:00' ON COMPLETION NOT PRESERVE ENABLE DO call pr_auto_create_table_shard('next_month', 'next_month', 0)
;;
DELIMITER ;

-- ----------------------------
-- Event structure for ClearLogHistoryData
-- ----------------------------
DROP EVENT IF EXISTS `ClearLogHistoryData`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `ClearLogHistoryData` ON SCHEDULE EVERY 1 DAY STARTS '2018-11-29 06:30:00' ON COMPLETION NOT PRESERVE ENABLE DO CALL Pr_ClearLogHistoryData()
;;
DELIMITER ;

-- ----------------------------
-- Event structure for ClearOldData
-- ----------------------------
DROP EVENT IF EXISTS `ClearOldData`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `ClearOldData` ON SCHEDULE EVERY 1 DAY STARTS '2018-02-11 05:30:00' ON COMPLETION NOT PRESERVE DISABLE DO CALL Pr_ClearOldData()
;;
DELIMITER ;

-- ----------------------------
-- Event structure for Pro_WebData_CommonData
-- ----------------------------
DROP EVENT IF EXISTS `Pro_WebData_CommonData`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `Pro_WebData_CommonData` ON SCHEDULE EVERY 1 DAY STARTS '2019-03-19 02:30:00' ON COMPLETION NOT PRESERVE ENABLE DO call Pro_WebData_CommonData()
;;
DELIMITER ;

-- ----------------------------
-- Event structure for Pro_Web_AdminFirstPageSumModify
-- ----------------------------
DROP EVENT IF EXISTS `Pro_Web_AdminFirstPageSumModify`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `Pro_Web_AdminFirstPageSumModify` ON SCHEDULE EVERY 1 DAY STARTS '2019-12-19 01:40:00' ON COMPLETION NOT PRESERVE ENABLE DO call Pro_Web_AdminFirstPageSumModify()
;;
DELIMITER ;

-- ----------------------------
-- Event structure for Pro_Web_ClubMemberProxySumTimer
-- ----------------------------
DROP EVENT IF EXISTS `Pro_Web_ClubMemberProxySumTimer`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `Pro_Web_ClubMemberProxySumTimer` ON SCHEDULE EVERY 10 MINUTE STARTS '2019-12-02 10:05:00' ON COMPLETION NOT PRESERVE ENABLE DO call Pro_Web_ClubMemberProxySumTimer(10)
;;
DELIMITER ;

-- ----------------------------
-- Event structure for Pro_Web_Pyramid_Rebate_WeekSumTimer
-- ----------------------------
DROP EVENT IF EXISTS `Pro_Web_Pyramid_Rebate_WeekSumTimer`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `Pro_Web_Pyramid_Rebate_WeekSumTimer` ON SCHEDULE EVERY 1 DAY STARTS '2019-03-19 01:20:00' ON COMPLETION NOT PRESERVE ENABLE DO call Pro_Web_Pyramid_Rebate_WeekSumTimer()
;;
DELIMITER ;

-- ----------------------------
-- Event structure for Pro_Web_ReportData
-- ----------------------------
DROP EVENT IF EXISTS `Pro_Web_ReportData`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `Pro_Web_ReportData` ON SCHEDULE EVERY 1 DAY STARTS '2019-04-10 02:00:00' ON COMPLETION NOT PRESERVE DISABLE DO call Pro_Web_ReportData()
;;
DELIMITER ;

-- ----------------------------
-- Event structure for Pro_Web_RiskContrUsersReg
-- ----------------------------
DROP EVENT IF EXISTS `Pro_Web_RiskContrUsersReg`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `Pro_Web_RiskContrUsersReg` ON SCHEDULE EVERY 1 HOUR STARTS '2020-11-02 10:10:00' ON COMPLETION NOT PRESERVE ENABLE DO call Pro_Web_RiskContrUsersReg(now())
;;
DELIMITER ;

-- ----------------------------
-- Event structure for pr_partner_timer
-- ----------------------------
DROP EVENT IF EXISTS `pr_partner_timer`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` EVENT `pr_partner_timer` ON SCHEDULE EVERY 10 MINUTE STARTS '2019-12-02 10:05:00' ON COMPLETION NOT PRESERVE ENABLE DO BEGIN
    CALL pr_call_league_statistics_partner_timer();
    CALL pr_call_league_statistics_partner_sub_timer();
END
;;
DELIMITER ;

-- ----------------------------
-- Event structure for pr_rank_timer
-- ----------------------------
DROP EVENT IF EXISTS `pr_rank_timer`;
DELIMITER ;;
CREATE DEFINER=`daijingchao`@`%` EVENT `pr_rank_timer` ON SCHEDULE EVERY 10 MINUTE STARTS '2019-12-02 10:05:00' ON COMPLETION NOT PRESERVE ENABLE DO BEGIN
    CALL pr_call_league_statistics_rank_timer();
END
;;
DELIMITER ;

-- ----------------------------
-- Event structure for time_update_order_status
-- ----------------------------
DROP EVENT IF EXISTS `time_update_order_status`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `time_update_order_status` ON SCHEDULE EVERY 1 MINUTE STARTS '2019-12-17 15:20:00' ON COMPLETION NOT PRESERVE ENABLE DO call pr_time_update_order_status()
;;
DELIMITER ;

-- ----------------------------
-- Event structure for totalAddUser
-- ----------------------------
DROP EVENT IF EXISTS `totalAddUser`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `totalAddUser` ON SCHEDULE EVERY 1 DAY STARTS '2019-04-01 03:10:00' ON COMPLETION NOT PRESERVE ENABLE DO CALL Pr_totalAddUser()
;;
DELIMITER ;

-- ----------------------------
-- Event structure for totalHaveLogDay
-- ----------------------------
DROP EVENT IF EXISTS `totalHaveLogDay`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `totalHaveLogDay` ON SCHEDULE EVERY 1 DAY STARTS '2018-10-24 04:50:00' ON COMPLETION NOT PRESERVE ENABLE DO CALL Pr_totalHaveLog()
;;
DELIMITER ;
