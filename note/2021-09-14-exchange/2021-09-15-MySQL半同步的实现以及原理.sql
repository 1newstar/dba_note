


after commit(半同步复制)
	
	5.6 版本开始支持
	
	工作原理：
		在存储引擎层提交之后才把 binlog发送给从库, 到少有1个从库确认接收到并写入relay log之后, 返回一个 ack 报文应答给主库, 这时候主库的事务执行完成.
	
	缺点：
		1. 有数据丢失的风险
		
			故障分析：
				
				假设主库在写入engine之后宕机，HA切换到从库后，因为binlog未发送给从库，所以会有导致丢失数据的风险。
				
				-- 理解了。
		
		2. 可能会导致主库事务响应变慢。
		
	
after sync(增强半同步复制、loss-less-semi-synchronous-replication)
	5.7 版本开始支持
	
	工作原理：

		在写入binlog之后, 存储引擎层提交之前把binlog发送给从库, 从库把 binlog 写入到 relay log后, 再返回一个 ack 应答给主库, 这时候主库的事务执行完成.
		是对半同步复制1个优化。
		
	故障分析：
	
		假设主库在写入engine之后宕机，HA切换到从库后，因为binlog已经写入到从库relay log, 因此不会造成数据丢失。
		
	
	从库的事务会比主库的事务多：
		
		在主库事务binlog写入之后，如果已经发送binlog给从库并写入relay log，还没来得急把 ack 发送给主库，此时宕机，主库的事务被回滚，但是这个事务在从库是写入成功的。
	
		
	缺点：
	
		1. 可能会导致主库事务响应变慢。
		


小结：

	binlog写入只是做write操作，即写入到操作系统页的页缓冲中，并没有做fsync操作。
	
	半同步复制的原理，要结合2阶段提交来看。
	
	
