
造成主从不一致的原因：

	1、主库binlog格式为statement，同步到从库执行后可能造成主从不一致

	2、主库执行更改前有执行set_sql_bin=0,会使主库不记录binlog，从库也无法变更这部分数据

	3、从节点未设置只读，误操作写入数据

	4、主库或从库意外宕机，宕机可能会造成binlog或者relaylog文件出现损坏，导致主从不一致

	5、主从实例版本不一致，特别是高版本是主，低版本为从的情况下，主数据库上面支持的功能，从数据库上面可能不支持该功能

	6、mysql自身bug导致

如何避免主从不一致：

	1、主库binlog采用ROW格式

	2、主从实例数据库版本保持一致

	3、主库做好账户权限把控，不可以执行set sql_log_bin=0

	4、从库开启只读 read_only=ON，不允许人为写入

	5、定期进行主从一致性检验


主从不一致的修复方法
	1、将从库重新实现

		 恢复时间比较慢，而且有时候从库也是承担一部分的查询操作的，不能贸然重建

	2、使用percona-toolkit工具辅助

		  PT工具包中包含pt-table-checksum和pt-table-sync两个工具，主要用于检测主从是否一致以及修复数据不一致情况。修复速度快，不需要停止主从辅助

	3、手动重建不一致的表

		  执行导入期间需要暂时停止从库复制
		  
		  
		  
		  
基于逻辑复制的缺陷
	
	1.从库发生写入

	2.设置了ignore/do/rewrite等replication等规则

	3.主从sql_mode 不一致

	4.binlog 设置statement格式

	5.备库Memory引擎表重启后数据丢失

	6.错误使用set sql_log_bin=0

	7.主备表存储引擎不一致

从库实际应用的日志丢失

	1.主库设置sync_binlog非1 ，主库宕机binlog丢失事务导致从库丢失这部分数据

	2.主从采用异步复制，主库异常宕机且无法恢复binlog丢失一部分 ，导致从库这部分binlog数据丢失

	3.Replication Crash Safe 未生效

	4.主从信息保存在文件里面，文件本身的刷新是非事务的，导致从库重启后开始执行点大于实际执行点

	5. 错误的server_id配置导致的复制丢失

其他
	1.数据库大小版本/分支版本导致数据不一致

	2.复制BUG

	3.主备延迟，采用可用性优先策略切库导致主从不一致