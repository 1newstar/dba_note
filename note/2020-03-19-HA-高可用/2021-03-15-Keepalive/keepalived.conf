
global_defs {
   router_id MySQL-HA
   script_user root                
   enable_script_security
} 

vrrp_script check_run {
    script "/usr/bin/python /data/scripts/checkMySQL.py -h 127.0.0.1 -P 3306"  #检测该节点的MySQL存活
    interval 15  #间隔15秒检测
}

vrrp_sync_group VG1 {
group {
VI_1
}
}

vrrp_instance VI_1 {
    state BACKUP
    nopreempt             # 不抢占
    interface enp0s3      # 网络接口
    virtual_router_id 82  #VRID(一个VRRP需要唯一的路由标识VRID: 0-255之间)
    priority 100          #优先级/权重
    advert_int 5          #发送VRRP包的间隔， 单位：秒，可以认为超过多久master选举
    authentication {
        auth_type PASS    #认证方式
        auth_pass 1111    #密码
    }
    track_script {
       check_run      #调用脚本 check_run
    }
	

	notify_master /data/scripts/master.sh
	# notify_backup /data/scripts/backup.sh
    notify_stop /data/scripts/stop.sh
	
    virtual_ipaddress {
        192.168.0.93    # VIP
    }
}

配置的含义:

	master与slave的keepalived配置文件中只有priority设置不同，master为100，slave为90，其它全一样。
	配置文件是以块形式组织的，每个块都在{}包围的范围内，#和！开头的行都是注释。

	global_defs ：为全局定义，对整个Keepalived起作用，而不管是否使用LVS。

	router_id ：运行Keepalived的机器的一个标识。
	
	script_user keepalived_script : 指定运行脚本的用户名和组。默认使用用户的默认组。如未指定，默认为 keepalived_script 用户，如无此用户，则使用root
	enable_script_security  : 如果路径为非root可写，不要配置脚本为root用户执行。
   
  
	vrrp_script ：配置业务进程监控脚本。
	 
	script ：设置脚本文件名。
			 /home/mysql/mysql_check.sh 文件用以检测MySQL服务是否正常，当发现连接不上mysql，自动把keepalived进程杀掉，让VIP进行漂移。
	interval ：设置脚本执行的时间间隔，这里为每60秒执行一次。
	        

	vrrp_sync_group ：配置VRRP同步组。
					不使用Sync Group的话，如果机器有两个网段，一个内网一个外网，每个网段开启一个VRRP实例。
					假设VRRP配置为检查内网，那么当外网出现问题时，VRRPD认为自己仍然健康，那么不会触发Master和Backup的切换，从而导致问题。
					Sync Group解决这个问题，可以把两个实例都放进一个Sync Group，这样的话，Sync Group里面任何一个实例出现问题都会发生切换。


	group：设置同一组中的VRRP实例名，这里只有一个实例VI_1。
	        vrrp_instance配置VRRP实例。VRRP实例表示在上面开启了VRRP协议。这个实例说明了VRRP的一些特性，比如主从、VRID等等。
			可以在每个网卡上开启一个实例。VRRP实例主要定义vrrp_sync_group里面的每个组的漂移IP等。

	state ：指定实例的初始状态。在两台路由都启动后，马上会发生竞争，高priority的会竞选为Master，所以这里的state并不表示这台就一直是Backup。
	interface ：实例绑定的网卡。
	virtual_router_id ：VRID标记，值为0..255，这里使用默认的51。
	priority ：高优先级竞选为Master，Master要高于Backup至少50。这里MySQL主从库两个优先级分别设置为100和90，因此当Keepalived启动后，MySQL主库会被选为Master。
	advert_int ：检查间隔，这里设置为默认的1秒。
	nopreempt ：设置为不抢占，注意这个配置只能设置在state为BACKUP的主机上。
				当MASTER出现问题后，BACKUP会竞选为新的MASTER，那么当之前的MASTER重新在线后，是继续成为MASTER还是变成BACKUP呢？
				默认不设置不抢占，那么之前的MASTER起来后会继续抢占成为MASTER。这样的频繁切换对于业务是不能容忍的，我们希望MASTER起来后成为BACKUP，所以要设置不抢占。
				又因为nopreempt配置只能用在state为BACKUP的主机上，因此MASTER的state也得设置为BACKUP，也就是说172.16.1.126和172.16.1.127都要将state设置为BACKUP。
				通过在两台BACKUP上面设置不同的priority，让它们一起来就抢占，高priority的172.16.1.126成为最初的MASTER。
				
	authentication ：设置认证类型和认证密码。 
	auth_type ：认证类型，支持PASS、AH两种，通常使用PASS类型。
	auth_pass ：明文认证密码。同一VRRP实例的MASTER与BACKUP使用相同的密码才能正常通信。
	track_script ：设置追踪脚本，这里为check_run，即调用vrrp_script中定义的脚本。 
	notify_master ：指定当切换到MASTER时执行的脚本。
	notify_stop ：VRRP停止以后执行的脚本。
	virtual_ipaddress ：指定漂移地址（VIP），也就是切换到MASTER时，这些IP或被添加，切换到BACKUP时，这些IP会被删除。
			因此每台服务器上可以不绑定任何虚拟地址，而都把它们放到virtual_ipaddress里面，可以都多个。Keepalived会自动使用ip addr进行绑定。
	        /home/mysql/master.sh的作用是状态改为master以后执行的脚本:
				首先判断复制是否有延迟，如果有延迟，等1分钟后，不论是否有延迟，都并停止复制，并且记录binlog和pos点。
				
				
				

	
